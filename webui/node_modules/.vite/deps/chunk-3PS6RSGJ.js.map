{
  "version": 3,
  "sources": ["browser-external:crypto", "browser-external:util", "browser-external:node:fs", "browser-external:node:perf_hooks", "browser-external:tty", "browser-external:child_process", "browser-external:worker_threads", "../../esbuild/lib/main.js", "browser-external:events", "browser-external:assert", "browser-external:net", "browser-external:http", "browser-external:stream", "browser-external:node:os", "browser-external:node:crypto", "browser-external:node:util", "browser-external:node:dns", "browser-external:buffer", "browser-external:module", "browser-external:zlib", "browser-external:https", "browser-external:tls", "browser-external:querystring", "browser-external:node:readline", "browser-external:node:child_process", "browser-external:node:zlib", "../../vite/dist/node/constants.js", "../../vite/dist/node/chunks/dep-0fc8e132.js"],
  "sourcesContent": ["module.exports = Object.create(new Proxy({}, {\n  get(_, key) {\n    if (\n      key !== '__esModule' &&\n      key !== '__proto__' &&\n      key !== 'constructor' &&\n      key !== 'splice'\n    ) {\n      throw new Error(`Module \"crypto\" has been externalized for browser compatibility. Cannot access \"crypto.${key}\" in client code.`)\n    }\n  }\n}))", "module.exports = Object.create(new Proxy({}, {\n  get(_, key) {\n    if (\n      key !== '__esModule' &&\n      key !== '__proto__' &&\n      key !== 'constructor' &&\n      key !== 'splice'\n    ) {\n      throw new Error(`Module \"util\" has been externalized for browser compatibility. Cannot access \"util.${key}\" in client code.`)\n    }\n  }\n}))", "module.exports = Object.create(new Proxy({}, {\n  get(_, key) {\n    if (\n      key !== '__esModule' &&\n      key !== '__proto__' &&\n      key !== 'constructor' &&\n      key !== 'splice'\n    ) {\n      throw new Error(`Module \"node:fs\" has been externalized for browser compatibility. Cannot access \"node:fs.${key}\" in client code.`)\n    }\n  }\n}))", "module.exports = Object.create(new Proxy({}, {\n  get(_, key) {\n    if (\n      key !== '__esModule' &&\n      key !== '__proto__' &&\n      key !== 'constructor' &&\n      key !== 'splice'\n    ) {\n      throw new Error(`Module \"node:perf_hooks\" has been externalized for browser compatibility. Cannot access \"node:perf_hooks.${key}\" in client code.`)\n    }\n  }\n}))", "module.exports = Object.create(new Proxy({}, {\n  get(_, key) {\n    if (\n      key !== '__esModule' &&\n      key !== '__proto__' &&\n      key !== 'constructor' &&\n      key !== 'splice'\n    ) {\n      throw new Error(`Module \"tty\" has been externalized for browser compatibility. Cannot access \"tty.${key}\" in client code.`)\n    }\n  }\n}))", "module.exports = Object.create(new Proxy({}, {\n  get(_, key) {\n    if (\n      key !== '__esModule' &&\n      key !== '__proto__' &&\n      key !== 'constructor' &&\n      key !== 'splice'\n    ) {\n      throw new Error(`Module \"child_process\" has been externalized for browser compatibility. Cannot access \"child_process.${key}\" in client code.`)\n    }\n  }\n}))", "module.exports = Object.create(new Proxy({}, {\n  get(_, key) {\n    if (\n      key !== '__esModule' &&\n      key !== '__proto__' &&\n      key !== 'constructor' &&\n      key !== 'splice'\n    ) {\n      throw new Error(`Module \"worker_threads\" has been externalized for browser compatibility. Cannot access \"worker_threads.${key}\" in client code.`)\n    }\n  }\n}))", "\"use strict\";\nvar __create = Object.create;\nvar __defProp = Object.defineProperty;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __getProtoOf = Object.getPrototypeOf;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __export = (target, all) => {\n  for (var name in all)\n    __defProp(target, name, { get: all[name], enumerable: true });\n};\nvar __copyProps = (to, from, except, desc) => {\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\n    for (let key of __getOwnPropNames(from))\n      if (!__hasOwnProp.call(to, key) && key !== except)\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\n  }\n  return to;\n};\nvar __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(\n  isNodeMode || !mod || !mod.__esModule ? __defProp(target, \"default\", { value: mod, enumerable: true }) : target,\n  mod\n));\nvar __toCommonJS = (mod) => __copyProps(__defProp({}, \"__esModule\", { value: true }), mod);\n\n// lib/npm/node.ts\nvar node_exports = {};\n__export(node_exports, {\n  analyzeMetafile: () => analyzeMetafile,\n  analyzeMetafileSync: () => analyzeMetafileSync,\n  build: () => build,\n  buildSync: () => buildSync,\n  default: () => node_default,\n  formatMessages: () => formatMessages,\n  formatMessagesSync: () => formatMessagesSync,\n  initialize: () => initialize,\n  serve: () => serve,\n  transform: () => transform,\n  transformSync: () => transformSync,\n  version: () => version\n});\nmodule.exports = __toCommonJS(node_exports);\n\n// lib/shared/stdio_protocol.ts\nfunction encodePacket(packet) {\n  let visit = (value) => {\n    if (value === null) {\n      bb.write8(0);\n    } else if (typeof value === \"boolean\") {\n      bb.write8(1);\n      bb.write8(+value);\n    } else if (typeof value === \"number\") {\n      bb.write8(2);\n      bb.write32(value | 0);\n    } else if (typeof value === \"string\") {\n      bb.write8(3);\n      bb.write(encodeUTF8(value));\n    } else if (value instanceof Uint8Array) {\n      bb.write8(4);\n      bb.write(value);\n    } else if (value instanceof Array) {\n      bb.write8(5);\n      bb.write32(value.length);\n      for (let item of value) {\n        visit(item);\n      }\n    } else {\n      let keys = Object.keys(value);\n      bb.write8(6);\n      bb.write32(keys.length);\n      for (let key of keys) {\n        bb.write(encodeUTF8(key));\n        visit(value[key]);\n      }\n    }\n  };\n  let bb = new ByteBuffer();\n  bb.write32(0);\n  bb.write32(packet.id << 1 | +!packet.isRequest);\n  visit(packet.value);\n  writeUInt32LE(bb.buf, bb.len - 4, 0);\n  return bb.buf.subarray(0, bb.len);\n}\nfunction decodePacket(bytes) {\n  let visit = () => {\n    switch (bb.read8()) {\n      case 0:\n        return null;\n      case 1:\n        return !!bb.read8();\n      case 2:\n        return bb.read32();\n      case 3:\n        return decodeUTF8(bb.read());\n      case 4:\n        return bb.read();\n      case 5: {\n        let count = bb.read32();\n        let value2 = [];\n        for (let i = 0; i < count; i++) {\n          value2.push(visit());\n        }\n        return value2;\n      }\n      case 6: {\n        let count = bb.read32();\n        let value2 = {};\n        for (let i = 0; i < count; i++) {\n          value2[decodeUTF8(bb.read())] = visit();\n        }\n        return value2;\n      }\n      default:\n        throw new Error(\"Invalid packet\");\n    }\n  };\n  let bb = new ByteBuffer(bytes);\n  let id = bb.read32();\n  let isRequest = (id & 1) === 0;\n  id >>>= 1;\n  let value = visit();\n  if (bb.ptr !== bytes.length) {\n    throw new Error(\"Invalid packet\");\n  }\n  return { id, isRequest, value };\n}\nvar ByteBuffer = class {\n  constructor(buf = new Uint8Array(1024)) {\n    this.buf = buf;\n    this.len = 0;\n    this.ptr = 0;\n  }\n  _write(delta) {\n    if (this.len + delta > this.buf.length) {\n      let clone = new Uint8Array((this.len + delta) * 2);\n      clone.set(this.buf);\n      this.buf = clone;\n    }\n    this.len += delta;\n    return this.len - delta;\n  }\n  write8(value) {\n    let offset = this._write(1);\n    this.buf[offset] = value;\n  }\n  write32(value) {\n    let offset = this._write(4);\n    writeUInt32LE(this.buf, value, offset);\n  }\n  write(bytes) {\n    let offset = this._write(4 + bytes.length);\n    writeUInt32LE(this.buf, bytes.length, offset);\n    this.buf.set(bytes, offset + 4);\n  }\n  _read(delta) {\n    if (this.ptr + delta > this.buf.length) {\n      throw new Error(\"Invalid packet\");\n    }\n    this.ptr += delta;\n    return this.ptr - delta;\n  }\n  read8() {\n    return this.buf[this._read(1)];\n  }\n  read32() {\n    return readUInt32LE(this.buf, this._read(4));\n  }\n  read() {\n    let length = this.read32();\n    let bytes = new Uint8Array(length);\n    let ptr = this._read(bytes.length);\n    bytes.set(this.buf.subarray(ptr, ptr + length));\n    return bytes;\n  }\n};\nvar encodeUTF8;\nvar decodeUTF8;\nif (typeof TextEncoder !== \"undefined\" && typeof TextDecoder !== \"undefined\") {\n  let encoder = new TextEncoder();\n  let decoder = new TextDecoder();\n  encodeUTF8 = (text) => encoder.encode(text);\n  decodeUTF8 = (bytes) => decoder.decode(bytes);\n} else if (typeof Buffer !== \"undefined\") {\n  encodeUTF8 = (text) => {\n    let buffer = Buffer.from(text);\n    if (!(buffer instanceof Uint8Array)) {\n      buffer = new Uint8Array(buffer);\n    }\n    return buffer;\n  };\n  decodeUTF8 = (bytes) => {\n    let { buffer, byteOffset, byteLength } = bytes;\n    return Buffer.from(buffer, byteOffset, byteLength).toString();\n  };\n} else {\n  throw new Error(\"No UTF-8 codec found\");\n}\nfunction readUInt32LE(buffer, offset) {\n  return buffer[offset++] | buffer[offset++] << 8 | buffer[offset++] << 16 | buffer[offset++] << 24;\n}\nfunction writeUInt32LE(buffer, value, offset) {\n  buffer[offset++] = value;\n  buffer[offset++] = value >> 8;\n  buffer[offset++] = value >> 16;\n  buffer[offset++] = value >> 24;\n}\n\n// lib/shared/common.ts\nfunction validateTarget(target) {\n  target += \"\";\n  if (target.indexOf(\",\") >= 0)\n    throw new Error(`Invalid target: ${target}`);\n  return target;\n}\nvar canBeAnything = () => null;\nvar mustBeBoolean = (value) => typeof value === \"boolean\" ? null : \"a boolean\";\nvar mustBeBooleanOrObject = (value) => typeof value === \"boolean\" || typeof value === \"object\" && !Array.isArray(value) ? null : \"a boolean or an object\";\nvar mustBeString = (value) => typeof value === \"string\" ? null : \"a string\";\nvar mustBeRegExp = (value) => value instanceof RegExp ? null : \"a RegExp object\";\nvar mustBeInteger = (value) => typeof value === \"number\" && value === (value | 0) ? null : \"an integer\";\nvar mustBeFunction = (value) => typeof value === \"function\" ? null : \"a function\";\nvar mustBeArray = (value) => Array.isArray(value) ? null : \"an array\";\nvar mustBeObject = (value) => typeof value === \"object\" && value !== null && !Array.isArray(value) ? null : \"an object\";\nvar mustBeWebAssemblyModule = (value) => value instanceof WebAssembly.Module ? null : \"a WebAssembly.Module\";\nvar mustBeArrayOrRecord = (value) => typeof value === \"object\" && value !== null ? null : \"an array or an object\";\nvar mustBeObjectOrNull = (value) => typeof value === \"object\" && !Array.isArray(value) ? null : \"an object or null\";\nvar mustBeStringOrBoolean = (value) => typeof value === \"string\" || typeof value === \"boolean\" ? null : \"a string or a boolean\";\nvar mustBeStringOrObject = (value) => typeof value === \"string\" || typeof value === \"object\" && value !== null && !Array.isArray(value) ? null : \"a string or an object\";\nvar mustBeStringOrArray = (value) => typeof value === \"string\" || Array.isArray(value) ? null : \"a string or an array\";\nvar mustBeStringOrUint8Array = (value) => typeof value === \"string\" || value instanceof Uint8Array ? null : \"a string or a Uint8Array\";\nfunction getFlag(object, keys, key, mustBeFn) {\n  let value = object[key];\n  keys[key + \"\"] = true;\n  if (value === void 0)\n    return void 0;\n  let mustBe = mustBeFn(value);\n  if (mustBe !== null)\n    throw new Error(`\"${key}\" must be ${mustBe}`);\n  return value;\n}\nfunction checkForInvalidFlags(object, keys, where) {\n  for (let key in object) {\n    if (!(key in keys)) {\n      throw new Error(`Invalid option ${where}: \"${key}\"`);\n    }\n  }\n}\nfunction validateInitializeOptions(options) {\n  let keys = /* @__PURE__ */ Object.create(null);\n  let wasmURL = getFlag(options, keys, \"wasmURL\", mustBeString);\n  let wasmModule = getFlag(options, keys, \"wasmModule\", mustBeWebAssemblyModule);\n  let worker = getFlag(options, keys, \"worker\", mustBeBoolean);\n  checkForInvalidFlags(options, keys, \"in initialize() call\");\n  return {\n    wasmURL,\n    wasmModule,\n    worker\n  };\n}\nfunction validateMangleCache(mangleCache) {\n  let validated;\n  if (mangleCache !== void 0) {\n    validated = /* @__PURE__ */ Object.create(null);\n    for (let key of Object.keys(mangleCache)) {\n      let value = mangleCache[key];\n      if (typeof value === \"string\" || value === false) {\n        validated[key] = value;\n      } else {\n        throw new Error(`Expected ${JSON.stringify(key)} in mangle cache to map to either a string or false`);\n      }\n    }\n  }\n  return validated;\n}\nfunction pushLogFlags(flags, options, keys, isTTY2, logLevelDefault) {\n  let color = getFlag(options, keys, \"color\", mustBeBoolean);\n  let logLevel = getFlag(options, keys, \"logLevel\", mustBeString);\n  let logLimit = getFlag(options, keys, \"logLimit\", mustBeInteger);\n  if (color !== void 0)\n    flags.push(`--color=${color}`);\n  else if (isTTY2)\n    flags.push(`--color=true`);\n  flags.push(`--log-level=${logLevel || logLevelDefault}`);\n  flags.push(`--log-limit=${logLimit || 0}`);\n}\nfunction pushCommonFlags(flags, options, keys) {\n  let legalComments = getFlag(options, keys, \"legalComments\", mustBeString);\n  let sourceRoot = getFlag(options, keys, \"sourceRoot\", mustBeString);\n  let sourcesContent = getFlag(options, keys, \"sourcesContent\", mustBeBoolean);\n  let target = getFlag(options, keys, \"target\", mustBeStringOrArray);\n  let format = getFlag(options, keys, \"format\", mustBeString);\n  let globalName = getFlag(options, keys, \"globalName\", mustBeString);\n  let mangleProps = getFlag(options, keys, \"mangleProps\", mustBeRegExp);\n  let reserveProps = getFlag(options, keys, \"reserveProps\", mustBeRegExp);\n  let mangleQuoted = getFlag(options, keys, \"mangleQuoted\", mustBeBoolean);\n  let minify = getFlag(options, keys, \"minify\", mustBeBoolean);\n  let minifySyntax = getFlag(options, keys, \"minifySyntax\", mustBeBoolean);\n  let minifyWhitespace = getFlag(options, keys, \"minifyWhitespace\", mustBeBoolean);\n  let minifyIdentifiers = getFlag(options, keys, \"minifyIdentifiers\", mustBeBoolean);\n  let drop = getFlag(options, keys, \"drop\", mustBeArray);\n  let charset = getFlag(options, keys, \"charset\", mustBeString);\n  let treeShaking = getFlag(options, keys, \"treeShaking\", mustBeBoolean);\n  let ignoreAnnotations = getFlag(options, keys, \"ignoreAnnotations\", mustBeBoolean);\n  let jsx = getFlag(options, keys, \"jsx\", mustBeString);\n  let jsxFactory = getFlag(options, keys, \"jsxFactory\", mustBeString);\n  let jsxFragment = getFlag(options, keys, \"jsxFragment\", mustBeString);\n  let jsxImportSource = getFlag(options, keys, \"jsxImportSource\", mustBeString);\n  let jsxDev = getFlag(options, keys, \"jsxDev\", mustBeBoolean);\n  let define = getFlag(options, keys, \"define\", mustBeObject);\n  let logOverride = getFlag(options, keys, \"logOverride\", mustBeObject);\n  let supported = getFlag(options, keys, \"supported\", mustBeObject);\n  let pure = getFlag(options, keys, \"pure\", mustBeArray);\n  let keepNames = getFlag(options, keys, \"keepNames\", mustBeBoolean);\n  let platform = getFlag(options, keys, \"platform\", mustBeString);\n  if (legalComments)\n    flags.push(`--legal-comments=${legalComments}`);\n  if (sourceRoot !== void 0)\n    flags.push(`--source-root=${sourceRoot}`);\n  if (sourcesContent !== void 0)\n    flags.push(`--sources-content=${sourcesContent}`);\n  if (target) {\n    if (Array.isArray(target))\n      flags.push(`--target=${Array.from(target).map(validateTarget).join(\",\")}`);\n    else\n      flags.push(`--target=${validateTarget(target)}`);\n  }\n  if (format)\n    flags.push(`--format=${format}`);\n  if (globalName)\n    flags.push(`--global-name=${globalName}`);\n  if (platform)\n    flags.push(`--platform=${platform}`);\n  if (minify)\n    flags.push(\"--minify\");\n  if (minifySyntax)\n    flags.push(\"--minify-syntax\");\n  if (minifyWhitespace)\n    flags.push(\"--minify-whitespace\");\n  if (minifyIdentifiers)\n    flags.push(\"--minify-identifiers\");\n  if (charset)\n    flags.push(`--charset=${charset}`);\n  if (treeShaking !== void 0)\n    flags.push(`--tree-shaking=${treeShaking}`);\n  if (ignoreAnnotations)\n    flags.push(`--ignore-annotations`);\n  if (drop)\n    for (let what of drop)\n      flags.push(`--drop:${what}`);\n  if (mangleProps)\n    flags.push(`--mangle-props=${mangleProps.source}`);\n  if (reserveProps)\n    flags.push(`--reserve-props=${reserveProps.source}`);\n  if (mangleQuoted !== void 0)\n    flags.push(`--mangle-quoted=${mangleQuoted}`);\n  if (jsx)\n    flags.push(`--jsx=${jsx}`);\n  if (jsxFactory)\n    flags.push(`--jsx-factory=${jsxFactory}`);\n  if (jsxFragment)\n    flags.push(`--jsx-fragment=${jsxFragment}`);\n  if (jsxImportSource)\n    flags.push(`--jsx-import-source=${jsxImportSource}`);\n  if (jsxDev)\n    flags.push(`--jsx-dev`);\n  if (define) {\n    for (let key in define) {\n      if (key.indexOf(\"=\") >= 0)\n        throw new Error(`Invalid define: ${key}`);\n      flags.push(`--define:${key}=${define[key]}`);\n    }\n  }\n  if (logOverride) {\n    for (let key in logOverride) {\n      if (key.indexOf(\"=\") >= 0)\n        throw new Error(`Invalid log override: ${key}`);\n      flags.push(`--log-override:${key}=${logOverride[key]}`);\n    }\n  }\n  if (supported) {\n    for (let key in supported) {\n      if (key.indexOf(\"=\") >= 0)\n        throw new Error(`Invalid supported: ${key}`);\n      flags.push(`--supported:${key}=${supported[key]}`);\n    }\n  }\n  if (pure)\n    for (let fn of pure)\n      flags.push(`--pure:${fn}`);\n  if (keepNames)\n    flags.push(`--keep-names`);\n}\nfunction flagsForBuildOptions(callName, options, isTTY2, logLevelDefault, writeDefault) {\n  var _a2;\n  let flags = [];\n  let entries = [];\n  let keys = /* @__PURE__ */ Object.create(null);\n  let stdinContents = null;\n  let stdinResolveDir = null;\n  let watchMode = null;\n  pushLogFlags(flags, options, keys, isTTY2, logLevelDefault);\n  pushCommonFlags(flags, options, keys);\n  let sourcemap = getFlag(options, keys, \"sourcemap\", mustBeStringOrBoolean);\n  let bundle = getFlag(options, keys, \"bundle\", mustBeBoolean);\n  let watch = getFlag(options, keys, \"watch\", mustBeBooleanOrObject);\n  let splitting = getFlag(options, keys, \"splitting\", mustBeBoolean);\n  let preserveSymlinks = getFlag(options, keys, \"preserveSymlinks\", mustBeBoolean);\n  let metafile = getFlag(options, keys, \"metafile\", mustBeBoolean);\n  let outfile = getFlag(options, keys, \"outfile\", mustBeString);\n  let outdir = getFlag(options, keys, \"outdir\", mustBeString);\n  let outbase = getFlag(options, keys, \"outbase\", mustBeString);\n  let tsconfig = getFlag(options, keys, \"tsconfig\", mustBeString);\n  let resolveExtensions = getFlag(options, keys, \"resolveExtensions\", mustBeArray);\n  let nodePathsInput = getFlag(options, keys, \"nodePaths\", mustBeArray);\n  let mainFields = getFlag(options, keys, \"mainFields\", mustBeArray);\n  let conditions = getFlag(options, keys, \"conditions\", mustBeArray);\n  let external = getFlag(options, keys, \"external\", mustBeArray);\n  let loader = getFlag(options, keys, \"loader\", mustBeObject);\n  let outExtension = getFlag(options, keys, \"outExtension\", mustBeObject);\n  let publicPath = getFlag(options, keys, \"publicPath\", mustBeString);\n  let entryNames = getFlag(options, keys, \"entryNames\", mustBeString);\n  let chunkNames = getFlag(options, keys, \"chunkNames\", mustBeString);\n  let assetNames = getFlag(options, keys, \"assetNames\", mustBeString);\n  let inject = getFlag(options, keys, \"inject\", mustBeArray);\n  let banner = getFlag(options, keys, \"banner\", mustBeObject);\n  let footer = getFlag(options, keys, \"footer\", mustBeObject);\n  let entryPoints = getFlag(options, keys, \"entryPoints\", mustBeArrayOrRecord);\n  let absWorkingDir = getFlag(options, keys, \"absWorkingDir\", mustBeString);\n  let stdin = getFlag(options, keys, \"stdin\", mustBeObject);\n  let write = (_a2 = getFlag(options, keys, \"write\", mustBeBoolean)) != null ? _a2 : writeDefault;\n  let allowOverwrite = getFlag(options, keys, \"allowOverwrite\", mustBeBoolean);\n  let incremental = getFlag(options, keys, \"incremental\", mustBeBoolean) === true;\n  let mangleCache = getFlag(options, keys, \"mangleCache\", mustBeObject);\n  keys.plugins = true;\n  checkForInvalidFlags(options, keys, `in ${callName}() call`);\n  if (sourcemap)\n    flags.push(`--sourcemap${sourcemap === true ? \"\" : `=${sourcemap}`}`);\n  if (bundle)\n    flags.push(\"--bundle\");\n  if (allowOverwrite)\n    flags.push(\"--allow-overwrite\");\n  if (watch) {\n    flags.push(\"--watch\");\n    if (typeof watch === \"boolean\") {\n      watchMode = {};\n    } else {\n      let watchKeys = /* @__PURE__ */ Object.create(null);\n      let onRebuild = getFlag(watch, watchKeys, \"onRebuild\", mustBeFunction);\n      checkForInvalidFlags(watch, watchKeys, `on \"watch\" in ${callName}() call`);\n      watchMode = { onRebuild };\n    }\n  }\n  if (splitting)\n    flags.push(\"--splitting\");\n  if (preserveSymlinks)\n    flags.push(\"--preserve-symlinks\");\n  if (metafile)\n    flags.push(`--metafile`);\n  if (outfile)\n    flags.push(`--outfile=${outfile}`);\n  if (outdir)\n    flags.push(`--outdir=${outdir}`);\n  if (outbase)\n    flags.push(`--outbase=${outbase}`);\n  if (tsconfig)\n    flags.push(`--tsconfig=${tsconfig}`);\n  if (resolveExtensions) {\n    let values = [];\n    for (let value of resolveExtensions) {\n      value += \"\";\n      if (value.indexOf(\",\") >= 0)\n        throw new Error(`Invalid resolve extension: ${value}`);\n      values.push(value);\n    }\n    flags.push(`--resolve-extensions=${values.join(\",\")}`);\n  }\n  if (publicPath)\n    flags.push(`--public-path=${publicPath}`);\n  if (entryNames)\n    flags.push(`--entry-names=${entryNames}`);\n  if (chunkNames)\n    flags.push(`--chunk-names=${chunkNames}`);\n  if (assetNames)\n    flags.push(`--asset-names=${assetNames}`);\n  if (mainFields) {\n    let values = [];\n    for (let value of mainFields) {\n      value += \"\";\n      if (value.indexOf(\",\") >= 0)\n        throw new Error(`Invalid main field: ${value}`);\n      values.push(value);\n    }\n    flags.push(`--main-fields=${values.join(\",\")}`);\n  }\n  if (conditions) {\n    let values = [];\n    for (let value of conditions) {\n      value += \"\";\n      if (value.indexOf(\",\") >= 0)\n        throw new Error(`Invalid condition: ${value}`);\n      values.push(value);\n    }\n    flags.push(`--conditions=${values.join(\",\")}`);\n  }\n  if (external)\n    for (let name of external)\n      flags.push(`--external:${name}`);\n  if (banner) {\n    for (let type in banner) {\n      if (type.indexOf(\"=\") >= 0)\n        throw new Error(`Invalid banner file type: ${type}`);\n      flags.push(`--banner:${type}=${banner[type]}`);\n    }\n  }\n  if (footer) {\n    for (let type in footer) {\n      if (type.indexOf(\"=\") >= 0)\n        throw new Error(`Invalid footer file type: ${type}`);\n      flags.push(`--footer:${type}=${footer[type]}`);\n    }\n  }\n  if (inject)\n    for (let path3 of inject)\n      flags.push(`--inject:${path3}`);\n  if (loader) {\n    for (let ext in loader) {\n      if (ext.indexOf(\"=\") >= 0)\n        throw new Error(`Invalid loader extension: ${ext}`);\n      flags.push(`--loader:${ext}=${loader[ext]}`);\n    }\n  }\n  if (outExtension) {\n    for (let ext in outExtension) {\n      if (ext.indexOf(\"=\") >= 0)\n        throw new Error(`Invalid out extension: ${ext}`);\n      flags.push(`--out-extension:${ext}=${outExtension[ext]}`);\n    }\n  }\n  if (entryPoints) {\n    if (Array.isArray(entryPoints)) {\n      for (let entryPoint of entryPoints) {\n        entries.push([\"\", entryPoint + \"\"]);\n      }\n    } else {\n      for (let [key, value] of Object.entries(entryPoints)) {\n        entries.push([key + \"\", value + \"\"]);\n      }\n    }\n  }\n  if (stdin) {\n    let stdinKeys = /* @__PURE__ */ Object.create(null);\n    let contents = getFlag(stdin, stdinKeys, \"contents\", mustBeStringOrUint8Array);\n    let resolveDir = getFlag(stdin, stdinKeys, \"resolveDir\", mustBeString);\n    let sourcefile = getFlag(stdin, stdinKeys, \"sourcefile\", mustBeString);\n    let loader2 = getFlag(stdin, stdinKeys, \"loader\", mustBeString);\n    checkForInvalidFlags(stdin, stdinKeys, 'in \"stdin\" object');\n    if (sourcefile)\n      flags.push(`--sourcefile=${sourcefile}`);\n    if (loader2)\n      flags.push(`--loader=${loader2}`);\n    if (resolveDir)\n      stdinResolveDir = resolveDir + \"\";\n    if (typeof contents === \"string\")\n      stdinContents = encodeUTF8(contents);\n    else if (contents instanceof Uint8Array)\n      stdinContents = contents;\n  }\n  let nodePaths = [];\n  if (nodePathsInput) {\n    for (let value of nodePathsInput) {\n      value += \"\";\n      nodePaths.push(value);\n    }\n  }\n  return {\n    entries,\n    flags,\n    write,\n    stdinContents,\n    stdinResolveDir,\n    absWorkingDir,\n    incremental,\n    nodePaths,\n    watch: watchMode,\n    mangleCache: validateMangleCache(mangleCache)\n  };\n}\nfunction flagsForTransformOptions(callName, options, isTTY2, logLevelDefault) {\n  let flags = [];\n  let keys = /* @__PURE__ */ Object.create(null);\n  pushLogFlags(flags, options, keys, isTTY2, logLevelDefault);\n  pushCommonFlags(flags, options, keys);\n  let sourcemap = getFlag(options, keys, \"sourcemap\", mustBeStringOrBoolean);\n  let tsconfigRaw = getFlag(options, keys, \"tsconfigRaw\", mustBeStringOrObject);\n  let sourcefile = getFlag(options, keys, \"sourcefile\", mustBeString);\n  let loader = getFlag(options, keys, \"loader\", mustBeString);\n  let banner = getFlag(options, keys, \"banner\", mustBeString);\n  let footer = getFlag(options, keys, \"footer\", mustBeString);\n  let mangleCache = getFlag(options, keys, \"mangleCache\", mustBeObject);\n  checkForInvalidFlags(options, keys, `in ${callName}() call`);\n  if (sourcemap)\n    flags.push(`--sourcemap=${sourcemap === true ? \"external\" : sourcemap}`);\n  if (tsconfigRaw)\n    flags.push(`--tsconfig-raw=${typeof tsconfigRaw === \"string\" ? tsconfigRaw : JSON.stringify(tsconfigRaw)}`);\n  if (sourcefile)\n    flags.push(`--sourcefile=${sourcefile}`);\n  if (loader)\n    flags.push(`--loader=${loader}`);\n  if (banner)\n    flags.push(`--banner=${banner}`);\n  if (footer)\n    flags.push(`--footer=${footer}`);\n  return {\n    flags,\n    mangleCache: validateMangleCache(mangleCache)\n  };\n}\nfunction createChannel(streamIn) {\n  let responseCallbacks = /* @__PURE__ */ new Map();\n  let pluginCallbacks = /* @__PURE__ */ new Map();\n  let watchCallbacks = /* @__PURE__ */ new Map();\n  let serveCallbacks = /* @__PURE__ */ new Map();\n  let closeData = null;\n  let nextRequestID = 0;\n  let nextBuildKey = 0;\n  let stdout = new Uint8Array(16 * 1024);\n  let stdoutUsed = 0;\n  let readFromStdout = (chunk) => {\n    let limit = stdoutUsed + chunk.length;\n    if (limit > stdout.length) {\n      let swap = new Uint8Array(limit * 2);\n      swap.set(stdout);\n      stdout = swap;\n    }\n    stdout.set(chunk, stdoutUsed);\n    stdoutUsed += chunk.length;\n    let offset = 0;\n    while (offset + 4 <= stdoutUsed) {\n      let length = readUInt32LE(stdout, offset);\n      if (offset + 4 + length > stdoutUsed) {\n        break;\n      }\n      offset += 4;\n      handleIncomingPacket(stdout.subarray(offset, offset + length));\n      offset += length;\n    }\n    if (offset > 0) {\n      stdout.copyWithin(0, offset, stdoutUsed);\n      stdoutUsed -= offset;\n    }\n  };\n  let afterClose = (error) => {\n    closeData = { reason: error ? \": \" + (error.message || error) : \"\" };\n    const text = \"The service was stopped\" + closeData.reason;\n    for (let callback of responseCallbacks.values()) {\n      callback(text, null);\n    }\n    responseCallbacks.clear();\n    for (let callbacks of serveCallbacks.values()) {\n      callbacks.onWait(text);\n    }\n    serveCallbacks.clear();\n    for (let callback of watchCallbacks.values()) {\n      try {\n        callback(new Error(text), null);\n      } catch (e) {\n        console.error(e);\n      }\n    }\n    watchCallbacks.clear();\n  };\n  let sendRequest = (refs, value, callback) => {\n    if (closeData)\n      return callback(\"The service is no longer running\" + closeData.reason, null);\n    let id = nextRequestID++;\n    responseCallbacks.set(id, (error, response) => {\n      try {\n        callback(error, response);\n      } finally {\n        if (refs)\n          refs.unref();\n      }\n    });\n    if (refs)\n      refs.ref();\n    streamIn.writeToStdin(encodePacket({ id, isRequest: true, value }));\n  };\n  let sendResponse = (id, value) => {\n    if (closeData)\n      throw new Error(\"The service is no longer running\" + closeData.reason);\n    streamIn.writeToStdin(encodePacket({ id, isRequest: false, value }));\n  };\n  let handleRequest = async (id, request) => {\n    try {\n      switch (request.command) {\n        case \"ping\": {\n          sendResponse(id, {});\n          break;\n        }\n        case \"on-start\": {\n          let callback = pluginCallbacks.get(request.key);\n          if (!callback)\n            sendResponse(id, {});\n          else\n            sendResponse(id, await callback(request));\n          break;\n        }\n        case \"on-resolve\": {\n          let callback = pluginCallbacks.get(request.key);\n          if (!callback)\n            sendResponse(id, {});\n          else\n            sendResponse(id, await callback(request));\n          break;\n        }\n        case \"on-load\": {\n          let callback = pluginCallbacks.get(request.key);\n          if (!callback)\n            sendResponse(id, {});\n          else\n            sendResponse(id, await callback(request));\n          break;\n        }\n        case \"serve-request\": {\n          let callbacks = serveCallbacks.get(request.key);\n          if (callbacks && callbacks.onRequest)\n            callbacks.onRequest(request.args);\n          sendResponse(id, {});\n          break;\n        }\n        case \"serve-wait\": {\n          let callbacks = serveCallbacks.get(request.key);\n          if (callbacks)\n            callbacks.onWait(request.error);\n          sendResponse(id, {});\n          break;\n        }\n        case \"watch-rebuild\": {\n          let callback = watchCallbacks.get(request.key);\n          try {\n            if (callback)\n              callback(null, request.args);\n          } catch (err) {\n            console.error(err);\n          }\n          sendResponse(id, {});\n          break;\n        }\n        default:\n          throw new Error(`Invalid command: ` + request.command);\n      }\n    } catch (e) {\n      sendResponse(id, { errors: [extractErrorMessageV8(e, streamIn, null, void 0, \"\")] });\n    }\n  };\n  let isFirstPacket = true;\n  let handleIncomingPacket = (bytes) => {\n    if (isFirstPacket) {\n      isFirstPacket = false;\n      let binaryVersion = String.fromCharCode(...bytes);\n      if (binaryVersion !== \"0.14.54\") {\n        throw new Error(`Cannot start service: Host version \"${\"0.14.54\"}\" does not match binary version ${JSON.stringify(binaryVersion)}`);\n      }\n      return;\n    }\n    let packet = decodePacket(bytes);\n    if (packet.isRequest) {\n      handleRequest(packet.id, packet.value);\n    } else {\n      let callback = responseCallbacks.get(packet.id);\n      responseCallbacks.delete(packet.id);\n      if (packet.value.error)\n        callback(packet.value.error, {});\n      else\n        callback(null, packet.value);\n    }\n  };\n  let handlePlugins = async (initialOptions, plugins, buildKey, stash, refs) => {\n    let onStartCallbacks = [];\n    let onEndCallbacks = [];\n    let onResolveCallbacks = {};\n    let onLoadCallbacks = {};\n    let nextCallbackID = 0;\n    let i = 0;\n    let requestPlugins = [];\n    let isSetupDone = false;\n    plugins = [...plugins];\n    for (let item of plugins) {\n      let keys = {};\n      if (typeof item !== \"object\")\n        throw new Error(`Plugin at index ${i} must be an object`);\n      const name = getFlag(item, keys, \"name\", mustBeString);\n      if (typeof name !== \"string\" || name === \"\")\n        throw new Error(`Plugin at index ${i} is missing a name`);\n      try {\n        let setup = getFlag(item, keys, \"setup\", mustBeFunction);\n        if (typeof setup !== \"function\")\n          throw new Error(`Plugin is missing a setup function`);\n        checkForInvalidFlags(item, keys, `on plugin ${JSON.stringify(name)}`);\n        let plugin = {\n          name,\n          onResolve: [],\n          onLoad: []\n        };\n        i++;\n        let resolve = (path3, options = {}) => {\n          if (!isSetupDone)\n            throw new Error('Cannot call \"resolve\" before plugin setup has completed');\n          if (typeof path3 !== \"string\")\n            throw new Error(`The path to resolve must be a string`);\n          let keys2 = /* @__PURE__ */ Object.create(null);\n          let pluginName = getFlag(options, keys2, \"pluginName\", mustBeString);\n          let importer = getFlag(options, keys2, \"importer\", mustBeString);\n          let namespace = getFlag(options, keys2, \"namespace\", mustBeString);\n          let resolveDir = getFlag(options, keys2, \"resolveDir\", mustBeString);\n          let kind = getFlag(options, keys2, \"kind\", mustBeString);\n          let pluginData = getFlag(options, keys2, \"pluginData\", canBeAnything);\n          checkForInvalidFlags(options, keys2, \"in resolve() call\");\n          return new Promise((resolve2, reject) => {\n            const request = {\n              command: \"resolve\",\n              path: path3,\n              key: buildKey,\n              pluginName: name\n            };\n            if (pluginName != null)\n              request.pluginName = pluginName;\n            if (importer != null)\n              request.importer = importer;\n            if (namespace != null)\n              request.namespace = namespace;\n            if (resolveDir != null)\n              request.resolveDir = resolveDir;\n            if (kind != null)\n              request.kind = kind;\n            if (pluginData != null)\n              request.pluginData = stash.store(pluginData);\n            sendRequest(refs, request, (error, response) => {\n              if (error !== null)\n                reject(new Error(error));\n              else\n                resolve2({\n                  errors: replaceDetailsInMessages(response.errors, stash),\n                  warnings: replaceDetailsInMessages(response.warnings, stash),\n                  path: response.path,\n                  external: response.external,\n                  sideEffects: response.sideEffects,\n                  namespace: response.namespace,\n                  suffix: response.suffix,\n                  pluginData: stash.load(response.pluginData)\n                });\n            });\n          });\n        };\n        let promise = setup({\n          initialOptions,\n          resolve,\n          onStart(callback2) {\n            let registeredText = `This error came from the \"onStart\" callback registered here:`;\n            let registeredNote = extractCallerV8(new Error(registeredText), streamIn, \"onStart\");\n            onStartCallbacks.push({ name, callback: callback2, note: registeredNote });\n          },\n          onEnd(callback2) {\n            let registeredText = `This error came from the \"onEnd\" callback registered here:`;\n            let registeredNote = extractCallerV8(new Error(registeredText), streamIn, \"onEnd\");\n            onEndCallbacks.push({ name, callback: callback2, note: registeredNote });\n          },\n          onResolve(options, callback2) {\n            let registeredText = `This error came from the \"onResolve\" callback registered here:`;\n            let registeredNote = extractCallerV8(new Error(registeredText), streamIn, \"onResolve\");\n            let keys2 = {};\n            let filter = getFlag(options, keys2, \"filter\", mustBeRegExp);\n            let namespace = getFlag(options, keys2, \"namespace\", mustBeString);\n            checkForInvalidFlags(options, keys2, `in onResolve() call for plugin ${JSON.stringify(name)}`);\n            if (filter == null)\n              throw new Error(`onResolve() call is missing a filter`);\n            let id = nextCallbackID++;\n            onResolveCallbacks[id] = { name, callback: callback2, note: registeredNote };\n            plugin.onResolve.push({ id, filter: filter.source, namespace: namespace || \"\" });\n          },\n          onLoad(options, callback2) {\n            let registeredText = `This error came from the \"onLoad\" callback registered here:`;\n            let registeredNote = extractCallerV8(new Error(registeredText), streamIn, \"onLoad\");\n            let keys2 = {};\n            let filter = getFlag(options, keys2, \"filter\", mustBeRegExp);\n            let namespace = getFlag(options, keys2, \"namespace\", mustBeString);\n            checkForInvalidFlags(options, keys2, `in onLoad() call for plugin ${JSON.stringify(name)}`);\n            if (filter == null)\n              throw new Error(`onLoad() call is missing a filter`);\n            let id = nextCallbackID++;\n            onLoadCallbacks[id] = { name, callback: callback2, note: registeredNote };\n            plugin.onLoad.push({ id, filter: filter.source, namespace: namespace || \"\" });\n          },\n          esbuild: streamIn.esbuild\n        });\n        if (promise)\n          await promise;\n        requestPlugins.push(plugin);\n      } catch (e) {\n        return { ok: false, error: e, pluginName: name };\n      }\n    }\n    const callback = async (request) => {\n      switch (request.command) {\n        case \"on-start\": {\n          let response = { errors: [], warnings: [] };\n          await Promise.all(onStartCallbacks.map(async ({ name, callback: callback2, note }) => {\n            try {\n              let result = await callback2();\n              if (result != null) {\n                if (typeof result !== \"object\")\n                  throw new Error(`Expected onStart() callback in plugin ${JSON.stringify(name)} to return an object`);\n                let keys = {};\n                let errors = getFlag(result, keys, \"errors\", mustBeArray);\n                let warnings = getFlag(result, keys, \"warnings\", mustBeArray);\n                checkForInvalidFlags(result, keys, `from onStart() callback in plugin ${JSON.stringify(name)}`);\n                if (errors != null)\n                  response.errors.push(...sanitizeMessages(errors, \"errors\", stash, name));\n                if (warnings != null)\n                  response.warnings.push(...sanitizeMessages(warnings, \"warnings\", stash, name));\n              }\n            } catch (e) {\n              response.errors.push(extractErrorMessageV8(e, streamIn, stash, note && note(), name));\n            }\n          }));\n          return response;\n        }\n        case \"on-resolve\": {\n          let response = {}, name = \"\", callback2, note;\n          for (let id of request.ids) {\n            try {\n              ({ name, callback: callback2, note } = onResolveCallbacks[id]);\n              let result = await callback2({\n                path: request.path,\n                importer: request.importer,\n                namespace: request.namespace,\n                resolveDir: request.resolveDir,\n                kind: request.kind,\n                pluginData: stash.load(request.pluginData)\n              });\n              if (result != null) {\n                if (typeof result !== \"object\")\n                  throw new Error(`Expected onResolve() callback in plugin ${JSON.stringify(name)} to return an object`);\n                let keys = {};\n                let pluginName = getFlag(result, keys, \"pluginName\", mustBeString);\n                let path3 = getFlag(result, keys, \"path\", mustBeString);\n                let namespace = getFlag(result, keys, \"namespace\", mustBeString);\n                let suffix = getFlag(result, keys, \"suffix\", mustBeString);\n                let external = getFlag(result, keys, \"external\", mustBeBoolean);\n                let sideEffects = getFlag(result, keys, \"sideEffects\", mustBeBoolean);\n                let pluginData = getFlag(result, keys, \"pluginData\", canBeAnything);\n                let errors = getFlag(result, keys, \"errors\", mustBeArray);\n                let warnings = getFlag(result, keys, \"warnings\", mustBeArray);\n                let watchFiles = getFlag(result, keys, \"watchFiles\", mustBeArray);\n                let watchDirs = getFlag(result, keys, \"watchDirs\", mustBeArray);\n                checkForInvalidFlags(result, keys, `from onResolve() callback in plugin ${JSON.stringify(name)}`);\n                response.id = id;\n                if (pluginName != null)\n                  response.pluginName = pluginName;\n                if (path3 != null)\n                  response.path = path3;\n                if (namespace != null)\n                  response.namespace = namespace;\n                if (suffix != null)\n                  response.suffix = suffix;\n                if (external != null)\n                  response.external = external;\n                if (sideEffects != null)\n                  response.sideEffects = sideEffects;\n                if (pluginData != null)\n                  response.pluginData = stash.store(pluginData);\n                if (errors != null)\n                  response.errors = sanitizeMessages(errors, \"errors\", stash, name);\n                if (warnings != null)\n                  response.warnings = sanitizeMessages(warnings, \"warnings\", stash, name);\n                if (watchFiles != null)\n                  response.watchFiles = sanitizeStringArray(watchFiles, \"watchFiles\");\n                if (watchDirs != null)\n                  response.watchDirs = sanitizeStringArray(watchDirs, \"watchDirs\");\n                break;\n              }\n            } catch (e) {\n              return { id, errors: [extractErrorMessageV8(e, streamIn, stash, note && note(), name)] };\n            }\n          }\n          return response;\n        }\n        case \"on-load\": {\n          let response = {}, name = \"\", callback2, note;\n          for (let id of request.ids) {\n            try {\n              ({ name, callback: callback2, note } = onLoadCallbacks[id]);\n              let result = await callback2({\n                path: request.path,\n                namespace: request.namespace,\n                suffix: request.suffix,\n                pluginData: stash.load(request.pluginData)\n              });\n              if (result != null) {\n                if (typeof result !== \"object\")\n                  throw new Error(`Expected onLoad() callback in plugin ${JSON.stringify(name)} to return an object`);\n                let keys = {};\n                let pluginName = getFlag(result, keys, \"pluginName\", mustBeString);\n                let contents = getFlag(result, keys, \"contents\", mustBeStringOrUint8Array);\n                let resolveDir = getFlag(result, keys, \"resolveDir\", mustBeString);\n                let pluginData = getFlag(result, keys, \"pluginData\", canBeAnything);\n                let loader = getFlag(result, keys, \"loader\", mustBeString);\n                let errors = getFlag(result, keys, \"errors\", mustBeArray);\n                let warnings = getFlag(result, keys, \"warnings\", mustBeArray);\n                let watchFiles = getFlag(result, keys, \"watchFiles\", mustBeArray);\n                let watchDirs = getFlag(result, keys, \"watchDirs\", mustBeArray);\n                checkForInvalidFlags(result, keys, `from onLoad() callback in plugin ${JSON.stringify(name)}`);\n                response.id = id;\n                if (pluginName != null)\n                  response.pluginName = pluginName;\n                if (contents instanceof Uint8Array)\n                  response.contents = contents;\n                else if (contents != null)\n                  response.contents = encodeUTF8(contents);\n                if (resolveDir != null)\n                  response.resolveDir = resolveDir;\n                if (pluginData != null)\n                  response.pluginData = stash.store(pluginData);\n                if (loader != null)\n                  response.loader = loader;\n                if (errors != null)\n                  response.errors = sanitizeMessages(errors, \"errors\", stash, name);\n                if (warnings != null)\n                  response.warnings = sanitizeMessages(warnings, \"warnings\", stash, name);\n                if (watchFiles != null)\n                  response.watchFiles = sanitizeStringArray(watchFiles, \"watchFiles\");\n                if (watchDirs != null)\n                  response.watchDirs = sanitizeStringArray(watchDirs, \"watchDirs\");\n                break;\n              }\n            } catch (e) {\n              return { id, errors: [extractErrorMessageV8(e, streamIn, stash, note && note(), name)] };\n            }\n          }\n          return response;\n        }\n        default:\n          throw new Error(`Invalid command: ` + request.command);\n      }\n    };\n    let runOnEndCallbacks = (result, logPluginError, done) => done();\n    if (onEndCallbacks.length > 0) {\n      runOnEndCallbacks = (result, logPluginError, done) => {\n        (async () => {\n          for (const { name, callback: callback2, note } of onEndCallbacks) {\n            try {\n              await callback2(result);\n            } catch (e) {\n              result.errors.push(await new Promise((resolve) => logPluginError(e, name, note && note(), resolve)));\n            }\n          }\n        })().then(done);\n      };\n    }\n    isSetupDone = true;\n    let refCount = 0;\n    return {\n      ok: true,\n      requestPlugins,\n      runOnEndCallbacks,\n      pluginRefs: {\n        ref() {\n          if (++refCount === 1)\n            pluginCallbacks.set(buildKey, callback);\n        },\n        unref() {\n          if (--refCount === 0)\n            pluginCallbacks.delete(buildKey);\n        }\n      }\n    };\n  };\n  let buildServeData = (refs, options, request, key) => {\n    let keys = {};\n    let port = getFlag(options, keys, \"port\", mustBeInteger);\n    let host = getFlag(options, keys, \"host\", mustBeString);\n    let servedir = getFlag(options, keys, \"servedir\", mustBeString);\n    let onRequest = getFlag(options, keys, \"onRequest\", mustBeFunction);\n    let onWait;\n    let wait = new Promise((resolve, reject) => {\n      onWait = (error) => {\n        serveCallbacks.delete(key);\n        if (error !== null)\n          reject(new Error(error));\n        else\n          resolve();\n      };\n    });\n    request.serve = {};\n    checkForInvalidFlags(options, keys, `in serve() call`);\n    if (port !== void 0)\n      request.serve.port = port;\n    if (host !== void 0)\n      request.serve.host = host;\n    if (servedir !== void 0)\n      request.serve.servedir = servedir;\n    serveCallbacks.set(key, {\n      onRequest,\n      onWait\n    });\n    return {\n      wait,\n      stop() {\n        sendRequest(refs, { command: \"serve-stop\", key }, () => {\n        });\n      }\n    };\n  };\n  const buildLogLevelDefault = \"warning\";\n  const transformLogLevelDefault = \"silent\";\n  let buildOrServe = (args) => {\n    let key = nextBuildKey++;\n    const details = createObjectStash();\n    let plugins;\n    let { refs, options, isTTY: isTTY2, callback } = args;\n    if (typeof options === \"object\") {\n      let value = options.plugins;\n      if (value !== void 0) {\n        if (!Array.isArray(value))\n          throw new Error(`\"plugins\" must be an array`);\n        plugins = value;\n      }\n    }\n    let logPluginError = (e, pluginName, note, done) => {\n      let flags = [];\n      try {\n        pushLogFlags(flags, options, {}, isTTY2, buildLogLevelDefault);\n      } catch {\n      }\n      const message = extractErrorMessageV8(e, streamIn, details, note, pluginName);\n      sendRequest(refs, { command: \"error\", flags, error: message }, () => {\n        message.detail = details.load(message.detail);\n        done(message);\n      });\n    };\n    let handleError = (e, pluginName) => {\n      logPluginError(e, pluginName, void 0, (error) => {\n        callback(failureErrorWithLog(\"Build failed\", [error], []), null);\n      });\n    };\n    if (plugins && plugins.length > 0) {\n      if (streamIn.isSync)\n        return handleError(new Error(\"Cannot use plugins in synchronous API calls\"), \"\");\n      handlePlugins(options, plugins, key, details, refs).then(\n        (result) => {\n          if (!result.ok) {\n            handleError(result.error, result.pluginName);\n          } else {\n            try {\n              buildOrServeContinue({\n                ...args,\n                key,\n                details,\n                logPluginError,\n                requestPlugins: result.requestPlugins,\n                runOnEndCallbacks: result.runOnEndCallbacks,\n                pluginRefs: result.pluginRefs\n              });\n            } catch (e) {\n              handleError(e, \"\");\n            }\n          }\n        },\n        (e) => handleError(e, \"\")\n      );\n    } else {\n      try {\n        buildOrServeContinue({\n          ...args,\n          key,\n          details,\n          logPluginError,\n          requestPlugins: null,\n          runOnEndCallbacks: (result, logPluginError2, done) => done(),\n          pluginRefs: null\n        });\n      } catch (e) {\n        handleError(e, \"\");\n      }\n    }\n  };\n  let buildOrServeContinue = ({\n    callName,\n    refs: callerRefs,\n    serveOptions,\n    options,\n    isTTY: isTTY2,\n    defaultWD: defaultWD2,\n    callback,\n    key,\n    details,\n    logPluginError,\n    requestPlugins,\n    runOnEndCallbacks,\n    pluginRefs\n  }) => {\n    const refs = {\n      ref() {\n        if (pluginRefs)\n          pluginRefs.ref();\n        if (callerRefs)\n          callerRefs.ref();\n      },\n      unref() {\n        if (pluginRefs)\n          pluginRefs.unref();\n        if (callerRefs)\n          callerRefs.unref();\n      }\n    };\n    let writeDefault = !streamIn.isWriteUnavailable;\n    let {\n      entries,\n      flags,\n      write,\n      stdinContents,\n      stdinResolveDir,\n      absWorkingDir,\n      incremental,\n      nodePaths,\n      watch,\n      mangleCache\n    } = flagsForBuildOptions(callName, options, isTTY2, buildLogLevelDefault, writeDefault);\n    let request = {\n      command: \"build\",\n      key,\n      entries,\n      flags,\n      write,\n      stdinContents,\n      stdinResolveDir,\n      absWorkingDir: absWorkingDir || defaultWD2,\n      incremental,\n      nodePaths\n    };\n    if (requestPlugins)\n      request.plugins = requestPlugins;\n    if (mangleCache)\n      request.mangleCache = mangleCache;\n    let serve2 = serveOptions && buildServeData(refs, serveOptions, request, key);\n    let rebuild;\n    let stop;\n    let copyResponseToResult = (response, result) => {\n      if (response.outputFiles)\n        result.outputFiles = response.outputFiles.map(convertOutputFiles);\n      if (response.metafile)\n        result.metafile = JSON.parse(response.metafile);\n      if (response.mangleCache)\n        result.mangleCache = response.mangleCache;\n      if (response.writeToStdout !== void 0)\n        console.log(decodeUTF8(response.writeToStdout).replace(/\\n$/, \"\"));\n    };\n    let buildResponseToResult = (response, callback2) => {\n      let result = {\n        errors: replaceDetailsInMessages(response.errors, details),\n        warnings: replaceDetailsInMessages(response.warnings, details)\n      };\n      copyResponseToResult(response, result);\n      runOnEndCallbacks(result, logPluginError, () => {\n        if (result.errors.length > 0) {\n          return callback2(failureErrorWithLog(\"Build failed\", result.errors, result.warnings), null);\n        }\n        if (response.rebuild) {\n          if (!rebuild) {\n            let isDisposed = false;\n            rebuild = () => new Promise((resolve, reject) => {\n              if (isDisposed || closeData)\n                throw new Error(\"Cannot rebuild\");\n              sendRequest(\n                refs,\n                { command: \"rebuild\", key },\n                (error2, response2) => {\n                  if (error2) {\n                    const message = { id: \"\", pluginName: \"\", text: error2, location: null, notes: [], detail: void 0 };\n                    return callback2(failureErrorWithLog(\"Build failed\", [message], []), null);\n                  }\n                  buildResponseToResult(response2, (error3, result3) => {\n                    if (error3)\n                      reject(error3);\n                    else\n                      resolve(result3);\n                  });\n                }\n              );\n            });\n            refs.ref();\n            rebuild.dispose = () => {\n              if (isDisposed)\n                return;\n              isDisposed = true;\n              sendRequest(refs, { command: \"rebuild-dispose\", key }, () => {\n              });\n              refs.unref();\n            };\n          }\n          result.rebuild = rebuild;\n        }\n        if (response.watch) {\n          if (!stop) {\n            let isStopped = false;\n            refs.ref();\n            stop = () => {\n              if (isStopped)\n                return;\n              isStopped = true;\n              watchCallbacks.delete(key);\n              sendRequest(refs, { command: \"watch-stop\", key }, () => {\n              });\n              refs.unref();\n            };\n            if (watch) {\n              watchCallbacks.set(key, (serviceStopError, watchResponse) => {\n                if (serviceStopError) {\n                  if (watch.onRebuild)\n                    watch.onRebuild(serviceStopError, null);\n                  return;\n                }\n                let result2 = {\n                  errors: replaceDetailsInMessages(watchResponse.errors, details),\n                  warnings: replaceDetailsInMessages(watchResponse.warnings, details)\n                };\n                copyResponseToResult(watchResponse, result2);\n                runOnEndCallbacks(result2, logPluginError, () => {\n                  if (result2.errors.length > 0) {\n                    if (watch.onRebuild)\n                      watch.onRebuild(failureErrorWithLog(\"Build failed\", result2.errors, result2.warnings), null);\n                    return;\n                  }\n                  if (watchResponse.rebuildID !== void 0)\n                    result2.rebuild = rebuild;\n                  result2.stop = stop;\n                  if (watch.onRebuild)\n                    watch.onRebuild(null, result2);\n                });\n              });\n            }\n          }\n          result.stop = stop;\n        }\n        callback2(null, result);\n      });\n    };\n    if (write && streamIn.isWriteUnavailable)\n      throw new Error(`The \"write\" option is unavailable in this environment`);\n    if (incremental && streamIn.isSync)\n      throw new Error(`Cannot use \"incremental\" with a synchronous build`);\n    if (watch && streamIn.isSync)\n      throw new Error(`Cannot use \"watch\" with a synchronous build`);\n    sendRequest(refs, request, (error, response) => {\n      if (error)\n        return callback(new Error(error), null);\n      if (serve2) {\n        let serveResponse = response;\n        let isStopped = false;\n        refs.ref();\n        let result = {\n          port: serveResponse.port,\n          host: serveResponse.host,\n          wait: serve2.wait,\n          stop() {\n            if (isStopped)\n              return;\n            isStopped = true;\n            serve2.stop();\n            refs.unref();\n          }\n        };\n        refs.ref();\n        serve2.wait.then(refs.unref, refs.unref);\n        return callback(null, result);\n      }\n      return buildResponseToResult(response, callback);\n    });\n  };\n  let transform2 = ({ callName, refs, input, options, isTTY: isTTY2, fs: fs3, callback }) => {\n    const details = createObjectStash();\n    let start = (inputPath) => {\n      try {\n        if (typeof input !== \"string\" && !(input instanceof Uint8Array))\n          throw new Error('The input to \"transform\" must be a string or a Uint8Array');\n        let {\n          flags,\n          mangleCache\n        } = flagsForTransformOptions(callName, options, isTTY2, transformLogLevelDefault);\n        let request = {\n          command: \"transform\",\n          flags,\n          inputFS: inputPath !== null,\n          input: inputPath !== null ? encodeUTF8(inputPath) : typeof input === \"string\" ? encodeUTF8(input) : input\n        };\n        if (mangleCache)\n          request.mangleCache = mangleCache;\n        sendRequest(refs, request, (error, response) => {\n          if (error)\n            return callback(new Error(error), null);\n          let errors = replaceDetailsInMessages(response.errors, details);\n          let warnings = replaceDetailsInMessages(response.warnings, details);\n          let outstanding = 1;\n          let next = () => {\n            if (--outstanding === 0) {\n              let result = { warnings, code: response.code, map: response.map };\n              if (response.mangleCache)\n                result.mangleCache = response == null ? void 0 : response.mangleCache;\n              callback(null, result);\n            }\n          };\n          if (errors.length > 0)\n            return callback(failureErrorWithLog(\"Transform failed\", errors, warnings), null);\n          if (response.codeFS) {\n            outstanding++;\n            fs3.readFile(response.code, (err, contents) => {\n              if (err !== null) {\n                callback(err, null);\n              } else {\n                response.code = contents;\n                next();\n              }\n            });\n          }\n          if (response.mapFS) {\n            outstanding++;\n            fs3.readFile(response.map, (err, contents) => {\n              if (err !== null) {\n                callback(err, null);\n              } else {\n                response.map = contents;\n                next();\n              }\n            });\n          }\n          next();\n        });\n      } catch (e) {\n        let flags = [];\n        try {\n          pushLogFlags(flags, options, {}, isTTY2, transformLogLevelDefault);\n        } catch {\n        }\n        const error = extractErrorMessageV8(e, streamIn, details, void 0, \"\");\n        sendRequest(refs, { command: \"error\", flags, error }, () => {\n          error.detail = details.load(error.detail);\n          callback(failureErrorWithLog(\"Transform failed\", [error], []), null);\n        });\n      }\n    };\n    if ((typeof input === \"string\" || input instanceof Uint8Array) && input.length > 1024 * 1024) {\n      let next = start;\n      start = () => fs3.writeFile(input, next);\n    }\n    start(null);\n  };\n  let formatMessages2 = ({ callName, refs, messages, options, callback }) => {\n    let result = sanitizeMessages(messages, \"messages\", null, \"\");\n    if (!options)\n      throw new Error(`Missing second argument in ${callName}() call`);\n    let keys = {};\n    let kind = getFlag(options, keys, \"kind\", mustBeString);\n    let color = getFlag(options, keys, \"color\", mustBeBoolean);\n    let terminalWidth = getFlag(options, keys, \"terminalWidth\", mustBeInteger);\n    checkForInvalidFlags(options, keys, `in ${callName}() call`);\n    if (kind === void 0)\n      throw new Error(`Missing \"kind\" in ${callName}() call`);\n    if (kind !== \"error\" && kind !== \"warning\")\n      throw new Error(`Expected \"kind\" to be \"error\" or \"warning\" in ${callName}() call`);\n    let request = {\n      command: \"format-msgs\",\n      messages: result,\n      isWarning: kind === \"warning\"\n    };\n    if (color !== void 0)\n      request.color = color;\n    if (terminalWidth !== void 0)\n      request.terminalWidth = terminalWidth;\n    sendRequest(refs, request, (error, response) => {\n      if (error)\n        return callback(new Error(error), null);\n      callback(null, response.messages);\n    });\n  };\n  let analyzeMetafile2 = ({ callName, refs, metafile, options, callback }) => {\n    if (options === void 0)\n      options = {};\n    let keys = {};\n    let color = getFlag(options, keys, \"color\", mustBeBoolean);\n    let verbose = getFlag(options, keys, \"verbose\", mustBeBoolean);\n    checkForInvalidFlags(options, keys, `in ${callName}() call`);\n    let request = {\n      command: \"analyze-metafile\",\n      metafile\n    };\n    if (color !== void 0)\n      request.color = color;\n    if (verbose !== void 0)\n      request.verbose = verbose;\n    sendRequest(refs, request, (error, response) => {\n      if (error)\n        return callback(new Error(error), null);\n      callback(null, response.result);\n    });\n  };\n  return {\n    readFromStdout,\n    afterClose,\n    service: {\n      buildOrServe,\n      transform: transform2,\n      formatMessages: formatMessages2,\n      analyzeMetafile: analyzeMetafile2\n    }\n  };\n}\nfunction createObjectStash() {\n  const map = /* @__PURE__ */ new Map();\n  let nextID = 0;\n  return {\n    load(id) {\n      return map.get(id);\n    },\n    store(value) {\n      if (value === void 0)\n        return -1;\n      const id = nextID++;\n      map.set(id, value);\n      return id;\n    }\n  };\n}\nfunction extractCallerV8(e, streamIn, ident) {\n  let note;\n  let tried = false;\n  return () => {\n    if (tried)\n      return note;\n    tried = true;\n    try {\n      let lines = (e.stack + \"\").split(\"\\n\");\n      lines.splice(1, 1);\n      let location = parseStackLinesV8(streamIn, lines, ident);\n      if (location) {\n        note = { text: e.message, location };\n        return note;\n      }\n    } catch {\n    }\n  };\n}\nfunction extractErrorMessageV8(e, streamIn, stash, note, pluginName) {\n  let text = \"Internal error\";\n  let location = null;\n  try {\n    text = (e && e.message || e) + \"\";\n  } catch {\n  }\n  try {\n    location = parseStackLinesV8(streamIn, (e.stack + \"\").split(\"\\n\"), \"\");\n  } catch {\n  }\n  return { id: \"\", pluginName, text, location, notes: note ? [note] : [], detail: stash ? stash.store(e) : -1 };\n}\nfunction parseStackLinesV8(streamIn, lines, ident) {\n  let at = \"    at \";\n  if (streamIn.readFileSync && !lines[0].startsWith(at) && lines[1].startsWith(at)) {\n    for (let i = 1; i < lines.length; i++) {\n      let line = lines[i];\n      if (!line.startsWith(at))\n        continue;\n      line = line.slice(at.length);\n      while (true) {\n        let match = /^(?:new |async )?\\S+ \\((.*)\\)$/.exec(line);\n        if (match) {\n          line = match[1];\n          continue;\n        }\n        match = /^eval at \\S+ \\((.*)\\)(?:, \\S+:\\d+:\\d+)?$/.exec(line);\n        if (match) {\n          line = match[1];\n          continue;\n        }\n        match = /^(\\S+):(\\d+):(\\d+)$/.exec(line);\n        if (match) {\n          let contents;\n          try {\n            contents = streamIn.readFileSync(match[1], \"utf8\");\n          } catch {\n            break;\n          }\n          let lineText = contents.split(/\\r\\n|\\r|\\n|\\u2028|\\u2029/)[+match[2] - 1] || \"\";\n          let column = +match[3] - 1;\n          let length = lineText.slice(column, column + ident.length) === ident ? ident.length : 0;\n          return {\n            file: match[1],\n            namespace: \"file\",\n            line: +match[2],\n            column: encodeUTF8(lineText.slice(0, column)).length,\n            length: encodeUTF8(lineText.slice(column, column + length)).length,\n            lineText: lineText + \"\\n\" + lines.slice(1).join(\"\\n\"),\n            suggestion: \"\"\n          };\n        }\n        break;\n      }\n    }\n  }\n  return null;\n}\nfunction failureErrorWithLog(text, errors, warnings) {\n  let limit = 5;\n  let summary = errors.length < 1 ? \"\" : ` with ${errors.length} error${errors.length < 2 ? \"\" : \"s\"}:` + errors.slice(0, limit + 1).map((e, i) => {\n    if (i === limit)\n      return \"\\n...\";\n    if (!e.location)\n      return `\nerror: ${e.text}`;\n    let { file, line, column } = e.location;\n    let pluginText = e.pluginName ? `[plugin: ${e.pluginName}] ` : \"\";\n    return `\n${file}:${line}:${column}: ERROR: ${pluginText}${e.text}`;\n  }).join(\"\");\n  let error = new Error(`${text}${summary}`);\n  error.errors = errors;\n  error.warnings = warnings;\n  return error;\n}\nfunction replaceDetailsInMessages(messages, stash) {\n  for (const message of messages) {\n    message.detail = stash.load(message.detail);\n  }\n  return messages;\n}\nfunction sanitizeLocation(location, where) {\n  if (location == null)\n    return null;\n  let keys = {};\n  let file = getFlag(location, keys, \"file\", mustBeString);\n  let namespace = getFlag(location, keys, \"namespace\", mustBeString);\n  let line = getFlag(location, keys, \"line\", mustBeInteger);\n  let column = getFlag(location, keys, \"column\", mustBeInteger);\n  let length = getFlag(location, keys, \"length\", mustBeInteger);\n  let lineText = getFlag(location, keys, \"lineText\", mustBeString);\n  let suggestion = getFlag(location, keys, \"suggestion\", mustBeString);\n  checkForInvalidFlags(location, keys, where);\n  return {\n    file: file || \"\",\n    namespace: namespace || \"\",\n    line: line || 0,\n    column: column || 0,\n    length: length || 0,\n    lineText: lineText || \"\",\n    suggestion: suggestion || \"\"\n  };\n}\nfunction sanitizeMessages(messages, property, stash, fallbackPluginName) {\n  let messagesClone = [];\n  let index = 0;\n  for (const message of messages) {\n    let keys = {};\n    let id = getFlag(message, keys, \"id\", mustBeString);\n    let pluginName = getFlag(message, keys, \"pluginName\", mustBeString);\n    let text = getFlag(message, keys, \"text\", mustBeString);\n    let location = getFlag(message, keys, \"location\", mustBeObjectOrNull);\n    let notes = getFlag(message, keys, \"notes\", mustBeArray);\n    let detail = getFlag(message, keys, \"detail\", canBeAnything);\n    let where = `in element ${index} of \"${property}\"`;\n    checkForInvalidFlags(message, keys, where);\n    let notesClone = [];\n    if (notes) {\n      for (const note of notes) {\n        let noteKeys = {};\n        let noteText = getFlag(note, noteKeys, \"text\", mustBeString);\n        let noteLocation = getFlag(note, noteKeys, \"location\", mustBeObjectOrNull);\n        checkForInvalidFlags(note, noteKeys, where);\n        notesClone.push({\n          text: noteText || \"\",\n          location: sanitizeLocation(noteLocation, where)\n        });\n      }\n    }\n    messagesClone.push({\n      id: id || \"\",\n      pluginName: pluginName || fallbackPluginName,\n      text: text || \"\",\n      location: sanitizeLocation(location, where),\n      notes: notesClone,\n      detail: stash ? stash.store(detail) : -1\n    });\n    index++;\n  }\n  return messagesClone;\n}\nfunction sanitizeStringArray(values, property) {\n  const result = [];\n  for (const value of values) {\n    if (typeof value !== \"string\")\n      throw new Error(`${JSON.stringify(property)} must be an array of strings`);\n    result.push(value);\n  }\n  return result;\n}\nfunction convertOutputFiles({ path: path3, contents }) {\n  let text = null;\n  return {\n    path: path3,\n    contents,\n    get text() {\n      const binary = this.contents;\n      if (text === null || binary !== contents) {\n        contents = binary;\n        text = decodeUTF8(binary);\n      }\n      return text;\n    }\n  };\n}\n\n// lib/npm/node-platform.ts\nvar fs = require(\"fs\");\nvar os = require(\"os\");\nvar path = require(\"path\");\nvar ESBUILD_BINARY_PATH = process.env.ESBUILD_BINARY_PATH || ESBUILD_BINARY_PATH;\nvar knownWindowsPackages = {\n  \"win32 arm64 LE\": \"esbuild-windows-arm64\",\n  \"win32 ia32 LE\": \"esbuild-windows-32\",\n  \"win32 x64 LE\": \"esbuild-windows-64\"\n};\nvar knownUnixlikePackages = {\n  \"android arm64 LE\": \"esbuild-android-arm64\",\n  \"darwin arm64 LE\": \"esbuild-darwin-arm64\",\n  \"darwin x64 LE\": \"esbuild-darwin-64\",\n  \"freebsd arm64 LE\": \"esbuild-freebsd-arm64\",\n  \"freebsd x64 LE\": \"esbuild-freebsd-64\",\n  \"linux arm LE\": \"esbuild-linux-arm\",\n  \"linux arm64 LE\": \"esbuild-linux-arm64\",\n  \"linux ia32 LE\": \"esbuild-linux-32\",\n  \"linux mips64el LE\": \"esbuild-linux-mips64le\",\n  \"linux ppc64 LE\": \"esbuild-linux-ppc64le\",\n  \"linux riscv64 LE\": \"esbuild-linux-riscv64\",\n  \"linux s390x BE\": \"esbuild-linux-s390x\",\n  \"linux x64 LE\": \"esbuild-linux-64\",\n  \"linux loong64 LE\": \"@esbuild/linux-loong64\",\n  \"netbsd x64 LE\": \"esbuild-netbsd-64\",\n  \"openbsd x64 LE\": \"esbuild-openbsd-64\",\n  \"sunos x64 LE\": \"esbuild-sunos-64\"\n};\nvar knownWebAssemblyFallbackPackages = {\n  \"android x64 LE\": \"esbuild-android-64\"\n};\nfunction pkgAndSubpathForCurrentPlatform() {\n  let pkg;\n  let subpath;\n  let isWASM = false;\n  let platformKey = `${process.platform} ${os.arch()} ${os.endianness()}`;\n  if (platformKey in knownWindowsPackages) {\n    pkg = knownWindowsPackages[platformKey];\n    subpath = \"esbuild.exe\";\n  } else if (platformKey in knownUnixlikePackages) {\n    pkg = knownUnixlikePackages[platformKey];\n    subpath = \"bin/esbuild\";\n  } else if (platformKey in knownWebAssemblyFallbackPackages) {\n    pkg = knownWebAssemblyFallbackPackages[platformKey];\n    subpath = \"bin/esbuild\";\n    isWASM = true;\n  } else {\n    throw new Error(`Unsupported platform: ${platformKey}`);\n  }\n  return { pkg, subpath, isWASM };\n}\nfunction pkgForSomeOtherPlatform() {\n  const libMainJS = require.resolve(\"esbuild\");\n  const nodeModulesDirectory = path.dirname(path.dirname(path.dirname(libMainJS)));\n  if (path.basename(nodeModulesDirectory) === \"node_modules\") {\n    for (const unixKey in knownUnixlikePackages) {\n      try {\n        const pkg = knownUnixlikePackages[unixKey];\n        if (fs.existsSync(path.join(nodeModulesDirectory, pkg)))\n          return pkg;\n      } catch {\n      }\n    }\n    for (const windowsKey in knownWindowsPackages) {\n      try {\n        const pkg = knownWindowsPackages[windowsKey];\n        if (fs.existsSync(path.join(nodeModulesDirectory, pkg)))\n          return pkg;\n      } catch {\n      }\n    }\n  }\n  return null;\n}\nfunction downloadedBinPath(pkg, subpath) {\n  const esbuildLibDir = path.dirname(require.resolve(\"esbuild\"));\n  return path.join(esbuildLibDir, `downloaded-${pkg}-${path.basename(subpath)}`);\n}\nfunction generateBinPath() {\n  if (ESBUILD_BINARY_PATH) {\n    return { binPath: ESBUILD_BINARY_PATH, isWASM: false };\n  }\n  const { pkg, subpath, isWASM } = pkgAndSubpathForCurrentPlatform();\n  let binPath;\n  try {\n    binPath = require.resolve(`${pkg}/${subpath}`);\n  } catch (e) {\n    binPath = downloadedBinPath(pkg, subpath);\n    if (!fs.existsSync(binPath)) {\n      try {\n        require.resolve(pkg);\n      } catch {\n        const otherPkg = pkgForSomeOtherPlatform();\n        if (otherPkg) {\n          throw new Error(`\nYou installed esbuild on another platform than the one you're currently using.\nThis won't work because esbuild is written with native code and needs to\ninstall a platform-specific binary executable.\n\nSpecifically the \"${otherPkg}\" package is present but this platform\nneeds the \"${pkg}\" package instead. People often get into this\nsituation by installing esbuild on Windows or macOS and copying \"node_modules\"\ninto a Docker image that runs Linux, or by copying \"node_modules\" between\nWindows and WSL environments.\n\nIf you are installing with npm, you can try not copying the \"node_modules\"\ndirectory when you copy the files over, and running \"npm ci\" or \"npm install\"\non the destination platform after the copy. Or you could consider using yarn\ninstead which has built-in support for installing a package on multiple\nplatforms simultaneously.\n\nIf you are installing with yarn, you can try listing both this platform and the\nother platform in your \".yarnrc.yml\" file using the \"supportedArchitectures\"\nfeature: https://yarnpkg.com/configuration/yarnrc/#supportedArchitectures\nKeep in mind that this means multiple copies of esbuild will be present.\n\nAnother alternative is to use the \"esbuild-wasm\" package instead, which works\nthe same way on all platforms. But it comes with a heavy performance cost and\ncan sometimes be 10x slower than the \"esbuild\" package, so you may also not\nwant to do that.\n`);\n        }\n        throw new Error(`The package \"${pkg}\" could not be found, and is needed by esbuild.\n\nIf you are installing esbuild with npm, make sure that you don't specify the\n\"--no-optional\" flag. The \"optionalDependencies\" package.json feature is used\nby esbuild to install the correct binary executable for your current platform.`);\n      }\n      throw e;\n    }\n  }\n  let isYarnPnP = false;\n  try {\n    require(\"pnpapi\");\n    isYarnPnP = true;\n  } catch (e) {\n  }\n  if (isYarnPnP) {\n    const esbuildLibDir = path.dirname(require.resolve(\"esbuild\"));\n    const binTargetPath = path.join(esbuildLibDir, `pnpapi-${pkg}-${path.basename(subpath)}`);\n    if (!fs.existsSync(binTargetPath)) {\n      fs.copyFileSync(binPath, binTargetPath);\n      fs.chmodSync(binTargetPath, 493);\n    }\n    return { binPath: binTargetPath, isWASM };\n  }\n  return { binPath, isWASM };\n}\n\n// lib/npm/node.ts\nvar child_process = require(\"child_process\");\nvar crypto = require(\"crypto\");\nvar path2 = require(\"path\");\nvar fs2 = require(\"fs\");\nvar os2 = require(\"os\");\nvar tty = require(\"tty\");\nvar worker_threads;\nif (process.env.ESBUILD_WORKER_THREADS !== \"0\") {\n  try {\n    worker_threads = require(\"worker_threads\");\n  } catch {\n  }\n  let [major, minor] = process.versions.node.split(\".\");\n  if (+major < 12 || +major === 12 && +minor < 17 || +major === 13 && +minor < 13) {\n    worker_threads = void 0;\n  }\n}\nvar _a;\nvar isInternalWorkerThread = ((_a = worker_threads == null ? void 0 : worker_threads.workerData) == null ? void 0 : _a.esbuildVersion) === \"0.14.54\";\nvar esbuildCommandAndArgs = () => {\n  if ((!ESBUILD_BINARY_PATH || false) && (path2.basename(__filename) !== \"main.js\" || path2.basename(__dirname) !== \"lib\")) {\n    throw new Error(\n      `The esbuild JavaScript API cannot be bundled. Please mark the \"esbuild\" package as external so it's not included in the bundle.\n\nMore information: The file containing the code for esbuild's JavaScript API (${__filename}) does not appear to be inside the esbuild package on the file system, which usually means that the esbuild package was bundled into another file. This is problematic because the API needs to run a binary executable inside the esbuild package which is located using a relative path from the API code to the executable. If the esbuild package is bundled, the relative path will be incorrect and the executable won't be found.`\n    );\n  }\n  if (false) {\n    return [\"node\", [path2.join(__dirname, \"..\", \"bin\", \"esbuild\")]];\n  }\n  const { binPath, isWASM } = generateBinPath();\n  if (isWASM) {\n    return [\"node\", [binPath]];\n  } else {\n    return [binPath, []];\n  }\n};\nvar isTTY = () => tty.isatty(2);\nvar fsSync = {\n  readFile(tempFile, callback) {\n    try {\n      let contents = fs2.readFileSync(tempFile, \"utf8\");\n      try {\n        fs2.unlinkSync(tempFile);\n      } catch {\n      }\n      callback(null, contents);\n    } catch (err) {\n      callback(err, null);\n    }\n  },\n  writeFile(contents, callback) {\n    try {\n      let tempFile = randomFileName();\n      fs2.writeFileSync(tempFile, contents);\n      callback(tempFile);\n    } catch {\n      callback(null);\n    }\n  }\n};\nvar fsAsync = {\n  readFile(tempFile, callback) {\n    try {\n      fs2.readFile(tempFile, \"utf8\", (err, contents) => {\n        try {\n          fs2.unlink(tempFile, () => callback(err, contents));\n        } catch {\n          callback(err, contents);\n        }\n      });\n    } catch (err) {\n      callback(err, null);\n    }\n  },\n  writeFile(contents, callback) {\n    try {\n      let tempFile = randomFileName();\n      fs2.writeFile(tempFile, contents, (err) => err !== null ? callback(null) : callback(tempFile));\n    } catch {\n      callback(null);\n    }\n  }\n};\nvar version = \"0.14.54\";\nvar build = (options) => ensureServiceIsRunning().build(options);\nvar serve = (serveOptions, buildOptions) => ensureServiceIsRunning().serve(serveOptions, buildOptions);\nvar transform = (input, options) => ensureServiceIsRunning().transform(input, options);\nvar formatMessages = (messages, options) => ensureServiceIsRunning().formatMessages(messages, options);\nvar analyzeMetafile = (messages, options) => ensureServiceIsRunning().analyzeMetafile(messages, options);\nvar buildSync = (options) => {\n  if (worker_threads && !isInternalWorkerThread) {\n    if (!workerThreadService)\n      workerThreadService = startWorkerThreadService(worker_threads);\n    return workerThreadService.buildSync(options);\n  }\n  let result;\n  runServiceSync((service) => service.buildOrServe({\n    callName: \"buildSync\",\n    refs: null,\n    serveOptions: null,\n    options,\n    isTTY: isTTY(),\n    defaultWD,\n    callback: (err, res) => {\n      if (err)\n        throw err;\n      result = res;\n    }\n  }));\n  return result;\n};\nvar transformSync = (input, options) => {\n  if (worker_threads && !isInternalWorkerThread) {\n    if (!workerThreadService)\n      workerThreadService = startWorkerThreadService(worker_threads);\n    return workerThreadService.transformSync(input, options);\n  }\n  let result;\n  runServiceSync((service) => service.transform({\n    callName: \"transformSync\",\n    refs: null,\n    input,\n    options: options || {},\n    isTTY: isTTY(),\n    fs: fsSync,\n    callback: (err, res) => {\n      if (err)\n        throw err;\n      result = res;\n    }\n  }));\n  return result;\n};\nvar formatMessagesSync = (messages, options) => {\n  if (worker_threads && !isInternalWorkerThread) {\n    if (!workerThreadService)\n      workerThreadService = startWorkerThreadService(worker_threads);\n    return workerThreadService.formatMessagesSync(messages, options);\n  }\n  let result;\n  runServiceSync((service) => service.formatMessages({\n    callName: \"formatMessagesSync\",\n    refs: null,\n    messages,\n    options,\n    callback: (err, res) => {\n      if (err)\n        throw err;\n      result = res;\n    }\n  }));\n  return result;\n};\nvar analyzeMetafileSync = (metafile, options) => {\n  if (worker_threads && !isInternalWorkerThread) {\n    if (!workerThreadService)\n      workerThreadService = startWorkerThreadService(worker_threads);\n    return workerThreadService.analyzeMetafileSync(metafile, options);\n  }\n  let result;\n  runServiceSync((service) => service.analyzeMetafile({\n    callName: \"analyzeMetafileSync\",\n    refs: null,\n    metafile: typeof metafile === \"string\" ? metafile : JSON.stringify(metafile),\n    options,\n    callback: (err, res) => {\n      if (err)\n        throw err;\n      result = res;\n    }\n  }));\n  return result;\n};\nvar initializeWasCalled = false;\nvar initialize = (options) => {\n  options = validateInitializeOptions(options || {});\n  if (options.wasmURL)\n    throw new Error(`The \"wasmURL\" option only works in the browser`);\n  if (options.wasmModule)\n    throw new Error(`The \"wasmModule\" option only works in the browser`);\n  if (options.worker)\n    throw new Error(`The \"worker\" option only works in the browser`);\n  if (initializeWasCalled)\n    throw new Error('Cannot call \"initialize\" more than once');\n  ensureServiceIsRunning();\n  initializeWasCalled = true;\n  return Promise.resolve();\n};\nvar defaultWD = process.cwd();\nvar longLivedService;\nvar ensureServiceIsRunning = () => {\n  if (longLivedService)\n    return longLivedService;\n  let [command, args] = esbuildCommandAndArgs();\n  let child = child_process.spawn(command, args.concat(`--service=${\"0.14.54\"}`, \"--ping\"), {\n    windowsHide: true,\n    stdio: [\"pipe\", \"pipe\", \"inherit\"],\n    cwd: defaultWD\n  });\n  let { readFromStdout, afterClose, service } = createChannel({\n    writeToStdin(bytes) {\n      child.stdin.write(bytes, (err) => {\n        if (err)\n          afterClose(err);\n      });\n    },\n    readFileSync: fs2.readFileSync,\n    isSync: false,\n    isWriteUnavailable: false,\n    esbuild: node_exports\n  });\n  child.stdin.on(\"error\", afterClose);\n  child.on(\"error\", afterClose);\n  const stdin = child.stdin;\n  const stdout = child.stdout;\n  stdout.on(\"data\", readFromStdout);\n  stdout.on(\"end\", afterClose);\n  let refCount = 0;\n  child.unref();\n  if (stdin.unref) {\n    stdin.unref();\n  }\n  if (stdout.unref) {\n    stdout.unref();\n  }\n  const refs = {\n    ref() {\n      if (++refCount === 1)\n        child.ref();\n    },\n    unref() {\n      if (--refCount === 0)\n        child.unref();\n    }\n  };\n  longLivedService = {\n    build: (options) => {\n      return new Promise((resolve, reject) => {\n        service.buildOrServe({\n          callName: \"build\",\n          refs,\n          serveOptions: null,\n          options,\n          isTTY: isTTY(),\n          defaultWD,\n          callback: (err, res) => err ? reject(err) : resolve(res)\n        });\n      });\n    },\n    serve: (serveOptions, buildOptions) => {\n      if (serveOptions === null || typeof serveOptions !== \"object\")\n        throw new Error(\"The first argument must be an object\");\n      return new Promise((resolve, reject) => service.buildOrServe({\n        callName: \"serve\",\n        refs,\n        serveOptions,\n        options: buildOptions,\n        isTTY: isTTY(),\n        defaultWD,\n        callback: (err, res) => err ? reject(err) : resolve(res)\n      }));\n    },\n    transform: (input, options) => {\n      return new Promise((resolve, reject) => service.transform({\n        callName: \"transform\",\n        refs,\n        input,\n        options: options || {},\n        isTTY: isTTY(),\n        fs: fsAsync,\n        callback: (err, res) => err ? reject(err) : resolve(res)\n      }));\n    },\n    formatMessages: (messages, options) => {\n      return new Promise((resolve, reject) => service.formatMessages({\n        callName: \"formatMessages\",\n        refs,\n        messages,\n        options,\n        callback: (err, res) => err ? reject(err) : resolve(res)\n      }));\n    },\n    analyzeMetafile: (metafile, options) => {\n      return new Promise((resolve, reject) => service.analyzeMetafile({\n        callName: \"analyzeMetafile\",\n        refs,\n        metafile: typeof metafile === \"string\" ? metafile : JSON.stringify(metafile),\n        options,\n        callback: (err, res) => err ? reject(err) : resolve(res)\n      }));\n    }\n  };\n  return longLivedService;\n};\nvar runServiceSync = (callback) => {\n  let [command, args] = esbuildCommandAndArgs();\n  let stdin = new Uint8Array();\n  let { readFromStdout, afterClose, service } = createChannel({\n    writeToStdin(bytes) {\n      if (stdin.length !== 0)\n        throw new Error(\"Must run at most one command\");\n      stdin = bytes;\n    },\n    isSync: true,\n    isWriteUnavailable: false,\n    esbuild: node_exports\n  });\n  callback(service);\n  let stdout = child_process.execFileSync(command, args.concat(`--service=${\"0.14.54\"}`), {\n    cwd: defaultWD,\n    windowsHide: true,\n    input: stdin,\n    maxBuffer: +process.env.ESBUILD_MAX_BUFFER || 16 * 1024 * 1024\n  });\n  readFromStdout(stdout);\n  afterClose(null);\n};\nvar randomFileName = () => {\n  return path2.join(os2.tmpdir(), `esbuild-${crypto.randomBytes(32).toString(\"hex\")}`);\n};\nvar workerThreadService = null;\nvar startWorkerThreadService = (worker_threads2) => {\n  let { port1: mainPort, port2: workerPort } = new worker_threads2.MessageChannel();\n  let worker = new worker_threads2.Worker(__filename, {\n    workerData: { workerPort, defaultWD, esbuildVersion: \"0.14.54\" },\n    transferList: [workerPort],\n    execArgv: []\n  });\n  let nextID = 0;\n  let fakeBuildError = (text) => {\n    let error = new Error(`Build failed with 1 error:\nerror: ${text}`);\n    let errors = [{ id: \"\", pluginName: \"\", text, location: null, notes: [], detail: void 0 }];\n    error.errors = errors;\n    error.warnings = [];\n    return error;\n  };\n  let validateBuildSyncOptions = (options) => {\n    if (!options)\n      return;\n    let plugins = options.plugins;\n    let incremental = options.incremental;\n    let watch = options.watch;\n    if (plugins && plugins.length > 0)\n      throw fakeBuildError(`Cannot use plugins in synchronous API calls`);\n    if (incremental)\n      throw fakeBuildError(`Cannot use \"incremental\" with a synchronous build`);\n    if (watch)\n      throw fakeBuildError(`Cannot use \"watch\" with a synchronous build`);\n  };\n  let applyProperties = (object, properties) => {\n    for (let key in properties) {\n      object[key] = properties[key];\n    }\n  };\n  let runCallSync = (command, args) => {\n    let id = nextID++;\n    let sharedBuffer = new SharedArrayBuffer(8);\n    let sharedBufferView = new Int32Array(sharedBuffer);\n    let msg = { sharedBuffer, id, command, args };\n    worker.postMessage(msg);\n    let status = Atomics.wait(sharedBufferView, 0, 0);\n    if (status !== \"ok\" && status !== \"not-equal\")\n      throw new Error(\"Internal error: Atomics.wait() failed: \" + status);\n    let { message: { id: id2, resolve, reject, properties } } = worker_threads2.receiveMessageOnPort(mainPort);\n    if (id !== id2)\n      throw new Error(`Internal error: Expected id ${id} but got id ${id2}`);\n    if (reject) {\n      applyProperties(reject, properties);\n      throw reject;\n    }\n    return resolve;\n  };\n  worker.unref();\n  return {\n    buildSync(options) {\n      validateBuildSyncOptions(options);\n      return runCallSync(\"build\", [options]);\n    },\n    transformSync(input, options) {\n      return runCallSync(\"transform\", [input, options]);\n    },\n    formatMessagesSync(messages, options) {\n      return runCallSync(\"formatMessages\", [messages, options]);\n    },\n    analyzeMetafileSync(metafile, options) {\n      return runCallSync(\"analyzeMetafile\", [metafile, options]);\n    }\n  };\n};\nvar startSyncServiceWorker = () => {\n  let workerPort = worker_threads.workerData.workerPort;\n  let parentPort = worker_threads.parentPort;\n  let extractProperties = (object) => {\n    let properties = {};\n    if (object && typeof object === \"object\") {\n      for (let key in object) {\n        properties[key] = object[key];\n      }\n    }\n    return properties;\n  };\n  try {\n    let service = ensureServiceIsRunning();\n    defaultWD = worker_threads.workerData.defaultWD;\n    parentPort.on(\"message\", (msg) => {\n      (async () => {\n        let { sharedBuffer, id, command, args } = msg;\n        let sharedBufferView = new Int32Array(sharedBuffer);\n        try {\n          switch (command) {\n            case \"build\":\n              workerPort.postMessage({ id, resolve: await service.build(args[0]) });\n              break;\n            case \"transform\":\n              workerPort.postMessage({ id, resolve: await service.transform(args[0], args[1]) });\n              break;\n            case \"formatMessages\":\n              workerPort.postMessage({ id, resolve: await service.formatMessages(args[0], args[1]) });\n              break;\n            case \"analyzeMetafile\":\n              workerPort.postMessage({ id, resolve: await service.analyzeMetafile(args[0], args[1]) });\n              break;\n            default:\n              throw new Error(`Invalid command: ${command}`);\n          }\n        } catch (reject) {\n          workerPort.postMessage({ id, reject, properties: extractProperties(reject) });\n        }\n        Atomics.add(sharedBufferView, 0, 1);\n        Atomics.notify(sharedBufferView, 0, Infinity);\n      })();\n    });\n  } catch (reject) {\n    parentPort.on(\"message\", (msg) => {\n      let { sharedBuffer, id } = msg;\n      let sharedBufferView = new Int32Array(sharedBuffer);\n      workerPort.postMessage({ id, reject, properties: extractProperties(reject) });\n      Atomics.add(sharedBufferView, 0, 1);\n      Atomics.notify(sharedBufferView, 0, Infinity);\n    });\n  }\n};\nif (isInternalWorkerThread) {\n  startSyncServiceWorker();\n}\nvar node_default = node_exports;\n// Annotate the CommonJS export names for ESM import in node:\n0 && (module.exports = {\n  analyzeMetafile,\n  analyzeMetafileSync,\n  build,\n  buildSync,\n  formatMessages,\n  formatMessagesSync,\n  initialize,\n  serve,\n  transform,\n  transformSync,\n  version\n});\n", "module.exports = Object.create(new Proxy({}, {\n  get(_, key) {\n    if (\n      key !== '__esModule' &&\n      key !== '__proto__' &&\n      key !== 'constructor' &&\n      key !== 'splice'\n    ) {\n      throw new Error(`Module \"events\" has been externalized for browser compatibility. Cannot access \"events.${key}\" in client code.`)\n    }\n  }\n}))", "module.exports = Object.create(new Proxy({}, {\n  get(_, key) {\n    if (\n      key !== '__esModule' &&\n      key !== '__proto__' &&\n      key !== 'constructor' &&\n      key !== 'splice'\n    ) {\n      throw new Error(`Module \"assert\" has been externalized for browser compatibility. Cannot access \"assert.${key}\" in client code.`)\n    }\n  }\n}))", "module.exports = Object.create(new Proxy({}, {\n  get(_, key) {\n    if (\n      key !== '__esModule' &&\n      key !== '__proto__' &&\n      key !== 'constructor' &&\n      key !== 'splice'\n    ) {\n      throw new Error(`Module \"net\" has been externalized for browser compatibility. Cannot access \"net.${key}\" in client code.`)\n    }\n  }\n}))", "module.exports = Object.create(new Proxy({}, {\n  get(_, key) {\n    if (\n      key !== '__esModule' &&\n      key !== '__proto__' &&\n      key !== 'constructor' &&\n      key !== 'splice'\n    ) {\n      throw new Error(`Module \"http\" has been externalized for browser compatibility. Cannot access \"http.${key}\" in client code.`)\n    }\n  }\n}))", "module.exports = Object.create(new Proxy({}, {\n  get(_, key) {\n    if (\n      key !== '__esModule' &&\n      key !== '__proto__' &&\n      key !== 'constructor' &&\n      key !== 'splice'\n    ) {\n      throw new Error(`Module \"stream\" has been externalized for browser compatibility. Cannot access \"stream.${key}\" in client code.`)\n    }\n  }\n}))", "module.exports = Object.create(new Proxy({}, {\n  get(_, key) {\n    if (\n      key !== '__esModule' &&\n      key !== '__proto__' &&\n      key !== 'constructor' &&\n      key !== 'splice'\n    ) {\n      throw new Error(`Module \"node:os\" has been externalized for browser compatibility. Cannot access \"node:os.${key}\" in client code.`)\n    }\n  }\n}))", "module.exports = Object.create(new Proxy({}, {\n  get(_, key) {\n    if (\n      key !== '__esModule' &&\n      key !== '__proto__' &&\n      key !== 'constructor' &&\n      key !== 'splice'\n    ) {\n      throw new Error(`Module \"node:crypto\" has been externalized for browser compatibility. Cannot access \"node:crypto.${key}\" in client code.`)\n    }\n  }\n}))", "module.exports = Object.create(new Proxy({}, {\n  get(_, key) {\n    if (\n      key !== '__esModule' &&\n      key !== '__proto__' &&\n      key !== 'constructor' &&\n      key !== 'splice'\n    ) {\n      throw new Error(`Module \"node:util\" has been externalized for browser compatibility. Cannot access \"node:util.${key}\" in client code.`)\n    }\n  }\n}))", "module.exports = Object.create(new Proxy({}, {\n  get(_, key) {\n    if (\n      key !== '__esModule' &&\n      key !== '__proto__' &&\n      key !== 'constructor' &&\n      key !== 'splice'\n    ) {\n      throw new Error(`Module \"node:dns\" has been externalized for browser compatibility. Cannot access \"node:dns.${key}\" in client code.`)\n    }\n  }\n}))", "module.exports = Object.create(new Proxy({}, {\n  get(_, key) {\n    if (\n      key !== '__esModule' &&\n      key !== '__proto__' &&\n      key !== 'constructor' &&\n      key !== 'splice'\n    ) {\n      throw new Error(`Module \"buffer\" has been externalized for browser compatibility. Cannot access \"buffer.${key}\" in client code.`)\n    }\n  }\n}))", "module.exports = Object.create(new Proxy({}, {\n  get(_, key) {\n    if (\n      key !== '__esModule' &&\n      key !== '__proto__' &&\n      key !== 'constructor' &&\n      key !== 'splice'\n    ) {\n      throw new Error(`Module \"module\" has been externalized for browser compatibility. Cannot access \"module.${key}\" in client code.`)\n    }\n  }\n}))", "module.exports = Object.create(new Proxy({}, {\n  get(_, key) {\n    if (\n      key !== '__esModule' &&\n      key !== '__proto__' &&\n      key !== 'constructor' &&\n      key !== 'splice'\n    ) {\n      throw new Error(`Module \"zlib\" has been externalized for browser compatibility. Cannot access \"zlib.${key}\" in client code.`)\n    }\n  }\n}))", "module.exports = Object.create(new Proxy({}, {\n  get(_, key) {\n    if (\n      key !== '__esModule' &&\n      key !== '__proto__' &&\n      key !== 'constructor' &&\n      key !== 'splice'\n    ) {\n      throw new Error(`Module \"https\" has been externalized for browser compatibility. Cannot access \"https.${key}\" in client code.`)\n    }\n  }\n}))", "module.exports = Object.create(new Proxy({}, {\n  get(_, key) {\n    if (\n      key !== '__esModule' &&\n      key !== '__proto__' &&\n      key !== 'constructor' &&\n      key !== 'splice'\n    ) {\n      throw new Error(`Module \"tls\" has been externalized for browser compatibility. Cannot access \"tls.${key}\" in client code.`)\n    }\n  }\n}))", "module.exports = Object.create(new Proxy({}, {\n  get(_, key) {\n    if (\n      key !== '__esModule' &&\n      key !== '__proto__' &&\n      key !== 'constructor' &&\n      key !== 'splice'\n    ) {\n      throw new Error(`Module \"querystring\" has been externalized for browser compatibility. Cannot access \"querystring.${key}\" in client code.`)\n    }\n  }\n}))", "module.exports = Object.create(new Proxy({}, {\n  get(_, key) {\n    if (\n      key !== '__esModule' &&\n      key !== '__proto__' &&\n      key !== 'constructor' &&\n      key !== 'splice'\n    ) {\n      throw new Error(`Module \"node:readline\" has been externalized for browser compatibility. Cannot access \"node:readline.${key}\" in client code.`)\n    }\n  }\n}))", "module.exports = Object.create(new Proxy({}, {\n  get(_, key) {\n    if (\n      key !== '__esModule' &&\n      key !== '__proto__' &&\n      key !== 'constructor' &&\n      key !== 'splice'\n    ) {\n      throw new Error(`Module \"node:child_process\" has been externalized for browser compatibility. Cannot access \"node:child_process.${key}\" in client code.`)\n    }\n  }\n}))", "module.exports = Object.create(new Proxy({}, {\n  get(_, key) {\n    if (\n      key !== '__esModule' &&\n      key !== '__proto__' &&\n      key !== 'constructor' &&\n      key !== 'splice'\n    ) {\n      throw new Error(`Module \"node:zlib\" has been externalized for browser compatibility. Cannot access \"node:zlib.${key}\" in client code.`)\n    }\n  }\n}))", "import path, { resolve } from 'node:path';\nimport { fileURLToPath } from 'node:url';\n\nvar version = \"3.0.9\";\n\nconst VERSION = version;\nconst DEFAULT_MAIN_FIELDS = [\n    'module',\n    'jsnext:main',\n    'jsnext'\n];\n// Baseline support browserslist\n// \"defaults and supports es6-module and supports es6-module-dynamic-import\"\n// Higher browser versions may be needed for extra features.\nconst ESBUILD_MODULES_TARGET = [\n    'es2020',\n    'edge88',\n    'firefox78',\n    'chrome87',\n    'safari13' // transpile nullish coalescing\n];\nconst DEFAULT_EXTENSIONS = [\n    '.mjs',\n    '.js',\n    '.mts',\n    '.ts',\n    '.jsx',\n    '.tsx',\n    '.json'\n];\nconst DEFAULT_CONFIG_FILES = [\n    'vite.config.js',\n    'vite.config.mjs',\n    'vite.config.ts',\n    'vite.config.cjs',\n    'vite.config.mts',\n    'vite.config.cts'\n];\nconst JS_TYPES_RE = /\\.(?:j|t)sx?$|\\.mjs$/;\nconst OPTIMIZABLE_ENTRY_RE = /\\.(?:[cm]?[jt]s)$/;\nconst SPECIAL_QUERY_RE = /[\\?&](?:worker|sharedworker|raw|url)\\b/;\n/**\n * Prefix for resolved fs paths, since windows paths may not be valid as URLs.\n */\nconst FS_PREFIX = `/@fs/`;\n/**\n * Prefix for resolved Ids that are not valid browser import specifiers\n */\nconst VALID_ID_PREFIX = `/@id/`;\n/**\n * Plugins that use 'virtual modules' (e.g. for helper functions), prefix the\n * module ID with `\\0`, a convention from the rollup ecosystem.\n * This prevents other plugins from trying to process the id (like node resolution),\n * and core features like sourcemaps can use this info to differentiate between\n * virtual modules and regular files.\n * `\\0` is not a permitted char in import URLs so we have to replace them during\n * import analysis. The id will be decoded back before entering the plugins pipeline.\n * These encoded virtual ids are also prefixed by the VALID_ID_PREFIX, so virtual\n * modules in the browser end up encoded as `/@id/__x00__{id}`\n */\nconst NULL_BYTE_PLACEHOLDER = `__x00__`;\nconst CLIENT_PUBLIC_PATH = `/@vite/client`;\nconst ENV_PUBLIC_PATH = `/@vite/env`;\nconst VITE_PACKAGE_DIR = resolve(\n// import.meta.url is `dist/node/constants.js` after bundle\nfileURLToPath(import.meta.url), '../../..');\nconst CLIENT_ENTRY = resolve(VITE_PACKAGE_DIR, 'dist/client/client.mjs');\nconst ENV_ENTRY = resolve(VITE_PACKAGE_DIR, 'dist/client/env.mjs');\nconst CLIENT_DIR = path.dirname(CLIENT_ENTRY);\n// ** READ THIS ** before editing `KNOWN_ASSET_TYPES`.\n//   If you add an asset to `KNOWN_ASSET_TYPES`, make sure to also add it\n//   to the TypeScript declaration file `packages/vite/client.d.ts` and\n//   add a mime type to the `registerCustomMime` in\n//   `packages/vite/src/node/plugin/assets.ts` if mime type cannot be\n//   looked up by mrmime.\nconst KNOWN_ASSET_TYPES = [\n    // images\n    'png',\n    'jpe?g',\n    'jfif',\n    'pjpeg',\n    'pjp',\n    'gif',\n    'svg',\n    'ico',\n    'webp',\n    'avif',\n    // media\n    'mp4',\n    'webm',\n    'ogg',\n    'mp3',\n    'wav',\n    'flac',\n    'aac',\n    // fonts\n    'woff2?',\n    'eot',\n    'ttf',\n    'otf',\n    // other\n    'webmanifest',\n    'pdf',\n    'txt'\n];\nconst DEFAULT_ASSETS_RE = new RegExp(`\\\\.(` + KNOWN_ASSET_TYPES.join('|') + `)(\\\\?.*)?$`);\nconst DEP_VERSION_RE = /[\\?&](v=[\\w\\.-]+)\\b/;\nconst loopbackHosts = new Set([\n    'localhost',\n    '127.0.0.1',\n    '::1',\n    '0000:0000:0000:0000:0000:0000:0000:0001'\n]);\nconst wildcardHosts = new Set([\n    '0.0.0.0',\n    '::',\n    '0000:0000:0000:0000:0000:0000:0000:0000'\n]);\n\nexport { CLIENT_DIR, CLIENT_ENTRY, CLIENT_PUBLIC_PATH, DEFAULT_ASSETS_RE, DEFAULT_CONFIG_FILES, DEFAULT_EXTENSIONS, DEFAULT_MAIN_FIELDS, DEP_VERSION_RE, ENV_ENTRY, ENV_PUBLIC_PATH, ESBUILD_MODULES_TARGET, FS_PREFIX, JS_TYPES_RE, KNOWN_ASSET_TYPES, NULL_BYTE_PLACEHOLDER, OPTIMIZABLE_ENTRY_RE, SPECIAL_QUERY_RE, VALID_ID_PREFIX, VERSION, VITE_PACKAGE_DIR, loopbackHosts, wildcardHosts };\n", "import fs$l, { promises as promises$2 } from 'node:fs';\nimport path$n, { resolve as resolve$6, join as join$2, posix as posix$2, isAbsolute as isAbsolute$2, relative as relative$2, dirname as dirname$2, basename as basename$2, extname as extname$1 } from 'node:path';\nimport { URL as URL$3, pathToFileURL, URLSearchParams, parse as parse$k } from 'node:url';\nimport { performance } from 'node:perf_hooks';\nimport { createRequire as createRequire$1, builtinModules } from 'node:module';\nimport require$$0$3 from 'tty';\nimport { transform as transform$2, build as build$3, formatMessages } from 'esbuild';\nimport require$$0$4, { sep, resolve as resolve$4, posix as posix$1, relative as relative$1, basename as basename$1, extname, dirname as dirname$1, join as join$1, win32 as win32$1, isAbsolute as isAbsolute$1, normalize } from 'path';\nimport * as require$$0$2 from 'fs';\nimport require$$0__default, { existsSync, readFileSync, statSync as statSync$1, promises as promises$1, readdirSync } from 'fs';\nimport require$$0$5 from 'events';\nimport assert$1 from 'assert';\nimport require$$0$6, { format as format$2, inspect } from 'util';\nimport require$$3$1 from 'net';\nimport require$$0$9, { pathToFileURL as pathToFileURL$1 } from 'url';\nimport require$$1$2 from 'http';\nimport require$$0$7 from 'stream';\nimport require$$1 from 'os';\nimport require$$2 from 'child_process';\nimport os$3 from 'node:os';\nimport { createHash as createHash$2 } from 'node:crypto';\nimport { promisify as promisify$4 } from 'node:util';\nimport { promises } from 'node:dns';\nimport resolve$5 from 'resolve';\nimport { CLIENT_ENTRY, OPTIMIZABLE_ENTRY_RE, DEFAULT_EXTENSIONS as DEFAULT_EXTENSIONS$1, wildcardHosts, loopbackHosts, VALID_ID_PREFIX, FS_PREFIX, CLIENT_PUBLIC_PATH, ENV_PUBLIC_PATH, DEFAULT_MAIN_FIELDS, DEP_VERSION_RE, SPECIAL_QUERY_RE, KNOWN_ASSET_TYPES, JS_TYPES_RE, ESBUILD_MODULES_TARGET, CLIENT_DIR, NULL_BYTE_PLACEHOLDER, VERSION, VITE_PACKAGE_DIR, ENV_ENTRY, DEFAULT_ASSETS_RE, DEFAULT_CONFIG_FILES } from '../constants.js';\nimport require$$5 from 'crypto';\nimport require$$0$a from 'buffer';\nimport require$$0$8, { createRequire as createRequire$2 } from 'module';\nimport require$$0$b from 'zlib';\nimport require$$1$3 from 'https';\nimport require$$4 from 'tls';\nimport { STATUS_CODES } from 'node:http';\nimport { createServer as createServer$2 } from 'node:https';\nimport require$$1$1 from 'worker_threads';\nimport * as qs from 'querystring';\nimport readline from 'node:readline';\nimport { execSync } from 'node:child_process';\nimport zlib$1, { gzip } from 'node:zlib';\n\nimport { fileURLToPath as __cjs_fileURLToPath } from 'node:url';\nimport { dirname as __cjs_dirname } from 'node:path';\nimport { createRequire as __cjs_createRequire } from 'node:module';\n\nconst __filename = __cjs_fileURLToPath(import.meta.url);\nconst __dirname = __cjs_dirname(__filename);\nconst require = __cjs_createRequire(import.meta.url);\nconst __require = require;\nvar commonjsGlobal = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};\n\nfunction getDefaultExportFromCjs (x) {\n\treturn x && x.__esModule && Object.prototype.hasOwnProperty.call(x, 'default') ? x['default'] : x;\n}\n\nfunction getAugmentedNamespace(n) {\n  var f = n.default;\n\tif (typeof f == \"function\") {\n\t\tvar a = function () {\n\t\t\treturn f.apply(this, arguments);\n\t\t};\n\t\ta.prototype = f.prototype;\n  } else a = {};\n  Object.defineProperty(a, '__esModule', {value: true});\n\tObject.keys(n).forEach(function (k) {\n\t\tvar d = Object.getOwnPropertyDescriptor(n, k);\n\t\tObject.defineProperty(a, k, d.get ? d : {\n\t\t\tenumerable: true,\n\t\t\tget: function () {\n\t\t\t\treturn n[k];\n\t\t\t}\n\t\t});\n\t});\n\treturn a;\n}\n\nvar picocolors = {exports: {}};\n\nlet tty = require$$0$3;\n\nlet isColorSupported =\n\t!(\"NO_COLOR\" in process.env || process.argv.includes(\"--no-color\")) &&\n\t(\"FORCE_COLOR\" in process.env ||\n\t\tprocess.argv.includes(\"--color\") ||\n\t\tprocess.platform === \"win32\" ||\n\t\t(tty.isatty(1) && process.env.TERM !== \"dumb\") ||\n\t\t\"CI\" in process.env);\n\nlet formatter =\n\t(open, close, replace = open) =>\n\tinput => {\n\t\tlet string = \"\" + input;\n\t\tlet index = string.indexOf(close, open.length);\n\t\treturn ~index\n\t\t\t? open + replaceClose(string, close, replace, index) + close\n\t\t\t: open + string + close\n\t};\n\nlet replaceClose = (string, close, replace, index) => {\n\tlet start = string.substring(0, index) + replace;\n\tlet end = string.substring(index + close.length);\n\tlet nextIndex = end.indexOf(close);\n\treturn ~nextIndex ? start + replaceClose(end, close, replace, nextIndex) : start + end\n};\n\nlet createColors = (enabled = isColorSupported) => ({\n\tisColorSupported: enabled,\n\treset: enabled ? s => `\\x1b[0m${s}\\x1b[0m` : String,\n\tbold: enabled ? formatter(\"\\x1b[1m\", \"\\x1b[22m\", \"\\x1b[22m\\x1b[1m\") : String,\n\tdim: enabled ? formatter(\"\\x1b[2m\", \"\\x1b[22m\", \"\\x1b[22m\\x1b[2m\") : String,\n\titalic: enabled ? formatter(\"\\x1b[3m\", \"\\x1b[23m\") : String,\n\tunderline: enabled ? formatter(\"\\x1b[4m\", \"\\x1b[24m\") : String,\n\tinverse: enabled ? formatter(\"\\x1b[7m\", \"\\x1b[27m\") : String,\n\thidden: enabled ? formatter(\"\\x1b[8m\", \"\\x1b[28m\") : String,\n\tstrikethrough: enabled ? formatter(\"\\x1b[9m\", \"\\x1b[29m\") : String,\n\tblack: enabled ? formatter(\"\\x1b[30m\", \"\\x1b[39m\") : String,\n\tred: enabled ? formatter(\"\\x1b[31m\", \"\\x1b[39m\") : String,\n\tgreen: enabled ? formatter(\"\\x1b[32m\", \"\\x1b[39m\") : String,\n\tyellow: enabled ? formatter(\"\\x1b[33m\", \"\\x1b[39m\") : String,\n\tblue: enabled ? formatter(\"\\x1b[34m\", \"\\x1b[39m\") : String,\n\tmagenta: enabled ? formatter(\"\\x1b[35m\", \"\\x1b[39m\") : String,\n\tcyan: enabled ? formatter(\"\\x1b[36m\", \"\\x1b[39m\") : String,\n\twhite: enabled ? formatter(\"\\x1b[37m\", \"\\x1b[39m\") : String,\n\tgray: enabled ? formatter(\"\\x1b[90m\", \"\\x1b[39m\") : String,\n\tbgBlack: enabled ? formatter(\"\\x1b[40m\", \"\\x1b[49m\") : String,\n\tbgRed: enabled ? formatter(\"\\x1b[41m\", \"\\x1b[49m\") : String,\n\tbgGreen: enabled ? formatter(\"\\x1b[42m\", \"\\x1b[49m\") : String,\n\tbgYellow: enabled ? formatter(\"\\x1b[43m\", \"\\x1b[49m\") : String,\n\tbgBlue: enabled ? formatter(\"\\x1b[44m\", \"\\x1b[49m\") : String,\n\tbgMagenta: enabled ? formatter(\"\\x1b[45m\", \"\\x1b[49m\") : String,\n\tbgCyan: enabled ? formatter(\"\\x1b[46m\", \"\\x1b[49m\") : String,\n\tbgWhite: enabled ? formatter(\"\\x1b[47m\", \"\\x1b[49m\") : String,\n});\n\npicocolors.exports = createColors();\npicocolors.exports.createColors = createColors;\n\nfunction matches$1(pattern, importee) {\n    if (pattern instanceof RegExp) {\n        return pattern.test(importee);\n    }\n    if (importee.length < pattern.length) {\n        return false;\n    }\n    if (importee === pattern) {\n        return true;\n    }\n    // eslint-disable-next-line prefer-template\n    return importee.startsWith(pattern + '/');\n}\nfunction getEntries({ entries, customResolver }) {\n    if (!entries) {\n        return [];\n    }\n    const resolverFunctionFromOptions = resolveCustomResolver(customResolver);\n    if (Array.isArray(entries)) {\n        return entries.map((entry) => {\n            return {\n                find: entry.find,\n                replacement: entry.replacement,\n                resolverFunction: resolveCustomResolver(entry.customResolver) || resolverFunctionFromOptions\n            };\n        });\n    }\n    return Object.entries(entries).map(([key, value]) => {\n        return { find: key, replacement: value, resolverFunction: resolverFunctionFromOptions };\n    });\n}\nfunction resolveCustomResolver(customResolver) {\n    if (customResolver) {\n        if (typeof customResolver === 'function') {\n            return customResolver;\n        }\n        if (typeof customResolver.resolveId === 'function') {\n            return customResolver.resolveId;\n        }\n    }\n    return null;\n}\nfunction alias$1(options = {}) {\n    const entries = getEntries(options);\n    if (entries.length === 0) {\n        return {\n            name: 'alias',\n            resolveId: () => null\n        };\n    }\n    return {\n        name: 'alias',\n        async buildStart(inputOptions) {\n            await Promise.all([...(Array.isArray(options.entries) ? options.entries : []), options].map(({ customResolver }) => customResolver &&\n                typeof customResolver === 'object' &&\n                typeof customResolver.buildStart === 'function' &&\n                customResolver.buildStart.call(this, inputOptions)));\n        },\n        resolveId(importee, importer, resolveOptions) {\n            if (!importer) {\n                return null;\n            }\n            // First match is supposed to be the correct one\n            const matchedEntry = entries.find((entry) => matches$1(entry.find, importee));\n            if (!matchedEntry) {\n                return null;\n            }\n            const updatedId = importee.replace(matchedEntry.find, matchedEntry.replacement);\n            if (matchedEntry.resolverFunction) {\n                return matchedEntry.resolverFunction.call(this, updatedId, importer, resolveOptions);\n            }\n            return this.resolve(updatedId, importer, Object.assign({ skipSelf: true }, resolveOptions)).then((resolved) => resolved || { id: updatedId });\n        }\n    };\n}\n\nvar picomatch$4 = {exports: {}};\n\nvar utils$k = {};\n\nconst path$m = require$$0$4;\nconst WIN_SLASH = '\\\\\\\\/';\nconst WIN_NO_SLASH = `[^${WIN_SLASH}]`;\n\n/**\n * Posix glob regex\n */\n\nconst DOT_LITERAL = '\\\\.';\nconst PLUS_LITERAL = '\\\\+';\nconst QMARK_LITERAL = '\\\\?';\nconst SLASH_LITERAL = '\\\\/';\nconst ONE_CHAR = '(?=.)';\nconst QMARK = '[^/]';\nconst END_ANCHOR = `(?:${SLASH_LITERAL}|$)`;\nconst START_ANCHOR = `(?:^|${SLASH_LITERAL})`;\nconst DOTS_SLASH = `${DOT_LITERAL}{1,2}${END_ANCHOR}`;\nconst NO_DOT = `(?!${DOT_LITERAL})`;\nconst NO_DOTS = `(?!${START_ANCHOR}${DOTS_SLASH})`;\nconst NO_DOT_SLASH = `(?!${DOT_LITERAL}{0,1}${END_ANCHOR})`;\nconst NO_DOTS_SLASH = `(?!${DOTS_SLASH})`;\nconst QMARK_NO_DOT = `[^.${SLASH_LITERAL}]`;\nconst STAR$1 = `${QMARK}*?`;\n\nconst POSIX_CHARS = {\n  DOT_LITERAL,\n  PLUS_LITERAL,\n  QMARK_LITERAL,\n  SLASH_LITERAL,\n  ONE_CHAR,\n  QMARK,\n  END_ANCHOR,\n  DOTS_SLASH,\n  NO_DOT,\n  NO_DOTS,\n  NO_DOT_SLASH,\n  NO_DOTS_SLASH,\n  QMARK_NO_DOT,\n  STAR: STAR$1,\n  START_ANCHOR\n};\n\n/**\n * Windows glob regex\n */\n\nconst WINDOWS_CHARS = {\n  ...POSIX_CHARS,\n\n  SLASH_LITERAL: `[${WIN_SLASH}]`,\n  QMARK: WIN_NO_SLASH,\n  STAR: `${WIN_NO_SLASH}*?`,\n  DOTS_SLASH: `${DOT_LITERAL}{1,2}(?:[${WIN_SLASH}]|$)`,\n  NO_DOT: `(?!${DOT_LITERAL})`,\n  NO_DOTS: `(?!(?:^|[${WIN_SLASH}])${DOT_LITERAL}{1,2}(?:[${WIN_SLASH}]|$))`,\n  NO_DOT_SLASH: `(?!${DOT_LITERAL}{0,1}(?:[${WIN_SLASH}]|$))`,\n  NO_DOTS_SLASH: `(?!${DOT_LITERAL}{1,2}(?:[${WIN_SLASH}]|$))`,\n  QMARK_NO_DOT: `[^.${WIN_SLASH}]`,\n  START_ANCHOR: `(?:^|[${WIN_SLASH}])`,\n  END_ANCHOR: `(?:[${WIN_SLASH}]|$)`\n};\n\n/**\n * POSIX Bracket Regex\n */\n\nconst POSIX_REGEX_SOURCE$1 = {\n  alnum: 'a-zA-Z0-9',\n  alpha: 'a-zA-Z',\n  ascii: '\\\\x00-\\\\x7F',\n  blank: ' \\\\t',\n  cntrl: '\\\\x00-\\\\x1F\\\\x7F',\n  digit: '0-9',\n  graph: '\\\\x21-\\\\x7E',\n  lower: 'a-z',\n  print: '\\\\x20-\\\\x7E ',\n  punct: '\\\\-!\"#$%&\\'()\\\\*+,./:;<=>?@[\\\\]^_`{|}~',\n  space: ' \\\\t\\\\r\\\\n\\\\v\\\\f',\n  upper: 'A-Z',\n  word: 'A-Za-z0-9_',\n  xdigit: 'A-Fa-f0-9'\n};\n\nvar constants$6 = {\n  MAX_LENGTH: 1024 * 64,\n  POSIX_REGEX_SOURCE: POSIX_REGEX_SOURCE$1,\n\n  // regular expressions\n  REGEX_BACKSLASH: /\\\\(?![*+?^${}(|)[\\]])/g,\n  REGEX_NON_SPECIAL_CHARS: /^[^@![\\].,$*+?^{}()|\\\\/]+/,\n  REGEX_SPECIAL_CHARS: /[-*+?.^${}(|)[\\]]/,\n  REGEX_SPECIAL_CHARS_BACKREF: /(\\\\?)((\\W)(\\3*))/g,\n  REGEX_SPECIAL_CHARS_GLOBAL: /([-*+?.^${}(|)[\\]])/g,\n  REGEX_REMOVE_BACKSLASH: /(?:\\[.*?[^\\\\]\\]|\\\\(?=.))/g,\n\n  // Replace globs with equivalent patterns to reduce parsing time.\n  REPLACEMENTS: {\n    '***': '*',\n    '**/**': '**',\n    '**/**/**': '**'\n  },\n\n  // Digits\n  CHAR_0: 48, /* 0 */\n  CHAR_9: 57, /* 9 */\n\n  // Alphabet chars.\n  CHAR_UPPERCASE_A: 65, /* A */\n  CHAR_LOWERCASE_A: 97, /* a */\n  CHAR_UPPERCASE_Z: 90, /* Z */\n  CHAR_LOWERCASE_Z: 122, /* z */\n\n  CHAR_LEFT_PARENTHESES: 40, /* ( */\n  CHAR_RIGHT_PARENTHESES: 41, /* ) */\n\n  CHAR_ASTERISK: 42, /* * */\n\n  // Non-alphabetic chars.\n  CHAR_AMPERSAND: 38, /* & */\n  CHAR_AT: 64, /* @ */\n  CHAR_BACKWARD_SLASH: 92, /* \\ */\n  CHAR_CARRIAGE_RETURN: 13, /* \\r */\n  CHAR_CIRCUMFLEX_ACCENT: 94, /* ^ */\n  CHAR_COLON: 58, /* : */\n  CHAR_COMMA: 44, /* , */\n  CHAR_DOT: 46, /* . */\n  CHAR_DOUBLE_QUOTE: 34, /* \" */\n  CHAR_EQUAL: 61, /* = */\n  CHAR_EXCLAMATION_MARK: 33, /* ! */\n  CHAR_FORM_FEED: 12, /* \\f */\n  CHAR_FORWARD_SLASH: 47, /* / */\n  CHAR_GRAVE_ACCENT: 96, /* ` */\n  CHAR_HASH: 35, /* # */\n  CHAR_HYPHEN_MINUS: 45, /* - */\n  CHAR_LEFT_ANGLE_BRACKET: 60, /* < */\n  CHAR_LEFT_CURLY_BRACE: 123, /* { */\n  CHAR_LEFT_SQUARE_BRACKET: 91, /* [ */\n  CHAR_LINE_FEED: 10, /* \\n */\n  CHAR_NO_BREAK_SPACE: 160, /* \\u00A0 */\n  CHAR_PERCENT: 37, /* % */\n  CHAR_PLUS: 43, /* + */\n  CHAR_QUESTION_MARK: 63, /* ? */\n  CHAR_RIGHT_ANGLE_BRACKET: 62, /* > */\n  CHAR_RIGHT_CURLY_BRACE: 125, /* } */\n  CHAR_RIGHT_SQUARE_BRACKET: 93, /* ] */\n  CHAR_SEMICOLON: 59, /* ; */\n  CHAR_SINGLE_QUOTE: 39, /* ' */\n  CHAR_SPACE: 32, /*   */\n  CHAR_TAB: 9, /* \\t */\n  CHAR_UNDERSCORE: 95, /* _ */\n  CHAR_VERTICAL_LINE: 124, /* | */\n  CHAR_ZERO_WIDTH_NOBREAK_SPACE: 65279, /* \\uFEFF */\n\n  SEP: path$m.sep,\n\n  /**\n   * Create EXTGLOB_CHARS\n   */\n\n  extglobChars(chars) {\n    return {\n      '!': { type: 'negate', open: '(?:(?!(?:', close: `))${chars.STAR})` },\n      '?': { type: 'qmark', open: '(?:', close: ')?' },\n      '+': { type: 'plus', open: '(?:', close: ')+' },\n      '*': { type: 'star', open: '(?:', close: ')*' },\n      '@': { type: 'at', open: '(?:', close: ')' }\n    };\n  },\n\n  /**\n   * Create GLOB_CHARS\n   */\n\n  globChars(win32) {\n    return win32 === true ? WINDOWS_CHARS : POSIX_CHARS;\n  }\n};\n\n(function (exports) {\n\n\tconst path = require$$0$4;\n\tconst win32 = process.platform === 'win32';\n\tconst {\n\t  REGEX_BACKSLASH,\n\t  REGEX_REMOVE_BACKSLASH,\n\t  REGEX_SPECIAL_CHARS,\n\t  REGEX_SPECIAL_CHARS_GLOBAL\n\t} = constants$6;\n\n\texports.isObject = val => val !== null && typeof val === 'object' && !Array.isArray(val);\n\texports.hasRegexChars = str => REGEX_SPECIAL_CHARS.test(str);\n\texports.isRegexChar = str => str.length === 1 && exports.hasRegexChars(str);\n\texports.escapeRegex = str => str.replace(REGEX_SPECIAL_CHARS_GLOBAL, '\\\\$1');\n\texports.toPosixSlashes = str => str.replace(REGEX_BACKSLASH, '/');\n\n\texports.removeBackslashes = str => {\n\t  return str.replace(REGEX_REMOVE_BACKSLASH, match => {\n\t    return match === '\\\\' ? '' : match;\n\t  });\n\t};\n\n\texports.supportsLookbehinds = () => {\n\t  const segs = process.version.slice(1).split('.').map(Number);\n\t  if (segs.length === 3 && segs[0] >= 9 || (segs[0] === 8 && segs[1] >= 10)) {\n\t    return true;\n\t  }\n\t  return false;\n\t};\n\n\texports.isWindows = options => {\n\t  if (options && typeof options.windows === 'boolean') {\n\t    return options.windows;\n\t  }\n\t  return win32 === true || path.sep === '\\\\';\n\t};\n\n\texports.escapeLast = (input, char, lastIdx) => {\n\t  const idx = input.lastIndexOf(char, lastIdx);\n\t  if (idx === -1) return input;\n\t  if (input[idx - 1] === '\\\\') return exports.escapeLast(input, char, idx - 1);\n\t  return `${input.slice(0, idx)}\\\\${input.slice(idx)}`;\n\t};\n\n\texports.removePrefix = (input, state = {}) => {\n\t  let output = input;\n\t  if (output.startsWith('./')) {\n\t    output = output.slice(2);\n\t    state.prefix = './';\n\t  }\n\t  return output;\n\t};\n\n\texports.wrapOutput = (input, state = {}, options = {}) => {\n\t  const prepend = options.contains ? '' : '^';\n\t  const append = options.contains ? '' : '$';\n\n\t  let output = `${prepend}(?:${input})${append}`;\n\t  if (state.negated === true) {\n\t    output = `(?:^(?!${output}).*$)`;\n\t  }\n\t  return output;\n\t};\n} (utils$k));\n\nconst utils$j = utils$k;\nconst {\n  CHAR_ASTERISK,             /* * */\n  CHAR_AT,                   /* @ */\n  CHAR_BACKWARD_SLASH,       /* \\ */\n  CHAR_COMMA: CHAR_COMMA$1,                /* , */\n  CHAR_DOT: CHAR_DOT$1,                  /* . */\n  CHAR_EXCLAMATION_MARK,     /* ! */\n  CHAR_FORWARD_SLASH,        /* / */\n  CHAR_LEFT_CURLY_BRACE: CHAR_LEFT_CURLY_BRACE$1,     /* { */\n  CHAR_LEFT_PARENTHESES: CHAR_LEFT_PARENTHESES$1,     /* ( */\n  CHAR_LEFT_SQUARE_BRACKET: CHAR_LEFT_SQUARE_BRACKET$1,  /* [ */\n  CHAR_PLUS,                 /* + */\n  CHAR_QUESTION_MARK,        /* ? */\n  CHAR_RIGHT_CURLY_BRACE: CHAR_RIGHT_CURLY_BRACE$1,    /* } */\n  CHAR_RIGHT_PARENTHESES: CHAR_RIGHT_PARENTHESES$1,    /* ) */\n  CHAR_RIGHT_SQUARE_BRACKET: CHAR_RIGHT_SQUARE_BRACKET$1  /* ] */\n} = constants$6;\n\nconst isPathSeparator = code => {\n  return code === CHAR_FORWARD_SLASH || code === CHAR_BACKWARD_SLASH;\n};\n\nconst depth = token => {\n  if (token.isPrefix !== true) {\n    token.depth = token.isGlobstar ? Infinity : 1;\n  }\n};\n\n/**\n * Quickly scans a glob pattern and returns an object with a handful of\n * useful properties, like `isGlob`, `path` (the leading non-glob, if it exists),\n * `glob` (the actual pattern), `negated` (true if the path starts with `!` but not\n * with `!(`) and `negatedExtglob` (true if the path starts with `!(`).\n *\n * ```js\n * const pm = require('picomatch');\n * console.log(pm.scan('foo/bar/*.js'));\n * { isGlob: true, input: 'foo/bar/*.js', base: 'foo/bar', glob: '*.js' }\n * ```\n * @param {String} `str`\n * @param {Object} `options`\n * @return {Object} Returns an object with tokens and regex source string.\n * @api public\n */\n\nconst scan$2 = (input, options) => {\n  const opts = options || {};\n\n  const length = input.length - 1;\n  const scanToEnd = opts.parts === true || opts.scanToEnd === true;\n  const slashes = [];\n  const tokens = [];\n  const parts = [];\n\n  let str = input;\n  let index = -1;\n  let start = 0;\n  let lastIndex = 0;\n  let isBrace = false;\n  let isBracket = false;\n  let isGlob = false;\n  let isExtglob = false;\n  let isGlobstar = false;\n  let braceEscaped = false;\n  let backslashes = false;\n  let negated = false;\n  let negatedExtglob = false;\n  let finished = false;\n  let braces = 0;\n  let prev;\n  let code;\n  let token = { value: '', depth: 0, isGlob: false };\n\n  const eos = () => index >= length;\n  const peek = () => str.charCodeAt(index + 1);\n  const advance = () => {\n    prev = code;\n    return str.charCodeAt(++index);\n  };\n\n  while (index < length) {\n    code = advance();\n    let next;\n\n    if (code === CHAR_BACKWARD_SLASH) {\n      backslashes = token.backslashes = true;\n      code = advance();\n\n      if (code === CHAR_LEFT_CURLY_BRACE$1) {\n        braceEscaped = true;\n      }\n      continue;\n    }\n\n    if (braceEscaped === true || code === CHAR_LEFT_CURLY_BRACE$1) {\n      braces++;\n\n      while (eos() !== true && (code = advance())) {\n        if (code === CHAR_BACKWARD_SLASH) {\n          backslashes = token.backslashes = true;\n          advance();\n          continue;\n        }\n\n        if (code === CHAR_LEFT_CURLY_BRACE$1) {\n          braces++;\n          continue;\n        }\n\n        if (braceEscaped !== true && code === CHAR_DOT$1 && (code = advance()) === CHAR_DOT$1) {\n          isBrace = token.isBrace = true;\n          isGlob = token.isGlob = true;\n          finished = true;\n\n          if (scanToEnd === true) {\n            continue;\n          }\n\n          break;\n        }\n\n        if (braceEscaped !== true && code === CHAR_COMMA$1) {\n          isBrace = token.isBrace = true;\n          isGlob = token.isGlob = true;\n          finished = true;\n\n          if (scanToEnd === true) {\n            continue;\n          }\n\n          break;\n        }\n\n        if (code === CHAR_RIGHT_CURLY_BRACE$1) {\n          braces--;\n\n          if (braces === 0) {\n            braceEscaped = false;\n            isBrace = token.isBrace = true;\n            finished = true;\n            break;\n          }\n        }\n      }\n\n      if (scanToEnd === true) {\n        continue;\n      }\n\n      break;\n    }\n\n    if (code === CHAR_FORWARD_SLASH) {\n      slashes.push(index);\n      tokens.push(token);\n      token = { value: '', depth: 0, isGlob: false };\n\n      if (finished === true) continue;\n      if (prev === CHAR_DOT$1 && index === (start + 1)) {\n        start += 2;\n        continue;\n      }\n\n      lastIndex = index + 1;\n      continue;\n    }\n\n    if (opts.noext !== true) {\n      const isExtglobChar = code === CHAR_PLUS\n        || code === CHAR_AT\n        || code === CHAR_ASTERISK\n        || code === CHAR_QUESTION_MARK\n        || code === CHAR_EXCLAMATION_MARK;\n\n      if (isExtglobChar === true && peek() === CHAR_LEFT_PARENTHESES$1) {\n        isGlob = token.isGlob = true;\n        isExtglob = token.isExtglob = true;\n        finished = true;\n        if (code === CHAR_EXCLAMATION_MARK && index === start) {\n          negatedExtglob = true;\n        }\n\n        if (scanToEnd === true) {\n          while (eos() !== true && (code = advance())) {\n            if (code === CHAR_BACKWARD_SLASH) {\n              backslashes = token.backslashes = true;\n              code = advance();\n              continue;\n            }\n\n            if (code === CHAR_RIGHT_PARENTHESES$1) {\n              isGlob = token.isGlob = true;\n              finished = true;\n              break;\n            }\n          }\n          continue;\n        }\n        break;\n      }\n    }\n\n    if (code === CHAR_ASTERISK) {\n      if (prev === CHAR_ASTERISK) isGlobstar = token.isGlobstar = true;\n      isGlob = token.isGlob = true;\n      finished = true;\n\n      if (scanToEnd === true) {\n        continue;\n      }\n      break;\n    }\n\n    if (code === CHAR_QUESTION_MARK) {\n      isGlob = token.isGlob = true;\n      finished = true;\n\n      if (scanToEnd === true) {\n        continue;\n      }\n      break;\n    }\n\n    if (code === CHAR_LEFT_SQUARE_BRACKET$1) {\n      while (eos() !== true && (next = advance())) {\n        if (next === CHAR_BACKWARD_SLASH) {\n          backslashes = token.backslashes = true;\n          advance();\n          continue;\n        }\n\n        if (next === CHAR_RIGHT_SQUARE_BRACKET$1) {\n          isBracket = token.isBracket = true;\n          isGlob = token.isGlob = true;\n          finished = true;\n          break;\n        }\n      }\n\n      if (scanToEnd === true) {\n        continue;\n      }\n\n      break;\n    }\n\n    if (opts.nonegate !== true && code === CHAR_EXCLAMATION_MARK && index === start) {\n      negated = token.negated = true;\n      start++;\n      continue;\n    }\n\n    if (opts.noparen !== true && code === CHAR_LEFT_PARENTHESES$1) {\n      isGlob = token.isGlob = true;\n\n      if (scanToEnd === true) {\n        while (eos() !== true && (code = advance())) {\n          if (code === CHAR_LEFT_PARENTHESES$1) {\n            backslashes = token.backslashes = true;\n            code = advance();\n            continue;\n          }\n\n          if (code === CHAR_RIGHT_PARENTHESES$1) {\n            finished = true;\n            break;\n          }\n        }\n        continue;\n      }\n      break;\n    }\n\n    if (isGlob === true) {\n      finished = true;\n\n      if (scanToEnd === true) {\n        continue;\n      }\n\n      break;\n    }\n  }\n\n  if (opts.noext === true) {\n    isExtglob = false;\n    isGlob = false;\n  }\n\n  let base = str;\n  let prefix = '';\n  let glob = '';\n\n  if (start > 0) {\n    prefix = str.slice(0, start);\n    str = str.slice(start);\n    lastIndex -= start;\n  }\n\n  if (base && isGlob === true && lastIndex > 0) {\n    base = str.slice(0, lastIndex);\n    glob = str.slice(lastIndex);\n  } else if (isGlob === true) {\n    base = '';\n    glob = str;\n  } else {\n    base = str;\n  }\n\n  if (base && base !== '' && base !== '/' && base !== str) {\n    if (isPathSeparator(base.charCodeAt(base.length - 1))) {\n      base = base.slice(0, -1);\n    }\n  }\n\n  if (opts.unescape === true) {\n    if (glob) glob = utils$j.removeBackslashes(glob);\n\n    if (base && backslashes === true) {\n      base = utils$j.removeBackslashes(base);\n    }\n  }\n\n  const state = {\n    prefix,\n    input,\n    start,\n    base,\n    glob,\n    isBrace,\n    isBracket,\n    isGlob,\n    isExtglob,\n    isGlobstar,\n    negated,\n    negatedExtglob\n  };\n\n  if (opts.tokens === true) {\n    state.maxDepth = 0;\n    if (!isPathSeparator(code)) {\n      tokens.push(token);\n    }\n    state.tokens = tokens;\n  }\n\n  if (opts.parts === true || opts.tokens === true) {\n    let prevIndex;\n\n    for (let idx = 0; idx < slashes.length; idx++) {\n      const n = prevIndex ? prevIndex + 1 : start;\n      const i = slashes[idx];\n      const value = input.slice(n, i);\n      if (opts.tokens) {\n        if (idx === 0 && start !== 0) {\n          tokens[idx].isPrefix = true;\n          tokens[idx].value = prefix;\n        } else {\n          tokens[idx].value = value;\n        }\n        depth(tokens[idx]);\n        state.maxDepth += tokens[idx].depth;\n      }\n      if (idx !== 0 || value !== '') {\n        parts.push(value);\n      }\n      prevIndex = i;\n    }\n\n    if (prevIndex && prevIndex + 1 < input.length) {\n      const value = input.slice(prevIndex + 1);\n      parts.push(value);\n\n      if (opts.tokens) {\n        tokens[tokens.length - 1].value = value;\n        depth(tokens[tokens.length - 1]);\n        state.maxDepth += tokens[tokens.length - 1].depth;\n      }\n    }\n\n    state.slashes = slashes;\n    state.parts = parts;\n  }\n\n  return state;\n};\n\nvar scan_1 = scan$2;\n\nconst constants$5 = constants$6;\nconst utils$i = utils$k;\n\n/**\n * Constants\n */\n\nconst {\n  MAX_LENGTH: MAX_LENGTH$1,\n  POSIX_REGEX_SOURCE,\n  REGEX_NON_SPECIAL_CHARS,\n  REGEX_SPECIAL_CHARS_BACKREF,\n  REPLACEMENTS\n} = constants$5;\n\n/**\n * Helpers\n */\n\nconst expandRange = (args, options) => {\n  if (typeof options.expandRange === 'function') {\n    return options.expandRange(...args, options);\n  }\n\n  args.sort();\n  const value = `[${args.join('-')}]`;\n\n  return value;\n};\n\n/**\n * Create the message for a syntax error\n */\n\nconst syntaxError$1 = (type, char) => {\n  return `Missing ${type}: \"${char}\" - use \"\\\\\\\\${char}\" to match literal characters`;\n};\n\n/**\n * Parse the given input string.\n * @param {String} input\n * @param {Object} options\n * @return {Object}\n */\n\nconst parse$j = (input, options) => {\n  if (typeof input !== 'string') {\n    throw new TypeError('Expected a string');\n  }\n\n  input = REPLACEMENTS[input] || input;\n\n  const opts = { ...options };\n  const max = typeof opts.maxLength === 'number' ? Math.min(MAX_LENGTH$1, opts.maxLength) : MAX_LENGTH$1;\n\n  let len = input.length;\n  if (len > max) {\n    throw new SyntaxError(`Input length: ${len}, exceeds maximum allowed length: ${max}`);\n  }\n\n  const bos = { type: 'bos', value: '', output: opts.prepend || '' };\n  const tokens = [bos];\n\n  const capture = opts.capture ? '' : '?:';\n  const win32 = utils$i.isWindows(options);\n\n  // create constants based on platform, for windows or posix\n  const PLATFORM_CHARS = constants$5.globChars(win32);\n  const EXTGLOB_CHARS = constants$5.extglobChars(PLATFORM_CHARS);\n\n  const {\n    DOT_LITERAL,\n    PLUS_LITERAL,\n    SLASH_LITERAL,\n    ONE_CHAR,\n    DOTS_SLASH,\n    NO_DOT,\n    NO_DOT_SLASH,\n    NO_DOTS_SLASH,\n    QMARK,\n    QMARK_NO_DOT,\n    STAR,\n    START_ANCHOR\n  } = PLATFORM_CHARS;\n\n  const globstar = opts => {\n    return `(${capture}(?:(?!${START_ANCHOR}${opts.dot ? DOTS_SLASH : DOT_LITERAL}).)*?)`;\n  };\n\n  const nodot = opts.dot ? '' : NO_DOT;\n  const qmarkNoDot = opts.dot ? QMARK : QMARK_NO_DOT;\n  let star = opts.bash === true ? globstar(opts) : STAR;\n\n  if (opts.capture) {\n    star = `(${star})`;\n  }\n\n  // minimatch options support\n  if (typeof opts.noext === 'boolean') {\n    opts.noextglob = opts.noext;\n  }\n\n  const state = {\n    input,\n    index: -1,\n    start: 0,\n    dot: opts.dot === true,\n    consumed: '',\n    output: '',\n    prefix: '',\n    backtrack: false,\n    negated: false,\n    brackets: 0,\n    braces: 0,\n    parens: 0,\n    quotes: 0,\n    globstar: false,\n    tokens\n  };\n\n  input = utils$i.removePrefix(input, state);\n  len = input.length;\n\n  const extglobs = [];\n  const braces = [];\n  const stack = [];\n  let prev = bos;\n  let value;\n\n  /**\n   * Tokenizing helpers\n   */\n\n  const eos = () => state.index === len - 1;\n  const peek = state.peek = (n = 1) => input[state.index + n];\n  const advance = state.advance = () => input[++state.index] || '';\n  const remaining = () => input.slice(state.index + 1);\n  const consume = (value = '', num = 0) => {\n    state.consumed += value;\n    state.index += num;\n  };\n\n  const append = token => {\n    state.output += token.output != null ? token.output : token.value;\n    consume(token.value);\n  };\n\n  const negate = () => {\n    let count = 1;\n\n    while (peek() === '!' && (peek(2) !== '(' || peek(3) === '?')) {\n      advance();\n      state.start++;\n      count++;\n    }\n\n    if (count % 2 === 0) {\n      return false;\n    }\n\n    state.negated = true;\n    state.start++;\n    return true;\n  };\n\n  const increment = type => {\n    state[type]++;\n    stack.push(type);\n  };\n\n  const decrement = type => {\n    state[type]--;\n    stack.pop();\n  };\n\n  /**\n   * Push tokens onto the tokens array. This helper speeds up\n   * tokenizing by 1) helping us avoid backtracking as much as possible,\n   * and 2) helping us avoid creating extra tokens when consecutive\n   * characters are plain text. This improves performance and simplifies\n   * lookbehinds.\n   */\n\n  const push = tok => {\n    if (prev.type === 'globstar') {\n      const isBrace = state.braces > 0 && (tok.type === 'comma' || tok.type === 'brace');\n      const isExtglob = tok.extglob === true || (extglobs.length && (tok.type === 'pipe' || tok.type === 'paren'));\n\n      if (tok.type !== 'slash' && tok.type !== 'paren' && !isBrace && !isExtglob) {\n        state.output = state.output.slice(0, -prev.output.length);\n        prev.type = 'star';\n        prev.value = '*';\n        prev.output = star;\n        state.output += prev.output;\n      }\n    }\n\n    if (extglobs.length && tok.type !== 'paren') {\n      extglobs[extglobs.length - 1].inner += tok.value;\n    }\n\n    if (tok.value || tok.output) append(tok);\n    if (prev && prev.type === 'text' && tok.type === 'text') {\n      prev.value += tok.value;\n      prev.output = (prev.output || '') + tok.value;\n      return;\n    }\n\n    tok.prev = prev;\n    tokens.push(tok);\n    prev = tok;\n  };\n\n  const extglobOpen = (type, value) => {\n    const token = { ...EXTGLOB_CHARS[value], conditions: 1, inner: '' };\n\n    token.prev = prev;\n    token.parens = state.parens;\n    token.output = state.output;\n    const output = (opts.capture ? '(' : '') + token.open;\n\n    increment('parens');\n    push({ type, value, output: state.output ? '' : ONE_CHAR });\n    push({ type: 'paren', extglob: true, value: advance(), output });\n    extglobs.push(token);\n  };\n\n  const extglobClose = token => {\n    let output = token.close + (opts.capture ? ')' : '');\n    let rest;\n\n    if (token.type === 'negate') {\n      let extglobStar = star;\n\n      if (token.inner && token.inner.length > 1 && token.inner.includes('/')) {\n        extglobStar = globstar(opts);\n      }\n\n      if (extglobStar !== star || eos() || /^\\)+$/.test(remaining())) {\n        output = token.close = `)$))${extglobStar}`;\n      }\n\n      if (token.inner.includes('*') && (rest = remaining()) && /^\\.[^\\\\/.]+$/.test(rest)) {\n        // Any non-magical string (`.ts`) or even nested expression (`.{ts,tsx}`) can follow after the closing parenthesis.\n        // In this case, we need to parse the string and use it in the output of the original pattern.\n        // Suitable patterns: `/!(*.d).ts`, `/!(*.d).{ts,tsx}`, `**/!(*-dbg).@(js)`.\n        //\n        // Disabling the `fastpaths` option due to a problem with parsing strings as `.ts` in the pattern like `**/!(*.d).ts`.\n        const expression = parse$j(rest, { ...options, fastpaths: false }).output;\n\n        output = token.close = `)${expression})${extglobStar})`;\n      }\n\n      if (token.prev.type === 'bos') {\n        state.negatedExtglob = true;\n      }\n    }\n\n    push({ type: 'paren', extglob: true, value, output });\n    decrement('parens');\n  };\n\n  /**\n   * Fast paths\n   */\n\n  if (opts.fastpaths !== false && !/(^[*!]|[/()[\\]{}\"])/.test(input)) {\n    let backslashes = false;\n\n    let output = input.replace(REGEX_SPECIAL_CHARS_BACKREF, (m, esc, chars, first, rest, index) => {\n      if (first === '\\\\') {\n        backslashes = true;\n        return m;\n      }\n\n      if (first === '?') {\n        if (esc) {\n          return esc + first + (rest ? QMARK.repeat(rest.length) : '');\n        }\n        if (index === 0) {\n          return qmarkNoDot + (rest ? QMARK.repeat(rest.length) : '');\n        }\n        return QMARK.repeat(chars.length);\n      }\n\n      if (first === '.') {\n        return DOT_LITERAL.repeat(chars.length);\n      }\n\n      if (first === '*') {\n        if (esc) {\n          return esc + first + (rest ? star : '');\n        }\n        return star;\n      }\n      return esc ? m : `\\\\${m}`;\n    });\n\n    if (backslashes === true) {\n      if (opts.unescape === true) {\n        output = output.replace(/\\\\/g, '');\n      } else {\n        output = output.replace(/\\\\+/g, m => {\n          return m.length % 2 === 0 ? '\\\\\\\\' : (m ? '\\\\' : '');\n        });\n      }\n    }\n\n    if (output === input && opts.contains === true) {\n      state.output = input;\n      return state;\n    }\n\n    state.output = utils$i.wrapOutput(output, state, options);\n    return state;\n  }\n\n  /**\n   * Tokenize input until we reach end-of-string\n   */\n\n  while (!eos()) {\n    value = advance();\n\n    if (value === '\\u0000') {\n      continue;\n    }\n\n    /**\n     * Escaped characters\n     */\n\n    if (value === '\\\\') {\n      const next = peek();\n\n      if (next === '/' && opts.bash !== true) {\n        continue;\n      }\n\n      if (next === '.' || next === ';') {\n        continue;\n      }\n\n      if (!next) {\n        value += '\\\\';\n        push({ type: 'text', value });\n        continue;\n      }\n\n      // collapse slashes to reduce potential for exploits\n      const match = /^\\\\+/.exec(remaining());\n      let slashes = 0;\n\n      if (match && match[0].length > 2) {\n        slashes = match[0].length;\n        state.index += slashes;\n        if (slashes % 2 !== 0) {\n          value += '\\\\';\n        }\n      }\n\n      if (opts.unescape === true) {\n        value = advance();\n      } else {\n        value += advance();\n      }\n\n      if (state.brackets === 0) {\n        push({ type: 'text', value });\n        continue;\n      }\n    }\n\n    /**\n     * If we're inside a regex character class, continue\n     * until we reach the closing bracket.\n     */\n\n    if (state.brackets > 0 && (value !== ']' || prev.value === '[' || prev.value === '[^')) {\n      if (opts.posix !== false && value === ':') {\n        const inner = prev.value.slice(1);\n        if (inner.includes('[')) {\n          prev.posix = true;\n\n          if (inner.includes(':')) {\n            const idx = prev.value.lastIndexOf('[');\n            const pre = prev.value.slice(0, idx);\n            const rest = prev.value.slice(idx + 2);\n            const posix = POSIX_REGEX_SOURCE[rest];\n            if (posix) {\n              prev.value = pre + posix;\n              state.backtrack = true;\n              advance();\n\n              if (!bos.output && tokens.indexOf(prev) === 1) {\n                bos.output = ONE_CHAR;\n              }\n              continue;\n            }\n          }\n        }\n      }\n\n      if ((value === '[' && peek() !== ':') || (value === '-' && peek() === ']')) {\n        value = `\\\\${value}`;\n      }\n\n      if (value === ']' && (prev.value === '[' || prev.value === '[^')) {\n        value = `\\\\${value}`;\n      }\n\n      if (opts.posix === true && value === '!' && prev.value === '[') {\n        value = '^';\n      }\n\n      prev.value += value;\n      append({ value });\n      continue;\n    }\n\n    /**\n     * If we're inside a quoted string, continue\n     * until we reach the closing double quote.\n     */\n\n    if (state.quotes === 1 && value !== '\"') {\n      value = utils$i.escapeRegex(value);\n      prev.value += value;\n      append({ value });\n      continue;\n    }\n\n    /**\n     * Double quotes\n     */\n\n    if (value === '\"') {\n      state.quotes = state.quotes === 1 ? 0 : 1;\n      if (opts.keepQuotes === true) {\n        push({ type: 'text', value });\n      }\n      continue;\n    }\n\n    /**\n     * Parentheses\n     */\n\n    if (value === '(') {\n      increment('parens');\n      push({ type: 'paren', value });\n      continue;\n    }\n\n    if (value === ')') {\n      if (state.parens === 0 && opts.strictBrackets === true) {\n        throw new SyntaxError(syntaxError$1('opening', '('));\n      }\n\n      const extglob = extglobs[extglobs.length - 1];\n      if (extglob && state.parens === extglob.parens + 1) {\n        extglobClose(extglobs.pop());\n        continue;\n      }\n\n      push({ type: 'paren', value, output: state.parens ? ')' : '\\\\)' });\n      decrement('parens');\n      continue;\n    }\n\n    /**\n     * Square brackets\n     */\n\n    if (value === '[') {\n      if (opts.nobracket === true || !remaining().includes(']')) {\n        if (opts.nobracket !== true && opts.strictBrackets === true) {\n          throw new SyntaxError(syntaxError$1('closing', ']'));\n        }\n\n        value = `\\\\${value}`;\n      } else {\n        increment('brackets');\n      }\n\n      push({ type: 'bracket', value });\n      continue;\n    }\n\n    if (value === ']') {\n      if (opts.nobracket === true || (prev && prev.type === 'bracket' && prev.value.length === 1)) {\n        push({ type: 'text', value, output: `\\\\${value}` });\n        continue;\n      }\n\n      if (state.brackets === 0) {\n        if (opts.strictBrackets === true) {\n          throw new SyntaxError(syntaxError$1('opening', '['));\n        }\n\n        push({ type: 'text', value, output: `\\\\${value}` });\n        continue;\n      }\n\n      decrement('brackets');\n\n      const prevValue = prev.value.slice(1);\n      if (prev.posix !== true && prevValue[0] === '^' && !prevValue.includes('/')) {\n        value = `/${value}`;\n      }\n\n      prev.value += value;\n      append({ value });\n\n      // when literal brackets are explicitly disabled\n      // assume we should match with a regex character class\n      if (opts.literalBrackets === false || utils$i.hasRegexChars(prevValue)) {\n        continue;\n      }\n\n      const escaped = utils$i.escapeRegex(prev.value);\n      state.output = state.output.slice(0, -prev.value.length);\n\n      // when literal brackets are explicitly enabled\n      // assume we should escape the brackets to match literal characters\n      if (opts.literalBrackets === true) {\n        state.output += escaped;\n        prev.value = escaped;\n        continue;\n      }\n\n      // when the user specifies nothing, try to match both\n      prev.value = `(${capture}${escaped}|${prev.value})`;\n      state.output += prev.value;\n      continue;\n    }\n\n    /**\n     * Braces\n     */\n\n    if (value === '{' && opts.nobrace !== true) {\n      increment('braces');\n\n      const open = {\n        type: 'brace',\n        value,\n        output: '(',\n        outputIndex: state.output.length,\n        tokensIndex: state.tokens.length\n      };\n\n      braces.push(open);\n      push(open);\n      continue;\n    }\n\n    if (value === '}') {\n      const brace = braces[braces.length - 1];\n\n      if (opts.nobrace === true || !brace) {\n        push({ type: 'text', value, output: value });\n        continue;\n      }\n\n      let output = ')';\n\n      if (brace.dots === true) {\n        const arr = tokens.slice();\n        const range = [];\n\n        for (let i = arr.length - 1; i >= 0; i--) {\n          tokens.pop();\n          if (arr[i].type === 'brace') {\n            break;\n          }\n          if (arr[i].type !== 'dots') {\n            range.unshift(arr[i].value);\n          }\n        }\n\n        output = expandRange(range, opts);\n        state.backtrack = true;\n      }\n\n      if (brace.comma !== true && brace.dots !== true) {\n        const out = state.output.slice(0, brace.outputIndex);\n        const toks = state.tokens.slice(brace.tokensIndex);\n        brace.value = brace.output = '\\\\{';\n        value = output = '\\\\}';\n        state.output = out;\n        for (const t of toks) {\n          state.output += (t.output || t.value);\n        }\n      }\n\n      push({ type: 'brace', value, output });\n      decrement('braces');\n      braces.pop();\n      continue;\n    }\n\n    /**\n     * Pipes\n     */\n\n    if (value === '|') {\n      if (extglobs.length > 0) {\n        extglobs[extglobs.length - 1].conditions++;\n      }\n      push({ type: 'text', value });\n      continue;\n    }\n\n    /**\n     * Commas\n     */\n\n    if (value === ',') {\n      let output = value;\n\n      const brace = braces[braces.length - 1];\n      if (brace && stack[stack.length - 1] === 'braces') {\n        brace.comma = true;\n        output = '|';\n      }\n\n      push({ type: 'comma', value, output });\n      continue;\n    }\n\n    /**\n     * Slashes\n     */\n\n    if (value === '/') {\n      // if the beginning of the glob is \"./\", advance the start\n      // to the current index, and don't add the \"./\" characters\n      // to the state. This greatly simplifies lookbehinds when\n      // checking for BOS characters like \"!\" and \".\" (not \"./\")\n      if (prev.type === 'dot' && state.index === state.start + 1) {\n        state.start = state.index + 1;\n        state.consumed = '';\n        state.output = '';\n        tokens.pop();\n        prev = bos; // reset \"prev\" to the first token\n        continue;\n      }\n\n      push({ type: 'slash', value, output: SLASH_LITERAL });\n      continue;\n    }\n\n    /**\n     * Dots\n     */\n\n    if (value === '.') {\n      if (state.braces > 0 && prev.type === 'dot') {\n        if (prev.value === '.') prev.output = DOT_LITERAL;\n        const brace = braces[braces.length - 1];\n        prev.type = 'dots';\n        prev.output += value;\n        prev.value += value;\n        brace.dots = true;\n        continue;\n      }\n\n      if ((state.braces + state.parens) === 0 && prev.type !== 'bos' && prev.type !== 'slash') {\n        push({ type: 'text', value, output: DOT_LITERAL });\n        continue;\n      }\n\n      push({ type: 'dot', value, output: DOT_LITERAL });\n      continue;\n    }\n\n    /**\n     * Question marks\n     */\n\n    if (value === '?') {\n      const isGroup = prev && prev.value === '(';\n      if (!isGroup && opts.noextglob !== true && peek() === '(' && peek(2) !== '?') {\n        extglobOpen('qmark', value);\n        continue;\n      }\n\n      if (prev && prev.type === 'paren') {\n        const next = peek();\n        let output = value;\n\n        if (next === '<' && !utils$i.supportsLookbehinds()) {\n          throw new Error('Node.js v10 or higher is required for regex lookbehinds');\n        }\n\n        if ((prev.value === '(' && !/[!=<:]/.test(next)) || (next === '<' && !/<([!=]|\\w+>)/.test(remaining()))) {\n          output = `\\\\${value}`;\n        }\n\n        push({ type: 'text', value, output });\n        continue;\n      }\n\n      if (opts.dot !== true && (prev.type === 'slash' || prev.type === 'bos')) {\n        push({ type: 'qmark', value, output: QMARK_NO_DOT });\n        continue;\n      }\n\n      push({ type: 'qmark', value, output: QMARK });\n      continue;\n    }\n\n    /**\n     * Exclamation\n     */\n\n    if (value === '!') {\n      if (opts.noextglob !== true && peek() === '(') {\n        if (peek(2) !== '?' || !/[!=<:]/.test(peek(3))) {\n          extglobOpen('negate', value);\n          continue;\n        }\n      }\n\n      if (opts.nonegate !== true && state.index === 0) {\n        negate();\n        continue;\n      }\n    }\n\n    /**\n     * Plus\n     */\n\n    if (value === '+') {\n      if (opts.noextglob !== true && peek() === '(' && peek(2) !== '?') {\n        extglobOpen('plus', value);\n        continue;\n      }\n\n      if ((prev && prev.value === '(') || opts.regex === false) {\n        push({ type: 'plus', value, output: PLUS_LITERAL });\n        continue;\n      }\n\n      if ((prev && (prev.type === 'bracket' || prev.type === 'paren' || prev.type === 'brace')) || state.parens > 0) {\n        push({ type: 'plus', value });\n        continue;\n      }\n\n      push({ type: 'plus', value: PLUS_LITERAL });\n      continue;\n    }\n\n    /**\n     * Plain text\n     */\n\n    if (value === '@') {\n      if (opts.noextglob !== true && peek() === '(' && peek(2) !== '?') {\n        push({ type: 'at', extglob: true, value, output: '' });\n        continue;\n      }\n\n      push({ type: 'text', value });\n      continue;\n    }\n\n    /**\n     * Plain text\n     */\n\n    if (value !== '*') {\n      if (value === '$' || value === '^') {\n        value = `\\\\${value}`;\n      }\n\n      const match = REGEX_NON_SPECIAL_CHARS.exec(remaining());\n      if (match) {\n        value += match[0];\n        state.index += match[0].length;\n      }\n\n      push({ type: 'text', value });\n      continue;\n    }\n\n    /**\n     * Stars\n     */\n\n    if (prev && (prev.type === 'globstar' || prev.star === true)) {\n      prev.type = 'star';\n      prev.star = true;\n      prev.value += value;\n      prev.output = star;\n      state.backtrack = true;\n      state.globstar = true;\n      consume(value);\n      continue;\n    }\n\n    let rest = remaining();\n    if (opts.noextglob !== true && /^\\([^?]/.test(rest)) {\n      extglobOpen('star', value);\n      continue;\n    }\n\n    if (prev.type === 'star') {\n      if (opts.noglobstar === true) {\n        consume(value);\n        continue;\n      }\n\n      const prior = prev.prev;\n      const before = prior.prev;\n      const isStart = prior.type === 'slash' || prior.type === 'bos';\n      const afterStar = before && (before.type === 'star' || before.type === 'globstar');\n\n      if (opts.bash === true && (!isStart || (rest[0] && rest[0] !== '/'))) {\n        push({ type: 'star', value, output: '' });\n        continue;\n      }\n\n      const isBrace = state.braces > 0 && (prior.type === 'comma' || prior.type === 'brace');\n      const isExtglob = extglobs.length && (prior.type === 'pipe' || prior.type === 'paren');\n      if (!isStart && prior.type !== 'paren' && !isBrace && !isExtglob) {\n        push({ type: 'star', value, output: '' });\n        continue;\n      }\n\n      // strip consecutive `/**/`\n      while (rest.slice(0, 3) === '/**') {\n        const after = input[state.index + 4];\n        if (after && after !== '/') {\n          break;\n        }\n        rest = rest.slice(3);\n        consume('/**', 3);\n      }\n\n      if (prior.type === 'bos' && eos()) {\n        prev.type = 'globstar';\n        prev.value += value;\n        prev.output = globstar(opts);\n        state.output = prev.output;\n        state.globstar = true;\n        consume(value);\n        continue;\n      }\n\n      if (prior.type === 'slash' && prior.prev.type !== 'bos' && !afterStar && eos()) {\n        state.output = state.output.slice(0, -(prior.output + prev.output).length);\n        prior.output = `(?:${prior.output}`;\n\n        prev.type = 'globstar';\n        prev.output = globstar(opts) + (opts.strictSlashes ? ')' : '|$)');\n        prev.value += value;\n        state.globstar = true;\n        state.output += prior.output + prev.output;\n        consume(value);\n        continue;\n      }\n\n      if (prior.type === 'slash' && prior.prev.type !== 'bos' && rest[0] === '/') {\n        const end = rest[1] !== void 0 ? '|$' : '';\n\n        state.output = state.output.slice(0, -(prior.output + prev.output).length);\n        prior.output = `(?:${prior.output}`;\n\n        prev.type = 'globstar';\n        prev.output = `${globstar(opts)}${SLASH_LITERAL}|${SLASH_LITERAL}${end})`;\n        prev.value += value;\n\n        state.output += prior.output + prev.output;\n        state.globstar = true;\n\n        consume(value + advance());\n\n        push({ type: 'slash', value: '/', output: '' });\n        continue;\n      }\n\n      if (prior.type === 'bos' && rest[0] === '/') {\n        prev.type = 'globstar';\n        prev.value += value;\n        prev.output = `(?:^|${SLASH_LITERAL}|${globstar(opts)}${SLASH_LITERAL})`;\n        state.output = prev.output;\n        state.globstar = true;\n        consume(value + advance());\n        push({ type: 'slash', value: '/', output: '' });\n        continue;\n      }\n\n      // remove single star from output\n      state.output = state.output.slice(0, -prev.output.length);\n\n      // reset previous token to globstar\n      prev.type = 'globstar';\n      prev.output = globstar(opts);\n      prev.value += value;\n\n      // reset output with globstar\n      state.output += prev.output;\n      state.globstar = true;\n      consume(value);\n      continue;\n    }\n\n    const token = { type: 'star', value, output: star };\n\n    if (opts.bash === true) {\n      token.output = '.*?';\n      if (prev.type === 'bos' || prev.type === 'slash') {\n        token.output = nodot + token.output;\n      }\n      push(token);\n      continue;\n    }\n\n    if (prev && (prev.type === 'bracket' || prev.type === 'paren') && opts.regex === true) {\n      token.output = value;\n      push(token);\n      continue;\n    }\n\n    if (state.index === state.start || prev.type === 'slash' || prev.type === 'dot') {\n      if (prev.type === 'dot') {\n        state.output += NO_DOT_SLASH;\n        prev.output += NO_DOT_SLASH;\n\n      } else if (opts.dot === true) {\n        state.output += NO_DOTS_SLASH;\n        prev.output += NO_DOTS_SLASH;\n\n      } else {\n        state.output += nodot;\n        prev.output += nodot;\n      }\n\n      if (peek() !== '*') {\n        state.output += ONE_CHAR;\n        prev.output += ONE_CHAR;\n      }\n    }\n\n    push(token);\n  }\n\n  while (state.brackets > 0) {\n    if (opts.strictBrackets === true) throw new SyntaxError(syntaxError$1('closing', ']'));\n    state.output = utils$i.escapeLast(state.output, '[');\n    decrement('brackets');\n  }\n\n  while (state.parens > 0) {\n    if (opts.strictBrackets === true) throw new SyntaxError(syntaxError$1('closing', ')'));\n    state.output = utils$i.escapeLast(state.output, '(');\n    decrement('parens');\n  }\n\n  while (state.braces > 0) {\n    if (opts.strictBrackets === true) throw new SyntaxError(syntaxError$1('closing', '}'));\n    state.output = utils$i.escapeLast(state.output, '{');\n    decrement('braces');\n  }\n\n  if (opts.strictSlashes !== true && (prev.type === 'star' || prev.type === 'bracket')) {\n    push({ type: 'maybe_slash', value: '', output: `${SLASH_LITERAL}?` });\n  }\n\n  // rebuild the output if we had to backtrack at any point\n  if (state.backtrack === true) {\n    state.output = '';\n\n    for (const token of state.tokens) {\n      state.output += token.output != null ? token.output : token.value;\n\n      if (token.suffix) {\n        state.output += token.suffix;\n      }\n    }\n  }\n\n  return state;\n};\n\n/**\n * Fast paths for creating regular expressions for common glob patterns.\n * This can significantly speed up processing and has very little downside\n * impact when none of the fast paths match.\n */\n\nparse$j.fastpaths = (input, options) => {\n  const opts = { ...options };\n  const max = typeof opts.maxLength === 'number' ? Math.min(MAX_LENGTH$1, opts.maxLength) : MAX_LENGTH$1;\n  const len = input.length;\n  if (len > max) {\n    throw new SyntaxError(`Input length: ${len}, exceeds maximum allowed length: ${max}`);\n  }\n\n  input = REPLACEMENTS[input] || input;\n  const win32 = utils$i.isWindows(options);\n\n  // create constants based on platform, for windows or posix\n  const {\n    DOT_LITERAL,\n    SLASH_LITERAL,\n    ONE_CHAR,\n    DOTS_SLASH,\n    NO_DOT,\n    NO_DOTS,\n    NO_DOTS_SLASH,\n    STAR,\n    START_ANCHOR\n  } = constants$5.globChars(win32);\n\n  const nodot = opts.dot ? NO_DOTS : NO_DOT;\n  const slashDot = opts.dot ? NO_DOTS_SLASH : NO_DOT;\n  const capture = opts.capture ? '' : '?:';\n  const state = { negated: false, prefix: '' };\n  let star = opts.bash === true ? '.*?' : STAR;\n\n  if (opts.capture) {\n    star = `(${star})`;\n  }\n\n  const globstar = opts => {\n    if (opts.noglobstar === true) return star;\n    return `(${capture}(?:(?!${START_ANCHOR}${opts.dot ? DOTS_SLASH : DOT_LITERAL}).)*?)`;\n  };\n\n  const create = str => {\n    switch (str) {\n      case '*':\n        return `${nodot}${ONE_CHAR}${star}`;\n\n      case '.*':\n        return `${DOT_LITERAL}${ONE_CHAR}${star}`;\n\n      case '*.*':\n        return `${nodot}${star}${DOT_LITERAL}${ONE_CHAR}${star}`;\n\n      case '*/*':\n        return `${nodot}${star}${SLASH_LITERAL}${ONE_CHAR}${slashDot}${star}`;\n\n      case '**':\n        return nodot + globstar(opts);\n\n      case '**/*':\n        return `(?:${nodot}${globstar(opts)}${SLASH_LITERAL})?${slashDot}${ONE_CHAR}${star}`;\n\n      case '**/*.*':\n        return `(?:${nodot}${globstar(opts)}${SLASH_LITERAL})?${slashDot}${star}${DOT_LITERAL}${ONE_CHAR}${star}`;\n\n      case '**/.*':\n        return `(?:${nodot}${globstar(opts)}${SLASH_LITERAL})?${DOT_LITERAL}${ONE_CHAR}${star}`;\n\n      default: {\n        const match = /^(.*?)\\.(\\w+)$/.exec(str);\n        if (!match) return;\n\n        const source = create(match[1]);\n        if (!source) return;\n\n        return source + DOT_LITERAL + match[2];\n      }\n    }\n  };\n\n  const output = utils$i.removePrefix(input, state);\n  let source = create(output);\n\n  if (source && opts.strictSlashes !== true) {\n    source += `${SLASH_LITERAL}?`;\n  }\n\n  return source;\n};\n\nvar parse_1$2 = parse$j;\n\nconst path$l = require$$0$4;\nconst scan$1 = scan_1;\nconst parse$i = parse_1$2;\nconst utils$h = utils$k;\nconst constants$4 = constants$6;\nconst isObject$4 = val => val && typeof val === 'object' && !Array.isArray(val);\n\n/**\n * Creates a matcher function from one or more glob patterns. The\n * returned function takes a string to match as its first argument,\n * and returns true if the string is a match. The returned matcher\n * function also takes a boolean as the second argument that, when true,\n * returns an object with additional information.\n *\n * ```js\n * const picomatch = require('picomatch');\n * // picomatch(glob[, options]);\n *\n * const isMatch = picomatch('*.!(*a)');\n * console.log(isMatch('a.a')); //=> false\n * console.log(isMatch('a.b')); //=> true\n * ```\n * @name picomatch\n * @param {String|Array} `globs` One or more glob patterns.\n * @param {Object=} `options`\n * @return {Function=} Returns a matcher function.\n * @api public\n */\n\nconst picomatch$3 = (glob, options, returnState = false) => {\n  if (Array.isArray(glob)) {\n    const fns = glob.map(input => picomatch$3(input, options, returnState));\n    const arrayMatcher = str => {\n      for (const isMatch of fns) {\n        const state = isMatch(str);\n        if (state) return state;\n      }\n      return false;\n    };\n    return arrayMatcher;\n  }\n\n  const isState = isObject$4(glob) && glob.tokens && glob.input;\n\n  if (glob === '' || (typeof glob !== 'string' && !isState)) {\n    throw new TypeError('Expected pattern to be a non-empty string');\n  }\n\n  const opts = options || {};\n  const posix = utils$h.isWindows(options);\n  const regex = isState\n    ? picomatch$3.compileRe(glob, options)\n    : picomatch$3.makeRe(glob, options, false, true);\n\n  const state = regex.state;\n  delete regex.state;\n\n  let isIgnored = () => false;\n  if (opts.ignore) {\n    const ignoreOpts = { ...options, ignore: null, onMatch: null, onResult: null };\n    isIgnored = picomatch$3(opts.ignore, ignoreOpts, returnState);\n  }\n\n  const matcher = (input, returnObject = false) => {\n    const { isMatch, match, output } = picomatch$3.test(input, regex, options, { glob, posix });\n    const result = { glob, state, regex, posix, input, output, match, isMatch };\n\n    if (typeof opts.onResult === 'function') {\n      opts.onResult(result);\n    }\n\n    if (isMatch === false) {\n      result.isMatch = false;\n      return returnObject ? result : false;\n    }\n\n    if (isIgnored(input)) {\n      if (typeof opts.onIgnore === 'function') {\n        opts.onIgnore(result);\n      }\n      result.isMatch = false;\n      return returnObject ? result : false;\n    }\n\n    if (typeof opts.onMatch === 'function') {\n      opts.onMatch(result);\n    }\n    return returnObject ? result : true;\n  };\n\n  if (returnState) {\n    matcher.state = state;\n  }\n\n  return matcher;\n};\n\n/**\n * Test `input` with the given `regex`. This is used by the main\n * `picomatch()` function to test the input string.\n *\n * ```js\n * const picomatch = require('picomatch');\n * // picomatch.test(input, regex[, options]);\n *\n * console.log(picomatch.test('foo/bar', /^(?:([^/]*?)\\/([^/]*?))$/));\n * // { isMatch: true, match: [ 'foo/', 'foo', 'bar' ], output: 'foo/bar' }\n * ```\n * @param {String} `input` String to test.\n * @param {RegExp} `regex`\n * @return {Object} Returns an object with matching info.\n * @api public\n */\n\npicomatch$3.test = (input, regex, options, { glob, posix } = {}) => {\n  if (typeof input !== 'string') {\n    throw new TypeError('Expected input to be a string');\n  }\n\n  if (input === '') {\n    return { isMatch: false, output: '' };\n  }\n\n  const opts = options || {};\n  const format = opts.format || (posix ? utils$h.toPosixSlashes : null);\n  let match = input === glob;\n  let output = (match && format) ? format(input) : input;\n\n  if (match === false) {\n    output = format ? format(input) : input;\n    match = output === glob;\n  }\n\n  if (match === false || opts.capture === true) {\n    if (opts.matchBase === true || opts.basename === true) {\n      match = picomatch$3.matchBase(input, regex, options, posix);\n    } else {\n      match = regex.exec(output);\n    }\n  }\n\n  return { isMatch: Boolean(match), match, output };\n};\n\n/**\n * Match the basename of a filepath.\n *\n * ```js\n * const picomatch = require('picomatch');\n * // picomatch.matchBase(input, glob[, options]);\n * console.log(picomatch.matchBase('foo/bar.js', '*.js'); // true\n * ```\n * @param {String} `input` String to test.\n * @param {RegExp|String} `glob` Glob pattern or regex created by [.makeRe](#makeRe).\n * @return {Boolean}\n * @api public\n */\n\npicomatch$3.matchBase = (input, glob, options, posix = utils$h.isWindows(options)) => {\n  const regex = glob instanceof RegExp ? glob : picomatch$3.makeRe(glob, options);\n  return regex.test(path$l.basename(input));\n};\n\n/**\n * Returns true if **any** of the given glob `patterns` match the specified `string`.\n *\n * ```js\n * const picomatch = require('picomatch');\n * // picomatch.isMatch(string, patterns[, options]);\n *\n * console.log(picomatch.isMatch('a.a', ['b.*', '*.a'])); //=> true\n * console.log(picomatch.isMatch('a.a', 'b.*')); //=> false\n * ```\n * @param {String|Array} str The string to test.\n * @param {String|Array} patterns One or more glob patterns to use for matching.\n * @param {Object} [options] See available [options](#options).\n * @return {Boolean} Returns true if any patterns match `str`\n * @api public\n */\n\npicomatch$3.isMatch = (str, patterns, options) => picomatch$3(patterns, options)(str);\n\n/**\n * Parse a glob pattern to create the source string for a regular\n * expression.\n *\n * ```js\n * const picomatch = require('picomatch');\n * const result = picomatch.parse(pattern[, options]);\n * ```\n * @param {String} `pattern`\n * @param {Object} `options`\n * @return {Object} Returns an object with useful properties and output to be used as a regex source string.\n * @api public\n */\n\npicomatch$3.parse = (pattern, options) => {\n  if (Array.isArray(pattern)) return pattern.map(p => picomatch$3.parse(p, options));\n  return parse$i(pattern, { ...options, fastpaths: false });\n};\n\n/**\n * Scan a glob pattern to separate the pattern into segments.\n *\n * ```js\n * const picomatch = require('picomatch');\n * // picomatch.scan(input[, options]);\n *\n * const result = picomatch.scan('!./foo/*.js');\n * console.log(result);\n * { prefix: '!./',\n *   input: '!./foo/*.js',\n *   start: 3,\n *   base: 'foo',\n *   glob: '*.js',\n *   isBrace: false,\n *   isBracket: false,\n *   isGlob: true,\n *   isExtglob: false,\n *   isGlobstar: false,\n *   negated: true }\n * ```\n * @param {String} `input` Glob pattern to scan.\n * @param {Object} `options`\n * @return {Object} Returns an object with\n * @api public\n */\n\npicomatch$3.scan = (input, options) => scan$1(input, options);\n\n/**\n * Compile a regular expression from the `state` object returned by the\n * [parse()](#parse) method.\n *\n * @param {Object} `state`\n * @param {Object} `options`\n * @param {Boolean} `returnOutput` Intended for implementors, this argument allows you to return the raw output from the parser.\n * @param {Boolean} `returnState` Adds the state to a `state` property on the returned regex. Useful for implementors and debugging.\n * @return {RegExp}\n * @api public\n */\n\npicomatch$3.compileRe = (state, options, returnOutput = false, returnState = false) => {\n  if (returnOutput === true) {\n    return state.output;\n  }\n\n  const opts = options || {};\n  const prepend = opts.contains ? '' : '^';\n  const append = opts.contains ? '' : '$';\n\n  let source = `${prepend}(?:${state.output})${append}`;\n  if (state && state.negated === true) {\n    source = `^(?!${source}).*$`;\n  }\n\n  const regex = picomatch$3.toRegex(source, options);\n  if (returnState === true) {\n    regex.state = state;\n  }\n\n  return regex;\n};\n\n/**\n * Create a regular expression from a parsed glob pattern.\n *\n * ```js\n * const picomatch = require('picomatch');\n * const state = picomatch.parse('*.js');\n * // picomatch.compileRe(state[, options]);\n *\n * console.log(picomatch.compileRe(state));\n * //=> /^(?:(?!\\.)(?=.)[^/]*?\\.js)$/\n * ```\n * @param {String} `state` The object returned from the `.parse` method.\n * @param {Object} `options`\n * @param {Boolean} `returnOutput` Implementors may use this argument to return the compiled output, instead of a regular expression. This is not exposed on the options to prevent end-users from mutating the result.\n * @param {Boolean} `returnState` Implementors may use this argument to return the state from the parsed glob with the returned regular expression.\n * @return {RegExp} Returns a regex created from the given pattern.\n * @api public\n */\n\npicomatch$3.makeRe = (input, options = {}, returnOutput = false, returnState = false) => {\n  if (!input || typeof input !== 'string') {\n    throw new TypeError('Expected a non-empty string');\n  }\n\n  let parsed = { negated: false, fastpaths: true };\n\n  if (options.fastpaths !== false && (input[0] === '.' || input[0] === '*')) {\n    parsed.output = parse$i.fastpaths(input, options);\n  }\n\n  if (!parsed.output) {\n    parsed = parse$i(input, options);\n  }\n\n  return picomatch$3.compileRe(parsed, options, returnOutput, returnState);\n};\n\n/**\n * Create a regular expression from the given regex source string.\n *\n * ```js\n * const picomatch = require('picomatch');\n * // picomatch.toRegex(source[, options]);\n *\n * const { output } = picomatch.parse('*.js');\n * console.log(picomatch.toRegex(output));\n * //=> /^(?:(?!\\.)(?=.)[^/]*?\\.js)$/\n * ```\n * @param {String} `source` Regular expression source string.\n * @param {Object} `options`\n * @return {RegExp}\n * @api public\n */\n\npicomatch$3.toRegex = (source, options) => {\n  try {\n    const opts = options || {};\n    return new RegExp(source, opts.flags || (opts.nocase ? 'i' : ''));\n  } catch (err) {\n    if (options && options.debug === true) throw err;\n    return /$^/;\n  }\n};\n\n/**\n * Picomatch constants.\n * @return {Object}\n */\n\npicomatch$3.constants = constants$4;\n\n/**\n * Expose \"picomatch\"\n */\n\nvar picomatch_1 = picomatch$3;\n\n(function (module) {\n\n\tmodule.exports = picomatch_1;\n} (picomatch$4));\n\nvar pm = /*@__PURE__*/getDefaultExportFromCjs(picomatch$4.exports);\n\nfunction walk$4(ast, { enter, leave }) {\n\treturn visit$2(ast, null, enter, leave);\n}\n\nlet should_skip = false;\nlet should_remove = false;\nlet replacement = null;\nconst context = {\n\tskip: () => should_skip = true,\n\tremove: () => should_remove = true,\n\treplace: (node) => replacement = node\n};\n\nfunction replace(parent, prop, index, node) {\n\tif (parent) {\n\t\tif (index !== null) {\n\t\t\tparent[prop][index] = node;\n\t\t} else {\n\t\t\tparent[prop] = node;\n\t\t}\n\t}\n}\n\nfunction remove(parent, prop, index) {\n\tif (parent) {\n\t\tif (index !== null) {\n\t\t\tparent[prop].splice(index, 1);\n\t\t} else {\n\t\t\tdelete parent[prop];\n\t\t}\n\t}\n}\n\nfunction visit$2(\n\tnode,\n\tparent,\n\tenter,\n\tleave,\n\tprop,\n\tindex\n) {\n\tif (node) {\n\t\tif (enter) {\n\t\t\tconst _should_skip = should_skip;\n\t\t\tconst _should_remove = should_remove;\n\t\t\tconst _replacement = replacement;\n\t\t\tshould_skip = false;\n\t\t\tshould_remove = false;\n\t\t\treplacement = null;\n\n\t\t\tenter.call(context, node, parent, prop, index);\n\n\t\t\tif (replacement) {\n\t\t\t\tnode = replacement;\n\t\t\t\treplace(parent, prop, index, node);\n\t\t\t}\n\n\t\t\tif (should_remove) {\n\t\t\t\tremove(parent, prop, index);\n\t\t\t}\n\n\t\t\tconst skipped = should_skip;\n\t\t\tconst removed = should_remove;\n\n\t\t\tshould_skip = _should_skip;\n\t\t\tshould_remove = _should_remove;\n\t\t\treplacement = _replacement;\n\n\t\t\tif (skipped) return node;\n\t\t\tif (removed) return null;\n\t\t}\n\n\t\tfor (const key in node) {\n\t\t\tconst value = (node )[key];\n\n\t\t\tif (typeof value !== 'object') {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\telse if (Array.isArray(value)) {\n\t\t\t\tfor (let j = 0, k = 0; j < value.length; j += 1, k += 1) {\n\t\t\t\t\tif (value[j] !== null && typeof value[j].type === 'string') {\n\t\t\t\t\t\tif (!visit$2(value[j], node, enter, leave, key, k)) {\n\t\t\t\t\t\t\t// removed\n\t\t\t\t\t\t\tj--;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\telse if (value !== null && typeof value.type === 'string') {\n\t\t\t\tvisit$2(value, node, enter, leave, key, null);\n\t\t\t}\n\t\t}\n\n\t\tif (leave) {\n\t\t\tconst _replacement = replacement;\n\t\t\tconst _should_remove = should_remove;\n\t\t\treplacement = null;\n\t\t\tshould_remove = false;\n\n\t\t\tleave.call(context, node, parent, prop, index);\n\n\t\t\tif (replacement) {\n\t\t\t\tnode = replacement;\n\t\t\t\treplace(parent, prop, index, node);\n\t\t\t}\n\n\t\t\tif (should_remove) {\n\t\t\t\tremove(parent, prop, index);\n\t\t\t}\n\n\t\t\tconst removed = should_remove;\n\n\t\t\treplacement = _replacement;\n\t\t\tshould_remove = _should_remove;\n\n\t\t\tif (removed) return null;\n\t\t}\n\t}\n\n\treturn node;\n}\n\nconst extractors = {\n    ArrayPattern(names, param) {\n        for (const element of param.elements) {\n            if (element)\n                extractors[element.type](names, element);\n        }\n    },\n    AssignmentPattern(names, param) {\n        extractors[param.left.type](names, param.left);\n    },\n    Identifier(names, param) {\n        names.push(param.name);\n    },\n    MemberExpression() { },\n    ObjectPattern(names, param) {\n        for (const prop of param.properties) {\n            // @ts-ignore Typescript reports that this is not a valid type\n            if (prop.type === 'RestElement') {\n                extractors.RestElement(names, prop);\n            }\n            else {\n                extractors[prop.value.type](names, prop.value);\n            }\n        }\n    },\n    RestElement(names, param) {\n        extractors[param.argument.type](names, param.argument);\n    }\n};\nconst extractAssignedNames = function extractAssignedNames(param) {\n    const names = [];\n    extractors[param.type](names, param);\n    return names;\n};\n\nconst blockDeclarations = {\n    const: true,\n    let: true\n};\nclass Scope$1 {\n    constructor(options = {}) {\n        this.parent = options.parent;\n        this.isBlockScope = !!options.block;\n        this.declarations = Object.create(null);\n        if (options.params) {\n            options.params.forEach((param) => {\n                extractAssignedNames(param).forEach((name) => {\n                    this.declarations[name] = true;\n                });\n            });\n        }\n    }\n    addDeclaration(node, isBlockDeclaration, isVar) {\n        if (!isBlockDeclaration && this.isBlockScope) {\n            // it's a `var` or function node, and this\n            // is a block scope, so we need to go up\n            this.parent.addDeclaration(node, isBlockDeclaration, isVar);\n        }\n        else if (node.id) {\n            extractAssignedNames(node.id).forEach((name) => {\n                this.declarations[name] = true;\n            });\n        }\n    }\n    contains(name) {\n        return this.declarations[name] || (this.parent ? this.parent.contains(name) : false);\n    }\n}\nconst attachScopes = function attachScopes(ast, propertyName = 'scope') {\n    let scope = new Scope$1();\n    walk$4(ast, {\n        enter(n, parent) {\n            const node = n;\n            // function foo () {...}\n            // class Foo {...}\n            if (/(Function|Class)Declaration/.test(node.type)) {\n                scope.addDeclaration(node, false, false);\n            }\n            // var foo = 1\n            if (node.type === 'VariableDeclaration') {\n                const { kind } = node;\n                const isBlockDeclaration = blockDeclarations[kind];\n                // don't add const/let declarations in the body of a for loop #113\n                const parentType = parent ? parent.type : '';\n                if (!(isBlockDeclaration && /ForOfStatement/.test(parentType))) {\n                    node.declarations.forEach((declaration) => {\n                        scope.addDeclaration(declaration, isBlockDeclaration, true);\n                    });\n                }\n            }\n            let newScope;\n            // create new function scope\n            if (/Function/.test(node.type)) {\n                const func = node;\n                newScope = new Scope$1({\n                    parent: scope,\n                    block: false,\n                    params: func.params\n                });\n                // named function expressions - the name is considered\n                // part of the function's scope\n                if (func.type === 'FunctionExpression' && func.id) {\n                    newScope.addDeclaration(func, false, false);\n                }\n            }\n            // create new block scope\n            if (node.type === 'BlockStatement' && !/Function/.test(parent.type)) {\n                newScope = new Scope$1({\n                    parent: scope,\n                    block: true\n                });\n            }\n            // catch clause has its own block scope\n            if (node.type === 'CatchClause') {\n                newScope = new Scope$1({\n                    parent: scope,\n                    params: node.param ? [node.param] : [],\n                    block: true\n                });\n            }\n            if (newScope) {\n                Object.defineProperty(node, propertyName, {\n                    value: newScope,\n                    configurable: true\n                });\n                scope = newScope;\n            }\n        },\n        leave(n) {\n            const node = n;\n            if (node[propertyName])\n                scope = scope.parent;\n        }\n    });\n    return scope;\n};\n\n// Helper since Typescript can't detect readonly arrays with Array.isArray\nfunction isArray$3(arg) {\n    return Array.isArray(arg);\n}\nfunction ensureArray$1(thing) {\n    if (isArray$3(thing))\n        return thing;\n    if (thing == null)\n        return [];\n    return [thing];\n}\n\nfunction getMatcherString$1(id, resolutionBase) {\n    if (resolutionBase === false) {\n        return id;\n    }\n    // resolve('') is valid and will default to process.cwd()\n    const basePath = resolve$4(resolutionBase || '')\n        .split(sep)\n        .join('/')\n        // escape all possible (posix + win) path characters that might interfere with regex\n        .replace(/[-^$*+?.()|[\\]{}]/g, '\\\\$&');\n    // Note that we use posix.join because:\n    // 1. the basePath has been normalized to use /\n    // 2. the incoming glob (id) matcher, also uses /\n    // otherwise Node will force backslash (\\) on windows\n    return posix$1.join(basePath, id);\n}\nconst createFilter$2 = function createFilter(include, exclude, options) {\n    const resolutionBase = options && options.resolve;\n    const getMatcher = (id) => id instanceof RegExp\n        ? id\n        : {\n            test: (what) => {\n                // this refactor is a tad overly verbose but makes for easy debugging\n                const pattern = getMatcherString$1(id, resolutionBase);\n                const fn = pm(pattern, { dot: true });\n                const result = fn(what);\n                return result;\n            }\n        };\n    const includeMatchers = ensureArray$1(include).map(getMatcher);\n    const excludeMatchers = ensureArray$1(exclude).map(getMatcher);\n    return function result(id) {\n        if (typeof id !== 'string')\n            return false;\n        if (/\\0/.test(id))\n            return false;\n        const pathId = id.split(sep).join('/');\n        for (let i = 0; i < excludeMatchers.length; ++i) {\n            const matcher = excludeMatchers[i];\n            if (matcher.test(pathId))\n                return false;\n        }\n        for (let i = 0; i < includeMatchers.length; ++i) {\n            const matcher = includeMatchers[i];\n            if (matcher.test(pathId))\n                return true;\n        }\n        return !includeMatchers.length;\n    };\n};\n\nconst reservedWords$2 = 'break case class catch const continue debugger default delete do else export extends finally for function if import in instanceof let new return super switch this throw try typeof var void while with yield enum await implements package protected static interface private public';\nconst builtins$2 = 'arguments Infinity NaN undefined null true false eval uneval isFinite isNaN parseFloat parseInt decodeURI decodeURIComponent encodeURI encodeURIComponent escape unescape Object Function Boolean Symbol Error EvalError InternalError RangeError ReferenceError SyntaxError TypeError URIError Number Math Date String RegExp Array Int8Array Uint8Array Uint8ClampedArray Int16Array Uint16Array Int32Array Uint32Array Float32Array Float64Array Map Set WeakMap WeakSet SIMD ArrayBuffer DataView JSON Promise Generator GeneratorFunction Reflect Proxy Intl';\nconst forbiddenIdentifiers$1 = new Set(`${reservedWords$2} ${builtins$2}`.split(' '));\nforbiddenIdentifiers$1.add('');\nconst makeLegalIdentifier$1 = function makeLegalIdentifier(str) {\n    let identifier = str\n        .replace(/-(\\w)/g, (_, letter) => letter.toUpperCase())\n        .replace(/[^$_a-zA-Z0-9]/g, '_');\n    if (/\\d/.test(identifier[0]) || forbiddenIdentifiers$1.has(identifier)) {\n        identifier = `_${identifier}`;\n    }\n    return identifier || '_';\n};\n\nvar path$k = require$$0$4;\n\nvar commondir = function (basedir, relfiles) {\n    if (relfiles) {\n        var files = relfiles.map(function (r) {\n            return path$k.resolve(basedir, r);\n        });\n    }\n    else {\n        var files = basedir;\n    }\n    \n    var res = files.slice(1).reduce(function (ps, file) {\n        if (!file.match(/^([A-Za-z]:)?\\/|\\\\/)) {\n            throw new Error('relative path without a basedir');\n        }\n        \n        var xs = file.split(/\\/+|\\\\+/);\n        for (\n            var i = 0;\n            ps[i] === xs[i] && i < Math.min(ps.length, xs.length);\n            i++\n        );\n        return ps.slice(0, i);\n    }, files[0].split(/\\/+|\\\\+/));\n    \n    // Windows correctly handles paths with forward-slashes\n    return res.length > 1 ? res.join('/') : '/'\n};\n\nvar old$1 = {};\n\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar pathModule = require$$0$4;\nvar isWindows$5 = process.platform === 'win32';\nvar fs$k = require$$0__default;\n\n// JavaScript implementation of realpath, ported from node pre-v6\n\nvar DEBUG$1 = process.env.NODE_DEBUG && /fs/.test(process.env.NODE_DEBUG);\n\nfunction rethrow() {\n  // Only enable in debug mode. A backtrace uses ~1000 bytes of heap space and\n  // is fairly slow to generate.\n  var callback;\n  if (DEBUG$1) {\n    var backtrace = new Error;\n    callback = debugCallback;\n  } else\n    callback = missingCallback;\n\n  return callback;\n\n  function debugCallback(err) {\n    if (err) {\n      backtrace.message = err.message;\n      err = backtrace;\n      missingCallback(err);\n    }\n  }\n\n  function missingCallback(err) {\n    if (err) {\n      if (process.throwDeprecation)\n        throw err;  // Forgot a callback but don't know where? Use NODE_DEBUG=fs\n      else if (!process.noDeprecation) {\n        var msg = 'fs: missing callback ' + (err.stack || err.message);\n        if (process.traceDeprecation)\n          console.trace(msg);\n        else\n          console.error(msg);\n      }\n    }\n  }\n}\n\nfunction maybeCallback(cb) {\n  return typeof cb === 'function' ? cb : rethrow();\n}\n\n// Regexp that finds the next partion of a (partial) path\n// result is [base_with_slash, base], e.g. ['somedir/', 'somedir']\nif (isWindows$5) {\n  var nextPartRe = /(.*?)(?:[\\/\\\\]+|$)/g;\n} else {\n  var nextPartRe = /(.*?)(?:[\\/]+|$)/g;\n}\n\n// Regex to find the device root, including trailing slash. E.g. 'c:\\\\'.\nif (isWindows$5) {\n  var splitRootRe = /^(?:[a-zA-Z]:|[\\\\\\/]{2}[^\\\\\\/]+[\\\\\\/][^\\\\\\/]+)?[\\\\\\/]*/;\n} else {\n  var splitRootRe = /^[\\/]*/;\n}\n\nold$1.realpathSync = function realpathSync(p, cache) {\n  // make p is absolute\n  p = pathModule.resolve(p);\n\n  if (cache && Object.prototype.hasOwnProperty.call(cache, p)) {\n    return cache[p];\n  }\n\n  var original = p,\n      seenLinks = {},\n      knownHard = {};\n\n  // current character position in p\n  var pos;\n  // the partial path so far, including a trailing slash if any\n  var current;\n  // the partial path without a trailing slash (except when pointing at a root)\n  var base;\n  // the partial path scanned in the previous round, with slash\n  var previous;\n\n  start();\n\n  function start() {\n    // Skip over roots\n    var m = splitRootRe.exec(p);\n    pos = m[0].length;\n    current = m[0];\n    base = m[0];\n    previous = '';\n\n    // On windows, check that the root exists. On unix there is no need.\n    if (isWindows$5 && !knownHard[base]) {\n      fs$k.lstatSync(base);\n      knownHard[base] = true;\n    }\n  }\n\n  // walk down the path, swapping out linked pathparts for their real\n  // values\n  // NB: p.length changes.\n  while (pos < p.length) {\n    // find the next part\n    nextPartRe.lastIndex = pos;\n    var result = nextPartRe.exec(p);\n    previous = current;\n    current += result[0];\n    base = previous + result[1];\n    pos = nextPartRe.lastIndex;\n\n    // continue if not a symlink\n    if (knownHard[base] || (cache && cache[base] === base)) {\n      continue;\n    }\n\n    var resolvedLink;\n    if (cache && Object.prototype.hasOwnProperty.call(cache, base)) {\n      // some known symbolic link.  no need to stat again.\n      resolvedLink = cache[base];\n    } else {\n      var stat = fs$k.lstatSync(base);\n      if (!stat.isSymbolicLink()) {\n        knownHard[base] = true;\n        if (cache) cache[base] = base;\n        continue;\n      }\n\n      // read the link if it wasn't read before\n      // dev/ino always return 0 on windows, so skip the check.\n      var linkTarget = null;\n      if (!isWindows$5) {\n        var id = stat.dev.toString(32) + ':' + stat.ino.toString(32);\n        if (seenLinks.hasOwnProperty(id)) {\n          linkTarget = seenLinks[id];\n        }\n      }\n      if (linkTarget === null) {\n        fs$k.statSync(base);\n        linkTarget = fs$k.readlinkSync(base);\n      }\n      resolvedLink = pathModule.resolve(previous, linkTarget);\n      // track this, if given a cache.\n      if (cache) cache[base] = resolvedLink;\n      if (!isWindows$5) seenLinks[id] = linkTarget;\n    }\n\n    // resolve the link, then start over\n    p = pathModule.resolve(resolvedLink, p.slice(pos));\n    start();\n  }\n\n  if (cache) cache[original] = p;\n\n  return p;\n};\n\n\nold$1.realpath = function realpath(p, cache, cb) {\n  if (typeof cb !== 'function') {\n    cb = maybeCallback(cache);\n    cache = null;\n  }\n\n  // make p is absolute\n  p = pathModule.resolve(p);\n\n  if (cache && Object.prototype.hasOwnProperty.call(cache, p)) {\n    return process.nextTick(cb.bind(null, null, cache[p]));\n  }\n\n  var original = p,\n      seenLinks = {},\n      knownHard = {};\n\n  // current character position in p\n  var pos;\n  // the partial path so far, including a trailing slash if any\n  var current;\n  // the partial path without a trailing slash (except when pointing at a root)\n  var base;\n  // the partial path scanned in the previous round, with slash\n  var previous;\n\n  start();\n\n  function start() {\n    // Skip over roots\n    var m = splitRootRe.exec(p);\n    pos = m[0].length;\n    current = m[0];\n    base = m[0];\n    previous = '';\n\n    // On windows, check that the root exists. On unix there is no need.\n    if (isWindows$5 && !knownHard[base]) {\n      fs$k.lstat(base, function(err) {\n        if (err) return cb(err);\n        knownHard[base] = true;\n        LOOP();\n      });\n    } else {\n      process.nextTick(LOOP);\n    }\n  }\n\n  // walk down the path, swapping out linked pathparts for their real\n  // values\n  function LOOP() {\n    // stop if scanned past end of path\n    if (pos >= p.length) {\n      if (cache) cache[original] = p;\n      return cb(null, p);\n    }\n\n    // find the next part\n    nextPartRe.lastIndex = pos;\n    var result = nextPartRe.exec(p);\n    previous = current;\n    current += result[0];\n    base = previous + result[1];\n    pos = nextPartRe.lastIndex;\n\n    // continue if not a symlink\n    if (knownHard[base] || (cache && cache[base] === base)) {\n      return process.nextTick(LOOP);\n    }\n\n    if (cache && Object.prototype.hasOwnProperty.call(cache, base)) {\n      // known symbolic link.  no need to stat again.\n      return gotResolvedLink(cache[base]);\n    }\n\n    return fs$k.lstat(base, gotStat);\n  }\n\n  function gotStat(err, stat) {\n    if (err) return cb(err);\n\n    // if not a symlink, skip to the next path part\n    if (!stat.isSymbolicLink()) {\n      knownHard[base] = true;\n      if (cache) cache[base] = base;\n      return process.nextTick(LOOP);\n    }\n\n    // stat & read the link if not read before\n    // call gotTarget as soon as the link target is known\n    // dev/ino always return 0 on windows, so skip the check.\n    if (!isWindows$5) {\n      var id = stat.dev.toString(32) + ':' + stat.ino.toString(32);\n      if (seenLinks.hasOwnProperty(id)) {\n        return gotTarget(null, seenLinks[id], base);\n      }\n    }\n    fs$k.stat(base, function(err) {\n      if (err) return cb(err);\n\n      fs$k.readlink(base, function(err, target) {\n        if (!isWindows$5) seenLinks[id] = target;\n        gotTarget(err, target);\n      });\n    });\n  }\n\n  function gotTarget(err, target, base) {\n    if (err) return cb(err);\n\n    var resolvedLink = pathModule.resolve(previous, target);\n    if (cache) cache[base] = resolvedLink;\n    gotResolvedLink(resolvedLink);\n  }\n\n  function gotResolvedLink(resolvedLink) {\n    // resolve the link, then start over\n    p = pathModule.resolve(resolvedLink, p.slice(pos));\n    start();\n  }\n};\n\nvar fs_realpath = realpath$2;\nrealpath$2.realpath = realpath$2;\nrealpath$2.sync = realpathSync;\nrealpath$2.realpathSync = realpathSync;\nrealpath$2.monkeypatch = monkeypatch;\nrealpath$2.unmonkeypatch = unmonkeypatch;\n\nvar fs$j = require$$0__default;\nvar origRealpath = fs$j.realpath;\nvar origRealpathSync = fs$j.realpathSync;\n\nvar version$2 = process.version;\nvar ok = /^v[0-5]\\./.test(version$2);\nvar old = old$1;\n\nfunction newError (er) {\n  return er && er.syscall === 'realpath' && (\n    er.code === 'ELOOP' ||\n    er.code === 'ENOMEM' ||\n    er.code === 'ENAMETOOLONG'\n  )\n}\n\nfunction realpath$2 (p, cache, cb) {\n  if (ok) {\n    return origRealpath(p, cache, cb)\n  }\n\n  if (typeof cache === 'function') {\n    cb = cache;\n    cache = null;\n  }\n  origRealpath(p, cache, function (er, result) {\n    if (newError(er)) {\n      old.realpath(p, cache, cb);\n    } else {\n      cb(er, result);\n    }\n  });\n}\n\nfunction realpathSync (p, cache) {\n  if (ok) {\n    return origRealpathSync(p, cache)\n  }\n\n  try {\n    return origRealpathSync(p, cache)\n  } catch (er) {\n    if (newError(er)) {\n      return old.realpathSync(p, cache)\n    } else {\n      throw er\n    }\n  }\n}\n\nfunction monkeypatch () {\n  fs$j.realpath = realpath$2;\n  fs$j.realpathSync = realpathSync;\n}\n\nfunction unmonkeypatch () {\n  fs$j.realpath = origRealpath;\n  fs$j.realpathSync = origRealpathSync;\n}\n\nvar concatMap$1 = function (xs, fn) {\n    var res = [];\n    for (var i = 0; i < xs.length; i++) {\n        var x = fn(xs[i], i);\n        if (isArray$2(x)) res.push.apply(res, x);\n        else res.push(x);\n    }\n    return res;\n};\n\nvar isArray$2 = Array.isArray || function (xs) {\n    return Object.prototype.toString.call(xs) === '[object Array]';\n};\n\nvar balancedMatch = balanced$1;\nfunction balanced$1(a, b, str) {\n  if (a instanceof RegExp) a = maybeMatch(a, str);\n  if (b instanceof RegExp) b = maybeMatch(b, str);\n\n  var r = range$1(a, b, str);\n\n  return r && {\n    start: r[0],\n    end: r[1],\n    pre: str.slice(0, r[0]),\n    body: str.slice(r[0] + a.length, r[1]),\n    post: str.slice(r[1] + b.length)\n  };\n}\n\nfunction maybeMatch(reg, str) {\n  var m = str.match(reg);\n  return m ? m[0] : null;\n}\n\nbalanced$1.range = range$1;\nfunction range$1(a, b, str) {\n  var begs, beg, left, right, result;\n  var ai = str.indexOf(a);\n  var bi = str.indexOf(b, ai + 1);\n  var i = ai;\n\n  if (ai >= 0 && bi > 0) {\n    if(a===b) {\n      return [ai, bi];\n    }\n    begs = [];\n    left = str.length;\n\n    while (i >= 0 && !result) {\n      if (i == ai) {\n        begs.push(i);\n        ai = str.indexOf(a, i + 1);\n      } else if (begs.length == 1) {\n        result = [ begs.pop(), bi ];\n      } else {\n        beg = begs.pop();\n        if (beg < left) {\n          left = beg;\n          right = bi;\n        }\n\n        bi = str.indexOf(b, i + 1);\n      }\n\n      i = ai < bi && ai >= 0 ? ai : bi;\n    }\n\n    if (begs.length) {\n      result = [ left, right ];\n    }\n  }\n\n  return result;\n}\n\nvar concatMap = concatMap$1;\nvar balanced = balancedMatch;\n\nvar braceExpansion = expandTop;\n\nvar escSlash = '\\0SLASH'+Math.random()+'\\0';\nvar escOpen = '\\0OPEN'+Math.random()+'\\0';\nvar escClose = '\\0CLOSE'+Math.random()+'\\0';\nvar escComma = '\\0COMMA'+Math.random()+'\\0';\nvar escPeriod = '\\0PERIOD'+Math.random()+'\\0';\n\nfunction numeric(str) {\n  return parseInt(str, 10) == str\n    ? parseInt(str, 10)\n    : str.charCodeAt(0);\n}\n\nfunction escapeBraces(str) {\n  return str.split('\\\\\\\\').join(escSlash)\n            .split('\\\\{').join(escOpen)\n            .split('\\\\}').join(escClose)\n            .split('\\\\,').join(escComma)\n            .split('\\\\.').join(escPeriod);\n}\n\nfunction unescapeBraces(str) {\n  return str.split(escSlash).join('\\\\')\n            .split(escOpen).join('{')\n            .split(escClose).join('}')\n            .split(escComma).join(',')\n            .split(escPeriod).join('.');\n}\n\n\n// Basically just str.split(\",\"), but handling cases\n// where we have nested braced sections, which should be\n// treated as individual members, like {a,{b,c},d}\nfunction parseCommaParts(str) {\n  if (!str)\n    return [''];\n\n  var parts = [];\n  var m = balanced('{', '}', str);\n\n  if (!m)\n    return str.split(',');\n\n  var pre = m.pre;\n  var body = m.body;\n  var post = m.post;\n  var p = pre.split(',');\n\n  p[p.length-1] += '{' + body + '}';\n  var postParts = parseCommaParts(post);\n  if (post.length) {\n    p[p.length-1] += postParts.shift();\n    p.push.apply(p, postParts);\n  }\n\n  parts.push.apply(parts, p);\n\n  return parts;\n}\n\nfunction expandTop(str) {\n  if (!str)\n    return [];\n\n  // I don't know why Bash 4.3 does this, but it does.\n  // Anything starting with {} will have the first two bytes preserved\n  // but *only* at the top level, so {},a}b will not expand to anything,\n  // but a{},b}c will be expanded to [a}c,abc].\n  // One could argue that this is a bug in Bash, but since the goal of\n  // this module is to match Bash's rules, we escape a leading {}\n  if (str.substr(0, 2) === '{}') {\n    str = '\\\\{\\\\}' + str.substr(2);\n  }\n\n  return expand$3(escapeBraces(str), true).map(unescapeBraces);\n}\n\nfunction embrace(str) {\n  return '{' + str + '}';\n}\nfunction isPadded(el) {\n  return /^-?0\\d/.test(el);\n}\n\nfunction lte(i, y) {\n  return i <= y;\n}\nfunction gte(i, y) {\n  return i >= y;\n}\n\nfunction expand$3(str, isTop) {\n  var expansions = [];\n\n  var m = balanced('{', '}', str);\n  if (!m || /\\$$/.test(m.pre)) return [str];\n\n  var isNumericSequence = /^-?\\d+\\.\\.-?\\d+(?:\\.\\.-?\\d+)?$/.test(m.body);\n  var isAlphaSequence = /^[a-zA-Z]\\.\\.[a-zA-Z](?:\\.\\.-?\\d+)?$/.test(m.body);\n  var isSequence = isNumericSequence || isAlphaSequence;\n  var isOptions = m.body.indexOf(',') >= 0;\n  if (!isSequence && !isOptions) {\n    // {a},b}\n    if (m.post.match(/,.*\\}/)) {\n      str = m.pre + '{' + m.body + escClose + m.post;\n      return expand$3(str);\n    }\n    return [str];\n  }\n\n  var n;\n  if (isSequence) {\n    n = m.body.split(/\\.\\./);\n  } else {\n    n = parseCommaParts(m.body);\n    if (n.length === 1) {\n      // x{{a,b}}y ==> x{a}y x{b}y\n      n = expand$3(n[0], false).map(embrace);\n      if (n.length === 1) {\n        var post = m.post.length\n          ? expand$3(m.post, false)\n          : [''];\n        return post.map(function(p) {\n          return m.pre + n[0] + p;\n        });\n      }\n    }\n  }\n\n  // at this point, n is the parts, and we know it's not a comma set\n  // with a single entry.\n\n  // no need to expand pre, since it is guaranteed to be free of brace-sets\n  var pre = m.pre;\n  var post = m.post.length\n    ? expand$3(m.post, false)\n    : [''];\n\n  var N;\n\n  if (isSequence) {\n    var x = numeric(n[0]);\n    var y = numeric(n[1]);\n    var width = Math.max(n[0].length, n[1].length);\n    var incr = n.length == 3\n      ? Math.abs(numeric(n[2]))\n      : 1;\n    var test = lte;\n    var reverse = y < x;\n    if (reverse) {\n      incr *= -1;\n      test = gte;\n    }\n    var pad = n.some(isPadded);\n\n    N = [];\n\n    for (var i = x; test(i, y); i += incr) {\n      var c;\n      if (isAlphaSequence) {\n        c = String.fromCharCode(i);\n        if (c === '\\\\')\n          c = '';\n      } else {\n        c = String(i);\n        if (pad) {\n          var need = width - c.length;\n          if (need > 0) {\n            var z = new Array(need + 1).join('0');\n            if (i < 0)\n              c = '-' + z + c.slice(1);\n            else\n              c = z + c;\n          }\n        }\n      }\n      N.push(c);\n    }\n  } else {\n    N = concatMap(n, function(el) { return expand$3(el, false) });\n  }\n\n  for (var j = 0; j < N.length; j++) {\n    for (var k = 0; k < post.length; k++) {\n      var expansion = pre + N[j] + post[k];\n      if (!isTop || isSequence || expansion)\n        expansions.push(expansion);\n    }\n  }\n\n  return expansions;\n}\n\nvar minimatch_1 = minimatch$1;\nminimatch$1.Minimatch = Minimatch$1;\n\nvar path$j = (function () { try { return require('path') } catch (e) {}}()) || {\n  sep: '/'\n};\nminimatch$1.sep = path$j.sep;\n\nvar GLOBSTAR$2 = minimatch$1.GLOBSTAR = Minimatch$1.GLOBSTAR = {};\nvar expand$2 = braceExpansion;\n\nvar plTypes = {\n  '!': { open: '(?:(?!(?:', close: '))[^/]*?)'},\n  '?': { open: '(?:', close: ')?' },\n  '+': { open: '(?:', close: ')+' },\n  '*': { open: '(?:', close: ')*' },\n  '@': { open: '(?:', close: ')' }\n};\n\n// any single thing other than /\n// don't need to escape / when using new RegExp()\nvar qmark = '[^/]';\n\n// * => any number of characters\nvar star = qmark + '*?';\n\n// ** when dots are allowed.  Anything goes, except .. and .\n// not (^ or / followed by one or two dots followed by $ or /),\n// followed by anything, any number of times.\nvar twoStarDot = '(?:(?!(?:\\\\\\/|^)(?:\\\\.{1,2})($|\\\\\\/)).)*?';\n\n// not a ^ or / followed by a dot,\n// followed by anything, any number of times.\nvar twoStarNoDot = '(?:(?!(?:\\\\\\/|^)\\\\.).)*?';\n\n// characters that need to be escaped in RegExp.\nvar reSpecials = charSet('().*{}+?[]^$\\\\!');\n\n// \"abc\" -> { a:true, b:true, c:true }\nfunction charSet (s) {\n  return s.split('').reduce(function (set, c) {\n    set[c] = true;\n    return set\n  }, {})\n}\n\n// normalizes slashes.\nvar slashSplit = /\\/+/;\n\nminimatch$1.filter = filter$1;\nfunction filter$1 (pattern, options) {\n  options = options || {};\n  return function (p, i, list) {\n    return minimatch$1(p, pattern, options)\n  }\n}\n\nfunction ext (a, b) {\n  b = b || {};\n  var t = {};\n  Object.keys(a).forEach(function (k) {\n    t[k] = a[k];\n  });\n  Object.keys(b).forEach(function (k) {\n    t[k] = b[k];\n  });\n  return t\n}\n\nminimatch$1.defaults = function (def) {\n  if (!def || typeof def !== 'object' || !Object.keys(def).length) {\n    return minimatch$1\n  }\n\n  var orig = minimatch$1;\n\n  var m = function minimatch (p, pattern, options) {\n    return orig(p, pattern, ext(def, options))\n  };\n\n  m.Minimatch = function Minimatch (pattern, options) {\n    return new orig.Minimatch(pattern, ext(def, options))\n  };\n  m.Minimatch.defaults = function defaults (options) {\n    return orig.defaults(ext(def, options)).Minimatch\n  };\n\n  m.filter = function filter (pattern, options) {\n    return orig.filter(pattern, ext(def, options))\n  };\n\n  m.defaults = function defaults (options) {\n    return orig.defaults(ext(def, options))\n  };\n\n  m.makeRe = function makeRe (pattern, options) {\n    return orig.makeRe(pattern, ext(def, options))\n  };\n\n  m.braceExpand = function braceExpand (pattern, options) {\n    return orig.braceExpand(pattern, ext(def, options))\n  };\n\n  m.match = function (list, pattern, options) {\n    return orig.match(list, pattern, ext(def, options))\n  };\n\n  return m\n};\n\nMinimatch$1.defaults = function (def) {\n  return minimatch$1.defaults(def).Minimatch\n};\n\nfunction minimatch$1 (p, pattern, options) {\n  assertValidPattern(pattern);\n\n  if (!options) options = {};\n\n  // shortcut: comments match nothing.\n  if (!options.nocomment && pattern.charAt(0) === '#') {\n    return false\n  }\n\n  return new Minimatch$1(pattern, options).match(p)\n}\n\nfunction Minimatch$1 (pattern, options) {\n  if (!(this instanceof Minimatch$1)) {\n    return new Minimatch$1(pattern, options)\n  }\n\n  assertValidPattern(pattern);\n\n  if (!options) options = {};\n\n  pattern = pattern.trim();\n\n  // windows support: need to use /, not \\\n  if (!options.allowWindowsEscape && path$j.sep !== '/') {\n    pattern = pattern.split(path$j.sep).join('/');\n  }\n\n  this.options = options;\n  this.set = [];\n  this.pattern = pattern;\n  this.regexp = null;\n  this.negate = false;\n  this.comment = false;\n  this.empty = false;\n  this.partial = !!options.partial;\n\n  // make the set of regexps etc.\n  this.make();\n}\n\nMinimatch$1.prototype.debug = function () {};\n\nMinimatch$1.prototype.make = make;\nfunction make () {\n  var pattern = this.pattern;\n  var options = this.options;\n\n  // empty patterns and comments match nothing.\n  if (!options.nocomment && pattern.charAt(0) === '#') {\n    this.comment = true;\n    return\n  }\n  if (!pattern) {\n    this.empty = true;\n    return\n  }\n\n  // step 1: figure out negation, etc.\n  this.parseNegate();\n\n  // step 2: expand braces\n  var set = this.globSet = this.braceExpand();\n\n  if (options.debug) this.debug = function debug() { console.error.apply(console, arguments); };\n\n  this.debug(this.pattern, set);\n\n  // step 3: now we have a set, so turn each one into a series of path-portion\n  // matching patterns.\n  // These will be regexps, except in the case of \"**\", which is\n  // set to the GLOBSTAR object for globstar behavior,\n  // and will not contain any / characters\n  set = this.globParts = set.map(function (s) {\n    return s.split(slashSplit)\n  });\n\n  this.debug(this.pattern, set);\n\n  // glob --> regexps\n  set = set.map(function (s, si, set) {\n    return s.map(this.parse, this)\n  }, this);\n\n  this.debug(this.pattern, set);\n\n  // filter out everything that didn't compile properly.\n  set = set.filter(function (s) {\n    return s.indexOf(false) === -1\n  });\n\n  this.debug(this.pattern, set);\n\n  this.set = set;\n}\n\nMinimatch$1.prototype.parseNegate = parseNegate;\nfunction parseNegate () {\n  var pattern = this.pattern;\n  var negate = false;\n  var options = this.options;\n  var negateOffset = 0;\n\n  if (options.nonegate) return\n\n  for (var i = 0, l = pattern.length\n    ; i < l && pattern.charAt(i) === '!'\n    ; i++) {\n    negate = !negate;\n    negateOffset++;\n  }\n\n  if (negateOffset) this.pattern = pattern.substr(negateOffset);\n  this.negate = negate;\n}\n\n// Brace expansion:\n// a{b,c}d -> abd acd\n// a{b,}c -> abc ac\n// a{0..3}d -> a0d a1d a2d a3d\n// a{b,c{d,e}f}g -> abg acdfg acefg\n// a{b,c}d{e,f}g -> abdeg acdeg abdeg abdfg\n//\n// Invalid sets are not expanded.\n// a{2..}b -> a{2..}b\n// a{b}c -> a{b}c\nminimatch$1.braceExpand = function (pattern, options) {\n  return braceExpand(pattern, options)\n};\n\nMinimatch$1.prototype.braceExpand = braceExpand;\n\nfunction braceExpand (pattern, options) {\n  if (!options) {\n    if (this instanceof Minimatch$1) {\n      options = this.options;\n    } else {\n      options = {};\n    }\n  }\n\n  pattern = typeof pattern === 'undefined'\n    ? this.pattern : pattern;\n\n  assertValidPattern(pattern);\n\n  // Thanks to Yeting Li <https://github.com/yetingli> for\n  // improving this regexp to avoid a ReDOS vulnerability.\n  if (options.nobrace || !/\\{(?:(?!\\{).)*\\}/.test(pattern)) {\n    // shortcut. no need to expand.\n    return [pattern]\n  }\n\n  return expand$2(pattern)\n}\n\nvar MAX_PATTERN_LENGTH = 1024 * 64;\nvar assertValidPattern = function (pattern) {\n  if (typeof pattern !== 'string') {\n    throw new TypeError('invalid pattern')\n  }\n\n  if (pattern.length > MAX_PATTERN_LENGTH) {\n    throw new TypeError('pattern is too long')\n  }\n};\n\n// parse a component of the expanded set.\n// At this point, no pattern may contain \"/\" in it\n// so we're going to return a 2d array, where each entry is the full\n// pattern, split on '/', and then turned into a regular expression.\n// A regexp is made at the end which joins each array with an\n// escaped /, and another full one which joins each regexp with |.\n//\n// Following the lead of Bash 4.1, note that \"**\" only has special meaning\n// when it is the *only* thing in a path portion.  Otherwise, any series\n// of * is equivalent to a single *.  Globstar behavior is enabled by\n// default, and can be disabled by setting options.noglobstar.\nMinimatch$1.prototype.parse = parse$h;\nvar SUBPARSE = {};\nfunction parse$h (pattern, isSub) {\n  assertValidPattern(pattern);\n\n  var options = this.options;\n\n  // shortcuts\n  if (pattern === '**') {\n    if (!options.noglobstar)\n      return GLOBSTAR$2\n    else\n      pattern = '*';\n  }\n  if (pattern === '') return ''\n\n  var re = '';\n  var hasMagic = !!options.nocase;\n  var escaping = false;\n  // ? => one single character\n  var patternListStack = [];\n  var negativeLists = [];\n  var stateChar;\n  var inClass = false;\n  var reClassStart = -1;\n  var classStart = -1;\n  // . and .. never match anything that doesn't start with .,\n  // even when options.dot is set.\n  var patternStart = pattern.charAt(0) === '.' ? '' // anything\n  // not (start or / followed by . or .. followed by / or end)\n  : options.dot ? '(?!(?:^|\\\\\\/)\\\\.{1,2}(?:$|\\\\\\/))'\n  : '(?!\\\\.)';\n  var self = this;\n\n  function clearStateChar () {\n    if (stateChar) {\n      // we had some state-tracking character\n      // that wasn't consumed by this pass.\n      switch (stateChar) {\n        case '*':\n          re += star;\n          hasMagic = true;\n        break\n        case '?':\n          re += qmark;\n          hasMagic = true;\n        break\n        default:\n          re += '\\\\' + stateChar;\n        break\n      }\n      self.debug('clearStateChar %j %j', stateChar, re);\n      stateChar = false;\n    }\n  }\n\n  for (var i = 0, len = pattern.length, c\n    ; (i < len) && (c = pattern.charAt(i))\n    ; i++) {\n    this.debug('%s\\t%s %s %j', pattern, i, re, c);\n\n    // skip over any that are escaped.\n    if (escaping && reSpecials[c]) {\n      re += '\\\\' + c;\n      escaping = false;\n      continue\n    }\n\n    switch (c) {\n      /* istanbul ignore next */\n      case '/': {\n        // completely not allowed, even escaped.\n        // Should already be path-split by now.\n        return false\n      }\n\n      case '\\\\':\n        clearStateChar();\n        escaping = true;\n      continue\n\n      // the various stateChar values\n      // for the \"extglob\" stuff.\n      case '?':\n      case '*':\n      case '+':\n      case '@':\n      case '!':\n        this.debug('%s\\t%s %s %j <-- stateChar', pattern, i, re, c);\n\n        // all of those are literals inside a class, except that\n        // the glob [!a] means [^a] in regexp\n        if (inClass) {\n          this.debug('  in class');\n          if (c === '!' && i === classStart + 1) c = '^';\n          re += c;\n          continue\n        }\n\n        // if we already have a stateChar, then it means\n        // that there was something like ** or +? in there.\n        // Handle the stateChar, then proceed with this one.\n        self.debug('call clearStateChar %j', stateChar);\n        clearStateChar();\n        stateChar = c;\n        // if extglob is disabled, then +(asdf|foo) isn't a thing.\n        // just clear the statechar *now*, rather than even diving into\n        // the patternList stuff.\n        if (options.noext) clearStateChar();\n      continue\n\n      case '(':\n        if (inClass) {\n          re += '(';\n          continue\n        }\n\n        if (!stateChar) {\n          re += '\\\\(';\n          continue\n        }\n\n        patternListStack.push({\n          type: stateChar,\n          start: i - 1,\n          reStart: re.length,\n          open: plTypes[stateChar].open,\n          close: plTypes[stateChar].close\n        });\n        // negation is (?:(?!js)[^/]*)\n        re += stateChar === '!' ? '(?:(?!(?:' : '(?:';\n        this.debug('plType %j %j', stateChar, re);\n        stateChar = false;\n      continue\n\n      case ')':\n        if (inClass || !patternListStack.length) {\n          re += '\\\\)';\n          continue\n        }\n\n        clearStateChar();\n        hasMagic = true;\n        var pl = patternListStack.pop();\n        // negation is (?:(?!js)[^/]*)\n        // The others are (?:<pattern>)<type>\n        re += pl.close;\n        if (pl.type === '!') {\n          negativeLists.push(pl);\n        }\n        pl.reEnd = re.length;\n      continue\n\n      case '|':\n        if (inClass || !patternListStack.length || escaping) {\n          re += '\\\\|';\n          escaping = false;\n          continue\n        }\n\n        clearStateChar();\n        re += '|';\n      continue\n\n      // these are mostly the same in regexp and glob\n      case '[':\n        // swallow any state-tracking char before the [\n        clearStateChar();\n\n        if (inClass) {\n          re += '\\\\' + c;\n          continue\n        }\n\n        inClass = true;\n        classStart = i;\n        reClassStart = re.length;\n        re += c;\n      continue\n\n      case ']':\n        //  a right bracket shall lose its special\n        //  meaning and represent itself in\n        //  a bracket expression if it occurs\n        //  first in the list.  -- POSIX.2 2.8.3.2\n        if (i === classStart + 1 || !inClass) {\n          re += '\\\\' + c;\n          escaping = false;\n          continue\n        }\n\n        // handle the case where we left a class open.\n        // \"[z-a]\" is valid, equivalent to \"\\[z-a\\]\"\n        // split where the last [ was, make sure we don't have\n        // an invalid re. if so, re-walk the contents of the\n        // would-be class to re-translate any characters that\n        // were passed through as-is\n        // TODO: It would probably be faster to determine this\n        // without a try/catch and a new RegExp, but it's tricky\n        // to do safely.  For now, this is safe and works.\n        var cs = pattern.substring(classStart + 1, i);\n        try {\n        } catch (er) {\n          // not a valid class!\n          var sp = this.parse(cs, SUBPARSE);\n          re = re.substr(0, reClassStart) + '\\\\[' + sp[0] + '\\\\]';\n          hasMagic = hasMagic || sp[1];\n          inClass = false;\n          continue\n        }\n\n        // finish up the class.\n        hasMagic = true;\n        inClass = false;\n        re += c;\n      continue\n\n      default:\n        // swallow any state char that wasn't consumed\n        clearStateChar();\n\n        if (escaping) {\n          // no need\n          escaping = false;\n        } else if (reSpecials[c]\n          && !(c === '^' && inClass)) {\n          re += '\\\\';\n        }\n\n        re += c;\n\n    } // switch\n  } // for\n\n  // handle the case where we left a class open.\n  // \"[abc\" is valid, equivalent to \"\\[abc\"\n  if (inClass) {\n    // split where the last [ was, and escape it\n    // this is a huge pita.  We now have to re-walk\n    // the contents of the would-be class to re-translate\n    // any characters that were passed through as-is\n    cs = pattern.substr(classStart + 1);\n    sp = this.parse(cs, SUBPARSE);\n    re = re.substr(0, reClassStart) + '\\\\[' + sp[0];\n    hasMagic = hasMagic || sp[1];\n  }\n\n  // handle the case where we had a +( thing at the *end*\n  // of the pattern.\n  // each pattern list stack adds 3 chars, and we need to go through\n  // and escape any | chars that were passed through as-is for the regexp.\n  // Go through and escape them, taking care not to double-escape any\n  // | chars that were already escaped.\n  for (pl = patternListStack.pop(); pl; pl = patternListStack.pop()) {\n    var tail = re.slice(pl.reStart + pl.open.length);\n    this.debug('setting tail', re, pl);\n    // maybe some even number of \\, then maybe 1 \\, followed by a |\n    tail = tail.replace(/((?:\\\\{2}){0,64})(\\\\?)\\|/g, function (_, $1, $2) {\n      if (!$2) {\n        // the | isn't already escaped, so escape it.\n        $2 = '\\\\';\n      }\n\n      // need to escape all those slashes *again*, without escaping the\n      // one that we need for escaping the | character.  As it works out,\n      // escaping an even number of slashes can be done by simply repeating\n      // it exactly after itself.  That's why this trick works.\n      //\n      // I am sorry that you have to see this.\n      return $1 + $1 + $2 + '|'\n    });\n\n    this.debug('tail=%j\\n   %s', tail, tail, pl, re);\n    var t = pl.type === '*' ? star\n      : pl.type === '?' ? qmark\n      : '\\\\' + pl.type;\n\n    hasMagic = true;\n    re = re.slice(0, pl.reStart) + t + '\\\\(' + tail;\n  }\n\n  // handle trailing things that only matter at the very end.\n  clearStateChar();\n  if (escaping) {\n    // trailing \\\\\n    re += '\\\\\\\\';\n  }\n\n  // only need to apply the nodot start if the re starts with\n  // something that could conceivably capture a dot\n  var addPatternStart = false;\n  switch (re.charAt(0)) {\n    case '[': case '.': case '(': addPatternStart = true;\n  }\n\n  // Hack to work around lack of negative lookbehind in JS\n  // A pattern like: *.!(x).!(y|z) needs to ensure that a name\n  // like 'a.xyz.yz' doesn't match.  So, the first negative\n  // lookahead, has to look ALL the way ahead, to the end of\n  // the pattern.\n  for (var n = negativeLists.length - 1; n > -1; n--) {\n    var nl = negativeLists[n];\n\n    var nlBefore = re.slice(0, nl.reStart);\n    var nlFirst = re.slice(nl.reStart, nl.reEnd - 8);\n    var nlLast = re.slice(nl.reEnd - 8, nl.reEnd);\n    var nlAfter = re.slice(nl.reEnd);\n\n    nlLast += nlAfter;\n\n    // Handle nested stuff like *(*.js|!(*.json)), where open parens\n    // mean that we should *not* include the ) in the bit that is considered\n    // \"after\" the negated section.\n    var openParensBefore = nlBefore.split('(').length - 1;\n    var cleanAfter = nlAfter;\n    for (i = 0; i < openParensBefore; i++) {\n      cleanAfter = cleanAfter.replace(/\\)[+*?]?/, '');\n    }\n    nlAfter = cleanAfter;\n\n    var dollar = '';\n    if (nlAfter === '' && isSub !== SUBPARSE) {\n      dollar = '$';\n    }\n    var newRe = nlBefore + nlFirst + nlAfter + dollar + nlLast;\n    re = newRe;\n  }\n\n  // if the re is not \"\" at this point, then we need to make sure\n  // it doesn't match against an empty path part.\n  // Otherwise a/* will match a/, which it should not.\n  if (re !== '' && hasMagic) {\n    re = '(?=.)' + re;\n  }\n\n  if (addPatternStart) {\n    re = patternStart + re;\n  }\n\n  // parsing just a piece of a larger pattern.\n  if (isSub === SUBPARSE) {\n    return [re, hasMagic]\n  }\n\n  // skip the regexp for non-magical patterns\n  // unescape anything in it, though, so that it'll be\n  // an exact match against a file etc.\n  if (!hasMagic) {\n    return globUnescape(pattern)\n  }\n\n  var flags = options.nocase ? 'i' : '';\n  try {\n    var regExp = new RegExp('^' + re + '$', flags);\n  } catch (er) /* istanbul ignore next - should be impossible */ {\n    // If it was an invalid regular expression, then it can't match\n    // anything.  This trick looks for a character after the end of\n    // the string, which is of course impossible, except in multi-line\n    // mode, but it's not a /m regex.\n    return new RegExp('$.')\n  }\n\n  regExp._glob = pattern;\n  regExp._src = re;\n\n  return regExp\n}\n\nminimatch$1.makeRe = function (pattern, options) {\n  return new Minimatch$1(pattern, options || {}).makeRe()\n};\n\nMinimatch$1.prototype.makeRe = makeRe$1;\nfunction makeRe$1 () {\n  if (this.regexp || this.regexp === false) return this.regexp\n\n  // at this point, this.set is a 2d array of partial\n  // pattern strings, or \"**\".\n  //\n  // It's better to use .match().  This function shouldn't\n  // be used, really, but it's pretty convenient sometimes,\n  // when you just want to work with a regex.\n  var set = this.set;\n\n  if (!set.length) {\n    this.regexp = false;\n    return this.regexp\n  }\n  var options = this.options;\n\n  var twoStar = options.noglobstar ? star\n    : options.dot ? twoStarDot\n    : twoStarNoDot;\n  var flags = options.nocase ? 'i' : '';\n\n  var re = set.map(function (pattern) {\n    return pattern.map(function (p) {\n      return (p === GLOBSTAR$2) ? twoStar\n      : (typeof p === 'string') ? regExpEscape(p)\n      : p._src\n    }).join('\\\\\\/')\n  }).join('|');\n\n  // must match entire pattern\n  // ending in a * or ** will make it less strict.\n  re = '^(?:' + re + ')$';\n\n  // can match anything, as long as it's not this.\n  if (this.negate) re = '^(?!' + re + ').*$';\n\n  try {\n    this.regexp = new RegExp(re, flags);\n  } catch (ex) /* istanbul ignore next - should be impossible */ {\n    this.regexp = false;\n  }\n  return this.regexp\n}\n\nminimatch$1.match = function (list, pattern, options) {\n  options = options || {};\n  var mm = new Minimatch$1(pattern, options);\n  list = list.filter(function (f) {\n    return mm.match(f)\n  });\n  if (mm.options.nonull && !list.length) {\n    list.push(pattern);\n  }\n  return list\n};\n\nMinimatch$1.prototype.match = function match (f, partial) {\n  if (typeof partial === 'undefined') partial = this.partial;\n  this.debug('match', f, this.pattern);\n  // short-circuit in the case of busted things.\n  // comments, etc.\n  if (this.comment) return false\n  if (this.empty) return f === ''\n\n  if (f === '/' && partial) return true\n\n  var options = this.options;\n\n  // windows: need to use /, not \\\n  if (path$j.sep !== '/') {\n    f = f.split(path$j.sep).join('/');\n  }\n\n  // treat the test path as a set of pathparts.\n  f = f.split(slashSplit);\n  this.debug(this.pattern, 'split', f);\n\n  // just ONE of the pattern sets in this.set needs to match\n  // in order for it to be valid.  If negating, then just one\n  // match means that we have failed.\n  // Either way, return on the first hit.\n\n  var set = this.set;\n  this.debug(this.pattern, 'set', set);\n\n  // Find the basename of the path by looking for the last non-empty segment\n  var filename;\n  var i;\n  for (i = f.length - 1; i >= 0; i--) {\n    filename = f[i];\n    if (filename) break\n  }\n\n  for (i = 0; i < set.length; i++) {\n    var pattern = set[i];\n    var file = f;\n    if (options.matchBase && pattern.length === 1) {\n      file = [filename];\n    }\n    var hit = this.matchOne(file, pattern, partial);\n    if (hit) {\n      if (options.flipNegate) return true\n      return !this.negate\n    }\n  }\n\n  // didn't get any hits.  this is success if it's a negative\n  // pattern, failure otherwise.\n  if (options.flipNegate) return false\n  return this.negate\n};\n\n// set partial to true to test if, for example,\n// \"/a/b\" matches the start of \"/*/b/*/d\"\n// Partial means, if you run out of file before you run\n// out of pattern, then that's fine, as long as all\n// the parts match.\nMinimatch$1.prototype.matchOne = function (file, pattern, partial) {\n  var options = this.options;\n\n  this.debug('matchOne',\n    { 'this': this, file: file, pattern: pattern });\n\n  this.debug('matchOne', file.length, pattern.length);\n\n  for (var fi = 0,\n      pi = 0,\n      fl = file.length,\n      pl = pattern.length\n      ; (fi < fl) && (pi < pl)\n      ; fi++, pi++) {\n    this.debug('matchOne loop');\n    var p = pattern[pi];\n    var f = file[fi];\n\n    this.debug(pattern, p, f);\n\n    // should be impossible.\n    // some invalid regexp stuff in the set.\n    /* istanbul ignore if */\n    if (p === false) return false\n\n    if (p === GLOBSTAR$2) {\n      this.debug('GLOBSTAR', [pattern, p, f]);\n\n      // \"**\"\n      // a/**/b/**/c would match the following:\n      // a/b/x/y/z/c\n      // a/x/y/z/b/c\n      // a/b/x/b/x/c\n      // a/b/c\n      // To do this, take the rest of the pattern after\n      // the **, and see if it would match the file remainder.\n      // If so, return success.\n      // If not, the ** \"swallows\" a segment, and try again.\n      // This is recursively awful.\n      //\n      // a/**/b/**/c matching a/b/x/y/z/c\n      // - a matches a\n      // - doublestar\n      //   - matchOne(b/x/y/z/c, b/**/c)\n      //     - b matches b\n      //     - doublestar\n      //       - matchOne(x/y/z/c, c) -> no\n      //       - matchOne(y/z/c, c) -> no\n      //       - matchOne(z/c, c) -> no\n      //       - matchOne(c, c) yes, hit\n      var fr = fi;\n      var pr = pi + 1;\n      if (pr === pl) {\n        this.debug('** at the end');\n        // a ** at the end will just swallow the rest.\n        // We have found a match.\n        // however, it will not swallow /.x, unless\n        // options.dot is set.\n        // . and .. are *never* matched by **, for explosively\n        // exponential reasons.\n        for (; fi < fl; fi++) {\n          if (file[fi] === '.' || file[fi] === '..' ||\n            (!options.dot && file[fi].charAt(0) === '.')) return false\n        }\n        return true\n      }\n\n      // ok, let's see if we can swallow whatever we can.\n      while (fr < fl) {\n        var swallowee = file[fr];\n\n        this.debug('\\nglobstar while', file, fr, pattern, pr, swallowee);\n\n        // XXX remove this slice.  Just pass the start index.\n        if (this.matchOne(file.slice(fr), pattern.slice(pr), partial)) {\n          this.debug('globstar found match!', fr, fl, swallowee);\n          // found a match.\n          return true\n        } else {\n          // can't swallow \".\" or \"..\" ever.\n          // can only swallow \".foo\" when explicitly asked.\n          if (swallowee === '.' || swallowee === '..' ||\n            (!options.dot && swallowee.charAt(0) === '.')) {\n            this.debug('dot detected!', file, fr, pattern, pr);\n            break\n          }\n\n          // ** swallows a segment, and continue.\n          this.debug('globstar swallow a segment, and continue');\n          fr++;\n        }\n      }\n\n      // no match was found.\n      // However, in partial mode, we can't say this is necessarily over.\n      // If there's more *pattern* left, then\n      /* istanbul ignore if */\n      if (partial) {\n        // ran out of file\n        this.debug('\\n>>> no match, partial?', file, fr, pattern, pr);\n        if (fr === fl) return true\n      }\n      return false\n    }\n\n    // something other than **\n    // non-magic patterns just have to match exactly\n    // patterns with magic have been turned into regexps.\n    var hit;\n    if (typeof p === 'string') {\n      hit = f === p;\n      this.debug('string match', p, f, hit);\n    } else {\n      hit = f.match(p);\n      this.debug('pattern match', p, f, hit);\n    }\n\n    if (!hit) return false\n  }\n\n  // Note: ending in / means that we'll get a final \"\"\n  // at the end of the pattern.  This can only match a\n  // corresponding \"\" at the end of the file.\n  // If the file ends in /, then it can only match a\n  // a pattern that ends in /, unless the pattern just\n  // doesn't have any more for it. But, a/b/ should *not*\n  // match \"a/b/*\", even though \"\" matches against the\n  // [^/]*? pattern, except in partial mode, where it might\n  // simply not be reached yet.\n  // However, a/b/ should still satisfy a/*\n\n  // now either we fell off the end of the pattern, or we're done.\n  if (fi === fl && pi === pl) {\n    // ran out of pattern and filename at the same time.\n    // an exact hit!\n    return true\n  } else if (fi === fl) {\n    // ran out of file, but still had pattern left.\n    // this is ok if we're doing the match as part of\n    // a glob fs traversal.\n    return partial\n  } else /* istanbul ignore else */ if (pi === pl) {\n    // ran out of pattern, still have file left.\n    // this is only acceptable if we're on the very last\n    // empty segment of a file with a trailing slash.\n    // a/* should match a/b/\n    return (fi === fl - 1) && (file[fi] === '')\n  }\n\n  // should be unreachable.\n  /* istanbul ignore next */\n  throw new Error('wtf?')\n};\n\n// replace stuff like \\* with *\nfunction globUnescape (s) {\n  return s.replace(/\\\\(.)/g, '$1')\n}\n\nfunction regExpEscape (s) {\n  return s.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&')\n}\n\nvar inherits = {exports: {}};\n\nvar inherits_browser = {exports: {}};\n\nvar hasRequiredInherits_browser;\n\nfunction requireInherits_browser () {\n\tif (hasRequiredInherits_browser) return inherits_browser.exports;\n\thasRequiredInherits_browser = 1;\n\tif (typeof Object.create === 'function') {\n\t  // implementation from standard node.js 'util' module\n\t  inherits_browser.exports = function inherits(ctor, superCtor) {\n\t    if (superCtor) {\n\t      ctor.super_ = superCtor;\n\t      ctor.prototype = Object.create(superCtor.prototype, {\n\t        constructor: {\n\t          value: ctor,\n\t          enumerable: false,\n\t          writable: true,\n\t          configurable: true\n\t        }\n\t      });\n\t    }\n\t  };\n\t} else {\n\t  // old school shim for old browsers\n\t  inherits_browser.exports = function inherits(ctor, superCtor) {\n\t    if (superCtor) {\n\t      ctor.super_ = superCtor;\n\t      var TempCtor = function () {};\n\t      TempCtor.prototype = superCtor.prototype;\n\t      ctor.prototype = new TempCtor();\n\t      ctor.prototype.constructor = ctor;\n\t    }\n\t  };\n\t}\n\treturn inherits_browser.exports;\n}\n\n(function (module) {\n\ttry {\n\t  var util = require('util');\n\t  /* istanbul ignore next */\n\t  if (typeof util.inherits !== 'function') throw '';\n\t  module.exports = util.inherits;\n\t} catch (e) {\n\t  /* istanbul ignore next */\n\t  module.exports = requireInherits_browser();\n\t}\n} (inherits));\n\nvar pathIsAbsolute = {exports: {}};\n\nfunction posix(path) {\n\treturn path.charAt(0) === '/';\n}\n\nfunction win32(path) {\n\t// https://github.com/nodejs/node/blob/b3fcc245fb25539909ef1d5eaa01dbf92e168633/lib/path.js#L56\n\tvar splitDeviceRe = /^([a-zA-Z]:|[\\\\\\/]{2}[^\\\\\\/]+[\\\\\\/]+[^\\\\\\/]+)?([\\\\\\/])?([\\s\\S]*?)$/;\n\tvar result = splitDeviceRe.exec(path);\n\tvar device = result[1] || '';\n\tvar isUnc = Boolean(device && device.charAt(1) !== ':');\n\n\t// UNC paths are always absolute\n\treturn Boolean(result[2] || isUnc);\n}\n\npathIsAbsolute.exports = process.platform === 'win32' ? win32 : posix;\npathIsAbsolute.exports.posix = posix;\npathIsAbsolute.exports.win32 = win32;\n\nvar common$c = {};\n\ncommon$c.setopts = setopts;\ncommon$c.ownProp = ownProp;\ncommon$c.makeAbs = makeAbs;\ncommon$c.finish = finish;\ncommon$c.mark = mark;\ncommon$c.isIgnored = isIgnored;\ncommon$c.childrenIgnored = childrenIgnored;\n\nfunction ownProp (obj, field) {\n  return Object.prototype.hasOwnProperty.call(obj, field)\n}\n\nvar fs$i = require$$0__default;\nvar path$i = require$$0$4;\nvar minimatch = minimatch_1;\nvar isAbsolute = pathIsAbsolute.exports;\nvar Minimatch = minimatch.Minimatch;\n\nfunction alphasort (a, b) {\n  return a.localeCompare(b, 'en')\n}\n\nfunction setupIgnores (self, options) {\n  self.ignore = options.ignore || [];\n\n  if (!Array.isArray(self.ignore))\n    self.ignore = [self.ignore];\n\n  if (self.ignore.length) {\n    self.ignore = self.ignore.map(ignoreMap);\n  }\n}\n\n// ignore patterns are always in dot:true mode.\nfunction ignoreMap (pattern) {\n  var gmatcher = null;\n  if (pattern.slice(-3) === '/**') {\n    var gpattern = pattern.replace(/(\\/\\*\\*)+$/, '');\n    gmatcher = new Minimatch(gpattern, { dot: true });\n  }\n\n  return {\n    matcher: new Minimatch(pattern, { dot: true }),\n    gmatcher: gmatcher\n  }\n}\n\nfunction setopts (self, pattern, options) {\n  if (!options)\n    options = {};\n\n  // base-matching: just use globstar for that.\n  if (options.matchBase && -1 === pattern.indexOf(\"/\")) {\n    if (options.noglobstar) {\n      throw new Error(\"base matching requires globstar\")\n    }\n    pattern = \"**/\" + pattern;\n  }\n\n  self.silent = !!options.silent;\n  self.pattern = pattern;\n  self.strict = options.strict !== false;\n  self.realpath = !!options.realpath;\n  self.realpathCache = options.realpathCache || Object.create(null);\n  self.follow = !!options.follow;\n  self.dot = !!options.dot;\n  self.mark = !!options.mark;\n  self.nodir = !!options.nodir;\n  if (self.nodir)\n    self.mark = true;\n  self.sync = !!options.sync;\n  self.nounique = !!options.nounique;\n  self.nonull = !!options.nonull;\n  self.nosort = !!options.nosort;\n  self.nocase = !!options.nocase;\n  self.stat = !!options.stat;\n  self.noprocess = !!options.noprocess;\n  self.absolute = !!options.absolute;\n  self.fs = options.fs || fs$i;\n\n  self.maxLength = options.maxLength || Infinity;\n  self.cache = options.cache || Object.create(null);\n  self.statCache = options.statCache || Object.create(null);\n  self.symlinks = options.symlinks || Object.create(null);\n\n  setupIgnores(self, options);\n\n  self.changedCwd = false;\n  var cwd = process.cwd();\n  if (!ownProp(options, \"cwd\"))\n    self.cwd = cwd;\n  else {\n    self.cwd = path$i.resolve(options.cwd);\n    self.changedCwd = self.cwd !== cwd;\n  }\n\n  self.root = options.root || path$i.resolve(self.cwd, \"/\");\n  self.root = path$i.resolve(self.root);\n  if (process.platform === \"win32\")\n    self.root = self.root.replace(/\\\\/g, \"/\");\n\n  // TODO: is an absolute `cwd` supposed to be resolved against `root`?\n  // e.g. { cwd: '/test', root: __dirname } === path.join(__dirname, '/test')\n  self.cwdAbs = isAbsolute(self.cwd) ? self.cwd : makeAbs(self, self.cwd);\n  if (process.platform === \"win32\")\n    self.cwdAbs = self.cwdAbs.replace(/\\\\/g, \"/\");\n  self.nomount = !!options.nomount;\n\n  // disable comments and negation in Minimatch.\n  // Note that they are not supported in Glob itself anyway.\n  options.nonegate = true;\n  options.nocomment = true;\n\n  self.minimatch = new Minimatch(pattern, options);\n  self.options = self.minimatch.options;\n}\n\nfunction finish (self) {\n  var nou = self.nounique;\n  var all = nou ? [] : Object.create(null);\n\n  for (var i = 0, l = self.matches.length; i < l; i ++) {\n    var matches = self.matches[i];\n    if (!matches || Object.keys(matches).length === 0) {\n      if (self.nonull) {\n        // do like the shell, and spit out the literal glob\n        var literal = self.minimatch.globSet[i];\n        if (nou)\n          all.push(literal);\n        else\n          all[literal] = true;\n      }\n    } else {\n      // had matches\n      var m = Object.keys(matches);\n      if (nou)\n        all.push.apply(all, m);\n      else\n        m.forEach(function (m) {\n          all[m] = true;\n        });\n    }\n  }\n\n  if (!nou)\n    all = Object.keys(all);\n\n  if (!self.nosort)\n    all = all.sort(alphasort);\n\n  // at *some* point we statted all of these\n  if (self.mark) {\n    for (var i = 0; i < all.length; i++) {\n      all[i] = self._mark(all[i]);\n    }\n    if (self.nodir) {\n      all = all.filter(function (e) {\n        var notDir = !(/\\/$/.test(e));\n        var c = self.cache[e] || self.cache[makeAbs(self, e)];\n        if (notDir && c)\n          notDir = c !== 'DIR' && !Array.isArray(c);\n        return notDir\n      });\n    }\n  }\n\n  if (self.ignore.length)\n    all = all.filter(function(m) {\n      return !isIgnored(self, m)\n    });\n\n  self.found = all;\n}\n\nfunction mark (self, p) {\n  var abs = makeAbs(self, p);\n  var c = self.cache[abs];\n  var m = p;\n  if (c) {\n    var isDir = c === 'DIR' || Array.isArray(c);\n    var slash = p.slice(-1) === '/';\n\n    if (isDir && !slash)\n      m += '/';\n    else if (!isDir && slash)\n      m = m.slice(0, -1);\n\n    if (m !== p) {\n      var mabs = makeAbs(self, m);\n      self.statCache[mabs] = self.statCache[abs];\n      self.cache[mabs] = self.cache[abs];\n    }\n  }\n\n  return m\n}\n\n// lotta situps...\nfunction makeAbs (self, f) {\n  var abs = f;\n  if (f.charAt(0) === '/') {\n    abs = path$i.join(self.root, f);\n  } else if (isAbsolute(f) || f === '') {\n    abs = f;\n  } else if (self.changedCwd) {\n    abs = path$i.resolve(self.cwd, f);\n  } else {\n    abs = path$i.resolve(f);\n  }\n\n  if (process.platform === 'win32')\n    abs = abs.replace(/\\\\/g, '/');\n\n  return abs\n}\n\n\n// Return true, if pattern ends with globstar '**', for the accompanying parent directory.\n// Ex:- If node_modules/** is the pattern, add 'node_modules' to ignore list along with it's contents\nfunction isIgnored (self, path) {\n  if (!self.ignore.length)\n    return false\n\n  return self.ignore.some(function(item) {\n    return item.matcher.match(path) || !!(item.gmatcher && item.gmatcher.match(path))\n  })\n}\n\nfunction childrenIgnored (self, path) {\n  if (!self.ignore.length)\n    return false\n\n  return self.ignore.some(function(item) {\n    return !!(item.gmatcher && item.gmatcher.match(path))\n  })\n}\n\nvar sync$9;\nvar hasRequiredSync;\n\nfunction requireSync () {\n\tif (hasRequiredSync) return sync$9;\n\thasRequiredSync = 1;\n\tsync$9 = globSync;\n\tglobSync.GlobSync = GlobSync;\n\n\tvar rp = fs_realpath;\n\tvar minimatch = minimatch_1;\n\trequireGlob().Glob;\n\tvar path = require$$0$4;\n\tvar assert = assert$1;\n\tvar isAbsolute = pathIsAbsolute.exports;\n\tvar common = common$c;\n\tvar setopts = common.setopts;\n\tvar ownProp = common.ownProp;\n\tvar childrenIgnored = common.childrenIgnored;\n\tvar isIgnored = common.isIgnored;\n\n\tfunction globSync (pattern, options) {\n\t  if (typeof options === 'function' || arguments.length === 3)\n\t    throw new TypeError('callback provided to sync glob\\n'+\n\t                        'See: https://github.com/isaacs/node-glob/issues/167')\n\n\t  return new GlobSync(pattern, options).found\n\t}\n\n\tfunction GlobSync (pattern, options) {\n\t  if (!pattern)\n\t    throw new Error('must provide pattern')\n\n\t  if (typeof options === 'function' || arguments.length === 3)\n\t    throw new TypeError('callback provided to sync glob\\n'+\n\t                        'See: https://github.com/isaacs/node-glob/issues/167')\n\n\t  if (!(this instanceof GlobSync))\n\t    return new GlobSync(pattern, options)\n\n\t  setopts(this, pattern, options);\n\n\t  if (this.noprocess)\n\t    return this\n\n\t  var n = this.minimatch.set.length;\n\t  this.matches = new Array(n);\n\t  for (var i = 0; i < n; i ++) {\n\t    this._process(this.minimatch.set[i], i, false);\n\t  }\n\t  this._finish();\n\t}\n\n\tGlobSync.prototype._finish = function () {\n\t  assert(this instanceof GlobSync);\n\t  if (this.realpath) {\n\t    var self = this;\n\t    this.matches.forEach(function (matchset, index) {\n\t      var set = self.matches[index] = Object.create(null);\n\t      for (var p in matchset) {\n\t        try {\n\t          p = self._makeAbs(p);\n\t          var real = rp.realpathSync(p, self.realpathCache);\n\t          set[real] = true;\n\t        } catch (er) {\n\t          if (er.syscall === 'stat')\n\t            set[self._makeAbs(p)] = true;\n\t          else\n\t            throw er\n\t        }\n\t      }\n\t    });\n\t  }\n\t  common.finish(this);\n\t};\n\n\n\tGlobSync.prototype._process = function (pattern, index, inGlobStar) {\n\t  assert(this instanceof GlobSync);\n\n\t  // Get the first [n] parts of pattern that are all strings.\n\t  var n = 0;\n\t  while (typeof pattern[n] === 'string') {\n\t    n ++;\n\t  }\n\t  // now n is the index of the first one that is *not* a string.\n\n\t  // See if there's anything else\n\t  var prefix;\n\t  switch (n) {\n\t    // if not, then this is rather simple\n\t    case pattern.length:\n\t      this._processSimple(pattern.join('/'), index);\n\t      return\n\n\t    case 0:\n\t      // pattern *starts* with some non-trivial item.\n\t      // going to readdir(cwd), but not include the prefix in matches.\n\t      prefix = null;\n\t      break\n\n\t    default:\n\t      // pattern has some string bits in the front.\n\t      // whatever it starts with, whether that's 'absolute' like /foo/bar,\n\t      // or 'relative' like '../baz'\n\t      prefix = pattern.slice(0, n).join('/');\n\t      break\n\t  }\n\n\t  var remain = pattern.slice(n);\n\n\t  // get the list of entries.\n\t  var read;\n\t  if (prefix === null)\n\t    read = '.';\n\t  else if (isAbsolute(prefix) || isAbsolute(pattern.join('/'))) {\n\t    if (!prefix || !isAbsolute(prefix))\n\t      prefix = '/' + prefix;\n\t    read = prefix;\n\t  } else\n\t    read = prefix;\n\n\t  var abs = this._makeAbs(read);\n\n\t  //if ignored, skip processing\n\t  if (childrenIgnored(this, read))\n\t    return\n\n\t  var isGlobStar = remain[0] === minimatch.GLOBSTAR;\n\t  if (isGlobStar)\n\t    this._processGlobStar(prefix, read, abs, remain, index, inGlobStar);\n\t  else\n\t    this._processReaddir(prefix, read, abs, remain, index, inGlobStar);\n\t};\n\n\n\tGlobSync.prototype._processReaddir = function (prefix, read, abs, remain, index, inGlobStar) {\n\t  var entries = this._readdir(abs, inGlobStar);\n\n\t  // if the abs isn't a dir, then nothing can match!\n\t  if (!entries)\n\t    return\n\n\t  // It will only match dot entries if it starts with a dot, or if\n\t  // dot is set.  Stuff like @(.foo|.bar) isn't allowed.\n\t  var pn = remain[0];\n\t  var negate = !!this.minimatch.negate;\n\t  var rawGlob = pn._glob;\n\t  var dotOk = this.dot || rawGlob.charAt(0) === '.';\n\n\t  var matchedEntries = [];\n\t  for (var i = 0; i < entries.length; i++) {\n\t    var e = entries[i];\n\t    if (e.charAt(0) !== '.' || dotOk) {\n\t      var m;\n\t      if (negate && !prefix) {\n\t        m = !e.match(pn);\n\t      } else {\n\t        m = e.match(pn);\n\t      }\n\t      if (m)\n\t        matchedEntries.push(e);\n\t    }\n\t  }\n\n\t  var len = matchedEntries.length;\n\t  // If there are no matched entries, then nothing matches.\n\t  if (len === 0)\n\t    return\n\n\t  // if this is the last remaining pattern bit, then no need for\n\t  // an additional stat *unless* the user has specified mark or\n\t  // stat explicitly.  We know they exist, since readdir returned\n\t  // them.\n\n\t  if (remain.length === 1 && !this.mark && !this.stat) {\n\t    if (!this.matches[index])\n\t      this.matches[index] = Object.create(null);\n\n\t    for (var i = 0; i < len; i ++) {\n\t      var e = matchedEntries[i];\n\t      if (prefix) {\n\t        if (prefix.slice(-1) !== '/')\n\t          e = prefix + '/' + e;\n\t        else\n\t          e = prefix + e;\n\t      }\n\n\t      if (e.charAt(0) === '/' && !this.nomount) {\n\t        e = path.join(this.root, e);\n\t      }\n\t      this._emitMatch(index, e);\n\t    }\n\t    // This was the last one, and no stats were needed\n\t    return\n\t  }\n\n\t  // now test all matched entries as stand-ins for that part\n\t  // of the pattern.\n\t  remain.shift();\n\t  for (var i = 0; i < len; i ++) {\n\t    var e = matchedEntries[i];\n\t    var newPattern;\n\t    if (prefix)\n\t      newPattern = [prefix, e];\n\t    else\n\t      newPattern = [e];\n\t    this._process(newPattern.concat(remain), index, inGlobStar);\n\t  }\n\t};\n\n\n\tGlobSync.prototype._emitMatch = function (index, e) {\n\t  if (isIgnored(this, e))\n\t    return\n\n\t  var abs = this._makeAbs(e);\n\n\t  if (this.mark)\n\t    e = this._mark(e);\n\n\t  if (this.absolute) {\n\t    e = abs;\n\t  }\n\n\t  if (this.matches[index][e])\n\t    return\n\n\t  if (this.nodir) {\n\t    var c = this.cache[abs];\n\t    if (c === 'DIR' || Array.isArray(c))\n\t      return\n\t  }\n\n\t  this.matches[index][e] = true;\n\n\t  if (this.stat)\n\t    this._stat(e);\n\t};\n\n\n\tGlobSync.prototype._readdirInGlobStar = function (abs) {\n\t  // follow all symlinked directories forever\n\t  // just proceed as if this is a non-globstar situation\n\t  if (this.follow)\n\t    return this._readdir(abs, false)\n\n\t  var entries;\n\t  var lstat;\n\t  try {\n\t    lstat = this.fs.lstatSync(abs);\n\t  } catch (er) {\n\t    if (er.code === 'ENOENT') {\n\t      // lstat failed, doesn't exist\n\t      return null\n\t    }\n\t  }\n\n\t  var isSym = lstat && lstat.isSymbolicLink();\n\t  this.symlinks[abs] = isSym;\n\n\t  // If it's not a symlink or a dir, then it's definitely a regular file.\n\t  // don't bother doing a readdir in that case.\n\t  if (!isSym && lstat && !lstat.isDirectory())\n\t    this.cache[abs] = 'FILE';\n\t  else\n\t    entries = this._readdir(abs, false);\n\n\t  return entries\n\t};\n\n\tGlobSync.prototype._readdir = function (abs, inGlobStar) {\n\n\t  if (inGlobStar && !ownProp(this.symlinks, abs))\n\t    return this._readdirInGlobStar(abs)\n\n\t  if (ownProp(this.cache, abs)) {\n\t    var c = this.cache[abs];\n\t    if (!c || c === 'FILE')\n\t      return null\n\n\t    if (Array.isArray(c))\n\t      return c\n\t  }\n\n\t  try {\n\t    return this._readdirEntries(abs, this.fs.readdirSync(abs))\n\t  } catch (er) {\n\t    this._readdirError(abs, er);\n\t    return null\n\t  }\n\t};\n\n\tGlobSync.prototype._readdirEntries = function (abs, entries) {\n\t  // if we haven't asked to stat everything, then just\n\t  // assume that everything in there exists, so we can avoid\n\t  // having to stat it a second time.\n\t  if (!this.mark && !this.stat) {\n\t    for (var i = 0; i < entries.length; i ++) {\n\t      var e = entries[i];\n\t      if (abs === '/')\n\t        e = abs + e;\n\t      else\n\t        e = abs + '/' + e;\n\t      this.cache[e] = true;\n\t    }\n\t  }\n\n\t  this.cache[abs] = entries;\n\n\t  // mark and cache dir-ness\n\t  return entries\n\t};\n\n\tGlobSync.prototype._readdirError = function (f, er) {\n\t  // handle errors, and cache the information\n\t  switch (er.code) {\n\t    case 'ENOTSUP': // https://github.com/isaacs/node-glob/issues/205\n\t    case 'ENOTDIR': // totally normal. means it *does* exist.\n\t      var abs = this._makeAbs(f);\n\t      this.cache[abs] = 'FILE';\n\t      if (abs === this.cwdAbs) {\n\t        var error = new Error(er.code + ' invalid cwd ' + this.cwd);\n\t        error.path = this.cwd;\n\t        error.code = er.code;\n\t        throw error\n\t      }\n\t      break\n\n\t    case 'ENOENT': // not terribly unusual\n\t    case 'ELOOP':\n\t    case 'ENAMETOOLONG':\n\t    case 'UNKNOWN':\n\t      this.cache[this._makeAbs(f)] = false;\n\t      break\n\n\t    default: // some unusual error.  Treat as failure.\n\t      this.cache[this._makeAbs(f)] = false;\n\t      if (this.strict)\n\t        throw er\n\t      if (!this.silent)\n\t        console.error('glob error', er);\n\t      break\n\t  }\n\t};\n\n\tGlobSync.prototype._processGlobStar = function (prefix, read, abs, remain, index, inGlobStar) {\n\n\t  var entries = this._readdir(abs, inGlobStar);\n\n\t  // no entries means not a dir, so it can never have matches\n\t  // foo.txt/** doesn't match foo.txt\n\t  if (!entries)\n\t    return\n\n\t  // test without the globstar, and with every child both below\n\t  // and replacing the globstar.\n\t  var remainWithoutGlobStar = remain.slice(1);\n\t  var gspref = prefix ? [ prefix ] : [];\n\t  var noGlobStar = gspref.concat(remainWithoutGlobStar);\n\n\t  // the noGlobStar pattern exits the inGlobStar state\n\t  this._process(noGlobStar, index, false);\n\n\t  var len = entries.length;\n\t  var isSym = this.symlinks[abs];\n\n\t  // If it's a symlink, and we're in a globstar, then stop\n\t  if (isSym && inGlobStar)\n\t    return\n\n\t  for (var i = 0; i < len; i++) {\n\t    var e = entries[i];\n\t    if (e.charAt(0) === '.' && !this.dot)\n\t      continue\n\n\t    // these two cases enter the inGlobStar state\n\t    var instead = gspref.concat(entries[i], remainWithoutGlobStar);\n\t    this._process(instead, index, true);\n\n\t    var below = gspref.concat(entries[i], remain);\n\t    this._process(below, index, true);\n\t  }\n\t};\n\n\tGlobSync.prototype._processSimple = function (prefix, index) {\n\t  // XXX review this.  Shouldn't it be doing the mounting etc\n\t  // before doing stat?  kinda weird?\n\t  var exists = this._stat(prefix);\n\n\t  if (!this.matches[index])\n\t    this.matches[index] = Object.create(null);\n\n\t  // If it doesn't exist, then just mark the lack of results\n\t  if (!exists)\n\t    return\n\n\t  if (prefix && isAbsolute(prefix) && !this.nomount) {\n\t    var trail = /[\\/\\\\]$/.test(prefix);\n\t    if (prefix.charAt(0) === '/') {\n\t      prefix = path.join(this.root, prefix);\n\t    } else {\n\t      prefix = path.resolve(this.root, prefix);\n\t      if (trail)\n\t        prefix += '/';\n\t    }\n\t  }\n\n\t  if (process.platform === 'win32')\n\t    prefix = prefix.replace(/\\\\/g, '/');\n\n\t  // Mark this as a match\n\t  this._emitMatch(index, prefix);\n\t};\n\n\t// Returns either 'DIR', 'FILE', or false\n\tGlobSync.prototype._stat = function (f) {\n\t  var abs = this._makeAbs(f);\n\t  var needDir = f.slice(-1) === '/';\n\n\t  if (f.length > this.maxLength)\n\t    return false\n\n\t  if (!this.stat && ownProp(this.cache, abs)) {\n\t    var c = this.cache[abs];\n\n\t    if (Array.isArray(c))\n\t      c = 'DIR';\n\n\t    // It exists, but maybe not how we need it\n\t    if (!needDir || c === 'DIR')\n\t      return c\n\n\t    if (needDir && c === 'FILE')\n\t      return false\n\n\t    // otherwise we have to stat, because maybe c=true\n\t    // if we know it exists, but not what it is.\n\t  }\n\t  var stat = this.statCache[abs];\n\t  if (!stat) {\n\t    var lstat;\n\t    try {\n\t      lstat = this.fs.lstatSync(abs);\n\t    } catch (er) {\n\t      if (er && (er.code === 'ENOENT' || er.code === 'ENOTDIR')) {\n\t        this.statCache[abs] = false;\n\t        return false\n\t      }\n\t    }\n\n\t    if (lstat && lstat.isSymbolicLink()) {\n\t      try {\n\t        stat = this.fs.statSync(abs);\n\t      } catch (er) {\n\t        stat = lstat;\n\t      }\n\t    } else {\n\t      stat = lstat;\n\t    }\n\t  }\n\n\t  this.statCache[abs] = stat;\n\n\t  var c = true;\n\t  if (stat)\n\t    c = stat.isDirectory() ? 'DIR' : 'FILE';\n\n\t  this.cache[abs] = this.cache[abs] || c;\n\n\t  if (needDir && c === 'FILE')\n\t    return false\n\n\t  return c\n\t};\n\n\tGlobSync.prototype._mark = function (p) {\n\t  return common.mark(this, p)\n\t};\n\n\tGlobSync.prototype._makeAbs = function (f) {\n\t  return common.makeAbs(this, f)\n\t};\n\treturn sync$9;\n}\n\n// Returns a wrapper function that returns a wrapped callback\n// The wrapper function should do some stuff, and return a\n// presumably different callback function.\n// This makes sure that own properties are retained, so that\n// decorations and such are not lost along the way.\nvar wrappy_1 = wrappy$2;\nfunction wrappy$2 (fn, cb) {\n  if (fn && cb) return wrappy$2(fn)(cb)\n\n  if (typeof fn !== 'function')\n    throw new TypeError('need wrapper function')\n\n  Object.keys(fn).forEach(function (k) {\n    wrapper[k] = fn[k];\n  });\n\n  return wrapper\n\n  function wrapper() {\n    var args = new Array(arguments.length);\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i];\n    }\n    var ret = fn.apply(this, args);\n    var cb = args[args.length-1];\n    if (typeof ret === 'function' && ret !== cb) {\n      Object.keys(cb).forEach(function (k) {\n        ret[k] = cb[k];\n      });\n    }\n    return ret\n  }\n}\n\nvar once$2 = {exports: {}};\n\nvar wrappy$1 = wrappy_1;\nonce$2.exports = wrappy$1(once$1);\nonce$2.exports.strict = wrappy$1(onceStrict);\n\nonce$1.proto = once$1(function () {\n  Object.defineProperty(Function.prototype, 'once', {\n    value: function () {\n      return once$1(this)\n    },\n    configurable: true\n  });\n\n  Object.defineProperty(Function.prototype, 'onceStrict', {\n    value: function () {\n      return onceStrict(this)\n    },\n    configurable: true\n  });\n});\n\nfunction once$1 (fn) {\n  var f = function () {\n    if (f.called) return f.value\n    f.called = true;\n    return f.value = fn.apply(this, arguments)\n  };\n  f.called = false;\n  return f\n}\n\nfunction onceStrict (fn) {\n  var f = function () {\n    if (f.called)\n      throw new Error(f.onceError)\n    f.called = true;\n    return f.value = fn.apply(this, arguments)\n  };\n  var name = fn.name || 'Function wrapped with `once`';\n  f.onceError = name + \" shouldn't be called more than once\";\n  f.called = false;\n  return f\n}\n\nvar wrappy = wrappy_1;\nvar reqs = Object.create(null);\nvar once = once$2.exports;\n\nvar inflight_1 = wrappy(inflight);\n\nfunction inflight (key, cb) {\n  if (reqs[key]) {\n    reqs[key].push(cb);\n    return null\n  } else {\n    reqs[key] = [cb];\n    return makeres(key)\n  }\n}\n\nfunction makeres (key) {\n  return once(function RES () {\n    var cbs = reqs[key];\n    var len = cbs.length;\n    var args = slice$1(arguments);\n\n    // XXX It's somewhat ambiguous whether a new callback added in this\n    // pass should be queued for later execution if something in the\n    // list of callbacks throws, or if it should just be discarded.\n    // However, it's such an edge case that it hardly matters, and either\n    // choice is likely as surprising as the other.\n    // As it happens, we do go ahead and schedule it for later execution.\n    try {\n      for (var i = 0; i < len; i++) {\n        cbs[i].apply(null, args);\n      }\n    } finally {\n      if (cbs.length > len) {\n        // added more in the interim.\n        // de-zalgo, just in case, but don't call again.\n        cbs.splice(0, len);\n        process.nextTick(function () {\n          RES.apply(null, args);\n        });\n      } else {\n        delete reqs[key];\n      }\n    }\n  })\n}\n\nfunction slice$1 (args) {\n  var length = args.length;\n  var array = [];\n\n  for (var i = 0; i < length; i++) array[i] = args[i];\n  return array\n}\n\nvar glob_1;\nvar hasRequiredGlob;\n\nfunction requireGlob () {\n\tif (hasRequiredGlob) return glob_1;\n\thasRequiredGlob = 1;\n\t// Approach:\n\t//\n\t// 1. Get the minimatch set\n\t// 2. For each pattern in the set, PROCESS(pattern, false)\n\t// 3. Store matches per-set, then uniq them\n\t//\n\t// PROCESS(pattern, inGlobStar)\n\t// Get the first [n] items from pattern that are all strings\n\t// Join these together.  This is PREFIX.\n\t//   If there is no more remaining, then stat(PREFIX) and\n\t//   add to matches if it succeeds.  END.\n\t//\n\t// If inGlobStar and PREFIX is symlink and points to dir\n\t//   set ENTRIES = []\n\t// else readdir(PREFIX) as ENTRIES\n\t//   If fail, END\n\t//\n\t// with ENTRIES\n\t//   If pattern[n] is GLOBSTAR\n\t//     // handle the case where the globstar match is empty\n\t//     // by pruning it out, and testing the resulting pattern\n\t//     PROCESS(pattern[0..n] + pattern[n+1 .. $], false)\n\t//     // handle other cases.\n\t//     for ENTRY in ENTRIES (not dotfiles)\n\t//       // attach globstar + tail onto the entry\n\t//       // Mark that this entry is a globstar match\n\t//       PROCESS(pattern[0..n] + ENTRY + pattern[n .. $], true)\n\t//\n\t//   else // not globstar\n\t//     for ENTRY in ENTRIES (not dotfiles, unless pattern[n] is dot)\n\t//       Test ENTRY against pattern[n]\n\t//       If fails, continue\n\t//       If passes, PROCESS(pattern[0..n] + item + pattern[n+1 .. $])\n\t//\n\t// Caveat:\n\t//   Cache all stats and readdirs results to minimize syscall.  Since all\n\t//   we ever care about is existence and directory-ness, we can just keep\n\t//   `true` for files, and [children,...] for directories, or `false` for\n\t//   things that don't exist.\n\n\tglob_1 = glob;\n\n\tvar rp = fs_realpath;\n\tvar minimatch = minimatch_1;\n\tvar inherits$1 = inherits.exports;\n\tvar EE = require$$0$5.EventEmitter;\n\tvar path = require$$0$4;\n\tvar assert = assert$1;\n\tvar isAbsolute = pathIsAbsolute.exports;\n\tvar globSync = requireSync();\n\tvar common = common$c;\n\tvar setopts = common.setopts;\n\tvar ownProp = common.ownProp;\n\tvar inflight = inflight_1;\n\tvar childrenIgnored = common.childrenIgnored;\n\tvar isIgnored = common.isIgnored;\n\n\tvar once = once$2.exports;\n\n\tfunction glob (pattern, options, cb) {\n\t  if (typeof options === 'function') cb = options, options = {};\n\t  if (!options) options = {};\n\n\t  if (options.sync) {\n\t    if (cb)\n\t      throw new TypeError('callback provided to sync glob')\n\t    return globSync(pattern, options)\n\t  }\n\n\t  return new Glob(pattern, options, cb)\n\t}\n\n\tglob.sync = globSync;\n\tvar GlobSync = glob.GlobSync = globSync.GlobSync;\n\n\t// old api surface\n\tglob.glob = glob;\n\n\tfunction extend (origin, add) {\n\t  if (add === null || typeof add !== 'object') {\n\t    return origin\n\t  }\n\n\t  var keys = Object.keys(add);\n\t  var i = keys.length;\n\t  while (i--) {\n\t    origin[keys[i]] = add[keys[i]];\n\t  }\n\t  return origin\n\t}\n\n\tglob.hasMagic = function (pattern, options_) {\n\t  var options = extend({}, options_);\n\t  options.noprocess = true;\n\n\t  var g = new Glob(pattern, options);\n\t  var set = g.minimatch.set;\n\n\t  if (!pattern)\n\t    return false\n\n\t  if (set.length > 1)\n\t    return true\n\n\t  for (var j = 0; j < set[0].length; j++) {\n\t    if (typeof set[0][j] !== 'string')\n\t      return true\n\t  }\n\n\t  return false\n\t};\n\n\tglob.Glob = Glob;\n\tinherits$1(Glob, EE);\n\tfunction Glob (pattern, options, cb) {\n\t  if (typeof options === 'function') {\n\t    cb = options;\n\t    options = null;\n\t  }\n\n\t  if (options && options.sync) {\n\t    if (cb)\n\t      throw new TypeError('callback provided to sync glob')\n\t    return new GlobSync(pattern, options)\n\t  }\n\n\t  if (!(this instanceof Glob))\n\t    return new Glob(pattern, options, cb)\n\n\t  setopts(this, pattern, options);\n\t  this._didRealPath = false;\n\n\t  // process each pattern in the minimatch set\n\t  var n = this.minimatch.set.length;\n\n\t  // The matches are stored as {<filename>: true,...} so that\n\t  // duplicates are automagically pruned.\n\t  // Later, we do an Object.keys() on these.\n\t  // Keep them as a list so we can fill in when nonull is set.\n\t  this.matches = new Array(n);\n\n\t  if (typeof cb === 'function') {\n\t    cb = once(cb);\n\t    this.on('error', cb);\n\t    this.on('end', function (matches) {\n\t      cb(null, matches);\n\t    });\n\t  }\n\n\t  var self = this;\n\t  this._processing = 0;\n\n\t  this._emitQueue = [];\n\t  this._processQueue = [];\n\t  this.paused = false;\n\n\t  if (this.noprocess)\n\t    return this\n\n\t  if (n === 0)\n\t    return done()\n\n\t  var sync = true;\n\t  for (var i = 0; i < n; i ++) {\n\t    this._process(this.minimatch.set[i], i, false, done);\n\t  }\n\t  sync = false;\n\n\t  function done () {\n\t    --self._processing;\n\t    if (self._processing <= 0) {\n\t      if (sync) {\n\t        process.nextTick(function () {\n\t          self._finish();\n\t        });\n\t      } else {\n\t        self._finish();\n\t      }\n\t    }\n\t  }\n\t}\n\n\tGlob.prototype._finish = function () {\n\t  assert(this instanceof Glob);\n\t  if (this.aborted)\n\t    return\n\n\t  if (this.realpath && !this._didRealpath)\n\t    return this._realpath()\n\n\t  common.finish(this);\n\t  this.emit('end', this.found);\n\t};\n\n\tGlob.prototype._realpath = function () {\n\t  if (this._didRealpath)\n\t    return\n\n\t  this._didRealpath = true;\n\n\t  var n = this.matches.length;\n\t  if (n === 0)\n\t    return this._finish()\n\n\t  var self = this;\n\t  for (var i = 0; i < this.matches.length; i++)\n\t    this._realpathSet(i, next);\n\n\t  function next () {\n\t    if (--n === 0)\n\t      self._finish();\n\t  }\n\t};\n\n\tGlob.prototype._realpathSet = function (index, cb) {\n\t  var matchset = this.matches[index];\n\t  if (!matchset)\n\t    return cb()\n\n\t  var found = Object.keys(matchset);\n\t  var self = this;\n\t  var n = found.length;\n\n\t  if (n === 0)\n\t    return cb()\n\n\t  var set = this.matches[index] = Object.create(null);\n\t  found.forEach(function (p, i) {\n\t    // If there's a problem with the stat, then it means that\n\t    // one or more of the links in the realpath couldn't be\n\t    // resolved.  just return the abs value in that case.\n\t    p = self._makeAbs(p);\n\t    rp.realpath(p, self.realpathCache, function (er, real) {\n\t      if (!er)\n\t        set[real] = true;\n\t      else if (er.syscall === 'stat')\n\t        set[p] = true;\n\t      else\n\t        self.emit('error', er); // srsly wtf right here\n\n\t      if (--n === 0) {\n\t        self.matches[index] = set;\n\t        cb();\n\t      }\n\t    });\n\t  });\n\t};\n\n\tGlob.prototype._mark = function (p) {\n\t  return common.mark(this, p)\n\t};\n\n\tGlob.prototype._makeAbs = function (f) {\n\t  return common.makeAbs(this, f)\n\t};\n\n\tGlob.prototype.abort = function () {\n\t  this.aborted = true;\n\t  this.emit('abort');\n\t};\n\n\tGlob.prototype.pause = function () {\n\t  if (!this.paused) {\n\t    this.paused = true;\n\t    this.emit('pause');\n\t  }\n\t};\n\n\tGlob.prototype.resume = function () {\n\t  if (this.paused) {\n\t    this.emit('resume');\n\t    this.paused = false;\n\t    if (this._emitQueue.length) {\n\t      var eq = this._emitQueue.slice(0);\n\t      this._emitQueue.length = 0;\n\t      for (var i = 0; i < eq.length; i ++) {\n\t        var e = eq[i];\n\t        this._emitMatch(e[0], e[1]);\n\t      }\n\t    }\n\t    if (this._processQueue.length) {\n\t      var pq = this._processQueue.slice(0);\n\t      this._processQueue.length = 0;\n\t      for (var i = 0; i < pq.length; i ++) {\n\t        var p = pq[i];\n\t        this._processing--;\n\t        this._process(p[0], p[1], p[2], p[3]);\n\t      }\n\t    }\n\t  }\n\t};\n\n\tGlob.prototype._process = function (pattern, index, inGlobStar, cb) {\n\t  assert(this instanceof Glob);\n\t  assert(typeof cb === 'function');\n\n\t  if (this.aborted)\n\t    return\n\n\t  this._processing++;\n\t  if (this.paused) {\n\t    this._processQueue.push([pattern, index, inGlobStar, cb]);\n\t    return\n\t  }\n\n\t  //console.error('PROCESS %d', this._processing, pattern)\n\n\t  // Get the first [n] parts of pattern that are all strings.\n\t  var n = 0;\n\t  while (typeof pattern[n] === 'string') {\n\t    n ++;\n\t  }\n\t  // now n is the index of the first one that is *not* a string.\n\n\t  // see if there's anything else\n\t  var prefix;\n\t  switch (n) {\n\t    // if not, then this is rather simple\n\t    case pattern.length:\n\t      this._processSimple(pattern.join('/'), index, cb);\n\t      return\n\n\t    case 0:\n\t      // pattern *starts* with some non-trivial item.\n\t      // going to readdir(cwd), but not include the prefix in matches.\n\t      prefix = null;\n\t      break\n\n\t    default:\n\t      // pattern has some string bits in the front.\n\t      // whatever it starts with, whether that's 'absolute' like /foo/bar,\n\t      // or 'relative' like '../baz'\n\t      prefix = pattern.slice(0, n).join('/');\n\t      break\n\t  }\n\n\t  var remain = pattern.slice(n);\n\n\t  // get the list of entries.\n\t  var read;\n\t  if (prefix === null)\n\t    read = '.';\n\t  else if (isAbsolute(prefix) || isAbsolute(pattern.join('/'))) {\n\t    if (!prefix || !isAbsolute(prefix))\n\t      prefix = '/' + prefix;\n\t    read = prefix;\n\t  } else\n\t    read = prefix;\n\n\t  var abs = this._makeAbs(read);\n\n\t  //if ignored, skip _processing\n\t  if (childrenIgnored(this, read))\n\t    return cb()\n\n\t  var isGlobStar = remain[0] === minimatch.GLOBSTAR;\n\t  if (isGlobStar)\n\t    this._processGlobStar(prefix, read, abs, remain, index, inGlobStar, cb);\n\t  else\n\t    this._processReaddir(prefix, read, abs, remain, index, inGlobStar, cb);\n\t};\n\n\tGlob.prototype._processReaddir = function (prefix, read, abs, remain, index, inGlobStar, cb) {\n\t  var self = this;\n\t  this._readdir(abs, inGlobStar, function (er, entries) {\n\t    return self._processReaddir2(prefix, read, abs, remain, index, inGlobStar, entries, cb)\n\t  });\n\t};\n\n\tGlob.prototype._processReaddir2 = function (prefix, read, abs, remain, index, inGlobStar, entries, cb) {\n\n\t  // if the abs isn't a dir, then nothing can match!\n\t  if (!entries)\n\t    return cb()\n\n\t  // It will only match dot entries if it starts with a dot, or if\n\t  // dot is set.  Stuff like @(.foo|.bar) isn't allowed.\n\t  var pn = remain[0];\n\t  var negate = !!this.minimatch.negate;\n\t  var rawGlob = pn._glob;\n\t  var dotOk = this.dot || rawGlob.charAt(0) === '.';\n\n\t  var matchedEntries = [];\n\t  for (var i = 0; i < entries.length; i++) {\n\t    var e = entries[i];\n\t    if (e.charAt(0) !== '.' || dotOk) {\n\t      var m;\n\t      if (negate && !prefix) {\n\t        m = !e.match(pn);\n\t      } else {\n\t        m = e.match(pn);\n\t      }\n\t      if (m)\n\t        matchedEntries.push(e);\n\t    }\n\t  }\n\n\t  //console.error('prd2', prefix, entries, remain[0]._glob, matchedEntries)\n\n\t  var len = matchedEntries.length;\n\t  // If there are no matched entries, then nothing matches.\n\t  if (len === 0)\n\t    return cb()\n\n\t  // if this is the last remaining pattern bit, then no need for\n\t  // an additional stat *unless* the user has specified mark or\n\t  // stat explicitly.  We know they exist, since readdir returned\n\t  // them.\n\n\t  if (remain.length === 1 && !this.mark && !this.stat) {\n\t    if (!this.matches[index])\n\t      this.matches[index] = Object.create(null);\n\n\t    for (var i = 0; i < len; i ++) {\n\t      var e = matchedEntries[i];\n\t      if (prefix) {\n\t        if (prefix !== '/')\n\t          e = prefix + '/' + e;\n\t        else\n\t          e = prefix + e;\n\t      }\n\n\t      if (e.charAt(0) === '/' && !this.nomount) {\n\t        e = path.join(this.root, e);\n\t      }\n\t      this._emitMatch(index, e);\n\t    }\n\t    // This was the last one, and no stats were needed\n\t    return cb()\n\t  }\n\n\t  // now test all matched entries as stand-ins for that part\n\t  // of the pattern.\n\t  remain.shift();\n\t  for (var i = 0; i < len; i ++) {\n\t    var e = matchedEntries[i];\n\t    if (prefix) {\n\t      if (prefix !== '/')\n\t        e = prefix + '/' + e;\n\t      else\n\t        e = prefix + e;\n\t    }\n\t    this._process([e].concat(remain), index, inGlobStar, cb);\n\t  }\n\t  cb();\n\t};\n\n\tGlob.prototype._emitMatch = function (index, e) {\n\t  if (this.aborted)\n\t    return\n\n\t  if (isIgnored(this, e))\n\t    return\n\n\t  if (this.paused) {\n\t    this._emitQueue.push([index, e]);\n\t    return\n\t  }\n\n\t  var abs = isAbsolute(e) ? e : this._makeAbs(e);\n\n\t  if (this.mark)\n\t    e = this._mark(e);\n\n\t  if (this.absolute)\n\t    e = abs;\n\n\t  if (this.matches[index][e])\n\t    return\n\n\t  if (this.nodir) {\n\t    var c = this.cache[abs];\n\t    if (c === 'DIR' || Array.isArray(c))\n\t      return\n\t  }\n\n\t  this.matches[index][e] = true;\n\n\t  var st = this.statCache[abs];\n\t  if (st)\n\t    this.emit('stat', e, st);\n\n\t  this.emit('match', e);\n\t};\n\n\tGlob.prototype._readdirInGlobStar = function (abs, cb) {\n\t  if (this.aborted)\n\t    return\n\n\t  // follow all symlinked directories forever\n\t  // just proceed as if this is a non-globstar situation\n\t  if (this.follow)\n\t    return this._readdir(abs, false, cb)\n\n\t  var lstatkey = 'lstat\\0' + abs;\n\t  var self = this;\n\t  var lstatcb = inflight(lstatkey, lstatcb_);\n\n\t  if (lstatcb)\n\t    self.fs.lstat(abs, lstatcb);\n\n\t  function lstatcb_ (er, lstat) {\n\t    if (er && er.code === 'ENOENT')\n\t      return cb()\n\n\t    var isSym = lstat && lstat.isSymbolicLink();\n\t    self.symlinks[abs] = isSym;\n\n\t    // If it's not a symlink or a dir, then it's definitely a regular file.\n\t    // don't bother doing a readdir in that case.\n\t    if (!isSym && lstat && !lstat.isDirectory()) {\n\t      self.cache[abs] = 'FILE';\n\t      cb();\n\t    } else\n\t      self._readdir(abs, false, cb);\n\t  }\n\t};\n\n\tGlob.prototype._readdir = function (abs, inGlobStar, cb) {\n\t  if (this.aborted)\n\t    return\n\n\t  cb = inflight('readdir\\0'+abs+'\\0'+inGlobStar, cb);\n\t  if (!cb)\n\t    return\n\n\t  //console.error('RD %j %j', +inGlobStar, abs)\n\t  if (inGlobStar && !ownProp(this.symlinks, abs))\n\t    return this._readdirInGlobStar(abs, cb)\n\n\t  if (ownProp(this.cache, abs)) {\n\t    var c = this.cache[abs];\n\t    if (!c || c === 'FILE')\n\t      return cb()\n\n\t    if (Array.isArray(c))\n\t      return cb(null, c)\n\t  }\n\n\t  var self = this;\n\t  self.fs.readdir(abs, readdirCb(this, abs, cb));\n\t};\n\n\tfunction readdirCb (self, abs, cb) {\n\t  return function (er, entries) {\n\t    if (er)\n\t      self._readdirError(abs, er, cb);\n\t    else\n\t      self._readdirEntries(abs, entries, cb);\n\t  }\n\t}\n\n\tGlob.prototype._readdirEntries = function (abs, entries, cb) {\n\t  if (this.aborted)\n\t    return\n\n\t  // if we haven't asked to stat everything, then just\n\t  // assume that everything in there exists, so we can avoid\n\t  // having to stat it a second time.\n\t  if (!this.mark && !this.stat) {\n\t    for (var i = 0; i < entries.length; i ++) {\n\t      var e = entries[i];\n\t      if (abs === '/')\n\t        e = abs + e;\n\t      else\n\t        e = abs + '/' + e;\n\t      this.cache[e] = true;\n\t    }\n\t  }\n\n\t  this.cache[abs] = entries;\n\t  return cb(null, entries)\n\t};\n\n\tGlob.prototype._readdirError = function (f, er, cb) {\n\t  if (this.aborted)\n\t    return\n\n\t  // handle errors, and cache the information\n\t  switch (er.code) {\n\t    case 'ENOTSUP': // https://github.com/isaacs/node-glob/issues/205\n\t    case 'ENOTDIR': // totally normal. means it *does* exist.\n\t      var abs = this._makeAbs(f);\n\t      this.cache[abs] = 'FILE';\n\t      if (abs === this.cwdAbs) {\n\t        var error = new Error(er.code + ' invalid cwd ' + this.cwd);\n\t        error.path = this.cwd;\n\t        error.code = er.code;\n\t        this.emit('error', error);\n\t        this.abort();\n\t      }\n\t      break\n\n\t    case 'ENOENT': // not terribly unusual\n\t    case 'ELOOP':\n\t    case 'ENAMETOOLONG':\n\t    case 'UNKNOWN':\n\t      this.cache[this._makeAbs(f)] = false;\n\t      break\n\n\t    default: // some unusual error.  Treat as failure.\n\t      this.cache[this._makeAbs(f)] = false;\n\t      if (this.strict) {\n\t        this.emit('error', er);\n\t        // If the error is handled, then we abort\n\t        // if not, we threw out of here\n\t        this.abort();\n\t      }\n\t      if (!this.silent)\n\t        console.error('glob error', er);\n\t      break\n\t  }\n\n\t  return cb()\n\t};\n\n\tGlob.prototype._processGlobStar = function (prefix, read, abs, remain, index, inGlobStar, cb) {\n\t  var self = this;\n\t  this._readdir(abs, inGlobStar, function (er, entries) {\n\t    self._processGlobStar2(prefix, read, abs, remain, index, inGlobStar, entries, cb);\n\t  });\n\t};\n\n\n\tGlob.prototype._processGlobStar2 = function (prefix, read, abs, remain, index, inGlobStar, entries, cb) {\n\t  //console.error('pgs2', prefix, remain[0], entries)\n\n\t  // no entries means not a dir, so it can never have matches\n\t  // foo.txt/** doesn't match foo.txt\n\t  if (!entries)\n\t    return cb()\n\n\t  // test without the globstar, and with every child both below\n\t  // and replacing the globstar.\n\t  var remainWithoutGlobStar = remain.slice(1);\n\t  var gspref = prefix ? [ prefix ] : [];\n\t  var noGlobStar = gspref.concat(remainWithoutGlobStar);\n\n\t  // the noGlobStar pattern exits the inGlobStar state\n\t  this._process(noGlobStar, index, false, cb);\n\n\t  var isSym = this.symlinks[abs];\n\t  var len = entries.length;\n\n\t  // If it's a symlink, and we're in a globstar, then stop\n\t  if (isSym && inGlobStar)\n\t    return cb()\n\n\t  for (var i = 0; i < len; i++) {\n\t    var e = entries[i];\n\t    if (e.charAt(0) === '.' && !this.dot)\n\t      continue\n\n\t    // these two cases enter the inGlobStar state\n\t    var instead = gspref.concat(entries[i], remainWithoutGlobStar);\n\t    this._process(instead, index, true, cb);\n\n\t    var below = gspref.concat(entries[i], remain);\n\t    this._process(below, index, true, cb);\n\t  }\n\n\t  cb();\n\t};\n\n\tGlob.prototype._processSimple = function (prefix, index, cb) {\n\t  // XXX review this.  Shouldn't it be doing the mounting etc\n\t  // before doing stat?  kinda weird?\n\t  var self = this;\n\t  this._stat(prefix, function (er, exists) {\n\t    self._processSimple2(prefix, index, er, exists, cb);\n\t  });\n\t};\n\tGlob.prototype._processSimple2 = function (prefix, index, er, exists, cb) {\n\n\t  //console.error('ps2', prefix, exists)\n\n\t  if (!this.matches[index])\n\t    this.matches[index] = Object.create(null);\n\n\t  // If it doesn't exist, then just mark the lack of results\n\t  if (!exists)\n\t    return cb()\n\n\t  if (prefix && isAbsolute(prefix) && !this.nomount) {\n\t    var trail = /[\\/\\\\]$/.test(prefix);\n\t    if (prefix.charAt(0) === '/') {\n\t      prefix = path.join(this.root, prefix);\n\t    } else {\n\t      prefix = path.resolve(this.root, prefix);\n\t      if (trail)\n\t        prefix += '/';\n\t    }\n\t  }\n\n\t  if (process.platform === 'win32')\n\t    prefix = prefix.replace(/\\\\/g, '/');\n\n\t  // Mark this as a match\n\t  this._emitMatch(index, prefix);\n\t  cb();\n\t};\n\n\t// Returns either 'DIR', 'FILE', or false\n\tGlob.prototype._stat = function (f, cb) {\n\t  var abs = this._makeAbs(f);\n\t  var needDir = f.slice(-1) === '/';\n\n\t  if (f.length > this.maxLength)\n\t    return cb()\n\n\t  if (!this.stat && ownProp(this.cache, abs)) {\n\t    var c = this.cache[abs];\n\n\t    if (Array.isArray(c))\n\t      c = 'DIR';\n\n\t    // It exists, but maybe not how we need it\n\t    if (!needDir || c === 'DIR')\n\t      return cb(null, c)\n\n\t    if (needDir && c === 'FILE')\n\t      return cb()\n\n\t    // otherwise we have to stat, because maybe c=true\n\t    // if we know it exists, but not what it is.\n\t  }\n\t  var stat = this.statCache[abs];\n\t  if (stat !== undefined) {\n\t    if (stat === false)\n\t      return cb(null, stat)\n\t    else {\n\t      var type = stat.isDirectory() ? 'DIR' : 'FILE';\n\t      if (needDir && type === 'FILE')\n\t        return cb()\n\t      else\n\t        return cb(null, type, stat)\n\t    }\n\t  }\n\n\t  var self = this;\n\t  var statcb = inflight('stat\\0' + abs, lstatcb_);\n\t  if (statcb)\n\t    self.fs.lstat(abs, statcb);\n\n\t  function lstatcb_ (er, lstat) {\n\t    if (lstat && lstat.isSymbolicLink()) {\n\t      // If it's a symlink, then treat it as the target, unless\n\t      // the target does not exist, then treat it as a file.\n\t      return self.fs.stat(abs, function (er, stat) {\n\t        if (er)\n\t          self._stat2(f, abs, null, lstat, cb);\n\t        else\n\t          self._stat2(f, abs, er, stat, cb);\n\t      })\n\t    } else {\n\t      self._stat2(f, abs, er, lstat, cb);\n\t    }\n\t  }\n\t};\n\n\tGlob.prototype._stat2 = function (f, abs, er, stat, cb) {\n\t  if (er && (er.code === 'ENOENT' || er.code === 'ENOTDIR')) {\n\t    this.statCache[abs] = false;\n\t    return cb()\n\t  }\n\n\t  var needDir = f.slice(-1) === '/';\n\t  this.statCache[abs] = stat;\n\n\t  if (abs.slice(-1) === '/' && stat && !stat.isDirectory())\n\t    return cb(null, false, stat)\n\n\t  var c = true;\n\t  if (stat)\n\t    c = stat.isDirectory() ? 'DIR' : 'FILE';\n\t  this.cache[abs] = this.cache[abs] || c;\n\n\t  if (needDir && c === 'FILE')\n\t    return cb()\n\n\t  return cb(null, c, stat)\n\t};\n\treturn glob_1;\n}\n\nvar globExports = requireGlob();\n\n// @ts-check\n/** @typedef { import('estree').BaseNode} BaseNode */\n\n/** @typedef {{\n\tskip: () => void;\n\tremove: () => void;\n\treplace: (node: BaseNode) => void;\n}} WalkerContext */\n\nclass WalkerBase$1 {\n\tconstructor() {\n\t\t/** @type {boolean} */\n\t\tthis.should_skip = false;\n\n\t\t/** @type {boolean} */\n\t\tthis.should_remove = false;\n\n\t\t/** @type {BaseNode | null} */\n\t\tthis.replacement = null;\n\n\t\t/** @type {WalkerContext} */\n\t\tthis.context = {\n\t\t\tskip: () => (this.should_skip = true),\n\t\t\tremove: () => (this.should_remove = true),\n\t\t\treplace: (node) => (this.replacement = node)\n\t\t};\n\t}\n\n\t/**\n\t *\n\t * @param {any} parent\n\t * @param {string} prop\n\t * @param {number} index\n\t * @param {BaseNode} node\n\t */\n\treplace(parent, prop, index, node) {\n\t\tif (parent) {\n\t\t\tif (index !== null) {\n\t\t\t\tparent[prop][index] = node;\n\t\t\t} else {\n\t\t\t\tparent[prop] = node;\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t *\n\t * @param {any} parent\n\t * @param {string} prop\n\t * @param {number} index\n\t */\n\tremove(parent, prop, index) {\n\t\tif (parent) {\n\t\t\tif (index !== null) {\n\t\t\t\tparent[prop].splice(index, 1);\n\t\t\t} else {\n\t\t\t\tdelete parent[prop];\n\t\t\t}\n\t\t}\n\t}\n}\n\n// @ts-check\n\n/** @typedef { import('estree').BaseNode} BaseNode */\n/** @typedef { import('./walker.js').WalkerContext} WalkerContext */\n\n/** @typedef {(\n *    this: WalkerContext,\n *    node: BaseNode,\n *    parent: BaseNode,\n *    key: string,\n *    index: number\n * ) => void} SyncHandler */\n\nclass SyncWalker$1 extends WalkerBase$1 {\n\t/**\n\t *\n\t * @param {SyncHandler} enter\n\t * @param {SyncHandler} leave\n\t */\n\tconstructor(enter, leave) {\n\t\tsuper();\n\n\t\t/** @type {SyncHandler} */\n\t\tthis.enter = enter;\n\n\t\t/** @type {SyncHandler} */\n\t\tthis.leave = leave;\n\t}\n\n\t/**\n\t *\n\t * @param {BaseNode} node\n\t * @param {BaseNode} parent\n\t * @param {string} [prop]\n\t * @param {number} [index]\n\t * @returns {BaseNode}\n\t */\n\tvisit(node, parent, prop, index) {\n\t\tif (node) {\n\t\t\tif (this.enter) {\n\t\t\t\tconst _should_skip = this.should_skip;\n\t\t\t\tconst _should_remove = this.should_remove;\n\t\t\t\tconst _replacement = this.replacement;\n\t\t\t\tthis.should_skip = false;\n\t\t\t\tthis.should_remove = false;\n\t\t\t\tthis.replacement = null;\n\n\t\t\t\tthis.enter.call(this.context, node, parent, prop, index);\n\n\t\t\t\tif (this.replacement) {\n\t\t\t\t\tnode = this.replacement;\n\t\t\t\t\tthis.replace(parent, prop, index, node);\n\t\t\t\t}\n\n\t\t\t\tif (this.should_remove) {\n\t\t\t\t\tthis.remove(parent, prop, index);\n\t\t\t\t}\n\n\t\t\t\tconst skipped = this.should_skip;\n\t\t\t\tconst removed = this.should_remove;\n\n\t\t\t\tthis.should_skip = _should_skip;\n\t\t\t\tthis.should_remove = _should_remove;\n\t\t\t\tthis.replacement = _replacement;\n\n\t\t\t\tif (skipped) return node;\n\t\t\t\tif (removed) return null;\n\t\t\t}\n\n\t\t\tfor (const key in node) {\n\t\t\t\tconst value = node[key];\n\n\t\t\t\tif (typeof value !== \"object\") {\n\t\t\t\t\tcontinue;\n\t\t\t\t} else if (Array.isArray(value)) {\n\t\t\t\t\tfor (let i = 0; i < value.length; i += 1) {\n\t\t\t\t\t\tif (value[i] !== null && typeof value[i].type === 'string') {\n\t\t\t\t\t\t\tif (!this.visit(value[i], node, key, i)) {\n\t\t\t\t\t\t\t\t// removed\n\t\t\t\t\t\t\t\ti--;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else if (value !== null && typeof value.type === \"string\") {\n\t\t\t\t\tthis.visit(value, node, key, null);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (this.leave) {\n\t\t\t\tconst _replacement = this.replacement;\n\t\t\t\tconst _should_remove = this.should_remove;\n\t\t\t\tthis.replacement = null;\n\t\t\t\tthis.should_remove = false;\n\n\t\t\t\tthis.leave.call(this.context, node, parent, prop, index);\n\n\t\t\t\tif (this.replacement) {\n\t\t\t\t\tnode = this.replacement;\n\t\t\t\t\tthis.replace(parent, prop, index, node);\n\t\t\t\t}\n\n\t\t\t\tif (this.should_remove) {\n\t\t\t\t\tthis.remove(parent, prop, index);\n\t\t\t\t}\n\n\t\t\t\tconst removed = this.should_remove;\n\n\t\t\t\tthis.replacement = _replacement;\n\t\t\t\tthis.should_remove = _should_remove;\n\n\t\t\t\tif (removed) return null;\n\t\t\t}\n\t\t}\n\n\t\treturn node;\n\t}\n}\n\n// @ts-check\n\n/** @typedef { import('estree').BaseNode} BaseNode */\n/** @typedef { import('./sync.js').SyncHandler} SyncHandler */\n/** @typedef { import('./async.js').AsyncHandler} AsyncHandler */\n\n/**\n *\n * @param {BaseNode} ast\n * @param {{\n *   enter?: SyncHandler\n *   leave?: SyncHandler\n * }} walker\n * @returns {BaseNode}\n */\nfunction walk$3(ast, { enter, leave }) {\n\tconst instance = new SyncWalker$1(enter, leave);\n\treturn instance.visit(ast, null);\n}\n\nvar chars$2 = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\nfunction encode$2(decoded) {\n    var sourceFileIndex = 0; // second field\n    var sourceCodeLine = 0; // third field\n    var sourceCodeColumn = 0; // fourth field\n    var nameIndex = 0; // fifth field\n    var mappings = '';\n    for (var i = 0; i < decoded.length; i++) {\n        var line = decoded[i];\n        if (i > 0)\n            mappings += ';';\n        if (line.length === 0)\n            continue;\n        var generatedCodeColumn = 0; // first field\n        var lineMappings = [];\n        for (var _i = 0, line_1 = line; _i < line_1.length; _i++) {\n            var segment = line_1[_i];\n            var segmentMappings = encodeInteger$1(segment[0] - generatedCodeColumn);\n            generatedCodeColumn = segment[0];\n            if (segment.length > 1) {\n                segmentMappings +=\n                    encodeInteger$1(segment[1] - sourceFileIndex) +\n                        encodeInteger$1(segment[2] - sourceCodeLine) +\n                        encodeInteger$1(segment[3] - sourceCodeColumn);\n                sourceFileIndex = segment[1];\n                sourceCodeLine = segment[2];\n                sourceCodeColumn = segment[3];\n            }\n            if (segment.length === 5) {\n                segmentMappings += encodeInteger$1(segment[4] - nameIndex);\n                nameIndex = segment[4];\n            }\n            lineMappings.push(segmentMappings);\n        }\n        mappings += lineMappings.join(',');\n    }\n    return mappings;\n}\nfunction encodeInteger$1(num) {\n    var result = '';\n    num = num < 0 ? (-num << 1) | 1 : num << 1;\n    do {\n        var clamped = num & 31;\n        num >>>= 5;\n        if (num > 0) {\n            clamped |= 32;\n        }\n        result += chars$2[clamped];\n    } while (num > 0);\n    return result;\n}\n\nvar BitSet$1 = function BitSet(arg) {\n\tthis.bits = arg instanceof BitSet ? arg.bits.slice() : [];\n};\n\nBitSet$1.prototype.add = function add (n) {\n\tthis.bits[n >> 5] |= 1 << (n & 31);\n};\n\nBitSet$1.prototype.has = function has (n) {\n\treturn !!(this.bits[n >> 5] & (1 << (n & 31)));\n};\n\nvar Chunk$1 = function Chunk(start, end, content) {\n\tthis.start = start;\n\tthis.end = end;\n\tthis.original = content;\n\n\tthis.intro = '';\n\tthis.outro = '';\n\n\tthis.content = content;\n\tthis.storeName = false;\n\tthis.edited = false;\n\n\t// we make these non-enumerable, for sanity while debugging\n\tObject.defineProperties(this, {\n\t\tprevious: { writable: true, value: null },\n\t\tnext: { writable: true, value: null },\n\t});\n};\n\nChunk$1.prototype.appendLeft = function appendLeft (content) {\n\tthis.outro += content;\n};\n\nChunk$1.prototype.appendRight = function appendRight (content) {\n\tthis.intro = this.intro + content;\n};\n\nChunk$1.prototype.clone = function clone () {\n\tvar chunk = new Chunk$1(this.start, this.end, this.original);\n\n\tchunk.intro = this.intro;\n\tchunk.outro = this.outro;\n\tchunk.content = this.content;\n\tchunk.storeName = this.storeName;\n\tchunk.edited = this.edited;\n\n\treturn chunk;\n};\n\nChunk$1.prototype.contains = function contains (index) {\n\treturn this.start < index && index < this.end;\n};\n\nChunk$1.prototype.eachNext = function eachNext (fn) {\n\tvar chunk = this;\n\twhile (chunk) {\n\t\tfn(chunk);\n\t\tchunk = chunk.next;\n\t}\n};\n\nChunk$1.prototype.eachPrevious = function eachPrevious (fn) {\n\tvar chunk = this;\n\twhile (chunk) {\n\t\tfn(chunk);\n\t\tchunk = chunk.previous;\n\t}\n};\n\nChunk$1.prototype.edit = function edit (content, storeName, contentOnly) {\n\tthis.content = content;\n\tif (!contentOnly) {\n\t\tthis.intro = '';\n\t\tthis.outro = '';\n\t}\n\tthis.storeName = storeName;\n\n\tthis.edited = true;\n\n\treturn this;\n};\n\nChunk$1.prototype.prependLeft = function prependLeft (content) {\n\tthis.outro = content + this.outro;\n};\n\nChunk$1.prototype.prependRight = function prependRight (content) {\n\tthis.intro = content + this.intro;\n};\n\nChunk$1.prototype.split = function split (index) {\n\tvar sliceIndex = index - this.start;\n\n\tvar originalBefore = this.original.slice(0, sliceIndex);\n\tvar originalAfter = this.original.slice(sliceIndex);\n\n\tthis.original = originalBefore;\n\n\tvar newChunk = new Chunk$1(index, this.end, originalAfter);\n\tnewChunk.outro = this.outro;\n\tthis.outro = '';\n\n\tthis.end = index;\n\n\tif (this.edited) {\n\t\t// TODO is this block necessary?...\n\t\tnewChunk.edit('', false);\n\t\tthis.content = '';\n\t} else {\n\t\tthis.content = originalBefore;\n\t}\n\n\tnewChunk.next = this.next;\n\tif (newChunk.next) { newChunk.next.previous = newChunk; }\n\tnewChunk.previous = this;\n\tthis.next = newChunk;\n\n\treturn newChunk;\n};\n\nChunk$1.prototype.toString = function toString () {\n\treturn this.intro + this.content + this.outro;\n};\n\nChunk$1.prototype.trimEnd = function trimEnd (rx) {\n\tthis.outro = this.outro.replace(rx, '');\n\tif (this.outro.length) { return true; }\n\n\tvar trimmed = this.content.replace(rx, '');\n\n\tif (trimmed.length) {\n\t\tif (trimmed !== this.content) {\n\t\t\tthis.split(this.start + trimmed.length).edit('', undefined, true);\n\t\t}\n\t\treturn true;\n\t} else {\n\t\tthis.edit('', undefined, true);\n\n\t\tthis.intro = this.intro.replace(rx, '');\n\t\tif (this.intro.length) { return true; }\n\t}\n};\n\nChunk$1.prototype.trimStart = function trimStart (rx) {\n\tthis.intro = this.intro.replace(rx, '');\n\tif (this.intro.length) { return true; }\n\n\tvar trimmed = this.content.replace(rx, '');\n\n\tif (trimmed.length) {\n\t\tif (trimmed !== this.content) {\n\t\t\tthis.split(this.end - trimmed.length);\n\t\t\tthis.edit('', undefined, true);\n\t\t}\n\t\treturn true;\n\t} else {\n\t\tthis.edit('', undefined, true);\n\n\t\tthis.outro = this.outro.replace(rx, '');\n\t\tif (this.outro.length) { return true; }\n\t}\n};\n\nvar btoa$2 = function () {\n\tthrow new Error('Unsupported environment: `window.btoa` or `Buffer` should be supported.');\n};\nif (typeof window !== 'undefined' && typeof window.btoa === 'function') {\n\tbtoa$2 = function (str) { return window.btoa(unescape(encodeURIComponent(str))); };\n} else if (typeof Buffer === 'function') {\n\tbtoa$2 = function (str) { return Buffer.from(str, 'utf-8').toString('base64'); };\n}\n\nvar SourceMap$2 = function SourceMap(properties) {\n\tthis.version = 3;\n\tthis.file = properties.file;\n\tthis.sources = properties.sources;\n\tthis.sourcesContent = properties.sourcesContent;\n\tthis.names = properties.names;\n\tthis.mappings = encode$2(properties.mappings);\n};\n\nSourceMap$2.prototype.toString = function toString () {\n\treturn JSON.stringify(this);\n};\n\nSourceMap$2.prototype.toUrl = function toUrl () {\n\treturn 'data:application/json;charset=utf-8;base64,' + btoa$2(this.toString());\n};\n\nfunction guessIndent$1(code) {\n\tvar lines = code.split('\\n');\n\n\tvar tabbed = lines.filter(function (line) { return /^\\t+/.test(line); });\n\tvar spaced = lines.filter(function (line) { return /^ {2,}/.test(line); });\n\n\tif (tabbed.length === 0 && spaced.length === 0) {\n\t\treturn null;\n\t}\n\n\t// More lines tabbed than spaced? Assume tabs, and\n\t// default to tabs in the case of a tie (or nothing\n\t// to go on)\n\tif (tabbed.length >= spaced.length) {\n\t\treturn '\\t';\n\t}\n\n\t// Otherwise, we need to guess the multiple\n\tvar min = spaced.reduce(function (previous, current) {\n\t\tvar numSpaces = /^ +/.exec(current)[0].length;\n\t\treturn Math.min(numSpaces, previous);\n\t}, Infinity);\n\n\treturn new Array(min + 1).join(' ');\n}\n\nfunction getRelativePath$1(from, to) {\n\tvar fromParts = from.split(/[/\\\\]/);\n\tvar toParts = to.split(/[/\\\\]/);\n\n\tfromParts.pop(); // get dirname\n\n\twhile (fromParts[0] === toParts[0]) {\n\t\tfromParts.shift();\n\t\ttoParts.shift();\n\t}\n\n\tif (fromParts.length) {\n\t\tvar i = fromParts.length;\n\t\twhile (i--) { fromParts[i] = '..'; }\n\t}\n\n\treturn fromParts.concat(toParts).join('/');\n}\n\nvar toString$3 = Object.prototype.toString;\n\nfunction isObject$3(thing) {\n\treturn toString$3.call(thing) === '[object Object]';\n}\n\nfunction getLocator$1(source) {\n\tvar originalLines = source.split('\\n');\n\tvar lineOffsets = [];\n\n\tfor (var i = 0, pos = 0; i < originalLines.length; i++) {\n\t\tlineOffsets.push(pos);\n\t\tpos += originalLines[i].length + 1;\n\t}\n\n\treturn function locate(index) {\n\t\tvar i = 0;\n\t\tvar j = lineOffsets.length;\n\t\twhile (i < j) {\n\t\t\tvar m = (i + j) >> 1;\n\t\t\tif (index < lineOffsets[m]) {\n\t\t\t\tj = m;\n\t\t\t} else {\n\t\t\t\ti = m + 1;\n\t\t\t}\n\t\t}\n\t\tvar line = i - 1;\n\t\tvar column = index - lineOffsets[line];\n\t\treturn { line: line, column: column };\n\t};\n}\n\nvar Mappings$1 = function Mappings(hires) {\n\tthis.hires = hires;\n\tthis.generatedCodeLine = 0;\n\tthis.generatedCodeColumn = 0;\n\tthis.raw = [];\n\tthis.rawSegments = this.raw[this.generatedCodeLine] = [];\n\tthis.pending = null;\n};\n\nMappings$1.prototype.addEdit = function addEdit (sourceIndex, content, loc, nameIndex) {\n\tif (content.length) {\n\t\tvar segment = [this.generatedCodeColumn, sourceIndex, loc.line, loc.column];\n\t\tif (nameIndex >= 0) {\n\t\t\tsegment.push(nameIndex);\n\t\t}\n\t\tthis.rawSegments.push(segment);\n\t} else if (this.pending) {\n\t\tthis.rawSegments.push(this.pending);\n\t}\n\n\tthis.advance(content);\n\tthis.pending = null;\n};\n\nMappings$1.prototype.addUneditedChunk = function addUneditedChunk (sourceIndex, chunk, original, loc, sourcemapLocations) {\n\tvar originalCharIndex = chunk.start;\n\tvar first = true;\n\n\twhile (originalCharIndex < chunk.end) {\n\t\tif (this.hires || first || sourcemapLocations.has(originalCharIndex)) {\n\t\t\tthis.rawSegments.push([this.generatedCodeColumn, sourceIndex, loc.line, loc.column]);\n\t\t}\n\n\t\tif (original[originalCharIndex] === '\\n') {\n\t\t\tloc.line += 1;\n\t\t\tloc.column = 0;\n\t\t\tthis.generatedCodeLine += 1;\n\t\t\tthis.raw[this.generatedCodeLine] = this.rawSegments = [];\n\t\t\tthis.generatedCodeColumn = 0;\n\t\t\tfirst = true;\n\t\t} else {\n\t\t\tloc.column += 1;\n\t\t\tthis.generatedCodeColumn += 1;\n\t\t\tfirst = false;\n\t\t}\n\n\t\toriginalCharIndex += 1;\n\t}\n\n\tthis.pending = null;\n};\n\nMappings$1.prototype.advance = function advance (str) {\n\tif (!str) { return; }\n\n\tvar lines = str.split('\\n');\n\n\tif (lines.length > 1) {\n\t\tfor (var i = 0; i < lines.length - 1; i++) {\n\t\t\tthis.generatedCodeLine++;\n\t\t\tthis.raw[this.generatedCodeLine] = this.rawSegments = [];\n\t\t}\n\t\tthis.generatedCodeColumn = 0;\n\t}\n\n\tthis.generatedCodeColumn += lines[lines.length - 1].length;\n};\n\nvar n$1 = '\\n';\n\nvar warned$1 = {\n\tinsertLeft: false,\n\tinsertRight: false,\n\tstoreName: false,\n};\n\nvar MagicString$1 = function MagicString(string, options) {\n\tif ( options === void 0 ) options = {};\n\n\tvar chunk = new Chunk$1(0, string.length, string);\n\n\tObject.defineProperties(this, {\n\t\toriginal: { writable: true, value: string },\n\t\toutro: { writable: true, value: '' },\n\t\tintro: { writable: true, value: '' },\n\t\tfirstChunk: { writable: true, value: chunk },\n\t\tlastChunk: { writable: true, value: chunk },\n\t\tlastSearchedChunk: { writable: true, value: chunk },\n\t\tbyStart: { writable: true, value: {} },\n\t\tbyEnd: { writable: true, value: {} },\n\t\tfilename: { writable: true, value: options.filename },\n\t\tindentExclusionRanges: { writable: true, value: options.indentExclusionRanges },\n\t\tsourcemapLocations: { writable: true, value: new BitSet$1() },\n\t\tstoredNames: { writable: true, value: {} },\n\t\tindentStr: { writable: true, value: guessIndent$1(string) },\n\t});\n\n\tthis.byStart[0] = chunk;\n\tthis.byEnd[string.length] = chunk;\n};\n\nMagicString$1.prototype.addSourcemapLocation = function addSourcemapLocation (char) {\n\tthis.sourcemapLocations.add(char);\n};\n\nMagicString$1.prototype.append = function append (content) {\n\tif (typeof content !== 'string') { throw new TypeError('outro content must be a string'); }\n\n\tthis.outro += content;\n\treturn this;\n};\n\nMagicString$1.prototype.appendLeft = function appendLeft (index, content) {\n\tif (typeof content !== 'string') { throw new TypeError('inserted content must be a string'); }\n\n\tthis._split(index);\n\n\tvar chunk = this.byEnd[index];\n\n\tif (chunk) {\n\t\tchunk.appendLeft(content);\n\t} else {\n\t\tthis.intro += content;\n\t}\n\treturn this;\n};\n\nMagicString$1.prototype.appendRight = function appendRight (index, content) {\n\tif (typeof content !== 'string') { throw new TypeError('inserted content must be a string'); }\n\n\tthis._split(index);\n\n\tvar chunk = this.byStart[index];\n\n\tif (chunk) {\n\t\tchunk.appendRight(content);\n\t} else {\n\t\tthis.outro += content;\n\t}\n\treturn this;\n};\n\nMagicString$1.prototype.clone = function clone () {\n\tvar cloned = new MagicString$1(this.original, { filename: this.filename });\n\n\tvar originalChunk = this.firstChunk;\n\tvar clonedChunk = (cloned.firstChunk = cloned.lastSearchedChunk = originalChunk.clone());\n\n\twhile (originalChunk) {\n\t\tcloned.byStart[clonedChunk.start] = clonedChunk;\n\t\tcloned.byEnd[clonedChunk.end] = clonedChunk;\n\n\t\tvar nextOriginalChunk = originalChunk.next;\n\t\tvar nextClonedChunk = nextOriginalChunk && nextOriginalChunk.clone();\n\n\t\tif (nextClonedChunk) {\n\t\t\tclonedChunk.next = nextClonedChunk;\n\t\t\tnextClonedChunk.previous = clonedChunk;\n\n\t\t\tclonedChunk = nextClonedChunk;\n\t\t}\n\n\t\toriginalChunk = nextOriginalChunk;\n\t}\n\n\tcloned.lastChunk = clonedChunk;\n\n\tif (this.indentExclusionRanges) {\n\t\tcloned.indentExclusionRanges = this.indentExclusionRanges.slice();\n\t}\n\n\tcloned.sourcemapLocations = new BitSet$1(this.sourcemapLocations);\n\n\tcloned.intro = this.intro;\n\tcloned.outro = this.outro;\n\n\treturn cloned;\n};\n\nMagicString$1.prototype.generateDecodedMap = function generateDecodedMap (options) {\n\t\tvar this$1$1 = this;\n\n\toptions = options || {};\n\n\tvar sourceIndex = 0;\n\tvar names = Object.keys(this.storedNames);\n\tvar mappings = new Mappings$1(options.hires);\n\n\tvar locate = getLocator$1(this.original);\n\n\tif (this.intro) {\n\t\tmappings.advance(this.intro);\n\t}\n\n\tthis.firstChunk.eachNext(function (chunk) {\n\t\tvar loc = locate(chunk.start);\n\n\t\tif (chunk.intro.length) { mappings.advance(chunk.intro); }\n\n\t\tif (chunk.edited) {\n\t\t\tmappings.addEdit(\n\t\t\t\tsourceIndex,\n\t\t\t\tchunk.content,\n\t\t\t\tloc,\n\t\t\t\tchunk.storeName ? names.indexOf(chunk.original) : -1\n\t\t\t);\n\t\t} else {\n\t\t\tmappings.addUneditedChunk(sourceIndex, chunk, this$1$1.original, loc, this$1$1.sourcemapLocations);\n\t\t}\n\n\t\tif (chunk.outro.length) { mappings.advance(chunk.outro); }\n\t});\n\n\treturn {\n\t\tfile: options.file ? options.file.split(/[/\\\\]/).pop() : null,\n\t\tsources: [options.source ? getRelativePath$1(options.file || '', options.source) : null],\n\t\tsourcesContent: options.includeContent ? [this.original] : [null],\n\t\tnames: names,\n\t\tmappings: mappings.raw,\n\t};\n};\n\nMagicString$1.prototype.generateMap = function generateMap (options) {\n\treturn new SourceMap$2(this.generateDecodedMap(options));\n};\n\nMagicString$1.prototype.getIndentString = function getIndentString () {\n\treturn this.indentStr === null ? '\\t' : this.indentStr;\n};\n\nMagicString$1.prototype.indent = function indent (indentStr, options) {\n\tvar pattern = /^[^\\r\\n]/gm;\n\n\tif (isObject$3(indentStr)) {\n\t\toptions = indentStr;\n\t\tindentStr = undefined;\n\t}\n\n\tindentStr = indentStr !== undefined ? indentStr : this.indentStr || '\\t';\n\n\tif (indentStr === '') { return this; } // noop\n\n\toptions = options || {};\n\n\t// Process exclusion ranges\n\tvar isExcluded = {};\n\n\tif (options.exclude) {\n\t\tvar exclusions =\n\t\t\ttypeof options.exclude[0] === 'number' ? [options.exclude] : options.exclude;\n\t\texclusions.forEach(function (exclusion) {\n\t\t\tfor (var i = exclusion[0]; i < exclusion[1]; i += 1) {\n\t\t\t\tisExcluded[i] = true;\n\t\t\t}\n\t\t});\n\t}\n\n\tvar shouldIndentNextCharacter = options.indentStart !== false;\n\tvar replacer = function (match) {\n\t\tif (shouldIndentNextCharacter) { return (\"\" + indentStr + match); }\n\t\tshouldIndentNextCharacter = true;\n\t\treturn match;\n\t};\n\n\tthis.intro = this.intro.replace(pattern, replacer);\n\n\tvar charIndex = 0;\n\tvar chunk = this.firstChunk;\n\n\twhile (chunk) {\n\t\tvar end = chunk.end;\n\n\t\tif (chunk.edited) {\n\t\t\tif (!isExcluded[charIndex]) {\n\t\t\t\tchunk.content = chunk.content.replace(pattern, replacer);\n\n\t\t\t\tif (chunk.content.length) {\n\t\t\t\t\tshouldIndentNextCharacter = chunk.content[chunk.content.length - 1] === '\\n';\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tcharIndex = chunk.start;\n\n\t\t\twhile (charIndex < end) {\n\t\t\t\tif (!isExcluded[charIndex]) {\n\t\t\t\t\tvar char = this.original[charIndex];\n\n\t\t\t\t\tif (char === '\\n') {\n\t\t\t\t\t\tshouldIndentNextCharacter = true;\n\t\t\t\t\t} else if (char !== '\\r' && shouldIndentNextCharacter) {\n\t\t\t\t\t\tshouldIndentNextCharacter = false;\n\n\t\t\t\t\t\tif (charIndex === chunk.start) {\n\t\t\t\t\t\t\tchunk.prependRight(indentStr);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthis._splitChunk(chunk, charIndex);\n\t\t\t\t\t\t\tchunk = chunk.next;\n\t\t\t\t\t\t\tchunk.prependRight(indentStr);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tcharIndex += 1;\n\t\t\t}\n\t\t}\n\n\t\tcharIndex = chunk.end;\n\t\tchunk = chunk.next;\n\t}\n\n\tthis.outro = this.outro.replace(pattern, replacer);\n\n\treturn this;\n};\n\nMagicString$1.prototype.insert = function insert () {\n\tthrow new Error(\n\t\t'magicString.insert(...) is deprecated. Use prependRight(...) or appendLeft(...)'\n\t);\n};\n\nMagicString$1.prototype.insertLeft = function insertLeft (index, content) {\n\tif (!warned$1.insertLeft) {\n\t\tconsole.warn(\n\t\t\t'magicString.insertLeft(...) is deprecated. Use magicString.appendLeft(...) instead'\n\t\t); // eslint-disable-line no-console\n\t\twarned$1.insertLeft = true;\n\t}\n\n\treturn this.appendLeft(index, content);\n};\n\nMagicString$1.prototype.insertRight = function insertRight (index, content) {\n\tif (!warned$1.insertRight) {\n\t\tconsole.warn(\n\t\t\t'magicString.insertRight(...) is deprecated. Use magicString.prependRight(...) instead'\n\t\t); // eslint-disable-line no-console\n\t\twarned$1.insertRight = true;\n\t}\n\n\treturn this.prependRight(index, content);\n};\n\nMagicString$1.prototype.move = function move (start, end, index) {\n\tif (index >= start && index <= end) { throw new Error('Cannot move a selection inside itself'); }\n\n\tthis._split(start);\n\tthis._split(end);\n\tthis._split(index);\n\n\tvar first = this.byStart[start];\n\tvar last = this.byEnd[end];\n\n\tvar oldLeft = first.previous;\n\tvar oldRight = last.next;\n\n\tvar newRight = this.byStart[index];\n\tif (!newRight && last === this.lastChunk) { return this; }\n\tvar newLeft = newRight ? newRight.previous : this.lastChunk;\n\n\tif (oldLeft) { oldLeft.next = oldRight; }\n\tif (oldRight) { oldRight.previous = oldLeft; }\n\n\tif (newLeft) { newLeft.next = first; }\n\tif (newRight) { newRight.previous = last; }\n\n\tif (!first.previous) { this.firstChunk = last.next; }\n\tif (!last.next) {\n\t\tthis.lastChunk = first.previous;\n\t\tthis.lastChunk.next = null;\n\t}\n\n\tfirst.previous = newLeft;\n\tlast.next = newRight || null;\n\n\tif (!newLeft) { this.firstChunk = first; }\n\tif (!newRight) { this.lastChunk = last; }\n\treturn this;\n};\n\nMagicString$1.prototype.overwrite = function overwrite (start, end, content, options) {\n\tif (typeof content !== 'string') { throw new TypeError('replacement content must be a string'); }\n\n\twhile (start < 0) { start += this.original.length; }\n\twhile (end < 0) { end += this.original.length; }\n\n\tif (end > this.original.length) { throw new Error('end is out of bounds'); }\n\tif (start === end)\n\t\t{ throw new Error(\n\t\t\t'Cannot overwrite a zero-length range \u2013 use appendLeft or prependRight instead'\n\t\t); }\n\n\tthis._split(start);\n\tthis._split(end);\n\n\tif (options === true) {\n\t\tif (!warned$1.storeName) {\n\t\t\tconsole.warn(\n\t\t\t\t'The final argument to magicString.overwrite(...) should be an options object. See https://github.com/rich-harris/magic-string'\n\t\t\t); // eslint-disable-line no-console\n\t\t\twarned$1.storeName = true;\n\t\t}\n\n\t\toptions = { storeName: true };\n\t}\n\tvar storeName = options !== undefined ? options.storeName : false;\n\tvar contentOnly = options !== undefined ? options.contentOnly : false;\n\n\tif (storeName) {\n\t\tvar original = this.original.slice(start, end);\n\t\tObject.defineProperty(this.storedNames, original, { writable: true, value: true, enumerable: true });\n\t}\n\n\tvar first = this.byStart[start];\n\tvar last = this.byEnd[end];\n\n\tif (first) {\n\t\tvar chunk = first;\n\t\twhile (chunk !== last) {\n\t\t\tif (chunk.next !== this.byStart[chunk.end]) {\n\t\t\t\tthrow new Error('Cannot overwrite across a split point');\n\t\t\t}\n\t\t\tchunk = chunk.next;\n\t\t\tchunk.edit('', false);\n\t\t}\n\n\t\tfirst.edit(content, storeName, contentOnly);\n\t} else {\n\t\t// must be inserting at the end\n\t\tvar newChunk = new Chunk$1(start, end, '').edit(content, storeName);\n\n\t\t// TODO last chunk in the array may not be the last chunk, if it's moved...\n\t\tlast.next = newChunk;\n\t\tnewChunk.previous = last;\n\t}\n\treturn this;\n};\n\nMagicString$1.prototype.prepend = function prepend (content) {\n\tif (typeof content !== 'string') { throw new TypeError('outro content must be a string'); }\n\n\tthis.intro = content + this.intro;\n\treturn this;\n};\n\nMagicString$1.prototype.prependLeft = function prependLeft (index, content) {\n\tif (typeof content !== 'string') { throw new TypeError('inserted content must be a string'); }\n\n\tthis._split(index);\n\n\tvar chunk = this.byEnd[index];\n\n\tif (chunk) {\n\t\tchunk.prependLeft(content);\n\t} else {\n\t\tthis.intro = content + this.intro;\n\t}\n\treturn this;\n};\n\nMagicString$1.prototype.prependRight = function prependRight (index, content) {\n\tif (typeof content !== 'string') { throw new TypeError('inserted content must be a string'); }\n\n\tthis._split(index);\n\n\tvar chunk = this.byStart[index];\n\n\tif (chunk) {\n\t\tchunk.prependRight(content);\n\t} else {\n\t\tthis.outro = content + this.outro;\n\t}\n\treturn this;\n};\n\nMagicString$1.prototype.remove = function remove (start, end) {\n\twhile (start < 0) { start += this.original.length; }\n\twhile (end < 0) { end += this.original.length; }\n\n\tif (start === end) { return this; }\n\n\tif (start < 0 || end > this.original.length) { throw new Error('Character is out of bounds'); }\n\tif (start > end) { throw new Error('end must be greater than start'); }\n\n\tthis._split(start);\n\tthis._split(end);\n\n\tvar chunk = this.byStart[start];\n\n\twhile (chunk) {\n\t\tchunk.intro = '';\n\t\tchunk.outro = '';\n\t\tchunk.edit('');\n\n\t\tchunk = end > chunk.end ? this.byStart[chunk.end] : null;\n\t}\n\treturn this;\n};\n\nMagicString$1.prototype.lastChar = function lastChar () {\n\tif (this.outro.length) { return this.outro[this.outro.length - 1]; }\n\tvar chunk = this.lastChunk;\n\tdo {\n\t\tif (chunk.outro.length) { return chunk.outro[chunk.outro.length - 1]; }\n\t\tif (chunk.content.length) { return chunk.content[chunk.content.length - 1]; }\n\t\tif (chunk.intro.length) { return chunk.intro[chunk.intro.length - 1]; }\n\t} while ((chunk = chunk.previous));\n\tif (this.intro.length) { return this.intro[this.intro.length - 1]; }\n\treturn '';\n};\n\nMagicString$1.prototype.lastLine = function lastLine () {\n\tvar lineIndex = this.outro.lastIndexOf(n$1);\n\tif (lineIndex !== -1) { return this.outro.substr(lineIndex + 1); }\n\tvar lineStr = this.outro;\n\tvar chunk = this.lastChunk;\n\tdo {\n\t\tif (chunk.outro.length > 0) {\n\t\t\tlineIndex = chunk.outro.lastIndexOf(n$1);\n\t\t\tif (lineIndex !== -1) { return chunk.outro.substr(lineIndex + 1) + lineStr; }\n\t\t\tlineStr = chunk.outro + lineStr;\n\t\t}\n\n\t\tif (chunk.content.length > 0) {\n\t\t\tlineIndex = chunk.content.lastIndexOf(n$1);\n\t\t\tif (lineIndex !== -1) { return chunk.content.substr(lineIndex + 1) + lineStr; }\n\t\t\tlineStr = chunk.content + lineStr;\n\t\t}\n\n\t\tif (chunk.intro.length > 0) {\n\t\t\tlineIndex = chunk.intro.lastIndexOf(n$1);\n\t\t\tif (lineIndex !== -1) { return chunk.intro.substr(lineIndex + 1) + lineStr; }\n\t\t\tlineStr = chunk.intro + lineStr;\n\t\t}\n\t} while ((chunk = chunk.previous));\n\tlineIndex = this.intro.lastIndexOf(n$1);\n\tif (lineIndex !== -1) { return this.intro.substr(lineIndex + 1) + lineStr; }\n\treturn this.intro + lineStr;\n};\n\nMagicString$1.prototype.slice = function slice (start, end) {\n\t\tif ( start === void 0 ) start = 0;\n\t\tif ( end === void 0 ) end = this.original.length;\n\n\twhile (start < 0) { start += this.original.length; }\n\twhile (end < 0) { end += this.original.length; }\n\n\tvar result = '';\n\n\t// find start chunk\n\tvar chunk = this.firstChunk;\n\twhile (chunk && (chunk.start > start || chunk.end <= start)) {\n\t\t// found end chunk before start\n\t\tif (chunk.start < end && chunk.end >= end) {\n\t\t\treturn result;\n\t\t}\n\n\t\tchunk = chunk.next;\n\t}\n\n\tif (chunk && chunk.edited && chunk.start !== start)\n\t\t{ throw new Error((\"Cannot use replaced character \" + start + \" as slice start anchor.\")); }\n\n\tvar startChunk = chunk;\n\twhile (chunk) {\n\t\tif (chunk.intro && (startChunk !== chunk || chunk.start === start)) {\n\t\t\tresult += chunk.intro;\n\t\t}\n\n\t\tvar containsEnd = chunk.start < end && chunk.end >= end;\n\t\tif (containsEnd && chunk.edited && chunk.end !== end)\n\t\t\t{ throw new Error((\"Cannot use replaced character \" + end + \" as slice end anchor.\")); }\n\n\t\tvar sliceStart = startChunk === chunk ? start - chunk.start : 0;\n\t\tvar sliceEnd = containsEnd ? chunk.content.length + end - chunk.end : chunk.content.length;\n\n\t\tresult += chunk.content.slice(sliceStart, sliceEnd);\n\n\t\tif (chunk.outro && (!containsEnd || chunk.end === end)) {\n\t\t\tresult += chunk.outro;\n\t\t}\n\n\t\tif (containsEnd) {\n\t\t\tbreak;\n\t\t}\n\n\t\tchunk = chunk.next;\n\t}\n\n\treturn result;\n};\n\n// TODO deprecate this? not really very useful\nMagicString$1.prototype.snip = function snip (start, end) {\n\tvar clone = this.clone();\n\tclone.remove(0, start);\n\tclone.remove(end, clone.original.length);\n\n\treturn clone;\n};\n\nMagicString$1.prototype._split = function _split (index) {\n\tif (this.byStart[index] || this.byEnd[index]) { return; }\n\n\tvar chunk = this.lastSearchedChunk;\n\tvar searchForward = index > chunk.end;\n\n\twhile (chunk) {\n\t\tif (chunk.contains(index)) { return this._splitChunk(chunk, index); }\n\n\t\tchunk = searchForward ? this.byStart[chunk.end] : this.byEnd[chunk.start];\n\t}\n};\n\nMagicString$1.prototype._splitChunk = function _splitChunk (chunk, index) {\n\tif (chunk.edited && chunk.content.length) {\n\t\t// zero-length edited chunks are a special case (overlapping replacements)\n\t\tvar loc = getLocator$1(this.original)(index);\n\t\tthrow new Error(\n\t\t\t(\"Cannot split a chunk that has already been edited (\" + (loc.line) + \":\" + (loc.column) + \" \u2013 \\\"\" + (chunk.original) + \"\\\")\")\n\t\t);\n\t}\n\n\tvar newChunk = chunk.split(index);\n\n\tthis.byEnd[index] = chunk;\n\tthis.byStart[index] = newChunk;\n\tthis.byEnd[newChunk.end] = newChunk;\n\n\tif (chunk === this.lastChunk) { this.lastChunk = newChunk; }\n\n\tthis.lastSearchedChunk = chunk;\n\treturn true;\n};\n\nMagicString$1.prototype.toString = function toString () {\n\tvar str = this.intro;\n\n\tvar chunk = this.firstChunk;\n\twhile (chunk) {\n\t\tstr += chunk.toString();\n\t\tchunk = chunk.next;\n\t}\n\n\treturn str + this.outro;\n};\n\nMagicString$1.prototype.isEmpty = function isEmpty () {\n\tvar chunk = this.firstChunk;\n\tdo {\n\t\tif (\n\t\t\t(chunk.intro.length && chunk.intro.trim()) ||\n\t\t\t(chunk.content.length && chunk.content.trim()) ||\n\t\t\t(chunk.outro.length && chunk.outro.trim())\n\t\t)\n\t\t\t{ return false; }\n\t} while ((chunk = chunk.next));\n\treturn true;\n};\n\nMagicString$1.prototype.length = function length () {\n\tvar chunk = this.firstChunk;\n\tvar length = 0;\n\tdo {\n\t\tlength += chunk.intro.length + chunk.content.length + chunk.outro.length;\n\t} while ((chunk = chunk.next));\n\treturn length;\n};\n\nMagicString$1.prototype.trimLines = function trimLines () {\n\treturn this.trim('[\\\\r\\\\n]');\n};\n\nMagicString$1.prototype.trim = function trim (charType) {\n\treturn this.trimStart(charType).trimEnd(charType);\n};\n\nMagicString$1.prototype.trimEndAborted = function trimEndAborted (charType) {\n\tvar rx = new RegExp((charType || '\\\\s') + '+$');\n\n\tthis.outro = this.outro.replace(rx, '');\n\tif (this.outro.length) { return true; }\n\n\tvar chunk = this.lastChunk;\n\n\tdo {\n\t\tvar end = chunk.end;\n\t\tvar aborted = chunk.trimEnd(rx);\n\n\t\t// if chunk was trimmed, we have a new lastChunk\n\t\tif (chunk.end !== end) {\n\t\t\tif (this.lastChunk === chunk) {\n\t\t\t\tthis.lastChunk = chunk.next;\n\t\t\t}\n\n\t\t\tthis.byEnd[chunk.end] = chunk;\n\t\t\tthis.byStart[chunk.next.start] = chunk.next;\n\t\t\tthis.byEnd[chunk.next.end] = chunk.next;\n\t\t}\n\n\t\tif (aborted) { return true; }\n\t\tchunk = chunk.previous;\n\t} while (chunk);\n\n\treturn false;\n};\n\nMagicString$1.prototype.trimEnd = function trimEnd (charType) {\n\tthis.trimEndAborted(charType);\n\treturn this;\n};\nMagicString$1.prototype.trimStartAborted = function trimStartAborted (charType) {\n\tvar rx = new RegExp('^' + (charType || '\\\\s') + '+');\n\n\tthis.intro = this.intro.replace(rx, '');\n\tif (this.intro.length) { return true; }\n\n\tvar chunk = this.firstChunk;\n\n\tdo {\n\t\tvar end = chunk.end;\n\t\tvar aborted = chunk.trimStart(rx);\n\n\t\tif (chunk.end !== end) {\n\t\t\t// special case...\n\t\t\tif (chunk === this.lastChunk) { this.lastChunk = chunk.next; }\n\n\t\t\tthis.byEnd[chunk.end] = chunk;\n\t\t\tthis.byStart[chunk.next.start] = chunk.next;\n\t\t\tthis.byEnd[chunk.next.end] = chunk.next;\n\t\t}\n\n\t\tif (aborted) { return true; }\n\t\tchunk = chunk.next;\n\t} while (chunk);\n\n\treturn false;\n};\n\nMagicString$1.prototype.trimStart = function trimStart (charType) {\n\tthis.trimStartAborted(charType);\n\treturn this;\n};\n\nfunction isReference(node, parent) {\n    if (node.type === 'MemberExpression') {\n        return !node.computed && isReference(node.object, node);\n    }\n    if (node.type === 'Identifier') {\n        if (!parent)\n            return true;\n        switch (parent.type) {\n            // disregard `bar` in `foo.bar`\n            case 'MemberExpression': return parent.computed || node === parent.object;\n            // disregard the `foo` in `class {foo(){}}` but keep it in `class {[foo](){}}`\n            case 'MethodDefinition': return parent.computed;\n            // disregard the `foo` in `class {foo=bar}` but keep it in `class {[foo]=bar}` and `class {bar=foo}`\n            case 'FieldDefinition': return parent.computed || node === parent.value;\n            // disregard the `bar` in `{ bar: foo }`, but keep it in `{ [bar]: foo }`\n            case 'Property': return parent.computed || node === parent.value;\n            // disregard the `bar` in `export { foo as bar }` or\n            // the foo in `import { foo as bar }`\n            case 'ExportSpecifier':\n            case 'ImportSpecifier': return node === parent.local;\n            // disregard the `foo` in `foo: while (...) { ... break foo; ... continue foo;}`\n            case 'LabeledStatement':\n            case 'BreakStatement':\n            case 'ContinueStatement': return false;\n            default: return true;\n        }\n    }\n    return false;\n}\n\nvar version$1 = \"22.0.2\";\nvar peerDependencies = {\n\trollup: \"^2.68.0\"\n};\n\nfunction tryParse(parse, code, id) {\n  try {\n    return parse(code, { allowReturnOutsideFunction: true });\n  } catch (err) {\n    err.message += ` in ${id}`;\n    throw err;\n  }\n}\n\nconst firstpassGlobal = /\\b(?:require|module|exports|global)\\b/;\n\nconst firstpassNoGlobal = /\\b(?:require|module|exports)\\b/;\n\nfunction hasCjsKeywords(code, ignoreGlobal) {\n  const firstpass = ignoreGlobal ? firstpassNoGlobal : firstpassGlobal;\n  return firstpass.test(code);\n}\n\n/* eslint-disable no-underscore-dangle */\n\nfunction analyzeTopLevelStatements(parse, code, id) {\n  const ast = tryParse(parse, code, id);\n\n  let isEsModule = false;\n  let hasDefaultExport = false;\n  let hasNamedExports = false;\n\n  for (const node of ast.body) {\n    switch (node.type) {\n      case 'ExportDefaultDeclaration':\n        isEsModule = true;\n        hasDefaultExport = true;\n        break;\n      case 'ExportNamedDeclaration':\n        isEsModule = true;\n        if (node.declaration) {\n          hasNamedExports = true;\n        } else {\n          for (const specifier of node.specifiers) {\n            if (specifier.exported.name === 'default') {\n              hasDefaultExport = true;\n            } else {\n              hasNamedExports = true;\n            }\n          }\n        }\n        break;\n      case 'ExportAllDeclaration':\n        isEsModule = true;\n        if (node.exported && node.exported.name === 'default') {\n          hasDefaultExport = true;\n        } else {\n          hasNamedExports = true;\n        }\n        break;\n      case 'ImportDeclaration':\n        isEsModule = true;\n        break;\n    }\n  }\n\n  return { isEsModule, hasDefaultExport, hasNamedExports, ast };\n}\n\n/* eslint-disable import/prefer-default-export */\n\nfunction deconflict(scopes, globals, identifier) {\n  let i = 1;\n  let deconflicted = makeLegalIdentifier$1(identifier);\n  const hasConflicts = () =>\n    scopes.some((scope) => scope.contains(deconflicted)) || globals.has(deconflicted);\n\n  while (hasConflicts()) {\n    deconflicted = makeLegalIdentifier$1(`${identifier}_${i}`);\n    i += 1;\n  }\n\n  for (const scope of scopes) {\n    scope.declarations[deconflicted] = true;\n  }\n\n  return deconflicted;\n}\n\nfunction getName(id) {\n  const name = makeLegalIdentifier$1(basename$1(id, extname(id)));\n  if (name !== 'index') {\n    return name;\n  }\n  return makeLegalIdentifier$1(basename$1(dirname$1(id)));\n}\n\nfunction normalizePathSlashes(path) {\n  return path.replace(/\\\\/g, '/');\n}\n\nconst getVirtualPathForDynamicRequirePath = (path, commonDir) =>\n  `/${normalizePathSlashes(relative$1(commonDir, path))}`;\n\nfunction capitalize(name) {\n  return name[0].toUpperCase() + name.slice(1);\n}\n\nfunction getStrictRequiresFilter({ strictRequires }) {\n  switch (strictRequires) {\n    case true:\n      return { strictRequiresFilter: () => true, detectCyclesAndConditional: false };\n    // eslint-disable-next-line no-undefined\n    case undefined:\n    case 'auto':\n    case 'debug':\n    case null:\n      return { strictRequiresFilter: () => false, detectCyclesAndConditional: true };\n    case false:\n      return { strictRequiresFilter: () => false, detectCyclesAndConditional: false };\n    default:\n      if (typeof strictRequires === 'string' || Array.isArray(strictRequires)) {\n        return {\n          strictRequiresFilter: createFilter$2(strictRequires),\n          detectCyclesAndConditional: false\n        };\n      }\n      throw new Error('Unexpected value for \"strictRequires\" option.');\n  }\n}\n\nfunction getPackageEntryPoint(dirPath) {\n  let entryPoint = 'index.js';\n\n  try {\n    if (existsSync(join$1(dirPath, 'package.json'))) {\n      entryPoint =\n        JSON.parse(readFileSync(join$1(dirPath, 'package.json'), { encoding: 'utf8' })).main ||\n        entryPoint;\n    }\n  } catch (ignored) {\n    // ignored\n  }\n\n  return entryPoint;\n}\n\nfunction isDirectory(path) {\n  try {\n    if (statSync$1(path).isDirectory()) return true;\n  } catch (ignored) {\n    // Nothing to do here\n  }\n  return false;\n}\n\nfunction getDynamicRequireModules(patterns, dynamicRequireRoot) {\n  const dynamicRequireModules = new Map();\n  const dirNames = new Set();\n  for (const pattern of !patterns || Array.isArray(patterns) ? patterns || [] : [patterns]) {\n    const isNegated = pattern.startsWith('!');\n    const modifyMap = (targetPath, resolvedPath) =>\n      isNegated\n        ? dynamicRequireModules.delete(targetPath)\n        : dynamicRequireModules.set(targetPath, resolvedPath);\n    for (const path of globExports.sync(isNegated ? pattern.substr(1) : pattern)) {\n      const resolvedPath = resolve$4(path);\n      const requirePath = normalizePathSlashes(resolvedPath);\n      if (isDirectory(resolvedPath)) {\n        dirNames.add(resolvedPath);\n        const modulePath = resolve$4(join$1(resolvedPath, getPackageEntryPoint(path)));\n        modifyMap(requirePath, modulePath);\n        modifyMap(normalizePathSlashes(modulePath), modulePath);\n      } else {\n        dirNames.add(dirname$1(resolvedPath));\n        modifyMap(requirePath, resolvedPath);\n      }\n    }\n  }\n  return {\n    commonDir: dirNames.size ? commondir([...dirNames, dynamicRequireRoot]) : null,\n    dynamicRequireModules\n  };\n}\n\nconst FAILED_REQUIRE_ERROR = `throw new Error('Could not dynamically require \"' + path + '\". Please configure the dynamicRequireTargets or/and ignoreDynamicRequires option of @rollup/plugin-commonjs appropriately for this require call to work.');`;\n\nconst COMMONJS_REQUIRE_EXPORT = 'commonjsRequire';\nconst CREATE_COMMONJS_REQUIRE_EXPORT = 'createCommonjsRequire';\n\nfunction getDynamicModuleRegistry(\n  isDynamicRequireModulesEnabled,\n  dynamicRequireModules,\n  commonDir,\n  ignoreDynamicRequires\n) {\n  if (!isDynamicRequireModulesEnabled) {\n    return `export function ${COMMONJS_REQUIRE_EXPORT}(path) {\n\t${FAILED_REQUIRE_ERROR}\n}`;\n  }\n  const dynamicModuleImports = [...dynamicRequireModules.values()]\n    .map(\n      (id, index) =>\n        `import ${\n          id.endsWith('.json') ? `json${index}` : `{ __require as require${index} }`\n        } from ${JSON.stringify(id)};`\n    )\n    .join('\\n');\n  const dynamicModuleProps = [...dynamicRequireModules.keys()]\n    .map(\n      (id, index) =>\n        `\\t\\t${JSON.stringify(getVirtualPathForDynamicRequirePath(id, commonDir))}: ${\n          id.endsWith('.json') ? `function () { return json${index}; }` : `require${index}`\n        }`\n    )\n    .join(',\\n');\n  return `${dynamicModuleImports}\n\nvar dynamicModules;\n\nfunction getDynamicModules() {\n\treturn dynamicModules || (dynamicModules = {\n${dynamicModuleProps}\n\t});\n}\n\nexport function ${CREATE_COMMONJS_REQUIRE_EXPORT}(originalModuleDir) {\n\tfunction handleRequire(path) {\n\t\tvar resolvedPath = commonjsResolve(path, originalModuleDir);\n\t\tif (resolvedPath !== null) {\n\t\t\treturn getDynamicModules()[resolvedPath]();\n\t\t}\n\t\t${ignoreDynamicRequires ? 'return require(path);' : FAILED_REQUIRE_ERROR}\n\t}\n\thandleRequire.resolve = function (path) {\n\t\tvar resolvedPath = commonjsResolve(path, originalModuleDir);\n\t\tif (resolvedPath !== null) {\n\t\t\treturn resolvedPath;\n\t\t}\n\t\treturn require.resolve(path);\n\t}\n\treturn handleRequire;\n}\n\nfunction commonjsResolve (path, originalModuleDir) {\n\tvar shouldTryNodeModules = isPossibleNodeModulesPath(path);\n\tpath = normalize(path);\n\tvar relPath;\n\tif (path[0] === '/') {\n\t\toriginalModuleDir = '';\n\t}\n\tvar modules = getDynamicModules();\n\tvar checkedExtensions = ['', '.js', '.json'];\n\twhile (true) {\n\t\tif (!shouldTryNodeModules) {\n\t\t\trelPath = normalize(originalModuleDir + '/' + path);\n\t\t} else {\n\t\t\trelPath = normalize(originalModuleDir + '/node_modules/' + path);\n\t\t}\n\n\t\tif (relPath.endsWith('/..')) {\n\t\t\tbreak; // Travelled too far up, avoid infinite loop\n\t\t}\n\n\t\tfor (var extensionIndex = 0; extensionIndex < checkedExtensions.length; extensionIndex++) {\n\t\t\tvar resolvedPath = relPath + checkedExtensions[extensionIndex];\n\t\t\tif (modules[resolvedPath]) {\n\t\t\t\treturn resolvedPath;\n\t\t\t}\n\t\t}\n\t\tif (!shouldTryNodeModules) break;\n\t\tvar nextDir = normalize(originalModuleDir + '/..');\n\t\tif (nextDir === originalModuleDir) break;\n\t\toriginalModuleDir = nextDir;\n\t}\n\treturn null;\n}\n\nfunction isPossibleNodeModulesPath (modulePath) {\n\tvar c0 = modulePath[0];\n\tif (c0 === '/' || c0 === '\\\\\\\\') return false;\n\tvar c1 = modulePath[1], c2 = modulePath[2];\n\tif ((c0 === '.' && (!c1 || c1 === '/' || c1 === '\\\\\\\\')) ||\n\t\t(c0 === '.' && c1 === '.' && (!c2 || c2 === '/' || c2 === '\\\\\\\\'))) return false;\n\tif (c1 === ':' && (c2 === '/' || c2 === '\\\\\\\\')) return false;\n\treturn true;\n}\n\nfunction normalize (path) {\n\tpath = path.replace(/\\\\\\\\/g, '/');\n\tvar parts = path.split('/');\n\tvar slashed = parts[0] === '';\n\tfor (var i = 1; i < parts.length; i++) {\n\t\tif (parts[i] === '.' || parts[i] === '') {\n\t\t\tparts.splice(i--, 1);\n\t\t}\n\t}\n\tfor (var i = 1; i < parts.length; i++) {\n\t\tif (parts[i] !== '..') continue;\n\t\tif (i > 0 && parts[i - 1] !== '..' && parts[i - 1] !== '.') {\n\t\t\tparts.splice(--i, 2);\n\t\t\ti--;\n\t\t}\n\t}\n\tpath = parts.join('/');\n\tif (slashed && path[0] !== '/') path = '/' + path;\n\telse if (path.length === 0) path = '.';\n\treturn path;\n}`;\n}\n\nconst isWrappedId = (id, suffix) => id.endsWith(suffix);\nconst wrapId = (id, suffix) => `\\0${id}${suffix}`;\nconst unwrapId$1 = (wrappedId, suffix) => wrappedId.slice(1, -suffix.length);\n\nconst PROXY_SUFFIX = '?commonjs-proxy';\nconst WRAPPED_SUFFIX = '?commonjs-wrapped';\nconst EXTERNAL_SUFFIX = '?commonjs-external';\nconst EXPORTS_SUFFIX = '?commonjs-exports';\nconst MODULE_SUFFIX = '?commonjs-module';\nconst ENTRY_SUFFIX = '?commonjs-entry';\nconst ES_IMPORT_SUFFIX = '?commonjs-es-import';\n\nconst DYNAMIC_MODULES_ID = '\\0commonjs-dynamic-modules';\nconst HELPERS_ID = '\\0commonjsHelpers.js';\n\nconst IS_WRAPPED_COMMONJS = 'withRequireFunction';\n\n// `x['default']` is used instead of `x.default` for backward compatibility with ES3 browsers.\n// Minifiers like uglify will usually transpile it back if compatibility with ES3 is not enabled.\n// This could be improved by inspecting Rollup's \"generatedCode\" option\n\nconst HELPERS = `\nexport var commonjsGlobal = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};\n\nexport function getDefaultExportFromCjs (x) {\n\treturn x && x.__esModule && Object.prototype.hasOwnProperty.call(x, 'default') ? x['default'] : x;\n}\n\nexport function getDefaultExportFromNamespaceIfPresent (n) {\n\treturn n && Object.prototype.hasOwnProperty.call(n, 'default') ? n['default'] : n;\n}\n\nexport function getDefaultExportFromNamespaceIfNotNamed (n) {\n\treturn n && Object.prototype.hasOwnProperty.call(n, 'default') && Object.keys(n).length === 1 ? n['default'] : n;\n}\n\nexport function getAugmentedNamespace(n) {\n  var f = n.default;\n\tif (typeof f == \"function\") {\n\t\tvar a = function () {\n\t\t\treturn f.apply(this, arguments);\n\t\t};\n\t\ta.prototype = f.prototype;\n  } else a = {};\n  Object.defineProperty(a, '__esModule', {value: true});\n\tObject.keys(n).forEach(function (k) {\n\t\tvar d = Object.getOwnPropertyDescriptor(n, k);\n\t\tObject.defineProperty(a, k, d.get ? d : {\n\t\t\tenumerable: true,\n\t\t\tget: function () {\n\t\t\t\treturn n[k];\n\t\t\t}\n\t\t});\n\t});\n\treturn a;\n}\n`;\n\nfunction getHelpersModule() {\n  return HELPERS;\n}\n\nfunction getUnknownRequireProxy(id, requireReturnsDefault) {\n  if (requireReturnsDefault === true || id.endsWith('.json')) {\n    return `export { default } from ${JSON.stringify(id)};`;\n  }\n  const name = getName(id);\n  const exported =\n    requireReturnsDefault === 'auto'\n      ? `import { getDefaultExportFromNamespaceIfNotNamed } from \"${HELPERS_ID}\"; export default /*@__PURE__*/getDefaultExportFromNamespaceIfNotNamed(${name});`\n      : requireReturnsDefault === 'preferred'\n      ? `import { getDefaultExportFromNamespaceIfPresent } from \"${HELPERS_ID}\"; export default /*@__PURE__*/getDefaultExportFromNamespaceIfPresent(${name});`\n      : !requireReturnsDefault\n      ? `import { getAugmentedNamespace } from \"${HELPERS_ID}\"; export default /*@__PURE__*/getAugmentedNamespace(${name});`\n      : `export default ${name};`;\n  return `import * as ${name} from ${JSON.stringify(id)}; ${exported}`;\n}\n\nasync function getStaticRequireProxy(id, requireReturnsDefault, loadModule) {\n  const name = getName(id);\n  const {\n    meta: { commonjs: commonjsMeta }\n  } = await loadModule({ id });\n  if (!commonjsMeta) {\n    return getUnknownRequireProxy(id, requireReturnsDefault);\n  } else if (commonjsMeta.isCommonJS) {\n    return `export { __moduleExports as default } from ${JSON.stringify(id)};`;\n  } else if (!requireReturnsDefault) {\n    return `import { getAugmentedNamespace } from \"${HELPERS_ID}\"; import * as ${name} from ${JSON.stringify(\n      id\n    )}; export default /*@__PURE__*/getAugmentedNamespace(${name});`;\n  } else if (\n    requireReturnsDefault !== true &&\n    (requireReturnsDefault === 'namespace' ||\n      !commonjsMeta.hasDefaultExport ||\n      (requireReturnsDefault === 'auto' && commonjsMeta.hasNamedExports))\n  ) {\n    return `import * as ${name} from ${JSON.stringify(id)}; export default ${name};`;\n  }\n  return `export { default } from ${JSON.stringify(id)};`;\n}\n\nfunction getEntryProxy(id, defaultIsModuleExports, getModuleInfo) {\n  const {\n    meta: { commonjs: commonjsMeta },\n    hasDefaultExport\n  } = getModuleInfo(id);\n  if (!commonjsMeta || commonjsMeta.isCommonJS !== IS_WRAPPED_COMMONJS) {\n    const stringifiedId = JSON.stringify(id);\n    let code = `export * from ${stringifiedId};`;\n    if (hasDefaultExport) {\n      code += `export { default } from ${stringifiedId};`;\n    }\n    return code;\n  }\n  return getEsImportProxy(id, defaultIsModuleExports);\n}\n\nfunction getEsImportProxy(id, defaultIsModuleExports) {\n  const name = getName(id);\n  const exportsName = `${name}Exports`;\n  const requireModule = `require${capitalize(name)}`;\n  let code =\n    `import { getDefaultExportFromCjs } from \"${HELPERS_ID}\";\\n` +\n    `import { __require as ${requireModule} } from ${JSON.stringify(id)};\\n` +\n    `var ${exportsName} = ${requireModule}();\\n` +\n    `export { ${exportsName} as __moduleExports };`;\n  if (defaultIsModuleExports) {\n    code += `\\nexport { ${exportsName} as default };`;\n  } else {\n    code += `export default /*@__PURE__*/getDefaultExportFromCjs(${exportsName});`;\n  }\n  return {\n    code,\n    syntheticNamedExports: '__moduleExports'\n  };\n}\n\n/* eslint-disable no-param-reassign, no-undefined */\n\nfunction getCandidatesForExtension(resolved, extension) {\n  return [resolved + extension, `${resolved}${sep}index${extension}`];\n}\n\nfunction getCandidates(resolved, extensions) {\n  return extensions.reduce(\n    (paths, extension) => paths.concat(getCandidatesForExtension(resolved, extension)),\n    [resolved]\n  );\n}\n\nfunction resolveExtensions(importee, importer, extensions) {\n  // not our problem\n  if (importee[0] !== '.' || !importer) return undefined;\n\n  const resolved = resolve$4(dirname$1(importer), importee);\n  const candidates = getCandidates(resolved, extensions);\n\n  for (let i = 0; i < candidates.length; i += 1) {\n    try {\n      const stats = statSync$1(candidates[i]);\n      if (stats.isFile()) return { id: candidates[i] };\n    } catch (err) {\n      /* noop */\n    }\n  }\n\n  return undefined;\n}\n\nfunction getResolveId(extensions, isPossibleCjsId) {\n  const currentlyResolving = new Map();\n\n  return {\n    /**\n     * This is a Maps of importers to Sets of require sources being resolved at\n     * the moment by resolveRequireSourcesAndUpdateMeta\n     */\n    currentlyResolving,\n    async resolveId(importee, importer, resolveOptions) {\n      const customOptions = resolveOptions.custom;\n      // All logic below is specific to ES imports.\n      // Also, if we do not skip this logic for requires that are resolved while\n      // transforming a commonjs file, it can easily lead to deadlocks.\n      if (\n        customOptions &&\n        customOptions['node-resolve'] &&\n        customOptions['node-resolve'].isRequire\n      ) {\n        return null;\n      }\n      const currentlyResolvingForParent = currentlyResolving.get(importer);\n      if (currentlyResolvingForParent && currentlyResolvingForParent.has(importee)) {\n        this.warn({\n          code: 'THIS_RESOLVE_WITHOUT_OPTIONS',\n          message:\n            'It appears a plugin has implemented a \"resolveId\" hook that uses \"this.resolve\" without forwarding the third \"options\" parameter of \"resolveId\". This is problematic as it can lead to wrong module resolutions especially for the node-resolve plugin and in certain cases cause early exit errors for the commonjs plugin.\\nIn rare cases, this warning can appear if the same file is both imported and required from the same mixed ES/CommonJS module, in which case it can be ignored.',\n          url: 'https://rollupjs.org/guide/en/#resolveid'\n        });\n        return null;\n      }\n\n      if (isWrappedId(importee, WRAPPED_SUFFIX)) {\n        return unwrapId$1(importee, WRAPPED_SUFFIX);\n      }\n\n      if (\n        importee.endsWith(ENTRY_SUFFIX) ||\n        isWrappedId(importee, MODULE_SUFFIX) ||\n        isWrappedId(importee, EXPORTS_SUFFIX) ||\n        isWrappedId(importee, PROXY_SUFFIX) ||\n        isWrappedId(importee, ES_IMPORT_SUFFIX) ||\n        isWrappedId(importee, EXTERNAL_SUFFIX) ||\n        importee.startsWith(HELPERS_ID) ||\n        importee === DYNAMIC_MODULES_ID\n      ) {\n        return importee;\n      }\n\n      if (importer) {\n        if (\n          importer === DYNAMIC_MODULES_ID ||\n          // Proxies are only importing resolved ids, no need to resolve again\n          isWrappedId(importer, PROXY_SUFFIX) ||\n          isWrappedId(importer, ES_IMPORT_SUFFIX) ||\n          importer.endsWith(ENTRY_SUFFIX)\n        ) {\n          return importee;\n        }\n        if (isWrappedId(importer, EXTERNAL_SUFFIX)) {\n          // We need to return null for unresolved imports so that the proper warning is shown\n          if (\n            !(await this.resolve(\n              importee,\n              importer,\n              Object.assign({ skipSelf: true }, resolveOptions)\n            ))\n          ) {\n            return null;\n          }\n          // For other external imports, we need to make sure they are handled as external\n          return { id: importee, external: true };\n        }\n      }\n\n      if (importee.startsWith('\\0')) {\n        return null;\n      }\n\n      // If this is an entry point or ESM import, we need to figure out if the importee is wrapped and\n      // if that is the case, we need to add a proxy.\n      const resolved =\n        (await this.resolve(\n          importee,\n          importer,\n          Object.assign({ skipSelf: true }, resolveOptions)\n        )) || resolveExtensions(importee, importer, extensions);\n      // Make sure that even if other plugins resolve again, we ignore our own proxies\n      if (\n        !resolved ||\n        resolved.external ||\n        resolved.id.endsWith(ENTRY_SUFFIX) ||\n        isWrappedId(resolved.id, ES_IMPORT_SUFFIX) ||\n        !isPossibleCjsId(resolved.id)\n      ) {\n        return resolved;\n      }\n      const moduleInfo = await this.load(resolved);\n      const {\n        meta: { commonjs: commonjsMeta }\n      } = moduleInfo;\n      if (commonjsMeta) {\n        const { isCommonJS } = commonjsMeta;\n        if (isCommonJS) {\n          if (resolveOptions.isEntry) {\n            moduleInfo.moduleSideEffects = true;\n            // We must not precede entry proxies with a `\\0` as that will mess up relative external resolution\n            return resolved.id + ENTRY_SUFFIX;\n          }\n          if (isCommonJS === IS_WRAPPED_COMMONJS) {\n            return { id: wrapId(resolved.id, ES_IMPORT_SUFFIX), meta: { commonjs: { resolved } } };\n          }\n        }\n      }\n      return resolved;\n    }\n  };\n}\n\nfunction getRequireResolver(extensions, detectCyclesAndConditional, currentlyResolving) {\n  const knownCjsModuleTypes = Object.create(null);\n  const requiredIds = Object.create(null);\n  const unconditionallyRequiredIds = Object.create(null);\n  const dependencies = Object.create(null);\n  const getDependencies = (id) => dependencies[id] || (dependencies[id] = new Set());\n\n  const isCyclic = (id) => {\n    const dependenciesToCheck = new Set(getDependencies(id));\n    for (const dependency of dependenciesToCheck) {\n      if (dependency === id) {\n        return true;\n      }\n      for (const childDependency of getDependencies(dependency)) {\n        dependenciesToCheck.add(childDependency);\n      }\n    }\n    return false;\n  };\n\n  // Once a module is listed here, its type (wrapped or not) is fixed and may\n  // not change for the rest of the current build, to not break already\n  // transformed modules.\n  const fullyAnalyzedModules = Object.create(null);\n\n  const getTypeForFullyAnalyzedModule = (id) => {\n    const knownType = knownCjsModuleTypes[id];\n    if (knownType !== true || !detectCyclesAndConditional || fullyAnalyzedModules[id]) {\n      return knownType;\n    }\n    if (isCyclic(id)) {\n      return (knownCjsModuleTypes[id] = IS_WRAPPED_COMMONJS);\n    }\n    return knownType;\n  };\n\n  const setInitialParentType = (id, initialCommonJSType) => {\n    // Fully analyzed modules may never change type\n    if (fullyAnalyzedModules[id]) {\n      return;\n    }\n    knownCjsModuleTypes[id] = initialCommonJSType;\n    if (\n      detectCyclesAndConditional &&\n      knownCjsModuleTypes[id] === true &&\n      requiredIds[id] &&\n      !unconditionallyRequiredIds[id]\n    ) {\n      knownCjsModuleTypes[id] = IS_WRAPPED_COMMONJS;\n    }\n  };\n\n  const analyzeRequiredModule = async (parentId, resolved, isConditional, loadModule) => {\n    const childId = resolved.id;\n    requiredIds[childId] = true;\n    if (!(isConditional || knownCjsModuleTypes[parentId] === IS_WRAPPED_COMMONJS)) {\n      unconditionallyRequiredIds[childId] = true;\n    }\n\n    getDependencies(parentId).add(childId);\n    if (!isCyclic(childId)) {\n      // This makes sure the current transform handler waits for all direct\n      // dependencies to be loaded and transformed and therefore for all\n      // transitive CommonJS dependencies to be loaded as well so that all\n      // cycles have been found and knownCjsModuleTypes is reliable.\n      await loadModule(resolved);\n    }\n  };\n\n  const getTypeForImportedModule = async (resolved, loadModule) => {\n    if (resolved.id in knownCjsModuleTypes) {\n      // This handles cyclic ES dependencies\n      return knownCjsModuleTypes[resolved.id];\n    }\n    const {\n      meta: { commonjs }\n    } = await loadModule(resolved);\n    return (commonjs && commonjs.isCommonJS) || false;\n  };\n\n  return {\n    getWrappedIds: () =>\n      Object.keys(knownCjsModuleTypes).filter(\n        (id) => knownCjsModuleTypes[id] === IS_WRAPPED_COMMONJS\n      ),\n    isRequiredId: (id) => requiredIds[id],\n    async shouldTransformCachedModule({\n      id: parentId,\n      resolvedSources,\n      meta: { commonjs: parentMeta }\n    }) {\n      // We explicitly track ES modules to handle circular imports\n      if (!(parentMeta && parentMeta.isCommonJS)) knownCjsModuleTypes[parentId] = false;\n      if (isWrappedId(parentId, ES_IMPORT_SUFFIX)) return false;\n      const parentRequires = parentMeta && parentMeta.requires;\n      if (parentRequires) {\n        setInitialParentType(parentId, parentMeta.initialCommonJSType);\n        await Promise.all(\n          parentRequires.map(({ resolved, isConditional }) =>\n            analyzeRequiredModule(parentId, resolved, isConditional, this.load)\n          )\n        );\n        if (getTypeForFullyAnalyzedModule(parentId) !== parentMeta.isCommonJS) {\n          return true;\n        }\n        for (const {\n          resolved: { id }\n        } of parentRequires) {\n          if (getTypeForFullyAnalyzedModule(id) !== parentMeta.isRequiredCommonJS[id]) {\n            return true;\n          }\n        }\n        // Now that we decided to go with the cached copy, neither the parent\n        // module nor any of its children may change types anymore\n        fullyAnalyzedModules[parentId] = true;\n        for (const {\n          resolved: { id }\n        } of parentRequires) {\n          fullyAnalyzedModules[id] = true;\n        }\n      }\n      const parentRequireSet = new Set((parentRequires || []).map(({ resolved: { id } }) => id));\n      return (\n        await Promise.all(\n          Object.keys(resolvedSources)\n            .map((source) => resolvedSources[source])\n            .filter(({ id, external }) => !(external || parentRequireSet.has(id)))\n            .map(async (resolved) => {\n              if (isWrappedId(resolved.id, ES_IMPORT_SUFFIX)) {\n                return (\n                  (await getTypeForImportedModule(\n                    (await this.load({ id: resolved.id })).meta.commonjs.resolved,\n                    this.load\n                  )) !== IS_WRAPPED_COMMONJS\n                );\n              }\n              return (await getTypeForImportedModule(resolved, this.load)) === IS_WRAPPED_COMMONJS;\n            })\n        )\n      ).some((shouldTransform) => shouldTransform);\n    },\n    /* eslint-disable no-param-reassign */\n    resolveRequireSourcesAndUpdateMeta: (rollupContext) => async (\n      parentId,\n      isParentCommonJS,\n      parentMeta,\n      sources\n    ) => {\n      parentMeta.initialCommonJSType = isParentCommonJS;\n      parentMeta.requires = [];\n      parentMeta.isRequiredCommonJS = Object.create(null);\n      setInitialParentType(parentId, isParentCommonJS);\n      const currentlyResolvingForParent = currentlyResolving.get(parentId) || new Set();\n      currentlyResolving.set(parentId, currentlyResolvingForParent);\n      const requireTargets = await Promise.all(\n        sources.map(async ({ source, isConditional }) => {\n          // Never analyze or proxy internal modules\n          if (source.startsWith('\\0')) {\n            return { id: source, allowProxy: false };\n          }\n          currentlyResolvingForParent.add(source);\n          const resolved =\n            (await rollupContext.resolve(source, parentId, {\n              custom: { 'node-resolve': { isRequire: true } }\n            })) || resolveExtensions(source, parentId, extensions);\n          currentlyResolvingForParent.delete(source);\n          if (!resolved) {\n            return { id: wrapId(source, EXTERNAL_SUFFIX), allowProxy: false };\n          }\n          const childId = resolved.id;\n          if (resolved.external) {\n            return { id: wrapId(childId, EXTERNAL_SUFFIX), allowProxy: false };\n          }\n          parentMeta.requires.push({ resolved, isConditional });\n          await analyzeRequiredModule(parentId, resolved, isConditional, rollupContext.load);\n          return { id: childId, allowProxy: true };\n        })\n      );\n      parentMeta.isCommonJS = getTypeForFullyAnalyzedModule(parentId);\n      fullyAnalyzedModules[parentId] = true;\n      return requireTargets.map(({ id: dependencyId, allowProxy }, index) => {\n        // eslint-disable-next-line no-multi-assign\n        const isCommonJS = (parentMeta.isRequiredCommonJS[\n          dependencyId\n        ] = getTypeForFullyAnalyzedModule(dependencyId));\n        fullyAnalyzedModules[dependencyId] = true;\n        return {\n          source: sources[index].source,\n          id: allowProxy\n            ? isCommonJS === IS_WRAPPED_COMMONJS\n              ? wrapId(dependencyId, WRAPPED_SUFFIX)\n              : wrapId(dependencyId, PROXY_SUFFIX)\n            : dependencyId,\n          isCommonJS\n        };\n      });\n    },\n    isCurrentlyResolving(source, parentId) {\n      const currentlyResolvingForParent = currentlyResolving.get(parentId);\n      return currentlyResolvingForParent && currentlyResolvingForParent.has(source);\n    }\n  };\n}\n\nfunction validateVersion(actualVersion, peerDependencyVersion, name) {\n  const versionRegexp = /\\^(\\d+\\.\\d+\\.\\d+)/g;\n  let minMajor = Infinity;\n  let minMinor = Infinity;\n  let minPatch = Infinity;\n  let foundVersion;\n  // eslint-disable-next-line no-cond-assign\n  while ((foundVersion = versionRegexp.exec(peerDependencyVersion))) {\n    const [foundMajor, foundMinor, foundPatch] = foundVersion[1].split('.').map(Number);\n    if (foundMajor < minMajor) {\n      minMajor = foundMajor;\n      minMinor = foundMinor;\n      minPatch = foundPatch;\n    }\n  }\n  if (!actualVersion) {\n    throw new Error(\n      `Insufficient ${name} version: \"@rollup/plugin-commonjs\" requires at least ${name}@${minMajor}.${minMinor}.${minPatch}.`\n    );\n  }\n  const [major, minor, patch] = actualVersion.split('.').map(Number);\n  if (\n    major < minMajor ||\n    (major === minMajor && (minor < minMinor || (minor === minMinor && patch < minPatch)))\n  ) {\n    throw new Error(\n      `Insufficient ${name} version: \"@rollup/plugin-commonjs\" requires at least ${name}@${minMajor}.${minMinor}.${minPatch} but found ${name}@${actualVersion}.`\n    );\n  }\n}\n\nconst operators = {\n  '==': (x) => equals(x.left, x.right, false),\n\n  '!=': (x) => not(operators['=='](x)),\n\n  '===': (x) => equals(x.left, x.right, true),\n\n  '!==': (x) => not(operators['==='](x)),\n\n  '!': (x) => isFalsy(x.argument),\n\n  '&&': (x) => isTruthy(x.left) && isTruthy(x.right),\n\n  '||': (x) => isTruthy(x.left) || isTruthy(x.right)\n};\n\nfunction not(value) {\n  return value === null ? value : !value;\n}\n\nfunction equals(a, b, strict) {\n  if (a.type !== b.type) return null;\n  // eslint-disable-next-line eqeqeq\n  if (a.type === 'Literal') return strict ? a.value === b.value : a.value == b.value;\n  return null;\n}\n\nfunction isTruthy(node) {\n  if (!node) return false;\n  if (node.type === 'Literal') return !!node.value;\n  if (node.type === 'ParenthesizedExpression') return isTruthy(node.expression);\n  if (node.operator in operators) return operators[node.operator](node);\n  return null;\n}\n\nfunction isFalsy(node) {\n  return not(isTruthy(node));\n}\n\nfunction getKeypath(node) {\n  const parts = [];\n\n  while (node.type === 'MemberExpression') {\n    if (node.computed) return null;\n\n    parts.unshift(node.property.name);\n    // eslint-disable-next-line no-param-reassign\n    node = node.object;\n  }\n\n  if (node.type !== 'Identifier') return null;\n\n  const { name } = node;\n  parts.unshift(name);\n\n  return { name, keypath: parts.join('.') };\n}\n\nconst KEY_COMPILED_ESM = '__esModule';\n\nfunction isDefineCompiledEsm(node) {\n  const definedProperty =\n    getDefinePropertyCallName(node, 'exports') || getDefinePropertyCallName(node, 'module.exports');\n  if (definedProperty && definedProperty.key === KEY_COMPILED_ESM) {\n    return isTruthy(definedProperty.value);\n  }\n  return false;\n}\n\nfunction getDefinePropertyCallName(node, targetName) {\n  const {\n    callee: { object, property }\n  } = node;\n  if (!object || object.type !== 'Identifier' || object.name !== 'Object') return;\n  if (!property || property.type !== 'Identifier' || property.name !== 'defineProperty') return;\n  if (node.arguments.length !== 3) return;\n\n  const targetNames = targetName.split('.');\n  const [target, key, value] = node.arguments;\n  if (targetNames.length === 1) {\n    if (target.type !== 'Identifier' || target.name !== targetNames[0]) {\n      return;\n    }\n  }\n\n  if (targetNames.length === 2) {\n    if (\n      target.type !== 'MemberExpression' ||\n      target.object.name !== targetNames[0] ||\n      target.property.name !== targetNames[1]\n    ) {\n      return;\n    }\n  }\n\n  if (value.type !== 'ObjectExpression' || !value.properties) return;\n\n  const valueProperty = value.properties.find((p) => p.key && p.key.name === 'value');\n  if (!valueProperty || !valueProperty.value) return;\n\n  // eslint-disable-next-line consistent-return\n  return { key: key.value, value: valueProperty.value };\n}\n\nfunction isShorthandProperty(parent) {\n  return parent && parent.type === 'Property' && parent.shorthand;\n}\n\nfunction hasDefineEsmProperty(node) {\n  return node.properties.some((property) => {\n    if (\n      property.type === 'Property' &&\n      property.key.type === 'Identifier' &&\n      property.key.name === '__esModule' &&\n      isTruthy(property.value)\n    ) {\n      return true;\n    }\n    return false;\n  });\n}\n\nfunction wrapCode(magicString, uses, moduleName, exportsName, indentExclusionRanges) {\n  const args = [];\n  const passedArgs = [];\n  if (uses.module) {\n    args.push('module');\n    passedArgs.push(moduleName);\n  }\n  if (uses.exports) {\n    args.push('exports');\n    passedArgs.push(exportsName);\n  }\n  magicString\n    .trim()\n    .indent('\\t', { exclude: indentExclusionRanges })\n    .prepend(`(function (${args.join(', ')}) {\\n`)\n    .append(`\\n} (${passedArgs.join(', ')}));`);\n}\n\nfunction rewriteExportsAndGetExportsBlock(\n  magicString,\n  moduleName,\n  exportsName,\n  wrapped,\n  moduleExportsAssignments,\n  firstTopLevelModuleExportsAssignment,\n  exportsAssignmentsByName,\n  topLevelAssignments,\n  defineCompiledEsmExpressions,\n  deconflictedExportNames,\n  code,\n  HELPERS_NAME,\n  exportMode,\n  detectWrappedDefault,\n  defaultIsModuleExports,\n  usesRequireWrapper,\n  requireName\n) {\n  const exports = [];\n  const exportDeclarations = [];\n\n  if (usesRequireWrapper) {\n    getExportsWhenUsingRequireWrapper(\n      magicString,\n      wrapped,\n      exportMode,\n      exports,\n      moduleExportsAssignments,\n      exportsAssignmentsByName,\n      moduleName,\n      exportsName,\n      requireName,\n      defineCompiledEsmExpressions\n    );\n  } else if (exportMode === 'replace') {\n    getExportsForReplacedModuleExports(\n      magicString,\n      exports,\n      exportDeclarations,\n      moduleExportsAssignments,\n      firstTopLevelModuleExportsAssignment,\n      exportsName\n    );\n  } else {\n    exports.push(`${exportsName} as __moduleExports`);\n    if (wrapped) {\n      getExportsWhenWrapping(\n        exportDeclarations,\n        exportsName,\n        detectWrappedDefault,\n        HELPERS_NAME,\n        defaultIsModuleExports\n      );\n    } else {\n      getExports(\n        magicString,\n        exports,\n        exportDeclarations,\n        moduleExportsAssignments,\n        exportsAssignmentsByName,\n        deconflictedExportNames,\n        topLevelAssignments,\n        moduleName,\n        exportsName,\n        defineCompiledEsmExpressions,\n        HELPERS_NAME,\n        defaultIsModuleExports\n      );\n    }\n  }\n  if (exports.length) {\n    exportDeclarations.push(`export { ${exports.join(', ')} };`);\n  }\n\n  return `\\n\\n${exportDeclarations.join('\\n')}`;\n}\n\nfunction getExportsWhenUsingRequireWrapper(\n  magicString,\n  wrapped,\n  exportMode,\n  exports,\n  moduleExportsAssignments,\n  exportsAssignmentsByName,\n  moduleName,\n  exportsName,\n  requireName,\n  defineCompiledEsmExpressions\n) {\n  if (!wrapped) {\n    if (exportMode === 'replace') {\n      for (const { left } of moduleExportsAssignments) {\n        magicString.overwrite(left.start, left.end, exportsName);\n      }\n    } else {\n      // Collect and rewrite module.exports assignments\n      for (const { left } of moduleExportsAssignments) {\n        magicString.overwrite(left.start, left.end, `${moduleName}.exports`);\n      }\n      // Collect and rewrite named exports\n      for (const [exportName, { nodes }] of exportsAssignmentsByName) {\n        for (const node of nodes) {\n          magicString.overwrite(node.start, node.left.end, `${exportsName}.${exportName}`);\n        }\n      }\n      // Collect and rewrite exports.__esModule assignments\n      for (const expression of defineCompiledEsmExpressions) {\n        const moduleExportsExpression =\n          expression.type === 'CallExpression' ? expression.arguments[0] : expression.left.object;\n        magicString.overwrite(\n          moduleExportsExpression.start,\n          moduleExportsExpression.end,\n          exportsName\n        );\n      }\n    }\n  }\n  exports.push(`${requireName} as __require`);\n}\n\nfunction getExportsForReplacedModuleExports(\n  magicString,\n  exports,\n  exportDeclarations,\n  moduleExportsAssignments,\n  firstTopLevelModuleExportsAssignment,\n  exportsName\n) {\n  for (const { left } of moduleExportsAssignments) {\n    magicString.overwrite(left.start, left.end, exportsName);\n  }\n  magicString.prependRight(firstTopLevelModuleExportsAssignment.left.start, 'var ');\n  exports.push(`${exportsName} as __moduleExports`);\n  exportDeclarations.push(`export default ${exportsName};`);\n}\n\nfunction getExportsWhenWrapping(\n  exportDeclarations,\n  exportsName,\n  detectWrappedDefault,\n  HELPERS_NAME,\n  defaultIsModuleExports\n) {\n  exportDeclarations.push(\n    `export default ${\n      detectWrappedDefault && defaultIsModuleExports === 'auto'\n        ? `/*@__PURE__*/${HELPERS_NAME}.getDefaultExportFromCjs(${exportsName})`\n        : defaultIsModuleExports === false\n        ? `${exportsName}.default`\n        : exportsName\n    };`\n  );\n}\n\nfunction getExports(\n  magicString,\n  exports,\n  exportDeclarations,\n  moduleExportsAssignments,\n  exportsAssignmentsByName,\n  deconflictedExportNames,\n  topLevelAssignments,\n  moduleName,\n  exportsName,\n  defineCompiledEsmExpressions,\n  HELPERS_NAME,\n  defaultIsModuleExports\n) {\n  let deconflictedDefaultExportName;\n  // Collect and rewrite module.exports assignments\n  for (const { left } of moduleExportsAssignments) {\n    magicString.overwrite(left.start, left.end, `${moduleName}.exports`);\n  }\n\n  // Collect and rewrite named exports\n  for (const [exportName, { nodes }] of exportsAssignmentsByName) {\n    const deconflicted = deconflictedExportNames[exportName];\n    let needsDeclaration = true;\n    for (const node of nodes) {\n      let replacement = `${deconflicted} = ${exportsName}.${exportName}`;\n      if (needsDeclaration && topLevelAssignments.has(node)) {\n        replacement = `var ${replacement}`;\n        needsDeclaration = false;\n      }\n      magicString.overwrite(node.start, node.left.end, replacement);\n    }\n    if (needsDeclaration) {\n      magicString.prepend(`var ${deconflicted};\\n`);\n    }\n\n    if (exportName === 'default') {\n      deconflictedDefaultExportName = deconflicted;\n    } else {\n      exports.push(exportName === deconflicted ? exportName : `${deconflicted} as ${exportName}`);\n    }\n  }\n\n  // Collect and rewrite exports.__esModule assignments\n  let isRestorableCompiledEsm = false;\n  for (const expression of defineCompiledEsmExpressions) {\n    isRestorableCompiledEsm = true;\n    const moduleExportsExpression =\n      expression.type === 'CallExpression' ? expression.arguments[0] : expression.left.object;\n    magicString.overwrite(moduleExportsExpression.start, moduleExportsExpression.end, exportsName);\n  }\n\n  if (!isRestorableCompiledEsm || defaultIsModuleExports === true) {\n    exports.push(`${exportsName} as default`);\n  } else if (moduleExportsAssignments.length === 0 || defaultIsModuleExports === false) {\n    exports.push(`${deconflictedDefaultExportName || exportsName} as default`);\n  } else {\n    exportDeclarations.push(\n      `export default /*@__PURE__*/${HELPERS_NAME}.getDefaultExportFromCjs(${exportsName});`\n    );\n  }\n}\n\nfunction isRequireExpression(node, scope) {\n  if (!node) return false;\n  if (node.type !== 'CallExpression') return false;\n\n  // Weird case of `require()` or `module.require()` without arguments\n  if (node.arguments.length === 0) return false;\n\n  return isRequire(node.callee, scope);\n}\n\nfunction isRequire(node, scope) {\n  return (\n    (node.type === 'Identifier' && node.name === 'require' && !scope.contains('require')) ||\n    (node.type === 'MemberExpression' && isModuleRequire(node, scope))\n  );\n}\n\nfunction isModuleRequire({ object, property }, scope) {\n  return (\n    object.type === 'Identifier' &&\n    object.name === 'module' &&\n    property.type === 'Identifier' &&\n    property.name === 'require' &&\n    !scope.contains('module')\n  );\n}\n\nfunction hasDynamicArguments(node) {\n  return (\n    node.arguments.length > 1 ||\n    (node.arguments[0].type !== 'Literal' &&\n      (node.arguments[0].type !== 'TemplateLiteral' || node.arguments[0].expressions.length > 0))\n  );\n}\n\nconst reservedMethod = { resolve: true, cache: true, main: true };\n\nfunction isNodeRequirePropertyAccess(parent) {\n  return parent && parent.property && reservedMethod[parent.property.name];\n}\n\nfunction getRequireStringArg(node) {\n  return node.arguments[0].type === 'Literal'\n    ? node.arguments[0].value\n    : node.arguments[0].quasis[0].value.cooked;\n}\n\nfunction getRequireHandlers() {\n  const requireExpressions = [];\n\n  function addRequireExpression(\n    sourceId,\n    node,\n    scope,\n    usesReturnValue,\n    isInsideTryBlock,\n    isInsideConditional,\n    toBeRemoved\n  ) {\n    requireExpressions.push({\n      sourceId,\n      node,\n      scope,\n      usesReturnValue,\n      isInsideTryBlock,\n      isInsideConditional,\n      toBeRemoved\n    });\n  }\n\n  async function rewriteRequireExpressionsAndGetImportBlock(\n    magicString,\n    topLevelDeclarations,\n    reassignedNames,\n    helpersName,\n    dynamicRequireName,\n    moduleName,\n    exportsName,\n    id,\n    exportMode,\n    resolveRequireSourcesAndUpdateMeta,\n    needsRequireWrapper,\n    isEsModule,\n    isDynamicRequireModulesEnabled,\n    getIgnoreTryCatchRequireStatementMode,\n    commonjsMeta\n  ) {\n    const imports = [];\n    imports.push(`import * as ${helpersName} from \"${HELPERS_ID}\";`);\n    if (dynamicRequireName) {\n      imports.push(\n        `import { ${\n          isDynamicRequireModulesEnabled ? CREATE_COMMONJS_REQUIRE_EXPORT : COMMONJS_REQUIRE_EXPORT\n        } as ${dynamicRequireName} } from \"${DYNAMIC_MODULES_ID}\";`\n      );\n    }\n    if (exportMode === 'module') {\n      imports.push(\n        `import { __module as ${moduleName}, exports as ${exportsName} } from ${JSON.stringify(\n          wrapId(id, MODULE_SUFFIX)\n        )}`\n      );\n    } else if (exportMode === 'exports') {\n      imports.push(\n        `import { __exports as ${exportsName} } from ${JSON.stringify(wrapId(id, EXPORTS_SUFFIX))}`\n      );\n    }\n    const requiresBySource = collectSources(requireExpressions);\n    const requireTargets = await resolveRequireSourcesAndUpdateMeta(\n      id,\n      needsRequireWrapper ? IS_WRAPPED_COMMONJS : !isEsModule,\n      commonjsMeta,\n      Object.keys(requiresBySource).map((source) => {\n        return {\n          source,\n          isConditional: requiresBySource[source].every((require) => require.isInsideConditional)\n        };\n      })\n    );\n    processRequireExpressions(\n      imports,\n      requireTargets,\n      requiresBySource,\n      getIgnoreTryCatchRequireStatementMode,\n      magicString\n    );\n    return imports.length ? `${imports.join('\\n')}\\n\\n` : '';\n  }\n\n  return {\n    addRequireExpression,\n    rewriteRequireExpressionsAndGetImportBlock\n  };\n}\n\nfunction collectSources(requireExpressions) {\n  const requiresBySource = Object.create(null);\n  for (const requireExpression of requireExpressions) {\n    const { sourceId } = requireExpression;\n    if (!requiresBySource[sourceId]) {\n      requiresBySource[sourceId] = [];\n    }\n    const requires = requiresBySource[sourceId];\n    requires.push(requireExpression);\n  }\n  return requiresBySource;\n}\n\nfunction processRequireExpressions(\n  imports,\n  requireTargets,\n  requiresBySource,\n  getIgnoreTryCatchRequireStatementMode,\n  magicString\n) {\n  const generateRequireName = getGenerateRequireName();\n  for (const { source, id: resolvedId, isCommonJS } of requireTargets) {\n    const requires = requiresBySource[source];\n    const name = generateRequireName(requires);\n    let usesRequired = false;\n    let needsImport = false;\n    for (const { node, usesReturnValue, toBeRemoved, isInsideTryBlock } of requires) {\n      const { canConvertRequire, shouldRemoveRequire } =\n        isInsideTryBlock && isWrappedId(resolvedId, EXTERNAL_SUFFIX)\n          ? getIgnoreTryCatchRequireStatementMode(source)\n          : { canConvertRequire: true, shouldRemoveRequire: false };\n      if (shouldRemoveRequire) {\n        if (usesReturnValue) {\n          magicString.overwrite(node.start, node.end, 'undefined');\n        } else {\n          magicString.remove(toBeRemoved.start, toBeRemoved.end);\n        }\n      } else if (canConvertRequire) {\n        needsImport = true;\n        if (isCommonJS === IS_WRAPPED_COMMONJS) {\n          magicString.overwrite(node.start, node.end, `${name}()`);\n        } else if (usesReturnValue) {\n          usesRequired = true;\n          magicString.overwrite(node.start, node.end, name);\n        } else {\n          magicString.remove(toBeRemoved.start, toBeRemoved.end);\n        }\n      }\n    }\n    if (needsImport) {\n      if (isCommonJS === IS_WRAPPED_COMMONJS) {\n        imports.push(`import { __require as ${name} } from ${JSON.stringify(resolvedId)};`);\n      } else {\n        imports.push(`import ${usesRequired ? `${name} from ` : ''}${JSON.stringify(resolvedId)};`);\n      }\n    }\n  }\n}\n\nfunction getGenerateRequireName() {\n  let uid = 0;\n  return (requires) => {\n    let name;\n    const hasNameConflict = ({ scope }) => scope.contains(name);\n    do {\n      name = `require$$${uid}`;\n      uid += 1;\n    } while (requires.some(hasNameConflict));\n    return name;\n  };\n}\n\n/* eslint-disable no-param-reassign, no-shadow, no-underscore-dangle, no-continue */\n\nconst exportsPattern = /^(?:module\\.)?exports(?:\\.([a-zA-Z_$][a-zA-Z_$0-9]*))?$/;\n\nconst functionType = /^(?:FunctionDeclaration|FunctionExpression|ArrowFunctionExpression)$/;\n\nasync function transformCommonjs(\n  parse,\n  code,\n  id,\n  isEsModule,\n  ignoreGlobal,\n  ignoreRequire,\n  ignoreDynamicRequires,\n  getIgnoreTryCatchRequireStatementMode,\n  sourceMap,\n  isDynamicRequireModulesEnabled,\n  dynamicRequireModules,\n  commonDir,\n  astCache,\n  defaultIsModuleExports,\n  needsRequireWrapper,\n  resolveRequireSourcesAndUpdateMeta,\n  isRequired,\n  checkDynamicRequire,\n  commonjsMeta\n) {\n  const ast = astCache || tryParse(parse, code, id);\n  const magicString = new MagicString$1(code);\n  const uses = {\n    module: false,\n    exports: false,\n    global: false,\n    require: false\n  };\n  const virtualDynamicRequirePath =\n    isDynamicRequireModulesEnabled && getVirtualPathForDynamicRequirePath(dirname$1(id), commonDir);\n  let scope = attachScopes(ast, 'scope');\n  let lexicalDepth = 0;\n  let programDepth = 0;\n  let currentTryBlockEnd = null;\n  let shouldWrap = false;\n  let reexports = false;\n\n  const globals = new Set();\n  // A conditionalNode is a node for which execution is not guaranteed. If such a node is a require\n  // or contains nested requires, those should be handled as function calls unless there is an\n  // unconditional require elsewhere.\n  let currentConditionalNodeEnd = null;\n  const conditionalNodes = new Set();\n  const { addRequireExpression, rewriteRequireExpressionsAndGetImportBlock } = getRequireHandlers();\n\n  // See which names are assigned to. This is necessary to prevent\n  // illegally replacing `var foo = require('foo')` with `import foo from 'foo'`,\n  // where `foo` is later reassigned. (This happens in the wild. CommonJS, sigh)\n  const reassignedNames = new Set();\n  const topLevelDeclarations = [];\n  const skippedNodes = new Set();\n  const moduleAccessScopes = new Set([scope]);\n  const exportsAccessScopes = new Set([scope]);\n  const moduleExportsAssignments = [];\n  let firstTopLevelModuleExportsAssignment = null;\n  const exportsAssignmentsByName = new Map();\n  const topLevelAssignments = new Set();\n  const topLevelDefineCompiledEsmExpressions = [];\n  const replacedGlobal = [];\n  const replacedDynamicRequires = [];\n  const importedVariables = new Set();\n  const indentExclusionRanges = [];\n\n  walk$3(ast, {\n    enter(node, parent) {\n      if (skippedNodes.has(node)) {\n        this.skip();\n        return;\n      }\n\n      if (currentTryBlockEnd !== null && node.start > currentTryBlockEnd) {\n        currentTryBlockEnd = null;\n      }\n      if (currentConditionalNodeEnd !== null && node.start > currentConditionalNodeEnd) {\n        currentConditionalNodeEnd = null;\n      }\n      if (currentConditionalNodeEnd === null && conditionalNodes.has(node)) {\n        currentConditionalNodeEnd = node.end;\n      }\n\n      programDepth += 1;\n      if (node.scope) ({ scope } = node);\n      if (functionType.test(node.type)) lexicalDepth += 1;\n      if (sourceMap) {\n        magicString.addSourcemapLocation(node.start);\n        magicString.addSourcemapLocation(node.end);\n      }\n\n      // eslint-disable-next-line default-case\n      switch (node.type) {\n        case 'AssignmentExpression':\n          if (node.left.type === 'MemberExpression') {\n            const flattened = getKeypath(node.left);\n            if (!flattened || scope.contains(flattened.name)) return;\n\n            const exportsPatternMatch = exportsPattern.exec(flattened.keypath);\n            if (!exportsPatternMatch || flattened.keypath === 'exports') return;\n\n            const [, exportName] = exportsPatternMatch;\n            uses[flattened.name] = true;\n\n            // we're dealing with `module.exports = ...` or `[module.]exports.foo = ...` \u2013\n            if (flattened.keypath === 'module.exports') {\n              moduleExportsAssignments.push(node);\n              if (programDepth > 3) {\n                moduleAccessScopes.add(scope);\n              } else if (!firstTopLevelModuleExportsAssignment) {\n                firstTopLevelModuleExportsAssignment = node;\n              }\n\n              if (defaultIsModuleExports === false) {\n                shouldWrap = true;\n              } else if (defaultIsModuleExports === 'auto') {\n                if (node.right.type === 'ObjectExpression') {\n                  if (hasDefineEsmProperty(node.right)) {\n                    shouldWrap = true;\n                  }\n                } else if (isRequireExpression(node.right, scope)) {\n                  shouldWrap = true;\n                  reexports = true;\n                }\n              }\n            } else if (exportName === KEY_COMPILED_ESM) {\n              if (programDepth > 3) {\n                shouldWrap = true;\n              } else {\n                topLevelDefineCompiledEsmExpressions.push(node);\n              }\n            } else {\n              const exportsAssignments = exportsAssignmentsByName.get(exportName) || {\n                nodes: [],\n                scopes: new Set()\n              };\n              exportsAssignments.nodes.push(node);\n              exportsAssignments.scopes.add(scope);\n              exportsAccessScopes.add(scope);\n              exportsAssignmentsByName.set(exportName, exportsAssignments);\n              if (programDepth <= 3) {\n                topLevelAssignments.add(node);\n              }\n            }\n\n            skippedNodes.add(node.left);\n          } else {\n            for (const name of extractAssignedNames(node.left)) {\n              reassignedNames.add(name);\n            }\n          }\n          return;\n        case 'CallExpression': {\n          if (isDefineCompiledEsm(node)) {\n            if (programDepth === 3 && parent.type === 'ExpressionStatement') {\n              // skip special handling for [module.]exports until we know we render this\n              skippedNodes.add(node.arguments[0]);\n              topLevelDefineCompiledEsmExpressions.push(node);\n            } else {\n              shouldWrap = true;\n            }\n            return;\n          }\n\n          // Transform require.resolve\n          if (\n            isDynamicRequireModulesEnabled &&\n            node.callee.object &&\n            isRequire(node.callee.object, scope) &&\n            node.callee.property.name === 'resolve'\n          ) {\n            checkDynamicRequire(node.start);\n            uses.require = true;\n            const requireNode = node.callee.object;\n            replacedDynamicRequires.push(requireNode);\n            return;\n          }\n\n          if (!isRequireExpression(node, scope)) {\n            const keypath = getKeypath(node.callee);\n            if (keypath && importedVariables.has(keypath.name)) {\n              // Heuristic to deoptimize requires after a required function has been called\n              currentConditionalNodeEnd = Infinity;\n            }\n            return;\n          }\n\n          skippedNodes.add(node.callee);\n          uses.require = true;\n\n          if (hasDynamicArguments(node)) {\n            if (isDynamicRequireModulesEnabled) {\n              checkDynamicRequire(node.start);\n            }\n            if (!ignoreDynamicRequires) {\n              replacedDynamicRequires.push(node.callee);\n            }\n            return;\n          }\n\n          const requireStringArg = getRequireStringArg(node);\n          if (!ignoreRequire(requireStringArg)) {\n            const usesReturnValue = parent.type !== 'ExpressionStatement';\n            const toBeRemoved =\n              parent.type === 'ExpressionStatement' &&\n              (!currentConditionalNodeEnd ||\n                // We should completely remove requires directly in a try-catch\n                // so that Rollup can remove up the try-catch\n                (currentTryBlockEnd !== null && currentTryBlockEnd < currentConditionalNodeEnd))\n                ? parent\n                : node;\n            addRequireExpression(\n              requireStringArg,\n              node,\n              scope,\n              usesReturnValue,\n              currentTryBlockEnd !== null,\n              currentConditionalNodeEnd !== null,\n              toBeRemoved\n            );\n            if (parent.type === 'VariableDeclarator' && parent.id.type === 'Identifier') {\n              for (const name of extractAssignedNames(parent.id)) {\n                importedVariables.add(name);\n              }\n            }\n          }\n          return;\n        }\n        case 'ConditionalExpression':\n        case 'IfStatement':\n          // skip dead branches\n          if (isFalsy(node.test)) {\n            skippedNodes.add(node.consequent);\n          } else if (isTruthy(node.test)) {\n            if (node.alternate) {\n              skippedNodes.add(node.alternate);\n            }\n          } else {\n            conditionalNodes.add(node.consequent);\n            if (node.alternate) {\n              conditionalNodes.add(node.alternate);\n            }\n          }\n          return;\n        case 'ArrowFunctionExpression':\n        case 'FunctionDeclaration':\n        case 'FunctionExpression':\n          // requires in functions should be conditional unless it is an IIFE\n          if (\n            currentConditionalNodeEnd === null &&\n            !(parent.type === 'CallExpression' && parent.callee === node)\n          ) {\n            currentConditionalNodeEnd = node.end;\n          }\n          return;\n        case 'Identifier': {\n          const { name } = node;\n          if (!isReference(node, parent) || scope.contains(name)) return;\n          switch (name) {\n            case 'require':\n              uses.require = true;\n              if (isNodeRequirePropertyAccess(parent)) {\n                return;\n              }\n              if (!ignoreDynamicRequires) {\n                if (isShorthandProperty(parent)) {\n                  magicString.prependRight(node.start, 'require: ');\n                }\n                replacedDynamicRequires.push(node);\n              }\n              return;\n            case 'module':\n            case 'exports':\n              shouldWrap = true;\n              uses[name] = true;\n              return;\n            case 'global':\n              uses.global = true;\n              if (!ignoreGlobal) {\n                replacedGlobal.push(node);\n              }\n              return;\n            case 'define':\n              magicString.overwrite(node.start, node.end, 'undefined', {\n                storeName: true\n              });\n              return;\n            default:\n              globals.add(name);\n              return;\n          }\n        }\n        case 'LogicalExpression':\n          // skip dead branches\n          if (node.operator === '&&') {\n            if (isFalsy(node.left)) {\n              skippedNodes.add(node.right);\n            } else if (!isTruthy(node.left)) {\n              conditionalNodes.add(node.right);\n            }\n          } else if (node.operator === '||') {\n            if (isTruthy(node.left)) {\n              skippedNodes.add(node.right);\n            } else if (!isFalsy(node.left)) {\n              conditionalNodes.add(node.right);\n            }\n          }\n          return;\n        case 'MemberExpression':\n          if (!isDynamicRequireModulesEnabled && isModuleRequire(node, scope)) {\n            uses.require = true;\n            replacedDynamicRequires.push(node);\n            skippedNodes.add(node.object);\n            skippedNodes.add(node.property);\n          }\n          return;\n        case 'ReturnStatement':\n          // if top-level return, we need to wrap it\n          if (lexicalDepth === 0) {\n            shouldWrap = true;\n          }\n          return;\n        case 'ThisExpression':\n          // rewrite top-level `this` as `commonjsHelpers.commonjsGlobal`\n          if (lexicalDepth === 0) {\n            uses.global = true;\n            if (!ignoreGlobal) {\n              replacedGlobal.push(node);\n            }\n          }\n          return;\n        case 'TryStatement':\n          if (currentTryBlockEnd === null) {\n            currentTryBlockEnd = node.block.end;\n          }\n          if (currentConditionalNodeEnd === null) {\n            currentConditionalNodeEnd = node.end;\n          }\n          return;\n        case 'UnaryExpression':\n          // rewrite `typeof module`, `typeof module.exports` and `typeof exports` (https://github.com/rollup/rollup-plugin-commonjs/issues/151)\n          if (node.operator === 'typeof') {\n            const flattened = getKeypath(node.argument);\n            if (!flattened) return;\n\n            if (scope.contains(flattened.name)) return;\n\n            if (\n              !isEsModule &&\n              (flattened.keypath === 'module.exports' ||\n                flattened.keypath === 'module' ||\n                flattened.keypath === 'exports')\n            ) {\n              magicString.overwrite(node.start, node.end, `'object'`, {\n                storeName: false\n              });\n            }\n          }\n          return;\n        case 'VariableDeclaration':\n          if (!scope.parent) {\n            topLevelDeclarations.push(node);\n          }\n          return;\n        case 'TemplateElement':\n          if (node.value.raw.includes('\\n')) {\n            indentExclusionRanges.push([node.start, node.end]);\n          }\n      }\n    },\n\n    leave(node) {\n      programDepth -= 1;\n      if (node.scope) scope = scope.parent;\n      if (functionType.test(node.type)) lexicalDepth -= 1;\n    }\n  });\n\n  const nameBase = getName(id);\n  const exportsName = deconflict([...exportsAccessScopes], globals, nameBase);\n  const moduleName = deconflict([...moduleAccessScopes], globals, `${nameBase}Module`);\n  const requireName = deconflict([scope], globals, `require${capitalize(nameBase)}`);\n  const isRequiredName = deconflict([scope], globals, `hasRequired${capitalize(nameBase)}`);\n  const helpersName = deconflict([scope], globals, 'commonjsHelpers');\n  const dynamicRequireName =\n    replacedDynamicRequires.length > 0 &&\n    deconflict(\n      [scope],\n      globals,\n      isDynamicRequireModulesEnabled ? CREATE_COMMONJS_REQUIRE_EXPORT : COMMONJS_REQUIRE_EXPORT\n    );\n  const deconflictedExportNames = Object.create(null);\n  for (const [exportName, { scopes }] of exportsAssignmentsByName) {\n    deconflictedExportNames[exportName] = deconflict([...scopes], globals, exportName);\n  }\n\n  for (const node of replacedGlobal) {\n    magicString.overwrite(node.start, node.end, `${helpersName}.commonjsGlobal`, {\n      storeName: true\n    });\n  }\n  for (const node of replacedDynamicRequires) {\n    magicString.overwrite(\n      node.start,\n      node.end,\n      isDynamicRequireModulesEnabled\n        ? `${dynamicRequireName}(${JSON.stringify(virtualDynamicRequirePath)})`\n        : dynamicRequireName,\n      {\n        contentOnly: true,\n        storeName: true\n      }\n    );\n  }\n\n  // We cannot wrap ES/mixed modules\n  shouldWrap = !isEsModule && (shouldWrap || (uses.exports && moduleExportsAssignments.length > 0));\n  const detectWrappedDefault =\n    shouldWrap &&\n    (reexports ||\n      topLevelDefineCompiledEsmExpressions.length > 0 ||\n      code.indexOf('__esModule') >= 0);\n\n  if (\n    !(\n      shouldWrap ||\n      isRequired ||\n      needsRequireWrapper ||\n      uses.module ||\n      uses.exports ||\n      uses.require ||\n      topLevelDefineCompiledEsmExpressions.length > 0\n    ) &&\n    (ignoreGlobal || !uses.global)\n  ) {\n    return { meta: { commonjs: { isCommonJS: false } } };\n  }\n\n  let leadingComment = '';\n  if (code.startsWith('/*')) {\n    const commentEnd = code.indexOf('*/', 2) + 2;\n    leadingComment = `${code.slice(0, commentEnd)}\\n`;\n    magicString.remove(0, commentEnd).trim();\n  }\n\n  const exportMode = isEsModule\n    ? 'none'\n    : shouldWrap\n    ? uses.module\n      ? 'module'\n      : 'exports'\n    : firstTopLevelModuleExportsAssignment\n    ? exportsAssignmentsByName.size === 0 && topLevelDefineCompiledEsmExpressions.length === 0\n      ? 'replace'\n      : 'module'\n    : moduleExportsAssignments.length === 0\n    ? 'exports'\n    : 'module';\n\n  const importBlock = await rewriteRequireExpressionsAndGetImportBlock(\n    magicString,\n    topLevelDeclarations,\n    reassignedNames,\n    helpersName,\n    dynamicRequireName,\n    moduleName,\n    exportsName,\n    id,\n    exportMode,\n    resolveRequireSourcesAndUpdateMeta,\n    needsRequireWrapper,\n    isEsModule,\n    isDynamicRequireModulesEnabled,\n    getIgnoreTryCatchRequireStatementMode,\n    commonjsMeta\n  );\n  const usesRequireWrapper = commonjsMeta.isCommonJS === IS_WRAPPED_COMMONJS;\n  const exportBlock = isEsModule\n    ? ''\n    : rewriteExportsAndGetExportsBlock(\n        magicString,\n        moduleName,\n        exportsName,\n        shouldWrap,\n        moduleExportsAssignments,\n        firstTopLevelModuleExportsAssignment,\n        exportsAssignmentsByName,\n        topLevelAssignments,\n        topLevelDefineCompiledEsmExpressions,\n        deconflictedExportNames,\n        code,\n        helpersName,\n        exportMode,\n        detectWrappedDefault,\n        defaultIsModuleExports,\n        usesRequireWrapper,\n        requireName\n      );\n\n  if (shouldWrap) {\n    wrapCode(magicString, uses, moduleName, exportsName, indentExclusionRanges);\n  }\n\n  if (usesRequireWrapper) {\n    magicString.trim().indent('\\t', {\n      exclude: indentExclusionRanges\n    });\n    magicString.prepend(\n      `var ${isRequiredName};\n\nfunction ${requireName} () {\n\\tif (${isRequiredName}) return ${exportsName};\n\\t${isRequiredName} = 1;\n`\n    ).append(`\n\\treturn ${exportsName};\n}`);\n    if (exportMode === 'replace') {\n      magicString.prepend(`var ${exportsName};\\n`);\n    }\n  }\n\n  magicString\n    .trim()\n    .prepend(leadingComment + importBlock)\n    .append(exportBlock);\n\n  return {\n    code: magicString.toString(),\n    map: sourceMap ? magicString.generateMap() : null,\n    syntheticNamedExports: isEsModule || usesRequireWrapper ? false : '__moduleExports',\n    meta: { commonjs: commonjsMeta }\n  };\n}\n\nconst PLUGIN_NAME = 'commonjs';\n\nfunction commonjs(options = {}) {\n  const {\n    ignoreGlobal,\n    ignoreDynamicRequires,\n    requireReturnsDefault: requireReturnsDefaultOption,\n    defaultIsModuleExports: defaultIsModuleExportsOption,\n    esmExternals\n  } = options;\n  const extensions = options.extensions || ['.js'];\n  const filter = createFilter$2(options.include, options.exclude);\n  const isPossibleCjsId = (id) => {\n    const extName = extname(id);\n    return extName === '.cjs' || (extensions.includes(extName) && filter(id));\n  };\n\n  const { strictRequiresFilter, detectCyclesAndConditional } = getStrictRequiresFilter(options);\n\n  const getRequireReturnsDefault =\n    typeof requireReturnsDefaultOption === 'function'\n      ? requireReturnsDefaultOption\n      : () => requireReturnsDefaultOption;\n\n  let esmExternalIds;\n  const isEsmExternal =\n    typeof esmExternals === 'function'\n      ? esmExternals\n      : Array.isArray(esmExternals)\n      ? ((esmExternalIds = new Set(esmExternals)), (id) => esmExternalIds.has(id))\n      : () => esmExternals;\n\n  const getDefaultIsModuleExports =\n    typeof defaultIsModuleExportsOption === 'function'\n      ? defaultIsModuleExportsOption\n      : () =>\n          typeof defaultIsModuleExportsOption === 'boolean' ? defaultIsModuleExportsOption : 'auto';\n\n  const dynamicRequireRoot =\n    typeof options.dynamicRequireRoot === 'string'\n      ? resolve$4(options.dynamicRequireRoot)\n      : process.cwd();\n  const { commonDir, dynamicRequireModules } = getDynamicRequireModules(\n    options.dynamicRequireTargets,\n    dynamicRequireRoot\n  );\n  const isDynamicRequireModulesEnabled = dynamicRequireModules.size > 0;\n\n  const ignoreRequire =\n    typeof options.ignore === 'function'\n      ? options.ignore\n      : Array.isArray(options.ignore)\n      ? (id) => options.ignore.includes(id)\n      : () => false;\n\n  const getIgnoreTryCatchRequireStatementMode = (id) => {\n    const mode =\n      typeof options.ignoreTryCatch === 'function'\n        ? options.ignoreTryCatch(id)\n        : Array.isArray(options.ignoreTryCatch)\n        ? options.ignoreTryCatch.includes(id)\n        : typeof options.ignoreTryCatch !== 'undefined'\n        ? options.ignoreTryCatch\n        : true;\n\n    return {\n      canConvertRequire: mode !== 'remove' && mode !== true,\n      shouldRemoveRequire: mode === 'remove'\n    };\n  };\n\n  const { currentlyResolving, resolveId } = getResolveId(extensions, isPossibleCjsId);\n\n  const sourceMap = options.sourceMap !== false;\n\n  // Initialized in buildStart\n  let requireResolver;\n\n  function transformAndCheckExports(code, id) {\n    const { isEsModule, hasDefaultExport, hasNamedExports, ast } = analyzeTopLevelStatements(\n      this.parse,\n      code,\n      id\n    );\n\n    const commonjsMeta = this.getModuleInfo(id).meta.commonjs || {};\n    if (hasDefaultExport) {\n      commonjsMeta.hasDefaultExport = true;\n    }\n    if (hasNamedExports) {\n      commonjsMeta.hasNamedExports = true;\n    }\n\n    if (\n      !dynamicRequireModules.has(normalizePathSlashes(id)) &&\n      (!(hasCjsKeywords(code, ignoreGlobal) || requireResolver.isRequiredId(id)) ||\n        (isEsModule && !options.transformMixedEsModules))\n    ) {\n      commonjsMeta.isCommonJS = false;\n      return { meta: { commonjs: commonjsMeta } };\n    }\n\n    const needsRequireWrapper =\n      !isEsModule &&\n      (dynamicRequireModules.has(normalizePathSlashes(id)) || strictRequiresFilter(id));\n\n    const checkDynamicRequire = (position) => {\n      if (id.indexOf(dynamicRequireRoot) !== 0) {\n        this.error(\n          {\n            code: 'DYNAMIC_REQUIRE_OUTSIDE_ROOT',\n            id,\n            dynamicRequireRoot,\n            message: `\"${id}\" contains dynamic require statements but it is not within the current dynamicRequireRoot \"${dynamicRequireRoot}\". You should set dynamicRequireRoot to \"${dirname$1(\n              id\n            )}\" or one of its parent directories.`\n          },\n          position\n        );\n      }\n    };\n\n    return transformCommonjs(\n      this.parse,\n      code,\n      id,\n      isEsModule,\n      ignoreGlobal || isEsModule,\n      ignoreRequire,\n      ignoreDynamicRequires && !isDynamicRequireModulesEnabled,\n      getIgnoreTryCatchRequireStatementMode,\n      sourceMap,\n      isDynamicRequireModulesEnabled,\n      dynamicRequireModules,\n      commonDir,\n      ast,\n      getDefaultIsModuleExports(id),\n      needsRequireWrapper,\n      requireResolver.resolveRequireSourcesAndUpdateMeta(this),\n      requireResolver.isRequiredId(id),\n      checkDynamicRequire,\n      commonjsMeta\n    );\n  }\n\n  return {\n    name: PLUGIN_NAME,\n\n    version: version$1,\n\n    options(rawOptions) {\n      // We inject the resolver in the beginning so that \"catch-all-resolver\" like node-resolver\n      // do not prevent our plugin from resolving entry points ot proxies.\n      const plugins = Array.isArray(rawOptions.plugins)\n        ? [...rawOptions.plugins]\n        : rawOptions.plugins\n        ? [rawOptions.plugins]\n        : [];\n      plugins.unshift({\n        name: 'commonjs--resolver',\n        resolveId\n      });\n      return { ...rawOptions, plugins };\n    },\n\n    buildStart({ plugins }) {\n      validateVersion(this.meta.rollupVersion, peerDependencies.rollup, 'rollup');\n      const nodeResolve = plugins.find(({ name }) => name === 'node-resolve');\n      if (nodeResolve) {\n        validateVersion(nodeResolve.version, '^13.0.6', '@rollup/plugin-node-resolve');\n      }\n      if (options.namedExports != null) {\n        this.warn(\n          'The namedExports option from \"@rollup/plugin-commonjs\" is deprecated. Named exports are now handled automatically.'\n        );\n      }\n      requireResolver = getRequireResolver(\n        extensions,\n        detectCyclesAndConditional,\n        currentlyResolving\n      );\n    },\n\n    buildEnd() {\n      if (options.strictRequires === 'debug') {\n        const wrappedIds = requireResolver.getWrappedIds();\n        if (wrappedIds.length) {\n          this.warn({\n            code: 'WRAPPED_IDS',\n            ids: wrappedIds,\n            message: `The commonjs plugin automatically wrapped the following files:\\n[\\n${wrappedIds\n              .map((id) => `\\t${JSON.stringify(relative$1(process.cwd(), id))}`)\n              .join(',\\n')}\\n]`\n          });\n        } else {\n          this.warn({\n            code: 'WRAPPED_IDS',\n            ids: wrappedIds,\n            message: 'The commonjs plugin did not wrap any files.'\n          });\n        }\n      }\n    },\n\n    load(id) {\n      if (id === HELPERS_ID) {\n        return getHelpersModule();\n      }\n\n      if (isWrappedId(id, MODULE_SUFFIX)) {\n        const name = getName(unwrapId$1(id, MODULE_SUFFIX));\n        return {\n          code: `var ${name} = {exports: {}}; export {${name} as __module}`,\n          syntheticNamedExports: '__module',\n          meta: { commonjs: { isCommonJS: false } }\n        };\n      }\n\n      if (isWrappedId(id, EXPORTS_SUFFIX)) {\n        const name = getName(unwrapId$1(id, EXPORTS_SUFFIX));\n        return {\n          code: `var ${name} = {}; export {${name} as __exports}`,\n          meta: { commonjs: { isCommonJS: false } }\n        };\n      }\n\n      if (isWrappedId(id, EXTERNAL_SUFFIX)) {\n        const actualId = unwrapId$1(id, EXTERNAL_SUFFIX);\n        return getUnknownRequireProxy(\n          actualId,\n          isEsmExternal(actualId) ? getRequireReturnsDefault(actualId) : true\n        );\n      }\n\n      // entry suffix is just appended to not mess up relative external resolution\n      if (id.endsWith(ENTRY_SUFFIX)) {\n        const acutalId = id.slice(0, -ENTRY_SUFFIX.length);\n        return getEntryProxy(acutalId, getDefaultIsModuleExports(acutalId), this.getModuleInfo);\n      }\n\n      if (isWrappedId(id, ES_IMPORT_SUFFIX)) {\n        const actualId = unwrapId$1(id, ES_IMPORT_SUFFIX);\n        return getEsImportProxy(actualId, getDefaultIsModuleExports(actualId));\n      }\n\n      if (id === DYNAMIC_MODULES_ID) {\n        return getDynamicModuleRegistry(\n          isDynamicRequireModulesEnabled,\n          dynamicRequireModules,\n          commonDir,\n          ignoreDynamicRequires\n        );\n      }\n\n      if (isWrappedId(id, PROXY_SUFFIX)) {\n        const actualId = unwrapId$1(id, PROXY_SUFFIX);\n        return getStaticRequireProxy(actualId, getRequireReturnsDefault(actualId), this.load);\n      }\n\n      return null;\n    },\n\n    shouldTransformCachedModule(...args) {\n      return requireResolver.shouldTransformCachedModule.call(this, ...args);\n    },\n\n    transform(code, id) {\n      if (!isPossibleCjsId(id)) return null;\n\n      try {\n        return transformAndCheckExports.call(this, code, id);\n      } catch (err) {\n        return this.error(err, err.loc);\n      }\n    }\n  };\n}\n\nconst comma = ','.charCodeAt(0);\nconst semicolon = ';'.charCodeAt(0);\nconst chars$1 = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\nconst intToChar = new Uint8Array(64); // 64 possible chars.\nconst charToInt = new Uint8Array(128); // z is 122 in ASCII\nfor (let i = 0; i < chars$1.length; i++) {\n    const c = chars$1.charCodeAt(i);\n    intToChar[i] = c;\n    charToInt[c] = i;\n}\n// Provide a fallback for older environments.\nconst td = typeof TextDecoder !== 'undefined'\n    ? /* #__PURE__ */ new TextDecoder()\n    : typeof Buffer !== 'undefined'\n        ? {\n            decode(buf) {\n                const out = Buffer.from(buf.buffer, buf.byteOffset, buf.byteLength);\n                return out.toString();\n            },\n        }\n        : {\n            decode(buf) {\n                let out = '';\n                for (let i = 0; i < buf.length; i++) {\n                    out += String.fromCharCode(buf[i]);\n                }\n                return out;\n            },\n        };\nfunction decode(mappings) {\n    const state = new Int32Array(5);\n    const decoded = [];\n    let index = 0;\n    do {\n        const semi = indexOf(mappings, index);\n        const line = [];\n        let sorted = true;\n        let lastCol = 0;\n        state[0] = 0;\n        for (let i = index; i < semi; i++) {\n            let seg;\n            i = decodeInteger(mappings, i, state, 0); // genColumn\n            const col = state[0];\n            if (col < lastCol)\n                sorted = false;\n            lastCol = col;\n            if (hasMoreVlq(mappings, i, semi)) {\n                i = decodeInteger(mappings, i, state, 1); // sourcesIndex\n                i = decodeInteger(mappings, i, state, 2); // sourceLine\n                i = decodeInteger(mappings, i, state, 3); // sourceColumn\n                if (hasMoreVlq(mappings, i, semi)) {\n                    i = decodeInteger(mappings, i, state, 4); // namesIndex\n                    seg = [col, state[1], state[2], state[3], state[4]];\n                }\n                else {\n                    seg = [col, state[1], state[2], state[3]];\n                }\n            }\n            else {\n                seg = [col];\n            }\n            line.push(seg);\n        }\n        if (!sorted)\n            sort(line);\n        decoded.push(line);\n        index = semi + 1;\n    } while (index <= mappings.length);\n    return decoded;\n}\nfunction indexOf(mappings, index) {\n    const idx = mappings.indexOf(';', index);\n    return idx === -1 ? mappings.length : idx;\n}\nfunction decodeInteger(mappings, pos, state, j) {\n    let value = 0;\n    let shift = 0;\n    let integer = 0;\n    do {\n        const c = mappings.charCodeAt(pos++);\n        integer = charToInt[c];\n        value |= (integer & 31) << shift;\n        shift += 5;\n    } while (integer & 32);\n    const shouldNegate = value & 1;\n    value >>>= 1;\n    if (shouldNegate) {\n        value = -0x80000000 | -value;\n    }\n    state[j] += value;\n    return pos;\n}\nfunction hasMoreVlq(mappings, i, length) {\n    if (i >= length)\n        return false;\n    return mappings.charCodeAt(i) !== comma;\n}\nfunction sort(line) {\n    line.sort(sortComparator$1);\n}\nfunction sortComparator$1(a, b) {\n    return a[0] - b[0];\n}\nfunction encode$1(decoded) {\n    const state = new Int32Array(5);\n    const bufLength = 1024 * 16;\n    const subLength = bufLength - 36;\n    const buf = new Uint8Array(bufLength);\n    const sub = buf.subarray(0, subLength);\n    let pos = 0;\n    let out = '';\n    for (let i = 0; i < decoded.length; i++) {\n        const line = decoded[i];\n        if (i > 0) {\n            if (pos === bufLength) {\n                out += td.decode(buf);\n                pos = 0;\n            }\n            buf[pos++] = semicolon;\n        }\n        if (line.length === 0)\n            continue;\n        state[0] = 0;\n        for (let j = 0; j < line.length; j++) {\n            const segment = line[j];\n            // We can push up to 5 ints, each int can take at most 7 chars, and we\n            // may push a comma.\n            if (pos > subLength) {\n                out += td.decode(sub);\n                buf.copyWithin(0, subLength, pos);\n                pos -= subLength;\n            }\n            if (j > 0)\n                buf[pos++] = comma;\n            pos = encodeInteger(buf, pos, state, segment, 0); // genColumn\n            if (segment.length === 1)\n                continue;\n            pos = encodeInteger(buf, pos, state, segment, 1); // sourcesIndex\n            pos = encodeInteger(buf, pos, state, segment, 2); // sourceLine\n            pos = encodeInteger(buf, pos, state, segment, 3); // sourceColumn\n            if (segment.length === 4)\n                continue;\n            pos = encodeInteger(buf, pos, state, segment, 4); // namesIndex\n        }\n    }\n    return out + td.decode(buf.subarray(0, pos));\n}\nfunction encodeInteger(buf, pos, state, segment, j) {\n    const next = segment[j];\n    let num = next - state[j];\n    state[j] = next;\n    num = num < 0 ? (-num << 1) | 1 : num << 1;\n    do {\n        let clamped = num & 0b011111;\n        num >>>= 5;\n        if (num > 0)\n            clamped |= 0b100000;\n        buf[pos++] = intToChar[clamped];\n    } while (num > 0);\n    return pos;\n}\n\n// Matches the scheme of a URL, eg \"http://\"\nconst schemeRegex = /^[\\w+.-]+:\\/\\//;\n/**\n * Matches the parts of a URL:\n * 1. Scheme, including \":\", guaranteed.\n * 2. User/password, including \"@\", optional.\n * 3. Host, guaranteed.\n * 4. Port, including \":\", optional.\n * 5. Path, including \"/\", optional.\n */\nconst urlRegex = /^([\\w+.-]+:)\\/\\/([^@/#?]*@)?([^:/#?]*)(:\\d+)?(\\/[^#?]*)?/;\n/**\n * File URLs are weird. They dont' need the regular `//` in the scheme, they may or may not start\n * with a leading `/`, they can have a domain (but only if they don't start with a Windows drive).\n *\n * 1. Host, optional.\n * 2. Path, which may inclue \"/\", guaranteed.\n */\nconst fileRegex = /^file:(?:\\/\\/((?![a-z]:)[^/]*)?)?(\\/?.*)/i;\nfunction isAbsoluteUrl(input) {\n    return schemeRegex.test(input);\n}\nfunction isSchemeRelativeUrl(input) {\n    return input.startsWith('//');\n}\nfunction isAbsolutePath(input) {\n    return input.startsWith('/');\n}\nfunction isFileUrl(input) {\n    return input.startsWith('file:');\n}\nfunction parseAbsoluteUrl(input) {\n    const match = urlRegex.exec(input);\n    return makeUrl(match[1], match[2] || '', match[3], match[4] || '', match[5] || '/');\n}\nfunction parseFileUrl(input) {\n    const match = fileRegex.exec(input);\n    const path = match[2];\n    return makeUrl('file:', '', match[1] || '', '', isAbsolutePath(path) ? path : '/' + path);\n}\nfunction makeUrl(scheme, user, host, port, path) {\n    return {\n        scheme,\n        user,\n        host,\n        port,\n        path,\n        relativePath: false,\n    };\n}\nfunction parseUrl$2(input) {\n    if (isSchemeRelativeUrl(input)) {\n        const url = parseAbsoluteUrl('http:' + input);\n        url.scheme = '';\n        return url;\n    }\n    if (isAbsolutePath(input)) {\n        const url = parseAbsoluteUrl('http://foo.com' + input);\n        url.scheme = '';\n        url.host = '';\n        return url;\n    }\n    if (isFileUrl(input))\n        return parseFileUrl(input);\n    if (isAbsoluteUrl(input))\n        return parseAbsoluteUrl(input);\n    const url = parseAbsoluteUrl('http://foo.com/' + input);\n    url.scheme = '';\n    url.host = '';\n    url.relativePath = true;\n    return url;\n}\nfunction stripPathFilename(path) {\n    // If a path ends with a parent directory \"..\", then it's a relative path with excess parent\n    // paths. It's not a file, so we can't strip it.\n    if (path.endsWith('/..'))\n        return path;\n    const index = path.lastIndexOf('/');\n    return path.slice(0, index + 1);\n}\nfunction mergePaths(url, base) {\n    // If we're not a relative path, then we're an absolute path, and it doesn't matter what base is.\n    if (!url.relativePath)\n        return;\n    normalizePath$5(base);\n    // If the path is just a \"/\", then it was an empty path to begin with (remember, we're a relative\n    // path).\n    if (url.path === '/') {\n        url.path = base.path;\n    }\n    else {\n        // Resolution happens relative to the base path's directory, not the file.\n        url.path = stripPathFilename(base.path) + url.path;\n    }\n    // If the base path is absolute, then our path is now absolute too.\n    url.relativePath = base.relativePath;\n}\n/**\n * The path can have empty directories \"//\", unneeded parents \"foo/..\", or current directory\n * \"foo/.\". We need to normalize to a standard representation.\n */\nfunction normalizePath$5(url) {\n    const { relativePath } = url;\n    const pieces = url.path.split('/');\n    // We need to preserve the first piece always, so that we output a leading slash. The item at\n    // pieces[0] is an empty string.\n    let pointer = 1;\n    // Positive is the number of real directories we've output, used for popping a parent directory.\n    // Eg, \"foo/bar/..\" will have a positive 2, and we can decrement to be left with just \"foo\".\n    let positive = 0;\n    // We need to keep a trailing slash if we encounter an empty directory (eg, splitting \"foo/\" will\n    // generate `[\"foo\", \"\"]` pieces). And, if we pop a parent directory. But once we encounter a\n    // real directory, we won't need to append, unless the other conditions happen again.\n    let addTrailingSlash = false;\n    for (let i = 1; i < pieces.length; i++) {\n        const piece = pieces[i];\n        // An empty directory, could be a trailing slash, or just a double \"//\" in the path.\n        if (!piece) {\n            addTrailingSlash = true;\n            continue;\n        }\n        // If we encounter a real directory, then we don't need to append anymore.\n        addTrailingSlash = false;\n        // A current directory, which we can always drop.\n        if (piece === '.')\n            continue;\n        // A parent directory, we need to see if there are any real directories we can pop. Else, we\n        // have an excess of parents, and we'll need to keep the \"..\".\n        if (piece === '..') {\n            if (positive) {\n                addTrailingSlash = true;\n                positive--;\n                pointer--;\n            }\n            else if (relativePath) {\n                // If we're in a relativePath, then we need to keep the excess parents. Else, in an absolute\n                // URL, protocol relative URL, or an absolute path, we don't need to keep excess.\n                pieces[pointer++] = piece;\n            }\n            continue;\n        }\n        // We've encountered a real directory. Move it to the next insertion pointer, which accounts for\n        // any popped or dropped directories.\n        pieces[pointer++] = piece;\n        positive++;\n    }\n    let path = '';\n    for (let i = 1; i < pointer; i++) {\n        path += '/' + pieces[i];\n    }\n    if (!path || (addTrailingSlash && !path.endsWith('/..'))) {\n        path += '/';\n    }\n    url.path = path;\n}\n/**\n * Attempts to resolve `input` URL/path relative to `base`.\n */\nfunction resolve$3(input, base) {\n    if (!input && !base)\n        return '';\n    const url = parseUrl$2(input);\n    // If we have a base, and the input isn't already an absolute URL, then we need to merge.\n    if (base && !url.scheme) {\n        const baseUrl = parseUrl$2(base);\n        url.scheme = baseUrl.scheme;\n        // If there's no host, then we were just a path.\n        if (!url.host) {\n            // The host, user, and port are joined, you can't copy one without the others.\n            url.user = baseUrl.user;\n            url.host = baseUrl.host;\n            url.port = baseUrl.port;\n        }\n        mergePaths(url, baseUrl);\n    }\n    normalizePath$5(url);\n    // If the input (and base, if there was one) are both relative, then we need to output a relative.\n    if (url.relativePath) {\n        // The first char is always a \"/\".\n        const path = url.path.slice(1);\n        if (!path)\n            return '.';\n        // If base started with a leading \".\", or there is no base and input started with a \".\", then we\n        // need to ensure that the relative path starts with a \".\". We don't know if relative starts\n        // with a \"..\", though, so check before prepending.\n        const keepRelative = (base || input).startsWith('.');\n        return !keepRelative || path.startsWith('.') ? path : './' + path;\n    }\n    // If there's no host (and no scheme/user/port), then we need to output an absolute path.\n    if (!url.scheme && !url.host)\n        return url.path;\n    // We're outputting either an absolute URL, or a protocol relative one.\n    return `${url.scheme}//${url.user}${url.host}${url.port}${url.path}`;\n}\n\nfunction resolve$2(input, base) {\n    // The base is always treated as a directory, if it's not empty.\n    // https://github.com/mozilla/source-map/blob/8cb3ee57/lib/util.js#L327\n    // https://github.com/chromium/chromium/blob/da4adbb3/third_party/blink/renderer/devtools/front_end/sdk/SourceMap.js#L400-L401\n    if (base && !base.endsWith('/'))\n        base += '/';\n    return resolve$3(input, base);\n}\n\n/**\n * Removes everything after the last \"/\", but leaves the slash.\n */\nfunction stripFilename(path) {\n    if (!path)\n        return '';\n    const index = path.lastIndexOf('/');\n    return path.slice(0, index + 1);\n}\n\nconst COLUMN = 0;\nconst SOURCES_INDEX = 1;\nconst SOURCE_LINE = 2;\nconst SOURCE_COLUMN = 3;\nconst NAMES_INDEX = 4;\n\nfunction maybeSort(mappings, owned) {\n    const unsortedIndex = nextUnsortedSegmentLine(mappings, 0);\n    if (unsortedIndex === mappings.length)\n        return mappings;\n    // If we own the array (meaning we parsed it from JSON), then we're free to directly mutate it. If\n    // not, we do not want to modify the consumer's input array.\n    if (!owned)\n        mappings = mappings.slice();\n    for (let i = unsortedIndex; i < mappings.length; i = nextUnsortedSegmentLine(mappings, i + 1)) {\n        mappings[i] = sortSegments(mappings[i], owned);\n    }\n    return mappings;\n}\nfunction nextUnsortedSegmentLine(mappings, start) {\n    for (let i = start; i < mappings.length; i++) {\n        if (!isSorted(mappings[i]))\n            return i;\n    }\n    return mappings.length;\n}\nfunction isSorted(line) {\n    for (let j = 1; j < line.length; j++) {\n        if (line[j][COLUMN] < line[j - 1][COLUMN]) {\n            return false;\n        }\n    }\n    return true;\n}\nfunction sortSegments(line, owned) {\n    if (!owned)\n        line = line.slice();\n    return line.sort(sortComparator);\n}\nfunction sortComparator(a, b) {\n    return a[COLUMN] - b[COLUMN];\n}\n\nlet found = false;\n/**\n * A binary search implementation that returns the index if a match is found.\n * If no match is found, then the left-index (the index associated with the item that comes just\n * before the desired index) is returned. To maintain proper sort order, a splice would happen at\n * the next index:\n *\n * ```js\n * const array = [1, 3];\n * const needle = 2;\n * const index = binarySearch(array, needle, (item, needle) => item - needle);\n *\n * assert.equal(index, 0);\n * array.splice(index + 1, 0, needle);\n * assert.deepEqual(array, [1, 2, 3]);\n * ```\n */\nfunction binarySearch(haystack, needle, low, high) {\n    while (low <= high) {\n        const mid = low + ((high - low) >> 1);\n        const cmp = haystack[mid][COLUMN] - needle;\n        if (cmp === 0) {\n            found = true;\n            return mid;\n        }\n        if (cmp < 0) {\n            low = mid + 1;\n        }\n        else {\n            high = mid - 1;\n        }\n    }\n    found = false;\n    return low - 1;\n}\nfunction upperBound(haystack, needle, index) {\n    for (let i = index + 1; i < haystack.length; index = i++) {\n        if (haystack[i][COLUMN] !== needle)\n            break;\n    }\n    return index;\n}\nfunction lowerBound(haystack, needle, index) {\n    for (let i = index - 1; i >= 0; index = i--) {\n        if (haystack[i][COLUMN] !== needle)\n            break;\n    }\n    return index;\n}\nfunction memoizedState() {\n    return {\n        lastKey: -1,\n        lastNeedle: -1,\n        lastIndex: -1,\n    };\n}\n/**\n * This overly complicated beast is just to record the last tested line/column and the resulting\n * index, allowing us to skip a few tests if mappings are monotonically increasing.\n */\nfunction memoizedBinarySearch(haystack, needle, state, key) {\n    const { lastKey, lastNeedle, lastIndex } = state;\n    let low = 0;\n    let high = haystack.length - 1;\n    if (key === lastKey) {\n        if (needle === lastNeedle) {\n            found = lastIndex !== -1 && haystack[lastIndex][COLUMN] === needle;\n            return lastIndex;\n        }\n        if (needle >= lastNeedle) {\n            // lastIndex may be -1 if the previous needle was not found.\n            low = lastIndex === -1 ? 0 : lastIndex;\n        }\n        else {\n            high = lastIndex;\n        }\n    }\n    state.lastKey = key;\n    state.lastNeedle = needle;\n    return (state.lastIndex = binarySearch(haystack, needle, low, high));\n}\n\nconst LINE_GTR_ZERO = '`line` must be greater than 0 (lines start at line 1)';\nconst COL_GTR_EQ_ZERO = '`column` must be greater than or equal to 0 (columns start at column 0)';\nconst LEAST_UPPER_BOUND = -1;\nconst GREATEST_LOWER_BOUND = 1;\n/**\n * Returns the decoded (array of lines of segments) form of the SourceMap's mappings field.\n */\nlet decodedMappings;\n/**\n * A low-level API to find the segment associated with a generated line/column (think, from a\n * stack trace). Line and column here are 0-based, unlike `originalPositionFor`.\n */\nlet traceSegment;\n/**\n * A higher-level API to find the source/line/column associated with a generated line/column\n * (think, from a stack trace). Line is 1-based, but column is 0-based, due to legacy behavior in\n * `source-map` library.\n */\nlet originalPositionFor$1;\nclass TraceMap {\n    constructor(map, mapUrl) {\n        const isString = typeof map === 'string';\n        if (!isString && map._decodedMemo)\n            return map;\n        const parsed = (isString ? JSON.parse(map) : map);\n        const { version, file, names, sourceRoot, sources, sourcesContent } = parsed;\n        this.version = version;\n        this.file = file;\n        this.names = names;\n        this.sourceRoot = sourceRoot;\n        this.sources = sources;\n        this.sourcesContent = sourcesContent;\n        const from = resolve$2(sourceRoot || '', stripFilename(mapUrl));\n        this.resolvedSources = sources.map((s) => resolve$2(s || '', from));\n        const { mappings } = parsed;\n        if (typeof mappings === 'string') {\n            this._encoded = mappings;\n            this._decoded = undefined;\n        }\n        else {\n            this._encoded = undefined;\n            this._decoded = maybeSort(mappings, isString);\n        }\n        this._decodedMemo = memoizedState();\n        this._bySources = undefined;\n        this._bySourceMemos = undefined;\n    }\n}\n(() => {\n    decodedMappings = (map) => {\n        return (map._decoded || (map._decoded = decode(map._encoded)));\n    };\n    traceSegment = (map, line, column) => {\n        const decoded = decodedMappings(map);\n        // It's common for parent source maps to have pointers to lines that have no\n        // mapping (like a \"//# sourceMappingURL=\") at the end of the child file.\n        if (line >= decoded.length)\n            return null;\n        return traceSegmentInternal(decoded[line], map._decodedMemo, line, column, GREATEST_LOWER_BOUND);\n    };\n    originalPositionFor$1 = (map, { line, column, bias }) => {\n        line--;\n        if (line < 0)\n            throw new Error(LINE_GTR_ZERO);\n        if (column < 0)\n            throw new Error(COL_GTR_EQ_ZERO);\n        const decoded = decodedMappings(map);\n        // It's common for parent source maps to have pointers to lines that have no\n        // mapping (like a \"//# sourceMappingURL=\") at the end of the child file.\n        if (line >= decoded.length)\n            return OMapping(null, null, null, null);\n        const segment = traceSegmentInternal(decoded[line], map._decodedMemo, line, column, bias || GREATEST_LOWER_BOUND);\n        if (segment == null)\n            return OMapping(null, null, null, null);\n        if (segment.length == 1)\n            return OMapping(null, null, null, null);\n        const { names, resolvedSources } = map;\n        return OMapping(resolvedSources[segment[SOURCES_INDEX]], segment[SOURCE_LINE] + 1, segment[SOURCE_COLUMN], segment.length === 5 ? names[segment[NAMES_INDEX]] : null);\n    };\n})();\nfunction OMapping(source, line, column, name) {\n    return { source, line, column, name };\n}\nfunction traceSegmentInternal(segments, memo, line, column, bias) {\n    let index = memoizedBinarySearch(segments, column, memo, line);\n    if (found) {\n        index = (bias === LEAST_UPPER_BOUND ? upperBound : lowerBound)(segments, column, index);\n    }\n    else if (bias === LEAST_UPPER_BOUND)\n        index++;\n    if (index === -1 || index === segments.length)\n        return null;\n    return segments[index];\n}\n\n/**\n * Gets the index associated with `key` in the backing array, if it is already present.\n */\nlet get;\n/**\n * Puts `key` into the backing array, if it is not already present. Returns\n * the index of the `key` in the backing array.\n */\nlet put;\n/**\n * SetArray acts like a `Set` (allowing only one occurrence of a string `key`), but provides the\n * index of the `key` in the backing array.\n *\n * This is designed to allow synchronizing a second array with the contents of the backing array,\n * like how in a sourcemap `sourcesContent[i]` is the source content associated with `source[i]`,\n * and there are never duplicates.\n */\nclass SetArray {\n    constructor() {\n        this._indexes = { __proto__: null };\n        this.array = [];\n    }\n}\n(() => {\n    get = (strarr, key) => strarr._indexes[key];\n    put = (strarr, key) => {\n        // The key may or may not be present. If it is present, it's a number.\n        const index = get(strarr, key);\n        if (index !== undefined)\n            return index;\n        const { array, _indexes: indexes } = strarr;\n        return (indexes[key] = array.push(key) - 1);\n    };\n})();\n\n/**\n * A low-level API to associate a generated position with an original source position. Line and\n * column here are 0-based, unlike `addMapping`.\n */\nlet addSegment;\n/**\n * Adds/removes the content of the source file to the source map.\n */\nlet setSourceContent;\n/**\n * Returns a sourcemap object (with decoded mappings) suitable for passing to a library that expects\n * a sourcemap, or to JSON.stringify.\n */\nlet decodedMap;\n/**\n * Returns a sourcemap object (with encoded mappings) suitable for passing to a library that expects\n * a sourcemap, or to JSON.stringify.\n */\nlet encodedMap;\n/**\n * Provides the state to generate a sourcemap.\n */\nclass GenMapping {\n    constructor({ file, sourceRoot } = {}) {\n        this._names = new SetArray();\n        this._sources = new SetArray();\n        this._sourcesContent = [];\n        this._mappings = [];\n        this.file = file;\n        this.sourceRoot = sourceRoot;\n    }\n}\n(() => {\n    addSegment = (map, genLine, genColumn, source, sourceLine, sourceColumn, name) => {\n        const { _mappings: mappings, _sources: sources, _sourcesContent: sourcesContent, _names: names, } = map;\n        const line = getLine(mappings, genLine);\n        if (source == null) {\n            const seg = [genColumn];\n            const index = getColumnIndex(line, genColumn, seg);\n            return insert(line, index, seg);\n        }\n        const sourcesIndex = put(sources, source);\n        const seg = name\n            ? [genColumn, sourcesIndex, sourceLine, sourceColumn, put(names, name)]\n            : [genColumn, sourcesIndex, sourceLine, sourceColumn];\n        const index = getColumnIndex(line, genColumn, seg);\n        if (sourcesIndex === sourcesContent.length)\n            sourcesContent[sourcesIndex] = null;\n        insert(line, index, seg);\n    };\n    setSourceContent = (map, source, content) => {\n        const { _sources: sources, _sourcesContent: sourcesContent } = map;\n        sourcesContent[put(sources, source)] = content;\n    };\n    decodedMap = (map) => {\n        const { file, sourceRoot, _mappings: mappings, _sources: sources, _sourcesContent: sourcesContent, _names: names, } = map;\n        return {\n            version: 3,\n            file,\n            names: names.array,\n            sourceRoot: sourceRoot || undefined,\n            sources: sources.array,\n            sourcesContent,\n            mappings,\n        };\n    };\n    encodedMap = (map) => {\n        const decoded = decodedMap(map);\n        return Object.assign(Object.assign({}, decoded), { mappings: encode$1(decoded.mappings) });\n    };\n})();\nfunction getLine(mappings, index) {\n    for (let i = mappings.length; i <= index; i++) {\n        mappings[i] = [];\n    }\n    return mappings[index];\n}\nfunction getColumnIndex(line, column, seg) {\n    let index = line.length;\n    for (let i = index - 1; i >= 0; i--, index--) {\n        const current = line[i];\n        const col = current[0];\n        if (col > column)\n            continue;\n        if (col < column)\n            break;\n        const cmp = compare$1(current, seg);\n        if (cmp === 0)\n            return index;\n        if (cmp < 0)\n            break;\n    }\n    return index;\n}\nfunction compare$1(a, b) {\n    let cmp = compareNum(a.length, b.length);\n    if (cmp !== 0)\n        return cmp;\n    // We've already checked genColumn\n    if (a.length === 1)\n        return 0;\n    cmp = compareNum(a[1], b[1]);\n    if (cmp !== 0)\n        return cmp;\n    cmp = compareNum(a[2], b[2]);\n    if (cmp !== 0)\n        return cmp;\n    cmp = compareNum(a[3], b[3]);\n    if (cmp !== 0)\n        return cmp;\n    if (a.length === 4)\n        return 0;\n    return compareNum(a[4], b[4]);\n}\nfunction compareNum(a, b) {\n    return a - b;\n}\nfunction insert(array, index, value) {\n    if (index === -1)\n        return;\n    for (let i = array.length; i > index; i--) {\n        array[i] = array[i - 1];\n    }\n    array[index] = value;\n}\n\nconst SOURCELESS_MAPPING = {\n    source: null,\n    column: null,\n    line: null,\n    name: null,\n    content: null,\n};\nconst EMPTY_SOURCES = [];\nfunction Source(map, sources, source, content) {\n    return {\n        map,\n        sources,\n        source,\n        content,\n    };\n}\n/**\n * MapSource represents a single sourcemap, with the ability to trace mappings into its child nodes\n * (which may themselves be SourceMapTrees).\n */\nfunction MapSource(map, sources) {\n    return Source(map, sources, '', null);\n}\n/**\n * A \"leaf\" node in the sourcemap tree, representing an original, unmodified source file. Recursive\n * segment tracing ends at the `OriginalSource`.\n */\nfunction OriginalSource(source, content) {\n    return Source(null, EMPTY_SOURCES, source, content);\n}\n/**\n * traceMappings is only called on the root level SourceMapTree, and begins the process of\n * resolving each mapping in terms of the original source files.\n */\nfunction traceMappings(tree) {\n    const gen = new GenMapping({ file: tree.map.file });\n    const { sources: rootSources, map } = tree;\n    const rootNames = map.names;\n    const rootMappings = decodedMappings(map);\n    for (let i = 0; i < rootMappings.length; i++) {\n        const segments = rootMappings[i];\n        let lastSource = null;\n        let lastSourceLine = null;\n        let lastSourceColumn = null;\n        for (let j = 0; j < segments.length; j++) {\n            const segment = segments[j];\n            const genCol = segment[0];\n            let traced = SOURCELESS_MAPPING;\n            // 1-length segments only move the current generated column, there's no source information\n            // to gather from it.\n            if (segment.length !== 1) {\n                const source = rootSources[segment[1]];\n                traced = originalPositionFor(source, segment[2], segment[3], segment.length === 5 ? rootNames[segment[4]] : '');\n                // If the trace is invalid, then the trace ran into a sourcemap that doesn't contain a\n                // respective segment into an original source.\n                if (traced == null)\n                    continue;\n            }\n            // So we traced a segment down into its original source file. Now push a\n            // new segment pointing to this location.\n            const { column, line, name, content, source } = traced;\n            if (line === lastSourceLine && column === lastSourceColumn && source === lastSource) {\n                continue;\n            }\n            lastSourceLine = line;\n            lastSourceColumn = column;\n            lastSource = source;\n            // Sigh, TypeScript can't figure out source/line/column are either all null, or all non-null...\n            addSegment(gen, i, genCol, source, line, column, name);\n            if (content != null)\n                setSourceContent(gen, source, content);\n        }\n    }\n    return gen;\n}\n/**\n * originalPositionFor is only called on children SourceMapTrees. It recurses down into its own\n * child SourceMapTrees, until we find the original source map.\n */\nfunction originalPositionFor(source, line, column, name) {\n    if (!source.map) {\n        return { column, line, name, source: source.source, content: source.content };\n    }\n    const segment = traceSegment(source.map, line, column);\n    // If we couldn't find a segment, then this doesn't exist in the sourcemap.\n    if (segment == null)\n        return null;\n    // 1-length segments only move the current generated column, there's no source information\n    // to gather from it.\n    if (segment.length === 1)\n        return SOURCELESS_MAPPING;\n    return originalPositionFor(source.sources[segment[1]], segment[2], segment[3], segment.length === 5 ? source.map.names[segment[4]] : name);\n}\n\nfunction asArray(value) {\n    if (Array.isArray(value))\n        return value;\n    return [value];\n}\n/**\n * Recursively builds a tree structure out of sourcemap files, with each node\n * being either an `OriginalSource` \"leaf\" or a `SourceMapTree` composed of\n * `OriginalSource`s and `SourceMapTree`s.\n *\n * Every sourcemap is composed of a collection of source files and mappings\n * into locations of those source files. When we generate a `SourceMapTree` for\n * the sourcemap, we attempt to load each source file's own sourcemap. If it\n * does not have an associated sourcemap, it is considered an original,\n * unmodified source file.\n */\nfunction buildSourceMapTree(input, loader) {\n    const maps = asArray(input).map((m) => new TraceMap(m, ''));\n    const map = maps.pop();\n    for (let i = 0; i < maps.length; i++) {\n        if (maps[i].sources.length > 1) {\n            throw new Error(`Transformation map ${i} must have exactly one source file.\\n` +\n                'Did you specify these with the most recent transformation maps first?');\n        }\n    }\n    let tree = build$2(map, loader, '', 0);\n    for (let i = maps.length - 1; i >= 0; i--) {\n        tree = MapSource(maps[i], [tree]);\n    }\n    return tree;\n}\nfunction build$2(map, loader, importer, importerDepth) {\n    const { resolvedSources, sourcesContent } = map;\n    const depth = importerDepth + 1;\n    const children = resolvedSources.map((sourceFile, i) => {\n        // The loading context gives the loader more information about why this file is being loaded\n        // (eg, from which importer). It also allows the loader to override the location of the loaded\n        // sourcemap/original source, or to override the content in the sourcesContent field if it's\n        // an unmodified source file.\n        const ctx = {\n            importer,\n            depth,\n            source: sourceFile || '',\n            content: undefined,\n        };\n        // Use the provided loader callback to retrieve the file's sourcemap.\n        // TODO: We should eventually support async loading of sourcemap files.\n        const sourceMap = loader(ctx.source, ctx);\n        const { source, content } = ctx;\n        // If there is a sourcemap, then we need to recurse into it to load its source files.\n        if (sourceMap)\n            return build$2(new TraceMap(sourceMap, source), loader, source, depth);\n        // Else, it's an an unmodified source file.\n        // The contents of this unmodified source file can be overridden via the loader context,\n        // allowing it to be explicitly null or a string. If it remains undefined, we fall back to\n        // the importing sourcemap's `sourcesContent` field.\n        const sourceContent = content !== undefined ? content : sourcesContent ? sourcesContent[i] : null;\n        return OriginalSource(source, sourceContent);\n    });\n    return MapSource(map, children);\n}\n\n/**\n * A SourceMap v3 compatible sourcemap, which only includes fields that were\n * provided to it.\n */\nclass SourceMap$1 {\n    constructor(map, options) {\n        const out = options.decodedMappings ? decodedMap(map) : encodedMap(map);\n        this.version = out.version; // SourceMap spec says this should be first.\n        this.file = out.file;\n        this.mappings = out.mappings;\n        this.names = out.names;\n        this.sourceRoot = out.sourceRoot;\n        this.sources = out.sources;\n        if (!options.excludeContent) {\n            this.sourcesContent = out.sourcesContent;\n        }\n    }\n    toString() {\n        return JSON.stringify(this);\n    }\n}\n\n/**\n * Traces through all the mappings in the root sourcemap, through the sources\n * (and their sourcemaps), all the way back to the original source location.\n *\n * `loader` will be called every time we encounter a source file. If it returns\n * a sourcemap, we will recurse into that sourcemap to continue the trace. If\n * it returns a falsey value, that source file is treated as an original,\n * unmodified source file.\n *\n * Pass `excludeContent` to exclude any self-containing source file content\n * from the output sourcemap.\n *\n * Pass `decodedMappings` to receive a SourceMap with decoded (instead of\n * VLQ encoded) mappings.\n */\nfunction remapping(input, loader, options) {\n    const opts = typeof options === 'object' ? options : { excludeContent: !!options, decodedMappings: false };\n    const tree = buildSourceMapTree(input, loader);\n    return new SourceMap$1(traceMappings(tree), opts);\n}\n\nvar src$2 = {exports: {}};\n\nvar browser$2 = {exports: {}};\n\n/**\n * Helpers.\n */\n\nvar ms$1;\nvar hasRequiredMs$1;\n\nfunction requireMs$1 () {\n\tif (hasRequiredMs$1) return ms$1;\n\thasRequiredMs$1 = 1;\n\tvar s = 1000;\n\tvar m = s * 60;\n\tvar h = m * 60;\n\tvar d = h * 24;\n\tvar w = d * 7;\n\tvar y = d * 365.25;\n\n\t/**\n\t * Parse or format the given `val`.\n\t *\n\t * Options:\n\t *\n\t *  - `long` verbose formatting [false]\n\t *\n\t * @param {String|Number} val\n\t * @param {Object} [options]\n\t * @throws {Error} throw an error if val is not a non-empty string or a number\n\t * @return {String|Number}\n\t * @api public\n\t */\n\n\tms$1 = function(val, options) {\n\t  options = options || {};\n\t  var type = typeof val;\n\t  if (type === 'string' && val.length > 0) {\n\t    return parse(val);\n\t  } else if (type === 'number' && isFinite(val)) {\n\t    return options.long ? fmtLong(val) : fmtShort(val);\n\t  }\n\t  throw new Error(\n\t    'val is not a non-empty string or a valid number. val=' +\n\t      JSON.stringify(val)\n\t  );\n\t};\n\n\t/**\n\t * Parse the given `str` and return milliseconds.\n\t *\n\t * @param {String} str\n\t * @return {Number}\n\t * @api private\n\t */\n\n\tfunction parse(str) {\n\t  str = String(str);\n\t  if (str.length > 100) {\n\t    return;\n\t  }\n\t  var match = /^(-?(?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(\n\t    str\n\t  );\n\t  if (!match) {\n\t    return;\n\t  }\n\t  var n = parseFloat(match[1]);\n\t  var type = (match[2] || 'ms').toLowerCase();\n\t  switch (type) {\n\t    case 'years':\n\t    case 'year':\n\t    case 'yrs':\n\t    case 'yr':\n\t    case 'y':\n\t      return n * y;\n\t    case 'weeks':\n\t    case 'week':\n\t    case 'w':\n\t      return n * w;\n\t    case 'days':\n\t    case 'day':\n\t    case 'd':\n\t      return n * d;\n\t    case 'hours':\n\t    case 'hour':\n\t    case 'hrs':\n\t    case 'hr':\n\t    case 'h':\n\t      return n * h;\n\t    case 'minutes':\n\t    case 'minute':\n\t    case 'mins':\n\t    case 'min':\n\t    case 'm':\n\t      return n * m;\n\t    case 'seconds':\n\t    case 'second':\n\t    case 'secs':\n\t    case 'sec':\n\t    case 's':\n\t      return n * s;\n\t    case 'milliseconds':\n\t    case 'millisecond':\n\t    case 'msecs':\n\t    case 'msec':\n\t    case 'ms':\n\t      return n;\n\t    default:\n\t      return undefined;\n\t  }\n\t}\n\n\t/**\n\t * Short format for `ms`.\n\t *\n\t * @param {Number} ms\n\t * @return {String}\n\t * @api private\n\t */\n\n\tfunction fmtShort(ms) {\n\t  var msAbs = Math.abs(ms);\n\t  if (msAbs >= d) {\n\t    return Math.round(ms / d) + 'd';\n\t  }\n\t  if (msAbs >= h) {\n\t    return Math.round(ms / h) + 'h';\n\t  }\n\t  if (msAbs >= m) {\n\t    return Math.round(ms / m) + 'm';\n\t  }\n\t  if (msAbs >= s) {\n\t    return Math.round(ms / s) + 's';\n\t  }\n\t  return ms + 'ms';\n\t}\n\n\t/**\n\t * Long format for `ms`.\n\t *\n\t * @param {Number} ms\n\t * @return {String}\n\t * @api private\n\t */\n\n\tfunction fmtLong(ms) {\n\t  var msAbs = Math.abs(ms);\n\t  if (msAbs >= d) {\n\t    return plural(ms, msAbs, d, 'day');\n\t  }\n\t  if (msAbs >= h) {\n\t    return plural(ms, msAbs, h, 'hour');\n\t  }\n\t  if (msAbs >= m) {\n\t    return plural(ms, msAbs, m, 'minute');\n\t  }\n\t  if (msAbs >= s) {\n\t    return plural(ms, msAbs, s, 'second');\n\t  }\n\t  return ms + ' ms';\n\t}\n\n\t/**\n\t * Pluralization helper.\n\t */\n\n\tfunction plural(ms, msAbs, n, name) {\n\t  var isPlural = msAbs >= n * 1.5;\n\t  return Math.round(ms / n) + ' ' + name + (isPlural ? 's' : '');\n\t}\n\treturn ms$1;\n}\n\nvar common$b;\nvar hasRequiredCommon;\n\nfunction requireCommon () {\n\tif (hasRequiredCommon) return common$b;\n\thasRequiredCommon = 1;\n\t/**\n\t * This is the common logic for both the Node.js and web browser\n\t * implementations of `debug()`.\n\t */\n\n\tfunction setup(env) {\n\t\tcreateDebug.debug = createDebug;\n\t\tcreateDebug.default = createDebug;\n\t\tcreateDebug.coerce = coerce;\n\t\tcreateDebug.disable = disable;\n\t\tcreateDebug.enable = enable;\n\t\tcreateDebug.enabled = enabled;\n\t\tcreateDebug.humanize = requireMs$1();\n\t\tcreateDebug.destroy = destroy;\n\n\t\tObject.keys(env).forEach(key => {\n\t\t\tcreateDebug[key] = env[key];\n\t\t});\n\n\t\t/**\n\t\t* The currently active debug mode names, and names to skip.\n\t\t*/\n\n\t\tcreateDebug.names = [];\n\t\tcreateDebug.skips = [];\n\n\t\t/**\n\t\t* Map of special \"%n\" handling functions, for the debug \"format\" argument.\n\t\t*\n\t\t* Valid key names are a single, lower or upper-case letter, i.e. \"n\" and \"N\".\n\t\t*/\n\t\tcreateDebug.formatters = {};\n\n\t\t/**\n\t\t* Selects a color for a debug namespace\n\t\t* @param {String} namespace The namespace string for the debug instance to be colored\n\t\t* @return {Number|String} An ANSI color code for the given namespace\n\t\t* @api private\n\t\t*/\n\t\tfunction selectColor(namespace) {\n\t\t\tlet hash = 0;\n\n\t\t\tfor (let i = 0; i < namespace.length; i++) {\n\t\t\t\thash = ((hash << 5) - hash) + namespace.charCodeAt(i);\n\t\t\t\thash |= 0; // Convert to 32bit integer\n\t\t\t}\n\n\t\t\treturn createDebug.colors[Math.abs(hash) % createDebug.colors.length];\n\t\t}\n\t\tcreateDebug.selectColor = selectColor;\n\n\t\t/**\n\t\t* Create a debugger with the given `namespace`.\n\t\t*\n\t\t* @param {String} namespace\n\t\t* @return {Function}\n\t\t* @api public\n\t\t*/\n\t\tfunction createDebug(namespace) {\n\t\t\tlet prevTime;\n\t\t\tlet enableOverride = null;\n\t\t\tlet namespacesCache;\n\t\t\tlet enabledCache;\n\n\t\t\tfunction debug(...args) {\n\t\t\t\t// Disabled?\n\t\t\t\tif (!debug.enabled) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst self = debug;\n\n\t\t\t\t// Set `diff` timestamp\n\t\t\t\tconst curr = Number(new Date());\n\t\t\t\tconst ms = curr - (prevTime || curr);\n\t\t\t\tself.diff = ms;\n\t\t\t\tself.prev = prevTime;\n\t\t\t\tself.curr = curr;\n\t\t\t\tprevTime = curr;\n\n\t\t\t\targs[0] = createDebug.coerce(args[0]);\n\n\t\t\t\tif (typeof args[0] !== 'string') {\n\t\t\t\t\t// Anything else let's inspect with %O\n\t\t\t\t\targs.unshift('%O');\n\t\t\t\t}\n\n\t\t\t\t// Apply any `formatters` transformations\n\t\t\t\tlet index = 0;\n\t\t\t\targs[0] = args[0].replace(/%([a-zA-Z%])/g, (match, format) => {\n\t\t\t\t\t// If we encounter an escaped % then don't increase the array index\n\t\t\t\t\tif (match === '%%') {\n\t\t\t\t\t\treturn '%';\n\t\t\t\t\t}\n\t\t\t\t\tindex++;\n\t\t\t\t\tconst formatter = createDebug.formatters[format];\n\t\t\t\t\tif (typeof formatter === 'function') {\n\t\t\t\t\t\tconst val = args[index];\n\t\t\t\t\t\tmatch = formatter.call(self, val);\n\n\t\t\t\t\t\t// Now we need to remove `args[index]` since it's inlined in the `format`\n\t\t\t\t\t\targs.splice(index, 1);\n\t\t\t\t\t\tindex--;\n\t\t\t\t\t}\n\t\t\t\t\treturn match;\n\t\t\t\t});\n\n\t\t\t\t// Apply env-specific formatting (colors, etc.)\n\t\t\t\tcreateDebug.formatArgs.call(self, args);\n\n\t\t\t\tconst logFn = self.log || createDebug.log;\n\t\t\t\tlogFn.apply(self, args);\n\t\t\t}\n\n\t\t\tdebug.namespace = namespace;\n\t\t\tdebug.useColors = createDebug.useColors();\n\t\t\tdebug.color = createDebug.selectColor(namespace);\n\t\t\tdebug.extend = extend;\n\t\t\tdebug.destroy = createDebug.destroy; // XXX Temporary. Will be removed in the next major release.\n\n\t\t\tObject.defineProperty(debug, 'enabled', {\n\t\t\t\tenumerable: true,\n\t\t\t\tconfigurable: false,\n\t\t\t\tget: () => {\n\t\t\t\t\tif (enableOverride !== null) {\n\t\t\t\t\t\treturn enableOverride;\n\t\t\t\t\t}\n\t\t\t\t\tif (namespacesCache !== createDebug.namespaces) {\n\t\t\t\t\t\tnamespacesCache = createDebug.namespaces;\n\t\t\t\t\t\tenabledCache = createDebug.enabled(namespace);\n\t\t\t\t\t}\n\n\t\t\t\t\treturn enabledCache;\n\t\t\t\t},\n\t\t\t\tset: v => {\n\t\t\t\t\tenableOverride = v;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// Env-specific initialization logic for debug instances\n\t\t\tif (typeof createDebug.init === 'function') {\n\t\t\t\tcreateDebug.init(debug);\n\t\t\t}\n\n\t\t\treturn debug;\n\t\t}\n\n\t\tfunction extend(namespace, delimiter) {\n\t\t\tconst newDebug = createDebug(this.namespace + (typeof delimiter === 'undefined' ? ':' : delimiter) + namespace);\n\t\t\tnewDebug.log = this.log;\n\t\t\treturn newDebug;\n\t\t}\n\n\t\t/**\n\t\t* Enables a debug mode by namespaces. This can include modes\n\t\t* separated by a colon and wildcards.\n\t\t*\n\t\t* @param {String} namespaces\n\t\t* @api public\n\t\t*/\n\t\tfunction enable(namespaces) {\n\t\t\tcreateDebug.save(namespaces);\n\t\t\tcreateDebug.namespaces = namespaces;\n\n\t\t\tcreateDebug.names = [];\n\t\t\tcreateDebug.skips = [];\n\n\t\t\tlet i;\n\t\t\tconst split = (typeof namespaces === 'string' ? namespaces : '').split(/[\\s,]+/);\n\t\t\tconst len = split.length;\n\n\t\t\tfor (i = 0; i < len; i++) {\n\t\t\t\tif (!split[i]) {\n\t\t\t\t\t// ignore empty strings\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tnamespaces = split[i].replace(/\\*/g, '.*?');\n\n\t\t\t\tif (namespaces[0] === '-') {\n\t\t\t\t\tcreateDebug.skips.push(new RegExp('^' + namespaces.slice(1) + '$'));\n\t\t\t\t} else {\n\t\t\t\t\tcreateDebug.names.push(new RegExp('^' + namespaces + '$'));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t* Disable debug output.\n\t\t*\n\t\t* @return {String} namespaces\n\t\t* @api public\n\t\t*/\n\t\tfunction disable() {\n\t\t\tconst namespaces = [\n\t\t\t\t...createDebug.names.map(toNamespace),\n\t\t\t\t...createDebug.skips.map(toNamespace).map(namespace => '-' + namespace)\n\t\t\t].join(',');\n\t\t\tcreateDebug.enable('');\n\t\t\treturn namespaces;\n\t\t}\n\n\t\t/**\n\t\t* Returns true if the given mode name is enabled, false otherwise.\n\t\t*\n\t\t* @param {String} name\n\t\t* @return {Boolean}\n\t\t* @api public\n\t\t*/\n\t\tfunction enabled(name) {\n\t\t\tif (name[name.length - 1] === '*') {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tlet i;\n\t\t\tlet len;\n\n\t\t\tfor (i = 0, len = createDebug.skips.length; i < len; i++) {\n\t\t\t\tif (createDebug.skips[i].test(name)) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor (i = 0, len = createDebug.names.length; i < len; i++) {\n\t\t\t\tif (createDebug.names[i].test(name)) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn false;\n\t\t}\n\n\t\t/**\n\t\t* Convert regexp to namespace\n\t\t*\n\t\t* @param {RegExp} regxep\n\t\t* @return {String} namespace\n\t\t* @api private\n\t\t*/\n\t\tfunction toNamespace(regexp) {\n\t\t\treturn regexp.toString()\n\t\t\t\t.substring(2, regexp.toString().length - 2)\n\t\t\t\t.replace(/\\.\\*\\?$/, '*');\n\t\t}\n\n\t\t/**\n\t\t* Coerce `val`.\n\t\t*\n\t\t* @param {Mixed} val\n\t\t* @return {Mixed}\n\t\t* @api private\n\t\t*/\n\t\tfunction coerce(val) {\n\t\t\tif (val instanceof Error) {\n\t\t\t\treturn val.stack || val.message;\n\t\t\t}\n\t\t\treturn val;\n\t\t}\n\n\t\t/**\n\t\t* XXX DO NOT USE. This is a temporary stub function.\n\t\t* XXX It WILL be removed in the next major release.\n\t\t*/\n\t\tfunction destroy() {\n\t\t\tconsole.warn('Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.');\n\t\t}\n\n\t\tcreateDebug.enable(createDebug.load());\n\n\t\treturn createDebug;\n\t}\n\n\tcommon$b = setup;\n\treturn common$b;\n}\n\n/* eslint-env browser */\n\nvar hasRequiredBrowser$1;\n\nfunction requireBrowser$1 () {\n\tif (hasRequiredBrowser$1) return browser$2.exports;\n\thasRequiredBrowser$1 = 1;\n\t(function (module, exports) {\n\t\t/**\n\t\t * This is the web browser implementation of `debug()`.\n\t\t */\n\n\t\texports.formatArgs = formatArgs;\n\t\texports.save = save;\n\t\texports.load = load;\n\t\texports.useColors = useColors;\n\t\texports.storage = localstorage();\n\t\texports.destroy = (() => {\n\t\t\tlet warned = false;\n\n\t\t\treturn () => {\n\t\t\t\tif (!warned) {\n\t\t\t\t\twarned = true;\n\t\t\t\t\tconsole.warn('Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.');\n\t\t\t\t}\n\t\t\t};\n\t\t})();\n\n\t\t/**\n\t\t * Colors.\n\t\t */\n\n\t\texports.colors = [\n\t\t\t'#0000CC',\n\t\t\t'#0000FF',\n\t\t\t'#0033CC',\n\t\t\t'#0033FF',\n\t\t\t'#0066CC',\n\t\t\t'#0066FF',\n\t\t\t'#0099CC',\n\t\t\t'#0099FF',\n\t\t\t'#00CC00',\n\t\t\t'#00CC33',\n\t\t\t'#00CC66',\n\t\t\t'#00CC99',\n\t\t\t'#00CCCC',\n\t\t\t'#00CCFF',\n\t\t\t'#3300CC',\n\t\t\t'#3300FF',\n\t\t\t'#3333CC',\n\t\t\t'#3333FF',\n\t\t\t'#3366CC',\n\t\t\t'#3366FF',\n\t\t\t'#3399CC',\n\t\t\t'#3399FF',\n\t\t\t'#33CC00',\n\t\t\t'#33CC33',\n\t\t\t'#33CC66',\n\t\t\t'#33CC99',\n\t\t\t'#33CCCC',\n\t\t\t'#33CCFF',\n\t\t\t'#6600CC',\n\t\t\t'#6600FF',\n\t\t\t'#6633CC',\n\t\t\t'#6633FF',\n\t\t\t'#66CC00',\n\t\t\t'#66CC33',\n\t\t\t'#9900CC',\n\t\t\t'#9900FF',\n\t\t\t'#9933CC',\n\t\t\t'#9933FF',\n\t\t\t'#99CC00',\n\t\t\t'#99CC33',\n\t\t\t'#CC0000',\n\t\t\t'#CC0033',\n\t\t\t'#CC0066',\n\t\t\t'#CC0099',\n\t\t\t'#CC00CC',\n\t\t\t'#CC00FF',\n\t\t\t'#CC3300',\n\t\t\t'#CC3333',\n\t\t\t'#CC3366',\n\t\t\t'#CC3399',\n\t\t\t'#CC33CC',\n\t\t\t'#CC33FF',\n\t\t\t'#CC6600',\n\t\t\t'#CC6633',\n\t\t\t'#CC9900',\n\t\t\t'#CC9933',\n\t\t\t'#CCCC00',\n\t\t\t'#CCCC33',\n\t\t\t'#FF0000',\n\t\t\t'#FF0033',\n\t\t\t'#FF0066',\n\t\t\t'#FF0099',\n\t\t\t'#FF00CC',\n\t\t\t'#FF00FF',\n\t\t\t'#FF3300',\n\t\t\t'#FF3333',\n\t\t\t'#FF3366',\n\t\t\t'#FF3399',\n\t\t\t'#FF33CC',\n\t\t\t'#FF33FF',\n\t\t\t'#FF6600',\n\t\t\t'#FF6633',\n\t\t\t'#FF9900',\n\t\t\t'#FF9933',\n\t\t\t'#FFCC00',\n\t\t\t'#FFCC33'\n\t\t];\n\n\t\t/**\n\t\t * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n\t\t * and the Firebug extension (any Firefox version) are known\n\t\t * to support \"%c\" CSS customizations.\n\t\t *\n\t\t * TODO: add a `localStorage` variable to explicitly enable/disable colors\n\t\t */\n\n\t\t// eslint-disable-next-line complexity\n\t\tfunction useColors() {\n\t\t\t// NB: In an Electron preload script, document will be defined but not fully\n\t\t\t// initialized. Since we know we're in Chrome, we'll just detect this case\n\t\t\t// explicitly\n\t\t\tif (typeof window !== 'undefined' && window.process && (window.process.type === 'renderer' || window.process.__nwjs)) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\t// Internet Explorer and Edge do not support colors.\n\t\t\tif (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\\/(\\d+)/)) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\t// Is webkit? http://stackoverflow.com/a/16459606/376773\n\t\t\t// document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\n\t\t\treturn (typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance) ||\n\t\t\t\t// Is firebug? http://stackoverflow.com/a/398120/376773\n\t\t\t\t(typeof window !== 'undefined' && window.console && (window.console.firebug || (window.console.exception && window.console.table))) ||\n\t\t\t\t// Is firefox >= v31?\n\t\t\t\t// https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n\t\t\t\t(typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31) ||\n\t\t\t\t// Double check webkit in userAgent just in case we are in a worker\n\t\t\t\t(typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/));\n\t\t}\n\n\t\t/**\n\t\t * Colorize log arguments if enabled.\n\t\t *\n\t\t * @api public\n\t\t */\n\n\t\tfunction formatArgs(args) {\n\t\t\targs[0] = (this.useColors ? '%c' : '') +\n\t\t\t\tthis.namespace +\n\t\t\t\t(this.useColors ? ' %c' : ' ') +\n\t\t\t\targs[0] +\n\t\t\t\t(this.useColors ? '%c ' : ' ') +\n\t\t\t\t'+' + module.exports.humanize(this.diff);\n\n\t\t\tif (!this.useColors) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst c = 'color: ' + this.color;\n\t\t\targs.splice(1, 0, c, 'color: inherit');\n\n\t\t\t// The final \"%c\" is somewhat tricky, because there could be other\n\t\t\t// arguments passed either before or after the %c, so we need to\n\t\t\t// figure out the correct index to insert the CSS into\n\t\t\tlet index = 0;\n\t\t\tlet lastC = 0;\n\t\t\targs[0].replace(/%[a-zA-Z%]/g, match => {\n\t\t\t\tif (match === '%%') {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tindex++;\n\t\t\t\tif (match === '%c') {\n\t\t\t\t\t// We only are interested in the *last* %c\n\t\t\t\t\t// (the user may have provided their own)\n\t\t\t\t\tlastC = index;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\targs.splice(lastC, 0, c);\n\t\t}\n\n\t\t/**\n\t\t * Invokes `console.debug()` when available.\n\t\t * No-op when `console.debug` is not a \"function\".\n\t\t * If `console.debug` is not available, falls back\n\t\t * to `console.log`.\n\t\t *\n\t\t * @api public\n\t\t */\n\t\texports.log = console.debug || console.log || (() => {});\n\n\t\t/**\n\t\t * Save `namespaces`.\n\t\t *\n\t\t * @param {String} namespaces\n\t\t * @api private\n\t\t */\n\t\tfunction save(namespaces) {\n\t\t\ttry {\n\t\t\t\tif (namespaces) {\n\t\t\t\t\texports.storage.setItem('debug', namespaces);\n\t\t\t\t} else {\n\t\t\t\t\texports.storage.removeItem('debug');\n\t\t\t\t}\n\t\t\t} catch (error) {\n\t\t\t\t// Swallow\n\t\t\t\t// XXX (@Qix-) should we be logging these?\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * Load `namespaces`.\n\t\t *\n\t\t * @return {String} returns the previously persisted debug modes\n\t\t * @api private\n\t\t */\n\t\tfunction load() {\n\t\t\tlet r;\n\t\t\ttry {\n\t\t\t\tr = exports.storage.getItem('debug');\n\t\t\t} catch (error) {\n\t\t\t\t// Swallow\n\t\t\t\t// XXX (@Qix-) should we be logging these?\n\t\t\t}\n\n\t\t\t// If debug isn't set in LS, and we're in Electron, try to load $DEBUG\n\t\t\tif (!r && typeof process !== 'undefined' && 'env' in process) {\n\t\t\t\tr = process.env.DEBUG;\n\t\t\t}\n\n\t\t\treturn r;\n\t\t}\n\n\t\t/**\n\t\t * Localstorage attempts to return the localstorage.\n\t\t *\n\t\t * This is necessary because safari throws\n\t\t * when a user disables cookies/localstorage\n\t\t * and you attempt to access it.\n\t\t *\n\t\t * @return {LocalStorage}\n\t\t * @api private\n\t\t */\n\n\t\tfunction localstorage() {\n\t\t\ttry {\n\t\t\t\t// TVMLKit (Apple TV JS Runtime) does not have a window object, just localStorage in the global context\n\t\t\t\t// The Browser also has localStorage in the global context.\n\t\t\t\treturn localStorage;\n\t\t\t} catch (error) {\n\t\t\t\t// Swallow\n\t\t\t\t// XXX (@Qix-) should we be logging these?\n\t\t\t}\n\t\t}\n\n\t\tmodule.exports = requireCommon()(exports);\n\n\t\tconst {formatters} = module.exports;\n\n\t\t/**\n\t\t * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n\t\t */\n\n\t\tformatters.j = function (v) {\n\t\t\ttry {\n\t\t\t\treturn JSON.stringify(v);\n\t\t\t} catch (error) {\n\t\t\t\treturn '[UnexpectedJSONParseError]: ' + error.message;\n\t\t\t}\n\t\t};\n} (browser$2, browser$2.exports));\n\treturn browser$2.exports;\n}\n\nvar node$1 = {exports: {}};\n\n/**\n * Module dependencies.\n */\n\nvar hasRequiredNode$1;\n\nfunction requireNode$1 () {\n\tif (hasRequiredNode$1) return node$1.exports;\n\thasRequiredNode$1 = 1;\n\t(function (module, exports) {\n\t\tconst tty = require$$0$3;\n\t\tconst util = require$$0$6;\n\n\t\t/**\n\t\t * This is the Node.js implementation of `debug()`.\n\t\t */\n\n\t\texports.init = init;\n\t\texports.log = log;\n\t\texports.formatArgs = formatArgs;\n\t\texports.save = save;\n\t\texports.load = load;\n\t\texports.useColors = useColors;\n\t\texports.destroy = util.deprecate(\n\t\t\t() => {},\n\t\t\t'Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.'\n\t\t);\n\n\t\t/**\n\t\t * Colors.\n\t\t */\n\n\t\texports.colors = [6, 2, 3, 4, 5, 1];\n\n\t\ttry {\n\t\t\t// Optional dependency (as in, doesn't need to be installed, NOT like optionalDependencies in package.json)\n\t\t\t// eslint-disable-next-line import/no-extraneous-dependencies\n\t\t\tconst supportsColor = require('supports-color');\n\n\t\t\tif (supportsColor && (supportsColor.stderr || supportsColor).level >= 2) {\n\t\t\t\texports.colors = [\n\t\t\t\t\t20,\n\t\t\t\t\t21,\n\t\t\t\t\t26,\n\t\t\t\t\t27,\n\t\t\t\t\t32,\n\t\t\t\t\t33,\n\t\t\t\t\t38,\n\t\t\t\t\t39,\n\t\t\t\t\t40,\n\t\t\t\t\t41,\n\t\t\t\t\t42,\n\t\t\t\t\t43,\n\t\t\t\t\t44,\n\t\t\t\t\t45,\n\t\t\t\t\t56,\n\t\t\t\t\t57,\n\t\t\t\t\t62,\n\t\t\t\t\t63,\n\t\t\t\t\t68,\n\t\t\t\t\t69,\n\t\t\t\t\t74,\n\t\t\t\t\t75,\n\t\t\t\t\t76,\n\t\t\t\t\t77,\n\t\t\t\t\t78,\n\t\t\t\t\t79,\n\t\t\t\t\t80,\n\t\t\t\t\t81,\n\t\t\t\t\t92,\n\t\t\t\t\t93,\n\t\t\t\t\t98,\n\t\t\t\t\t99,\n\t\t\t\t\t112,\n\t\t\t\t\t113,\n\t\t\t\t\t128,\n\t\t\t\t\t129,\n\t\t\t\t\t134,\n\t\t\t\t\t135,\n\t\t\t\t\t148,\n\t\t\t\t\t149,\n\t\t\t\t\t160,\n\t\t\t\t\t161,\n\t\t\t\t\t162,\n\t\t\t\t\t163,\n\t\t\t\t\t164,\n\t\t\t\t\t165,\n\t\t\t\t\t166,\n\t\t\t\t\t167,\n\t\t\t\t\t168,\n\t\t\t\t\t169,\n\t\t\t\t\t170,\n\t\t\t\t\t171,\n\t\t\t\t\t172,\n\t\t\t\t\t173,\n\t\t\t\t\t178,\n\t\t\t\t\t179,\n\t\t\t\t\t184,\n\t\t\t\t\t185,\n\t\t\t\t\t196,\n\t\t\t\t\t197,\n\t\t\t\t\t198,\n\t\t\t\t\t199,\n\t\t\t\t\t200,\n\t\t\t\t\t201,\n\t\t\t\t\t202,\n\t\t\t\t\t203,\n\t\t\t\t\t204,\n\t\t\t\t\t205,\n\t\t\t\t\t206,\n\t\t\t\t\t207,\n\t\t\t\t\t208,\n\t\t\t\t\t209,\n\t\t\t\t\t214,\n\t\t\t\t\t215,\n\t\t\t\t\t220,\n\t\t\t\t\t221\n\t\t\t\t];\n\t\t\t}\n\t\t} catch (error) {\n\t\t\t// Swallow - we only care if `supports-color` is available; it doesn't have to be.\n\t\t}\n\n\t\t/**\n\t\t * Build up the default `inspectOpts` object from the environment variables.\n\t\t *\n\t\t *   $ DEBUG_COLORS=no DEBUG_DEPTH=10 DEBUG_SHOW_HIDDEN=enabled node script.js\n\t\t */\n\n\t\texports.inspectOpts = Object.keys(process.env).filter(key => {\n\t\t\treturn /^debug_/i.test(key);\n\t\t}).reduce((obj, key) => {\n\t\t\t// Camel-case\n\t\t\tconst prop = key\n\t\t\t\t.substring(6)\n\t\t\t\t.toLowerCase()\n\t\t\t\t.replace(/_([a-z])/g, (_, k) => {\n\t\t\t\t\treturn k.toUpperCase();\n\t\t\t\t});\n\n\t\t\t// Coerce string value into JS value\n\t\t\tlet val = process.env[key];\n\t\t\tif (/^(yes|on|true|enabled)$/i.test(val)) {\n\t\t\t\tval = true;\n\t\t\t} else if (/^(no|off|false|disabled)$/i.test(val)) {\n\t\t\t\tval = false;\n\t\t\t} else if (val === 'null') {\n\t\t\t\tval = null;\n\t\t\t} else {\n\t\t\t\tval = Number(val);\n\t\t\t}\n\n\t\t\tobj[prop] = val;\n\t\t\treturn obj;\n\t\t}, {});\n\n\t\t/**\n\t\t * Is stdout a TTY? Colored output is enabled when `true`.\n\t\t */\n\n\t\tfunction useColors() {\n\t\t\treturn 'colors' in exports.inspectOpts ?\n\t\t\t\tBoolean(exports.inspectOpts.colors) :\n\t\t\t\ttty.isatty(process.stderr.fd);\n\t\t}\n\n\t\t/**\n\t\t * Adds ANSI color escape codes if enabled.\n\t\t *\n\t\t * @api public\n\t\t */\n\n\t\tfunction formatArgs(args) {\n\t\t\tconst {namespace: name, useColors} = this;\n\n\t\t\tif (useColors) {\n\t\t\t\tconst c = this.color;\n\t\t\t\tconst colorCode = '\\u001B[3' + (c < 8 ? c : '8;5;' + c);\n\t\t\t\tconst prefix = `  ${colorCode};1m${name} \\u001B[0m`;\n\n\t\t\t\targs[0] = prefix + args[0].split('\\n').join('\\n' + prefix);\n\t\t\t\targs.push(colorCode + 'm+' + module.exports.humanize(this.diff) + '\\u001B[0m');\n\t\t\t} else {\n\t\t\t\targs[0] = getDate() + name + ' ' + args[0];\n\t\t\t}\n\t\t}\n\n\t\tfunction getDate() {\n\t\t\tif (exports.inspectOpts.hideDate) {\n\t\t\t\treturn '';\n\t\t\t}\n\t\t\treturn new Date().toISOString() + ' ';\n\t\t}\n\n\t\t/**\n\t\t * Invokes `util.format()` with the specified arguments and writes to stderr.\n\t\t */\n\n\t\tfunction log(...args) {\n\t\t\treturn process.stderr.write(util.format(...args) + '\\n');\n\t\t}\n\n\t\t/**\n\t\t * Save `namespaces`.\n\t\t *\n\t\t * @param {String} namespaces\n\t\t * @api private\n\t\t */\n\t\tfunction save(namespaces) {\n\t\t\tif (namespaces) {\n\t\t\t\tprocess.env.DEBUG = namespaces;\n\t\t\t} else {\n\t\t\t\t// If you set a process.env field to null or undefined, it gets cast to the\n\t\t\t\t// string 'null' or 'undefined'. Just delete instead.\n\t\t\t\tdelete process.env.DEBUG;\n\t\t\t}\n\t\t}\n\n\t\t/**\n\t\t * Load `namespaces`.\n\t\t *\n\t\t * @return {String} returns the previously persisted debug modes\n\t\t * @api private\n\t\t */\n\n\t\tfunction load() {\n\t\t\treturn process.env.DEBUG;\n\t\t}\n\n\t\t/**\n\t\t * Init logic for `debug` instances.\n\t\t *\n\t\t * Create a new `inspectOpts` object in case `useColors` is set\n\t\t * differently for a particular `debug` instance.\n\t\t */\n\n\t\tfunction init(debug) {\n\t\t\tdebug.inspectOpts = {};\n\n\t\t\tconst keys = Object.keys(exports.inspectOpts);\n\t\t\tfor (let i = 0; i < keys.length; i++) {\n\t\t\t\tdebug.inspectOpts[keys[i]] = exports.inspectOpts[keys[i]];\n\t\t\t}\n\t\t}\n\n\t\tmodule.exports = requireCommon()(exports);\n\n\t\tconst {formatters} = module.exports;\n\n\t\t/**\n\t\t * Map %o to `util.inspect()`, all on a single line.\n\t\t */\n\n\t\tformatters.o = function (v) {\n\t\t\tthis.inspectOpts.colors = this.useColors;\n\t\t\treturn util.inspect(v, this.inspectOpts)\n\t\t\t\t.split('\\n')\n\t\t\t\t.map(str => str.trim())\n\t\t\t\t.join(' ');\n\t\t};\n\n\t\t/**\n\t\t * Map %O to `util.inspect()`, allowing multiple lines if needed.\n\t\t */\n\n\t\tformatters.O = function (v) {\n\t\t\tthis.inspectOpts.colors = this.useColors;\n\t\t\treturn util.inspect(v, this.inspectOpts);\n\t\t};\n} (node$1, node$1.exports));\n\treturn node$1.exports;\n}\n\n/**\n * Detect Electron renderer / nwjs process, which is node, but we should\n * treat as a browser.\n */\n\n(function (module) {\n\tif (typeof process === 'undefined' || process.type === 'renderer' || process.browser === true || process.__nwjs) {\n\t\tmodule.exports = requireBrowser$1();\n\t} else {\n\t\tmodule.exports = requireNode$1();\n\t}\n} (src$2));\n\nvar _debug = /*@__PURE__*/getDefaultExportFromCjs(src$2.exports);\n\n// Helper since Typescript can't detect readonly arrays with Array.isArray\nfunction isArray$1(arg) {\n    return Array.isArray(arg);\n}\nfunction ensureArray(thing) {\n    if (isArray$1(thing))\n        return thing;\n    if (thing == null)\n        return [];\n    return [thing];\n}\n\nconst normalizePath$4 = function normalizePath(filename) {\n    return filename.split(win32$1.sep).join(posix$1.sep);\n};\n\nfunction getMatcherString(id, resolutionBase) {\n    if (resolutionBase === false || isAbsolute$1(id) || id.startsWith('*')) {\n        return normalizePath$4(id);\n    }\n    // resolve('') is valid and will default to process.cwd()\n    const basePath = normalizePath$4(resolve$4(resolutionBase || ''))\n        // escape all possible (posix + win) path characters that might interfere with regex\n        .replace(/[-^$*+?.()|[\\]{}]/g, '\\\\$&');\n    // Note that we use posix.join because:\n    // 1. the basePath has been normalized to use /\n    // 2. the incoming glob (id) matcher, also uses /\n    // otherwise Node will force backslash (\\) on windows\n    return posix$1.join(basePath, normalizePath$4(id));\n}\nconst createFilter$1 = function createFilter(include, exclude, options) {\n    const resolutionBase = options && options.resolve;\n    const getMatcher = (id) => id instanceof RegExp\n        ? id\n        : {\n            test: (what) => {\n                // this refactor is a tad overly verbose but makes for easy debugging\n                const pattern = getMatcherString(id, resolutionBase);\n                const fn = pm(pattern, { dot: true });\n                const result = fn(what);\n                return result;\n            }\n        };\n    const includeMatchers = ensureArray(include).map(getMatcher);\n    const excludeMatchers = ensureArray(exclude).map(getMatcher);\n    return function result(id) {\n        if (typeof id !== 'string')\n            return false;\n        if (/\\0/.test(id))\n            return false;\n        const pathId = normalizePath$4(id);\n        for (let i = 0; i < excludeMatchers.length; ++i) {\n            const matcher = excludeMatchers[i];\n            if (matcher.test(pathId))\n                return false;\n        }\n        for (let i = 0; i < includeMatchers.length; ++i) {\n            const matcher = includeMatchers[i];\n            if (matcher.test(pathId))\n                return true;\n        }\n        return !includeMatchers.length;\n    };\n};\n\nconst reservedWords$1 = 'break case class catch const continue debugger default delete do else export extends finally for function if import in instanceof let new return super switch this throw try typeof var void while with yield enum await implements package protected static interface private public';\nconst builtins$1 = 'arguments Infinity NaN undefined null true false eval uneval isFinite isNaN parseFloat parseInt decodeURI decodeURIComponent encodeURI encodeURIComponent escape unescape Object Function Boolean Symbol Error EvalError InternalError RangeError ReferenceError SyntaxError TypeError URIError Number Math Date String RegExp Array Int8Array Uint8Array Uint8ClampedArray Int16Array Uint16Array Int32Array Uint32Array Float32Array Float64Array Map Set WeakMap WeakSet SIMD ArrayBuffer DataView JSON Promise Generator GeneratorFunction Reflect Proxy Intl';\nconst forbiddenIdentifiers = new Set(`${reservedWords$1} ${builtins$1}`.split(' '));\nforbiddenIdentifiers.add('');\nconst makeLegalIdentifier = function makeLegalIdentifier(str) {\n    let identifier = str\n        .replace(/-(\\w)/g, (_, letter) => letter.toUpperCase())\n        .replace(/[^$_a-zA-Z0-9]/g, '_');\n    if (/\\d/.test(identifier[0]) || forbiddenIdentifiers.has(identifier)) {\n        identifier = `_${identifier}`;\n    }\n    return identifier || '_';\n};\n\nfunction stringify$9(obj) {\n    return (JSON.stringify(obj) || 'undefined').replace(/[\\u2028\\u2029]/g, (char) => `\\\\u${`000${char.charCodeAt(0).toString(16)}`.slice(-4)}`);\n}\nfunction serializeArray(arr, indent, baseIndent) {\n    let output = '[';\n    const separator = indent ? `\\n${baseIndent}${indent}` : '';\n    for (let i = 0; i < arr.length; i++) {\n        const key = arr[i];\n        output += `${i > 0 ? ',' : ''}${separator}${serialize(key, indent, baseIndent + indent)}`;\n    }\n    return `${output}${indent ? `\\n${baseIndent}` : ''}]`;\n}\nfunction serializeObject(obj, indent, baseIndent) {\n    let output = '{';\n    const separator = indent ? `\\n${baseIndent}${indent}` : '';\n    const entries = Object.entries(obj);\n    for (let i = 0; i < entries.length; i++) {\n        const [key, value] = entries[i];\n        const stringKey = makeLegalIdentifier(key) === key ? key : stringify$9(key);\n        output += `${i > 0 ? ',' : ''}${separator}${stringKey}:${indent ? ' ' : ''}${serialize(value, indent, baseIndent + indent)}`;\n    }\n    return `${output}${indent ? `\\n${baseIndent}` : ''}}`;\n}\nfunction serialize(obj, indent, baseIndent) {\n    if (typeof obj === 'object' && obj !== null) {\n        if (Array.isArray(obj))\n            return serializeArray(obj, indent, baseIndent);\n        if (obj instanceof Date)\n            return `new Date(${obj.getTime()})`;\n        if (obj instanceof RegExp)\n            return obj.toString();\n        return serializeObject(obj, indent, baseIndent);\n    }\n    if (typeof obj === 'number') {\n        if (obj === Infinity)\n            return 'Infinity';\n        if (obj === -Infinity)\n            return '-Infinity';\n        if (obj === 0)\n            return 1 / obj === Infinity ? '0' : '-0';\n        if (obj !== obj)\n            return 'NaN'; // eslint-disable-line no-self-compare\n    }\n    if (typeof obj === 'symbol') {\n        const key = Symbol.keyFor(obj);\n        if (key !== undefined)\n            return `Symbol.for(${stringify$9(key)})`;\n    }\n    if (typeof obj === 'bigint')\n        return `${obj}n`;\n    return stringify$9(obj);\n}\nconst dataToEsm = function dataToEsm(data, options = {}) {\n    const t = options.compact ? '' : 'indent' in options ? options.indent : '\\t';\n    const _ = options.compact ? '' : ' ';\n    const n = options.compact ? '' : '\\n';\n    const declarationType = options.preferConst ? 'const' : 'var';\n    if (options.namedExports === false ||\n        typeof data !== 'object' ||\n        Array.isArray(data) ||\n        data instanceof Date ||\n        data instanceof RegExp ||\n        data === null) {\n        const code = serialize(data, options.compact ? null : t, '');\n        const magic = _ || (/^[{[\\-\\/]/.test(code) ? '' : ' '); // eslint-disable-line no-useless-escape\n        return `export default${magic}${code};`;\n    }\n    let namedExportCode = '';\n    const defaultExportRows = [];\n    for (const [key, value] of Object.entries(data)) {\n        if (key === makeLegalIdentifier(key)) {\n            if (options.objectShorthand)\n                defaultExportRows.push(key);\n            else\n                defaultExportRows.push(`${key}:${_}${key}`);\n            namedExportCode += `export ${declarationType} ${key}${_}=${_}${serialize(value, options.compact ? null : t, '')};${n}`;\n        }\n        else {\n            defaultExportRows.push(`${stringify$9(key)}:${_}${serialize(value, options.compact ? null : t, '')}`);\n        }\n    }\n    return `${namedExportCode}export default${_}{${n}${t}${defaultExportRows.join(`,${n}${t}`)}${n}};${n}`;\n};\n\nconst createFilter = createFilter$1;\nfunction slash$1(p) {\n    return p.replace(/\\\\/g, '/');\n}\n// Strip valid id prefix. This is prepended to resolved Ids that are\n// not valid browser import specifiers by the importAnalysis plugin.\nfunction unwrapId(id) {\n    return id.startsWith(VALID_ID_PREFIX) ? id.slice(VALID_ID_PREFIX.length) : id;\n}\nconst flattenId = (id) => id\n    .replace(/[\\/:]/g, '_')\n    .replace(/[\\.]/g, '__')\n    .replace(/(\\s*>\\s*)/g, '___');\nconst normalizeId = (id) => id.replace(/(\\s*>\\s*)/g, ' > ');\n//TODO: revisit later to see if the edge case that \"compiling using node v12 code to be run in node v16 in the server\" is what we intend to support.\nconst builtins = new Set([\n    ...builtinModules,\n    'assert/strict',\n    'diagnostics_channel',\n    'dns/promises',\n    'fs/promises',\n    'path/posix',\n    'path/win32',\n    'readline/promises',\n    'stream/consumers',\n    'stream/promises',\n    'stream/web',\n    'timers/promises',\n    'util/types',\n    'wasi'\n]);\nfunction isBuiltin(id) {\n    return builtins.has(id.replace(/^node:/, ''));\n}\nfunction moduleListContains(moduleList, id) {\n    return moduleList?.some((m) => m === id || id.startsWith(m + '/'));\n}\nfunction isOptimizable(id, optimizeDeps) {\n    const { extensions } = optimizeDeps;\n    return (OPTIMIZABLE_ENTRY_RE.test(id) ||\n        (extensions?.some((ext) => id.endsWith(ext)) ?? false));\n}\nconst bareImportRE = /^[\\w@](?!.*:\\/\\/)/;\nlet isRunningWithYarnPnp;\n// TODO: use import()\nconst _require$4 = createRequire$1(import.meta.url);\ntry {\n    isRunningWithYarnPnp = Boolean(_require$4('pnpapi'));\n}\ncatch { }\nconst ssrExtensions = ['.js', '.cjs', '.json', '.node'];\nfunction resolveFrom(id, basedir, preserveSymlinks = false, ssr = false) {\n    return resolve$5.sync(id, {\n        basedir,\n        paths: [],\n        extensions: ssr ? ssrExtensions : DEFAULT_EXTENSIONS$1,\n        // necessary to work with pnpm\n        preserveSymlinks: preserveSymlinks || isRunningWithYarnPnp || false\n    });\n}\n/**\n * like `resolveFrom` but supports resolving `>` path in `id`,\n * for example: `foo > bar > baz`\n */\nfunction nestedResolveFrom(id, basedir, preserveSymlinks = false) {\n    const pkgs = id.split('>').map((pkg) => pkg.trim());\n    try {\n        for (const pkg of pkgs) {\n            basedir = resolveFrom(pkg, basedir, preserveSymlinks);\n        }\n    }\n    catch { }\n    return basedir;\n}\n// set in bin/vite.js\nconst filter = process.env.VITE_DEBUG_FILTER;\nconst DEBUG = process.env.DEBUG;\nfunction createDebugger(namespace, options = {}) {\n    const log = _debug(namespace);\n    const { onlyWhenFocused } = options;\n    const focus = typeof onlyWhenFocused === 'string' ? onlyWhenFocused : namespace;\n    return (msg, ...args) => {\n        if (filter && !msg.includes(filter)) {\n            return;\n        }\n        if (onlyWhenFocused && !DEBUG?.includes(focus)) {\n            return;\n        }\n        log(msg, ...args);\n    };\n}\nfunction testCaseInsensitiveFS() {\n    if (!CLIENT_ENTRY.endsWith('client.mjs')) {\n        throw new Error(`cannot test case insensitive FS, CLIENT_ENTRY const doesn't contain client.mjs`);\n    }\n    if (!fs$l.existsSync(CLIENT_ENTRY)) {\n        throw new Error('cannot test case insensitive FS, CLIENT_ENTRY does not point to an existing file: ' +\n            CLIENT_ENTRY);\n    }\n    return fs$l.existsSync(CLIENT_ENTRY.replace('client.mjs', 'cLiEnT.mjs'));\n}\nconst isCaseInsensitiveFS = testCaseInsensitiveFS();\nconst isWindows$4 = os$3.platform() === 'win32';\nconst VOLUME_RE = /^[A-Z]:/i;\nfunction normalizePath$3(id) {\n    return path$n.posix.normalize(isWindows$4 ? slash$1(id) : id);\n}\nfunction fsPathFromId(id) {\n    const fsPath = normalizePath$3(id.startsWith(FS_PREFIX) ? id.slice(FS_PREFIX.length) : id);\n    return fsPath.startsWith('/') || fsPath.match(VOLUME_RE)\n        ? fsPath\n        : `/${fsPath}`;\n}\nfunction fsPathFromUrl(url) {\n    return fsPathFromId(cleanUrl(url));\n}\n/**\n * Check if dir is a parent of file\n *\n * Warning: parameters are not validated, only works with normalized absolute paths\n *\n * @param dir - normalized absolute path\n * @param file - normalized absolute path\n * @returns true if dir is a parent of file\n */\nfunction isParentDirectory(dir, file) {\n    if (!dir.endsWith('/')) {\n        dir = `${dir}/`;\n    }\n    return (file.startsWith(dir) ||\n        (isCaseInsensitiveFS && file.toLowerCase().startsWith(dir.toLowerCase())));\n}\nfunction ensureVolumeInPath(file) {\n    return isWindows$4 ? path$n.resolve(file) : file;\n}\nconst queryRE = /\\?.*$/s;\nconst hashRE = /#.*$/s;\nconst cleanUrl = (url) => url.replace(hashRE, '').replace(queryRE, '');\nconst externalRE = /^(https?:)?\\/\\//;\nconst isExternalUrl = (url) => externalRE.test(url);\nconst dataUrlRE = /^\\s*data:/i;\nconst isDataUrl = (url) => dataUrlRE.test(url);\nconst virtualModuleRE = /^virtual-module:.*/;\nconst virtualModulePrefix = 'virtual-module:';\nconst knownJsSrcRE = /\\.((j|t)sx?|m[jt]s|vue|marko|svelte|astro)($|\\?)/;\nconst isJSRequest = (url) => {\n    url = cleanUrl(url);\n    if (knownJsSrcRE.test(url)) {\n        return true;\n    }\n    if (!path$n.extname(url) && !url.endsWith('/')) {\n        return true;\n    }\n    return false;\n};\nconst knownTsRE = /\\.(ts|mts|cts|tsx)$/;\nconst knownTsOutputRE = /\\.(js|mjs|cjs|jsx)$/;\nconst isTsRequest = (url) => knownTsRE.test(url);\nconst isPossibleTsOutput = (url) => knownTsOutputRE.test(cleanUrl(url));\nfunction getPotentialTsSrcPaths(filePath) {\n    const [name, type, query = ''] = filePath.split(/(\\.(?:[cm]?js|jsx))(\\?.*)?$/);\n    const paths = [name + type.replace('js', 'ts') + query];\n    if (!type.endsWith('x')) {\n        paths.push(name + type.replace('js', 'tsx') + query);\n    }\n    return paths;\n}\nconst importQueryRE = /(\\?|&)import=?(?:&|$)/;\nconst internalPrefixes = [\n    FS_PREFIX,\n    VALID_ID_PREFIX,\n    CLIENT_PUBLIC_PATH,\n    ENV_PUBLIC_PATH\n];\nconst InternalPrefixRE = new RegExp(`^(?:${internalPrefixes.join('|')})`);\nconst trailingSeparatorRE = /[\\?&]$/;\nconst isImportRequest = (url) => importQueryRE.test(url);\nconst isInternalRequest = (url) => InternalPrefixRE.test(url);\nfunction removeImportQuery(url) {\n    return url.replace(importQueryRE, '$1').replace(trailingSeparatorRE, '');\n}\nfunction injectQuery(url, queryToInject) {\n    // encode percents for consistent behavior with pathToFileURL\n    // see #2614 for details\n    let resolvedUrl = new URL$3(url.replace(/%/g, '%25'), 'relative:///');\n    if (resolvedUrl.protocol !== 'relative:') {\n        resolvedUrl = pathToFileURL(url);\n    }\n    let { protocol, pathname, search, hash } = resolvedUrl;\n    if (protocol === 'file:') {\n        pathname = pathname.slice(1);\n    }\n    pathname = decodeURIComponent(pathname);\n    return `${pathname}?${queryToInject}${search ? `&` + search.slice(1) : ''}${hash ?? ''}`;\n}\nconst timestampRE = /\\bt=\\d{13}&?\\b/;\nfunction removeTimestampQuery(url) {\n    return url.replace(timestampRE, '').replace(trailingSeparatorRE, '');\n}\nasync function asyncReplace(input, re, replacer) {\n    let match;\n    let remaining = input;\n    let rewritten = '';\n    while ((match = re.exec(remaining))) {\n        rewritten += remaining.slice(0, match.index);\n        rewritten += await replacer(match);\n        remaining = remaining.slice(match.index + match[0].length);\n    }\n    rewritten += remaining;\n    return rewritten;\n}\nfunction timeFrom(start, subtract = 0) {\n    const time = performance.now() - start - subtract;\n    const timeString = (time.toFixed(2) + `ms`).padEnd(5, ' ');\n    if (time < 10) {\n        return picocolors.exports.green(timeString);\n    }\n    else if (time < 50) {\n        return picocolors.exports.yellow(timeString);\n    }\n    else {\n        return picocolors.exports.red(timeString);\n    }\n}\n/**\n * pretty url for logging.\n */\nfunction prettifyUrl(url, root) {\n    url = removeTimestampQuery(url);\n    const isAbsoluteFile = url.startsWith(root);\n    if (isAbsoluteFile || url.startsWith(FS_PREFIX)) {\n        let file = path$n.relative(root, isAbsoluteFile ? url : fsPathFromId(url));\n        const seg = file.split('/');\n        const npmIndex = seg.indexOf(`node_modules`);\n        const isSourceMap = file.endsWith('.map');\n        if (npmIndex > 0) {\n            file = seg[npmIndex + 1];\n            if (file.startsWith('@')) {\n                file = `${file}/${seg[npmIndex + 2]}`;\n            }\n            file = `npm: ${picocolors.exports.dim(file)}${isSourceMap ? ` (source map)` : ``}`;\n        }\n        return picocolors.exports.dim(file);\n    }\n    else {\n        return picocolors.exports.dim(url);\n    }\n}\nfunction isObject$2(value) {\n    return Object.prototype.toString.call(value) === '[object Object]';\n}\nfunction isDefined(value) {\n    return value != null;\n}\nfunction lookupFile(dir, formats, options) {\n    for (const format of formats) {\n        const fullPath = path$n.join(dir, format);\n        if (fs$l.existsSync(fullPath) && fs$l.statSync(fullPath).isFile()) {\n            return options?.pathOnly ? fullPath : fs$l.readFileSync(fullPath, 'utf-8');\n        }\n    }\n    const parentDir = path$n.dirname(dir);\n    if (parentDir !== dir &&\n        (!options?.rootDir || parentDir.startsWith(options?.rootDir))) {\n        return lookupFile(parentDir, formats, options);\n    }\n}\nconst splitRE = /\\r?\\n/;\nconst range = 2;\nfunction pad$1(source, n = 2) {\n    const lines = source.split(splitRE);\n    return lines.map((l) => ` `.repeat(n) + l).join(`\\n`);\n}\nfunction posToNumber(source, pos) {\n    if (typeof pos === 'number')\n        return pos;\n    const lines = source.split(splitRE);\n    const { line, column } = pos;\n    let start = 0;\n    for (let i = 0; i < line - 1; i++) {\n        if (lines[i]) {\n            start += lines[i].length + 1;\n        }\n    }\n    return start + column;\n}\nfunction numberToPos(source, offset) {\n    if (typeof offset !== 'number')\n        return offset;\n    if (offset > source.length) {\n        throw new Error(`offset is longer than source length! offset ${offset} > length ${source.length}`);\n    }\n    const lines = source.split(splitRE);\n    let counted = 0;\n    let line = 0;\n    let column = 0;\n    for (; line < lines.length; line++) {\n        const lineLength = lines[line].length + 1;\n        if (counted + lineLength >= offset) {\n            column = offset - counted + 1;\n            break;\n        }\n        counted += lineLength;\n    }\n    return { line: line + 1, column };\n}\nfunction generateCodeFrame(source, start = 0, end) {\n    start = posToNumber(source, start);\n    end = end || start;\n    const lines = source.split(splitRE);\n    let count = 0;\n    const res = [];\n    for (let i = 0; i < lines.length; i++) {\n        count += lines[i].length + 1;\n        if (count >= start) {\n            for (let j = i - range; j <= i + range || end > count; j++) {\n                if (j < 0 || j >= lines.length)\n                    continue;\n                const line = j + 1;\n                res.push(`${line}${' '.repeat(Math.max(3 - String(line).length, 0))}|  ${lines[j]}`);\n                const lineLength = lines[j].length;\n                if (j === i) {\n                    // push underline\n                    const pad = Math.max(start - (count - lineLength) + 1, 0);\n                    const length = Math.max(1, end > count ? lineLength - pad : end - start);\n                    res.push(`   |  ` + ' '.repeat(pad) + '^'.repeat(length));\n                }\n                else if (j > i) {\n                    if (end > count) {\n                        const length = Math.max(Math.min(end - count, lineLength), 1);\n                        res.push(`   |  ` + '^'.repeat(length));\n                    }\n                    count += lineLength + 1;\n                }\n            }\n            break;\n        }\n    }\n    return res.join('\\n');\n}\nfunction writeFile(filename, content) {\n    const dir = path$n.dirname(filename);\n    if (!fs$l.existsSync(dir)) {\n        fs$l.mkdirSync(dir, { recursive: true });\n    }\n    fs$l.writeFileSync(filename, content);\n}\n/**\n * Use fs.statSync(filename) instead of fs.existsSync(filename)\n * #2051 if we don't have read permission on a directory, existsSync() still\n * works and will result in massively slow subsequent checks (which are\n * unnecessary in the first place)\n */\nfunction isFileReadable(filename) {\n    try {\n        const stat = fs$l.statSync(filename, { throwIfNoEntry: false });\n        return !!stat;\n    }\n    catch {\n        return false;\n    }\n}\n/**\n * Delete every file and subdirectory. **The given directory must exist.**\n * Pass an optional `skip` array to preserve files in the root directory.\n */\nfunction emptyDir(dir, skip) {\n    for (const file of fs$l.readdirSync(dir)) {\n        if (skip?.includes(file)) {\n            continue;\n        }\n        fs$l.rmSync(path$n.resolve(dir, file), { recursive: true, force: true });\n    }\n}\nfunction copyDir(srcDir, destDir) {\n    fs$l.mkdirSync(destDir, { recursive: true });\n    for (const file of fs$l.readdirSync(srcDir)) {\n        const srcFile = path$n.resolve(srcDir, file);\n        if (srcFile === destDir) {\n            continue;\n        }\n        const destFile = path$n.resolve(destDir, file);\n        const stat = fs$l.statSync(srcFile);\n        if (stat.isDirectory()) {\n            copyDir(srcFile, destFile);\n        }\n        else {\n            fs$l.copyFileSync(srcFile, destFile);\n        }\n    }\n}\nconst removeDir = isWindows$4\n    ? promisify$4(gracefulRemoveDir)\n    : function removeDirSync(dir) {\n        fs$l.rmSync(dir, { recursive: true, force: true });\n    };\nconst renameDir = isWindows$4 ? promisify$4(gracefulRename) : fs$l.renameSync;\nfunction ensureWatchedFile(watcher, file, root) {\n    if (file &&\n        // only need to watch if out of root\n        !file.startsWith(root + '/') &&\n        // some rollup plugins use null bytes for private resolved Ids\n        !file.includes('\\0') &&\n        fs$l.existsSync(file)) {\n        // resolve file to normalized system path\n        watcher.add(path$n.resolve(file));\n    }\n}\nconst escapedSpaceCharacters = /( |\\\\t|\\\\n|\\\\f|\\\\r)+/g;\nconst imageSetUrlRE = /^(?:[\\w\\-]+\\(.*?\\)|'.*?'|\".*?\"|\\S*)/;\nfunction reduceSrcset(ret) {\n    return ret.reduce((prev, { url, descriptor }, index) => {\n        descriptor ?? (descriptor = '');\n        return (prev +=\n            url + ` ${descriptor}${index === ret.length - 1 ? '' : ', '}`);\n    }, '');\n}\nfunction splitSrcSetDescriptor(srcs) {\n    return splitSrcSet(srcs)\n        .map((s) => {\n        const src = s.replace(escapedSpaceCharacters, ' ').trim();\n        const [url] = imageSetUrlRE.exec(src) || [];\n        return {\n            url,\n            descriptor: src?.slice(url.length).trim()\n        };\n    })\n        .filter(({ url }) => !!url);\n}\nfunction processSrcSet(srcs, replacer) {\n    return Promise.all(splitSrcSetDescriptor(srcs).map(async ({ url, descriptor }) => ({\n        url: await replacer({ url, descriptor }),\n        descriptor\n    }))).then((ret) => reduceSrcset(ret));\n}\nfunction processSrcSetSync(srcs, replacer) {\n    return reduceSrcset(splitSrcSetDescriptor(srcs).map(({ url, descriptor }) => ({\n        url: replacer({ url, descriptor }),\n        descriptor\n    })));\n}\nfunction splitSrcSet(srcs) {\n    const parts = [];\n    // There could be a ',' inside of url(data:...), linear-gradient(...) or \"data:...\"\n    const cleanedSrcs = srcs.replace(/(?:url|image|gradient|cross-fade)\\([^\\)]*\\)|\"([^\"]|(?<=\\\\)\")*\"|'([^']|(?<=\\\\)')*'/g, blankReplacer);\n    let startIndex = 0;\n    let splitIndex;\n    do {\n        splitIndex = cleanedSrcs.indexOf(',', startIndex);\n        parts.push(srcs.slice(startIndex, splitIndex !== -1 ? splitIndex : undefined));\n        startIndex = splitIndex + 1;\n    } while (splitIndex !== -1);\n    return parts;\n}\nfunction escapeToLinuxLikePath(path) {\n    if (/^[A-Z]:/.test(path)) {\n        return path.replace(/^([A-Z]):\\//, '/windows/$1/');\n    }\n    if (/^\\/[^/]/.test(path)) {\n        return `/linux${path}`;\n    }\n    return path;\n}\nfunction unescapeToLinuxLikePath(path) {\n    if (path.startsWith('/linux/')) {\n        return path.slice('/linux'.length);\n    }\n    if (path.startsWith('/windows/')) {\n        return path.replace(/^\\/windows\\/([A-Z])\\//, '$1:/');\n    }\n    return path;\n}\n// based on https://github.com/sveltejs/svelte/blob/abf11bb02b2afbd3e4cac509a0f70e318c306364/src/compiler/utils/mapped_code.ts#L221\nconst nullSourceMap = {\n    names: [],\n    sources: [],\n    mappings: '',\n    version: 3\n};\nfunction combineSourcemaps(filename, sourcemapList, excludeContent = true) {\n    if (sourcemapList.length === 0 ||\n        sourcemapList.every((m) => m.sources.length === 0)) {\n        return { ...nullSourceMap };\n    }\n    // hack for parse broken with normalized absolute paths on windows (C:/path/to/something).\n    // escape them to linux like paths\n    // also avoid mutation here to prevent breaking plugin's using cache to generate sourcemaps like vue (see #7442)\n    sourcemapList = sourcemapList.map((sourcemap) => {\n        const newSourcemaps = { ...sourcemap };\n        newSourcemaps.sources = sourcemap.sources.map((source) => source ? escapeToLinuxLikePath(source) : null);\n        if (sourcemap.sourceRoot) {\n            newSourcemaps.sourceRoot = escapeToLinuxLikePath(sourcemap.sourceRoot);\n        }\n        return newSourcemaps;\n    });\n    const escapedFilename = escapeToLinuxLikePath(filename);\n    // We don't declare type here so we can convert/fake/map as RawSourceMap\n    let map; //: SourceMap\n    let mapIndex = 1;\n    const useArrayInterface = sourcemapList.slice(0, -1).find((m) => m.sources.length !== 1) === undefined;\n    if (useArrayInterface) {\n        map = remapping(sourcemapList, () => null, excludeContent);\n    }\n    else {\n        map = remapping(sourcemapList[0], function loader(sourcefile) {\n            if (sourcefile === escapedFilename && sourcemapList[mapIndex]) {\n                return sourcemapList[mapIndex++];\n            }\n            else {\n                return null;\n            }\n        }, excludeContent);\n    }\n    if (!map.file) {\n        delete map.file;\n    }\n    // unescape the previous hack\n    map.sources = map.sources.map((source) => source ? unescapeToLinuxLikePath(source) : source);\n    map.file = filename;\n    return map;\n}\nfunction unique(arr) {\n    return Array.from(new Set(arr));\n}\n/**\n * Returns resolved localhost address when `dns.lookup` result differs from DNS\n *\n * `dns.lookup` result is same when defaultResultOrder is `verbatim`.\n * Even if defaultResultOrder is `ipv4first`, `dns.lookup` result maybe same.\n * For example, when IPv6 is not supported on that machine/network.\n */\nasync function getLocalhostAddressIfDiffersFromDNS() {\n    const [nodeResult, dnsResult] = await Promise.all([\n        promises.lookup('localhost'),\n        promises.lookup('localhost', { verbatim: true })\n    ]);\n    const isSame = nodeResult.family === dnsResult.family &&\n        nodeResult.address === dnsResult.address;\n    return isSame ? undefined : nodeResult.address;\n}\nasync function resolveHostname(optionsHost) {\n    let host;\n    if (optionsHost === undefined || optionsHost === false) {\n        // Use a secure default\n        host = 'localhost';\n    }\n    else if (optionsHost === true) {\n        // If passed --host in the CLI without arguments\n        host = undefined; // undefined typically means 0.0.0.0 or :: (listen on all IPs)\n    }\n    else {\n        host = optionsHost;\n    }\n    // Set host name to localhost when possible\n    let name = host === undefined || wildcardHosts.has(host) ? 'localhost' : host;\n    if (host === 'localhost') {\n        // See #8647 for more details.\n        const localhostAddr = await getLocalhostAddressIfDiffersFromDNS();\n        if (localhostAddr) {\n            name = localhostAddr;\n        }\n    }\n    return { host, name };\n}\nasync function resolveServerUrls(server, options, config) {\n    const address = server.address();\n    const isAddressInfo = (x) => x?.address;\n    if (!isAddressInfo(address)) {\n        return { local: [], network: [] };\n    }\n    const local = [];\n    const network = [];\n    const hostname = await resolveHostname(options.host);\n    const protocol = options.https ? 'https' : 'http';\n    const port = address.port;\n    const base = config.base === './' || config.base === '' ? '/' : config.base;\n    if (hostname.host && loopbackHosts.has(hostname.host)) {\n        let hostnameName = hostname.name;\n        if (hostnameName === '::1' ||\n            hostnameName === '0000:0000:0000:0000:0000:0000:0000:0001') {\n            hostnameName = `[${hostnameName}]`;\n        }\n        local.push(`${protocol}://${hostnameName}:${port}${base}`);\n    }\n    else {\n        Object.values(os$3.networkInterfaces())\n            .flatMap((nInterface) => nInterface ?? [])\n            .filter((detail) => detail &&\n            detail.address &&\n            // Node < v18\n            ((typeof detail.family === 'string' && detail.family === 'IPv4') ||\n                // Node >= v18\n                (typeof detail.family === 'number' && detail.family === 4)))\n            .forEach((detail) => {\n            const host = detail.address.replace('127.0.0.1', hostname.name);\n            const url = `${protocol}://${host}:${port}${base}`;\n            if (detail.address.includes('127.0.0.1')) {\n                local.push(url);\n            }\n            else {\n                network.push(url);\n            }\n        });\n    }\n    return { local, network };\n}\nfunction arraify(target) {\n    return Array.isArray(target) ? target : [target];\n}\nfunction toUpperCaseDriveLetter(pathName) {\n    return pathName.replace(/^\\w:/, (letter) => letter.toUpperCase());\n}\nconst multilineCommentsRE$1 = /\\/\\*(.|[\\r\\n])*?\\*\\//gm;\nconst singlelineCommentsRE$1 = /\\/\\/.*/g;\nconst requestQuerySplitRE = /\\?(?!.*[\\/|\\}])/;\n// @ts-expect-error\nconst usingDynamicImport = typeof jest === 'undefined';\n/**\n * Dynamically import files. It will make sure it's not being compiled away by TS/Rollup.\n *\n * As a temporary workaround for Jest's lack of stable ESM support, we fallback to require\n * if we're in a Jest environment.\n * See https://github.com/vitejs/vite/pull/5197#issuecomment-938054077\n *\n * @param file File path to import.\n */\nconst dynamicImport = usingDynamicImport\n    ? new Function('file', 'return import(file)')\n    : _require$4;\nfunction parseRequest(id) {\n    const [_, search] = id.split(requestQuerySplitRE, 2);\n    if (!search) {\n        return null;\n    }\n    return Object.fromEntries(new URLSearchParams(search));\n}\nconst blankReplacer = (match) => ' '.repeat(match.length);\nfunction getHash(text) {\n    return createHash$2('sha256').update(text).digest('hex').substring(0, 8);\n}\nconst requireResolveFromRootWithFallback = (root, id) => {\n    // Search in the root directory first, and fallback to the default require paths.\n    const fallbackPaths = _require$4.resolve.paths?.(id) || [];\n    const path = _require$4.resolve(id, {\n        paths: [root, ...fallbackPaths]\n    });\n    return path;\n};\n// Based on node-graceful-fs\n// The ISC License\n// Copyright (c) 2011-2022 Isaac Z. Schlueter, Ben Noordhuis, and Contributors\n// https://github.com/isaacs/node-graceful-fs/blob/main/LICENSE\n// On Windows, A/V software can lock the directory, causing this\n// to fail with an EACCES or EPERM if the directory contains newly\n// created files. The original tried for up to 60 seconds, we only\n// wait for 5 seconds, as a longer time would be seen as an error\nconst GRACEFUL_RENAME_TIMEOUT = 5000;\nfunction gracefulRename(from, to, cb) {\n    const start = Date.now();\n    let backoff = 0;\n    fs$l.rename(from, to, function CB(er) {\n        if (er &&\n            (er.code === 'EACCES' || er.code === 'EPERM') &&\n            Date.now() - start < GRACEFUL_RENAME_TIMEOUT) {\n            setTimeout(function () {\n                fs$l.stat(to, function (stater, st) {\n                    if (stater && stater.code === 'ENOENT')\n                        fs$l.rename(from, to, CB);\n                    else\n                        CB(er);\n                });\n            }, backoff);\n            if (backoff < 100)\n                backoff += 10;\n            return;\n        }\n        if (cb)\n            cb(er);\n    });\n}\nconst GRACEFUL_REMOVE_DIR_TIMEOUT = 5000;\nfunction gracefulRemoveDir(dir, cb) {\n    const start = Date.now();\n    let backoff = 0;\n    fs$l.rm(dir, { recursive: true }, function CB(er) {\n        if (er) {\n            if ((er.code === 'ENOTEMPTY' ||\n                er.code === 'EACCES' ||\n                er.code === 'EPERM') &&\n                Date.now() - start < GRACEFUL_REMOVE_DIR_TIMEOUT) {\n                setTimeout(function () {\n                    fs$l.rm(dir, { recursive: true }, CB);\n                }, backoff);\n                if (backoff < 100)\n                    backoff += 10;\n                return;\n            }\n            if (er.code === 'ENOENT') {\n                er = null;\n            }\n        }\n        if (cb)\n            cb(er);\n    });\n}\nfunction emptyCssComments(raw) {\n    return raw.replace(multilineCommentsRE$1, (s) => ' '.repeat(s.length));\n}\nfunction removeComments(raw) {\n    return raw.replace(multilineCommentsRE$1, '').replace(singlelineCommentsRE$1, '');\n}\nfunction mergeConfigRecursively(defaults, overrides, rootPath) {\n    const merged = { ...defaults };\n    for (const key in overrides) {\n        const value = overrides[key];\n        if (value == null) {\n            continue;\n        }\n        const existing = merged[key];\n        if (existing == null) {\n            merged[key] = value;\n            continue;\n        }\n        // fields that require special handling\n        if (key === 'alias' && (rootPath === 'resolve' || rootPath === '')) {\n            merged[key] = mergeAlias(existing, value);\n            continue;\n        }\n        else if (key === 'assetsInclude' && rootPath === '') {\n            merged[key] = [].concat(existing, value);\n            continue;\n        }\n        else if (key === 'noExternal' &&\n            rootPath === 'ssr' &&\n            (existing === true || value === true)) {\n            merged[key] = true;\n            continue;\n        }\n        if (Array.isArray(existing) || Array.isArray(value)) {\n            merged[key] = [...arraify(existing ?? []), ...arraify(value ?? [])];\n            continue;\n        }\n        if (isObject$2(existing) && isObject$2(value)) {\n            merged[key] = mergeConfigRecursively(existing, value, rootPath ? `${rootPath}.${key}` : key);\n            continue;\n        }\n        merged[key] = value;\n    }\n    return merged;\n}\nfunction mergeConfig(defaults, overrides, isRoot = true) {\n    return mergeConfigRecursively(defaults, overrides, isRoot ? '' : '.');\n}\nfunction mergeAlias(a, b) {\n    if (!a)\n        return b;\n    if (!b)\n        return a;\n    if (isObject$2(a) && isObject$2(b)) {\n        return { ...a, ...b };\n    }\n    // the order is flipped because the alias is resolved from top-down,\n    // where the later should have higher priority\n    return [...normalizeAlias(b), ...normalizeAlias(a)];\n}\nfunction normalizeAlias(o = []) {\n    return Array.isArray(o)\n        ? o.map(normalizeSingleAlias)\n        : Object.keys(o).map((find) => normalizeSingleAlias({\n            find,\n            replacement: o[find]\n        }));\n}\n// https://github.com/vitejs/vite/issues/1363\n// work around https://github.com/rollup/plugins/issues/759\nfunction normalizeSingleAlias({ find, replacement, customResolver }) {\n    if (typeof find === 'string' &&\n        find.endsWith('/') &&\n        replacement.endsWith('/')) {\n        find = find.slice(0, find.length - 1);\n        replacement = replacement.slice(0, replacement.length - 1);\n    }\n    const alias = {\n        find,\n        replacement\n    };\n    if (customResolver) {\n        alias.customResolver = customResolver;\n    }\n    return alias;\n}\n/**\n * Transforms transpiled code result where line numbers aren't altered,\n * so we can skip sourcemap generation during dev\n */\nfunction transformStableResult(s, id, config) {\n    return {\n        code: s.toString(),\n        map: config.command === 'build' && config.build.sourcemap\n            ? s.generateMap({ hires: true, source: id })\n            : null\n    };\n}\nasync function asyncFlatten(arr) {\n    do {\n        arr = (await Promise.all(arr)).flat(Infinity);\n    } while (arr.some((v) => v?.then));\n    return arr;\n}\n// strip UTF-8 BOM\nfunction stripBomTag(content) {\n    if (content.charCodeAt(0) === 0xfeff) {\n        return content.slice(1);\n    }\n    return content;\n}\nconst windowsDrivePathPrefixRE = /^[A-Za-z]:[/\\\\]/;\n/**\n * path.isAbsolute also returns true for drive relative paths on windows (e.g. /something)\n * this function returns false for them but true for absolute paths (e.g. C:/something)\n */\nconst isNonDriveRelativeAbsolutePath = (p) => {\n    if (!isWindows$4)\n        return p.startsWith('/');\n    return windowsDrivePathPrefixRE.test(p);\n};\n\n/* eslint no-console: 0 */\nconst LogLevels = {\n    silent: 0,\n    error: 1,\n    warn: 2,\n    info: 3\n};\nlet lastType;\nlet lastMsg;\nlet sameCount = 0;\nfunction clearScreen() {\n    const repeatCount = process.stdout.rows - 2;\n    const blank = repeatCount > 0 ? '\\n'.repeat(repeatCount) : '';\n    console.log(blank);\n    readline.cursorTo(process.stdout, 0, 0);\n    readline.clearScreenDown(process.stdout);\n}\nfunction createLogger(level = 'info', options = {}) {\n    if (options.customLogger) {\n        return options.customLogger;\n    }\n    const loggedErrors = new WeakSet();\n    const { prefix = '[vite]', allowClearScreen = true } = options;\n    const thresh = LogLevels[level];\n    const canClearScreen = allowClearScreen && process.stdout.isTTY && !process.env.CI;\n    const clear = canClearScreen ? clearScreen : () => { };\n    function output(type, msg, options = {}) {\n        if (thresh >= LogLevels[type]) {\n            const method = type === 'info' ? 'log' : type;\n            const format = () => {\n                if (options.timestamp) {\n                    const tag = type === 'info'\n                        ? picocolors.exports.cyan(picocolors.exports.bold(prefix))\n                        : type === 'warn'\n                            ? picocolors.exports.yellow(picocolors.exports.bold(prefix))\n                            : picocolors.exports.red(picocolors.exports.bold(prefix));\n                    return `${picocolors.exports.dim(new Date().toLocaleTimeString())} ${tag} ${msg}`;\n                }\n                else {\n                    return msg;\n                }\n            };\n            if (options.error) {\n                loggedErrors.add(options.error);\n            }\n            if (canClearScreen) {\n                if (type === lastType && msg === lastMsg) {\n                    sameCount++;\n                    clear();\n                    console[method](format(), picocolors.exports.yellow(`(x${sameCount + 1})`));\n                }\n                else {\n                    sameCount = 0;\n                    lastMsg = msg;\n                    lastType = type;\n                    if (options.clear) {\n                        clear();\n                    }\n                    console[method](format());\n                }\n            }\n            else {\n                console[method](format());\n            }\n        }\n    }\n    const warnedMessages = new Set();\n    const logger = {\n        hasWarned: false,\n        info(msg, opts) {\n            output('info', msg, opts);\n        },\n        warn(msg, opts) {\n            logger.hasWarned = true;\n            output('warn', msg, opts);\n        },\n        warnOnce(msg, opts) {\n            if (warnedMessages.has(msg))\n                return;\n            logger.hasWarned = true;\n            output('warn', msg, opts);\n            warnedMessages.add(msg);\n        },\n        error(msg, opts) {\n            logger.hasWarned = true;\n            output('error', msg, opts);\n        },\n        clearScreen(type) {\n            if (thresh >= LogLevels[type]) {\n                clear();\n            }\n        },\n        hasErrorLogged(error) {\n            return loggedErrors.has(error);\n        }\n    };\n    return logger;\n}\nfunction printServerUrls(urls, optionsHost, info) {\n    const colorUrl = (url) => picocolors.exports.cyan(url.replace(/:(\\d+)\\//, (_, port) => `:${picocolors.exports.bold(port)}/`));\n    for (const url of urls.local) {\n        info(`  ${picocolors.exports.green('\u279C')}  ${picocolors.exports.bold('Local')}:   ${colorUrl(url)}`);\n    }\n    for (const url of urls.network) {\n        info(`  ${picocolors.exports.green('\u279C')}  ${picocolors.exports.bold('Network')}: ${colorUrl(url)}`);\n    }\n    if (urls.network.length === 0 && optionsHost === undefined) {\n        const note = `use ${picocolors.exports.white(picocolors.exports.bold('--host'))} to expose`;\n        info(picocolors.exports.dim(`  ${picocolors.exports.green('\u279C')}  ${picocolors.exports.bold('Network')}: ${note}`));\n    }\n}\n\nconst writeColors = {\n    [0 /* JS */]: picocolors.exports.cyan,\n    [1 /* CSS */]: picocolors.exports.magenta,\n    [2 /* ASSET */]: picocolors.exports.green,\n    [3 /* HTML */]: picocolors.exports.blue,\n    [4 /* SOURCE_MAP */]: picocolors.exports.gray\n};\nfunction buildReporterPlugin(config) {\n    const compress = promisify$4(gzip);\n    const chunkLimit = config.build.chunkSizeWarningLimit;\n    function isLarge(code) {\n        // bail out on particularly large chunks\n        return code.length / 1024 > chunkLimit;\n    }\n    async function getCompressedSize(code) {\n        if (config.build.ssr || !config.build.reportCompressedSize) {\n            return '';\n        }\n        return ` / gzip: ${((await compress(typeof code === 'string' ? code : Buffer.from(code)))\n            .length / 1024).toFixed(2)} KiB`;\n    }\n    function printFileInfo(filePath, content, type, maxLength, outDir = config.build.outDir, compressedSize = '') {\n        outDir =\n            normalizePath$3(path$n.relative(config.root, path$n.resolve(config.root, outDir))) + '/';\n        const kibs = content.length / 1024;\n        const sizeColor = kibs > chunkLimit ? picocolors.exports.yellow : picocolors.exports.dim;\n        config.logger.info(`${picocolors.exports.gray(picocolors.exports.white(picocolors.exports.dim(outDir)))}${writeColors[type](filePath.padEnd(maxLength + 2))} ${sizeColor(`${kibs.toFixed(2)} KiB${compressedSize}`)}`);\n    }\n    const tty = process.stdout.isTTY && !process.env.CI;\n    const shouldLogInfo = LogLevels[config.logLevel || 'info'] >= LogLevels.info;\n    let hasTransformed = false;\n    let hasRenderedChunk = false;\n    let transformedCount = 0;\n    let chunkCount = 0;\n    const logTransform = throttle((id) => {\n        writeLine(`transforming (${transformedCount}) ${picocolors.exports.dim(path$n.relative(config.root, id))}`);\n    });\n    return {\n        name: 'vite:reporter',\n        transform(_, id) {\n            transformedCount++;\n            if (shouldLogInfo) {\n                if (!tty) {\n                    if (!hasTransformed) {\n                        config.logger.info(`transforming...`);\n                    }\n                }\n                else {\n                    if (id.includes(`?`))\n                        return;\n                    logTransform(id);\n                }\n                hasTransformed = true;\n            }\n            return null;\n        },\n        buildEnd() {\n            if (shouldLogInfo) {\n                if (tty) {\n                    process.stdout.clearLine(0);\n                    process.stdout.cursorTo(0);\n                }\n                config.logger.info(`${picocolors.exports.green(`\u2713`)} ${transformedCount} modules transformed.`);\n            }\n        },\n        renderStart() {\n            chunkCount = 0;\n        },\n        renderChunk() {\n            chunkCount++;\n            if (shouldLogInfo) {\n                if (!tty) {\n                    if (!hasRenderedChunk) {\n                        config.logger.info('rendering chunks...');\n                    }\n                }\n                else {\n                    writeLine(`rendering chunks (${chunkCount})...`);\n                }\n                hasRenderedChunk = true;\n            }\n            return null;\n        },\n        generateBundle() {\n            if (shouldLogInfo && tty) {\n                process.stdout.clearLine(0);\n                process.stdout.cursorTo(0);\n            }\n        },\n        async writeBundle({ dir: outDir }, output) {\n            let hasLargeChunks = false;\n            if (shouldLogInfo) {\n                let longest = 0;\n                for (const file in output) {\n                    const l = output[file].fileName.length;\n                    if (l > longest)\n                        longest = l;\n                }\n                // large chunks are deferred to be logged at the end so they are more\n                // visible.\n                const deferredLogs = [];\n                await Promise.all(Object.keys(output).map(async (file) => {\n                    const chunk = output[file];\n                    if (chunk.type === 'chunk') {\n                        const log = async () => {\n                            printFileInfo(chunk.fileName, chunk.code, 0 /* JS */, longest, outDir, await getCompressedSize(chunk.code));\n                            if (chunk.map) {\n                                printFileInfo(chunk.fileName + '.map', chunk.map.toString(), 4 /* SOURCE_MAP */, longest, outDir);\n                            }\n                        };\n                        if (isLarge(chunk.code)) {\n                            hasLargeChunks = true;\n                            deferredLogs.push(log);\n                        }\n                        else {\n                            await log();\n                        }\n                    }\n                    else if (chunk.source) {\n                        const isCSS = chunk.fileName.endsWith('.css');\n                        const isMap = chunk.fileName.endsWith('.js.map');\n                        printFileInfo(chunk.fileName, chunk.source, isCSS\n                            ? 1 /* CSS */\n                            : isMap\n                                ? 4 /* SOURCE_MAP */\n                                : 2 /* ASSET */, longest, outDir, isCSS ? await getCompressedSize(chunk.source) : undefined);\n                    }\n                }));\n                await Promise.all(deferredLogs.map((l) => l()));\n            }\n            else {\n                hasLargeChunks = Object.keys(output).some((file) => {\n                    const chunk = output[file];\n                    return chunk.type === 'chunk' && chunk.code.length / 1024 > chunkLimit;\n                });\n            }\n            if (hasLargeChunks &&\n                config.build.minify &&\n                !config.build.lib &&\n                !config.build.ssr) {\n                config.logger.warn(picocolors.exports.yellow(`\\n(!) Some chunks are larger than ${chunkLimit} KiB after minification. Consider:\\n` +\n                    `- Using dynamic import() to code-split the application\\n` +\n                    `- Use build.rollupOptions.output.manualChunks to improve chunking: https://rollupjs.org/guide/en/#outputmanualchunks\\n` +\n                    `- Adjust chunk size limit for this warning via build.chunkSizeWarningLimit.`));\n            }\n        }\n    };\n}\nfunction writeLine(output) {\n    process.stdout.clearLine(0);\n    process.stdout.cursorTo(0);\n    if (output.length < process.stdout.columns) {\n        process.stdout.write(output);\n    }\n    else {\n        process.stdout.write(output.substring(0, process.stdout.columns - 1));\n    }\n}\nfunction throttle(fn) {\n    let timerHandle = null;\n    return (...args) => {\n        if (timerHandle)\n            return;\n        fn(...args);\n        timerHandle = setTimeout(() => {\n            timerHandle = null;\n        }, 100);\n    };\n}\n\nvar __defProp = Object.defineProperty;\nvar __defProps = Object.defineProperties;\nvar __getOwnPropDescs = Object.getOwnPropertyDescriptors;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {}))\n    if (__hasOwnProp.call(b, prop))\n      __defNormalProp(a, prop, b[prop]);\n  if (__getOwnPropSymbols)\n    for (var prop of __getOwnPropSymbols(b)) {\n      if (__propIsEnum.call(b, prop))\n        __defNormalProp(a, prop, b[prop]);\n    }\n  return a;\n};\nvar __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));\nasync function find(filename, options) {\n  let dir = require$$0$4.dirname(require$$0$4.resolve(filename));\n  const root = (options == null ? void 0 : options.root) ? require$$0$4.resolve(options.root) : null;\n  while (dir) {\n    const tsconfig = await tsconfigInDir(dir, options);\n    if (tsconfig) {\n      return tsconfig;\n    } else {\n      if (root === dir) {\n        break;\n      }\n      const parent = require$$0$4.dirname(dir);\n      if (parent === dir) {\n        break;\n      } else {\n        dir = parent;\n      }\n    }\n  }\n  throw new Error(`no tsconfig file found for ${filename}`);\n}\nasync function tsconfigInDir(dir, options) {\n  const tsconfig = require$$0$4.join(dir, \"tsconfig.json\");\n  if (options == null ? void 0 : options.tsConfigPaths) {\n    return options.tsConfigPaths.has(tsconfig) ? tsconfig : void 0;\n  }\n  try {\n    const stat = await promises$1.stat(tsconfig);\n    if (stat.isFile() || stat.isFIFO()) {\n      return tsconfig;\n    }\n  } catch (e) {\n    if (e.code !== \"ENOENT\") {\n      throw e;\n    }\n  }\n}\nasync function findAll(dir, options) {\n  const files = [];\n  for await (const tsconfigFile of findTSConfig(require$$0$4.resolve(dir), options)) {\n    files.push(tsconfigFile);\n  }\n  return files;\n}\nasync function* findTSConfig(dir, options, visited = /* @__PURE__ */ new Set()) {\n  if (!visited.has(dir)) {\n    visited.add(dir);\n    try {\n      const dirents = await promises$1.readdir(dir, { withFileTypes: true });\n      for (const dirent of dirents) {\n        if (dirent.isDirectory() && (!(options == null ? void 0 : options.skip) || !options.skip(dirent.name))) {\n          yield* findTSConfig(require$$0$4.resolve(dir, dirent.name), options, visited);\n        } else if (dirent.isFile() && dirent.name === \"tsconfig.json\") {\n          yield require$$0$4.resolve(dir, dirent.name);\n        }\n      }\n    } catch (e) {\n      if (e.code === \"EACCES\" || e.code === \"ENOENT\") {\n        return;\n      }\n      throw e;\n    }\n  }\n}\n\n// src/to-json.ts\nfunction toJson(tsconfigJson) {\n  const stripped = stripDanglingComma(stripJsonComments(stripBom(tsconfigJson)));\n  if (stripped.trim() === \"\") {\n    return \"{}\";\n  } else {\n    return stripped;\n  }\n}\nfunction stripDanglingComma(pseudoJson) {\n  let insideString = false;\n  let offset = 0;\n  let result = \"\";\n  let danglingCommaPos = null;\n  for (let i = 0; i < pseudoJson.length; i++) {\n    const currentCharacter = pseudoJson[i];\n    if (currentCharacter === '\"') {\n      const escaped = isEscaped(pseudoJson, i);\n      if (!escaped) {\n        insideString = !insideString;\n      }\n    }\n    if (insideString) {\n      danglingCommaPos = null;\n      continue;\n    }\n    if (currentCharacter === \",\") {\n      danglingCommaPos = i;\n      continue;\n    }\n    if (danglingCommaPos) {\n      if (currentCharacter === \"}\" || currentCharacter === \"]\") {\n        result += pseudoJson.slice(offset, danglingCommaPos) + \" \";\n        offset = danglingCommaPos + 1;\n        danglingCommaPos = null;\n      } else if (!currentCharacter.match(/\\s/)) {\n        danglingCommaPos = null;\n      }\n    }\n  }\n  return result + pseudoJson.substring(offset);\n}\nfunction isEscaped(jsonString, quotePosition) {\n  let index = quotePosition - 1;\n  let backslashCount = 0;\n  while (jsonString[index] === \"\\\\\") {\n    index -= 1;\n    backslashCount += 1;\n  }\n  return Boolean(backslashCount % 2);\n}\nfunction strip(string, start, end) {\n  return string.slice(start, end).replace(/\\S/g, \" \");\n}\nvar singleComment = Symbol(\"singleComment\");\nvar multiComment = Symbol(\"multiComment\");\nfunction stripJsonComments(jsonString) {\n  let isInsideString = false;\n  let isInsideComment = false;\n  let offset = 0;\n  let result = \"\";\n  for (let index = 0; index < jsonString.length; index++) {\n    const currentCharacter = jsonString[index];\n    const nextCharacter = jsonString[index + 1];\n    if (!isInsideComment && currentCharacter === '\"') {\n      const escaped = isEscaped(jsonString, index);\n      if (!escaped) {\n        isInsideString = !isInsideString;\n      }\n    }\n    if (isInsideString) {\n      continue;\n    }\n    if (!isInsideComment && currentCharacter + nextCharacter === \"//\") {\n      result += jsonString.slice(offset, index);\n      offset = index;\n      isInsideComment = singleComment;\n      index++;\n    } else if (isInsideComment === singleComment && currentCharacter + nextCharacter === \"\\r\\n\") {\n      index++;\n      isInsideComment = false;\n      result += strip(jsonString, offset, index);\n      offset = index;\n    } else if (isInsideComment === singleComment && currentCharacter === \"\\n\") {\n      isInsideComment = false;\n      result += strip(jsonString, offset, index);\n      offset = index;\n    } else if (!isInsideComment && currentCharacter + nextCharacter === \"/*\") {\n      result += jsonString.slice(offset, index);\n      offset = index;\n      isInsideComment = multiComment;\n      index++;\n    } else if (isInsideComment === multiComment && currentCharacter + nextCharacter === \"*/\") {\n      index++;\n      isInsideComment = false;\n      result += strip(jsonString, offset, index + 1);\n      offset = index + 1;\n    }\n  }\n  return result + (isInsideComment ? strip(jsonString.slice(offset)) : jsonString.slice(offset));\n}\nfunction stripBom(string) {\n  if (string.charCodeAt(0) === 65279) {\n    return string.slice(1);\n  }\n  return string;\n}\nvar POSIX_SEP_RE = new RegExp(\"\\\\\" + require$$0$4.posix.sep, \"g\");\nvar NATIVE_SEP_RE = new RegExp(\"\\\\\" + require$$0$4.sep, \"g\");\nvar PATTERN_REGEX_CACHE = /* @__PURE__ */ new Map();\nvar GLOB_ALL_PATTERN = `**/*`;\nvar DEFAULT_EXTENSIONS = [\".ts\", \".tsx\", \".mts\", \".cts\"];\nvar DEFAULT_EXTENSIONS_RE_GROUP = `\\\\.(?:${DEFAULT_EXTENSIONS.map((ext) => ext.substring(1)).join(\"|\")})`;\nnew Function(\"path\", \"return import(path).then(m => m.default)\");\nasync function resolveTSConfig(filename) {\n  if (require$$0$4.extname(filename) !== \".json\") {\n    return;\n  }\n  const tsconfig = require$$0$4.resolve(filename);\n  try {\n    const stat = await promises$1.stat(tsconfig);\n    if (stat.isFile() || stat.isFIFO()) {\n      return tsconfig;\n    }\n  } catch (e) {\n    if (e.code !== \"ENOENT\") {\n      throw e;\n    }\n  }\n  throw new Error(`no tsconfig file found for ${filename}`);\n}\nfunction posix2native(filename) {\n  return require$$0$4.posix.sep !== require$$0$4.sep && filename.includes(require$$0$4.posix.sep) ? filename.replace(POSIX_SEP_RE, require$$0$4.sep) : filename;\n}\nfunction native2posix(filename) {\n  return require$$0$4.posix.sep !== require$$0$4.sep && filename.includes(require$$0$4.sep) ? filename.replace(NATIVE_SEP_RE, require$$0$4.posix.sep) : filename;\n}\nfunction resolve2posix(dir, filename) {\n  if (require$$0$4.sep === require$$0$4.posix.sep) {\n    return dir ? require$$0$4.resolve(dir, filename) : require$$0$4.resolve(filename);\n  }\n  return native2posix(dir ? require$$0$4.resolve(posix2native(dir), posix2native(filename)) : require$$0$4.resolve(posix2native(filename)));\n}\nfunction resolveReferencedTSConfigFiles(result) {\n  const dir = require$$0$4.dirname(result.tsconfigFile);\n  return result.tsconfig.references.map((ref) => {\n    const refPath = ref.path.endsWith(\".json\") ? ref.path : require$$0$4.join(ref.path, \"tsconfig.json\");\n    return resolve2posix(dir, refPath);\n  });\n}\nfunction resolveSolutionTSConfig(filename, result) {\n  if (result.referenced && DEFAULT_EXTENSIONS.some((ext) => filename.endsWith(ext)) && !isIncluded(filename, result)) {\n    const solutionTSConfig = result.referenced.find((referenced) => isIncluded(filename, referenced));\n    if (solutionTSConfig) {\n      return __spreadProps(__spreadValues({}, solutionTSConfig), {\n        solution: result\n      });\n    }\n  }\n  return result;\n}\nfunction isIncluded(filename, result) {\n  const dir = native2posix(require$$0$4.dirname(result.tsconfigFile));\n  const files = (result.tsconfig.files || []).map((file) => resolve2posix(dir, file));\n  const absoluteFilename = resolve2posix(null, filename);\n  if (files.includes(filename)) {\n    return true;\n  }\n  const isIncluded2 = isGlobMatch(absoluteFilename, dir, result.tsconfig.include || (result.tsconfig.files ? [] : [GLOB_ALL_PATTERN]));\n  if (isIncluded2) {\n    const isExcluded = isGlobMatch(absoluteFilename, dir, result.tsconfig.exclude || []);\n    return !isExcluded;\n  }\n  return false;\n}\nfunction isGlobMatch(filename, dir, patterns) {\n  return patterns.some((pattern) => {\n    let lastWildcardIndex = pattern.length;\n    let hasWildcard = false;\n    for (let i = pattern.length - 1; i > -1; i--) {\n      if (pattern[i] === \"*\" || pattern[i] === \"?\") {\n        lastWildcardIndex = i;\n        hasWildcard = true;\n        break;\n      }\n    }\n    if (lastWildcardIndex < pattern.length - 1 && !filename.endsWith(pattern.slice(lastWildcardIndex + 1))) {\n      return false;\n    }\n    if (pattern.endsWith(\"*\") && !DEFAULT_EXTENSIONS.some((ext) => filename.endsWith(ext))) {\n      return false;\n    }\n    if (pattern === GLOB_ALL_PATTERN) {\n      return filename.startsWith(`${dir}/`);\n    }\n    const resolvedPattern = resolve2posix(dir, pattern);\n    let firstWildcardIndex = -1;\n    for (let i = 0; i < resolvedPattern.length; i++) {\n      if (resolvedPattern[i] === \"*\" || resolvedPattern[i] === \"?\") {\n        firstWildcardIndex = i;\n        hasWildcard = true;\n        break;\n      }\n    }\n    if (firstWildcardIndex > 1 && !filename.startsWith(resolvedPattern.slice(0, firstWildcardIndex - 1))) {\n      return false;\n    }\n    if (!hasWildcard) {\n      return filename === resolvedPattern;\n    }\n    if (PATTERN_REGEX_CACHE.has(resolvedPattern)) {\n      return PATTERN_REGEX_CACHE.get(resolvedPattern).test(filename);\n    }\n    const regex = pattern2regex(resolvedPattern);\n    PATTERN_REGEX_CACHE.set(resolvedPattern, regex);\n    return regex.test(filename);\n  });\n}\nfunction pattern2regex(resolvedPattern) {\n  let regexStr = \"^\";\n  for (let i = 0; i < resolvedPattern.length; i++) {\n    const char = resolvedPattern[i];\n    if (char === \"?\") {\n      regexStr += \"[^\\\\/]\";\n      continue;\n    }\n    if (char === \"*\") {\n      if (resolvedPattern[i + 1] === \"*\" && resolvedPattern[i + 2] === \"/\") {\n        i += 2;\n        regexStr += \"(?:[^\\\\/]*\\\\/)*\";\n        continue;\n      }\n      regexStr += \"[^\\\\/]*\";\n      continue;\n    }\n    if (\"/.+^${}()|[]\\\\\".includes(char)) {\n      regexStr += `\\\\`;\n    }\n    regexStr += char;\n  }\n  if (resolvedPattern.endsWith(\"*\")) {\n    regexStr += DEFAULT_EXTENSIONS_RE_GROUP;\n  }\n  regexStr += \"$\";\n  return new RegExp(regexStr);\n}\n\n// src/parse.ts\nasync function parse$g(filename, options) {\n  const cache = options == null ? void 0 : options.cache;\n  if (cache == null ? void 0 : cache.has(filename)) {\n    return cache.get(filename);\n  }\n  let tsconfigFile;\n  if (options == null ? void 0 : options.resolveWithEmptyIfConfigNotFound) {\n    try {\n      tsconfigFile = await resolveTSConfig(filename) || await find(filename, options);\n    } catch (e) {\n      const notFoundResult = {\n        tsconfigFile: \"no_tsconfig_file_found\",\n        tsconfig: {}\n      };\n      cache == null ? void 0 : cache.set(filename, notFoundResult);\n      return notFoundResult;\n    }\n  } else {\n    tsconfigFile = await resolveTSConfig(filename) || await find(filename, options);\n  }\n  let result;\n  if (cache == null ? void 0 : cache.has(tsconfigFile)) {\n    result = cache.get(tsconfigFile);\n  } else {\n    result = await parseFile$1(tsconfigFile, cache);\n    await Promise.all([parseExtends(result, cache), parseReferences(result, cache)]);\n    cache == null ? void 0 : cache.set(tsconfigFile, result);\n  }\n  result = resolveSolutionTSConfig(filename, result);\n  cache == null ? void 0 : cache.set(filename, result);\n  return result;\n}\nasync function parseFile$1(tsconfigFile, cache) {\n  if (cache == null ? void 0 : cache.has(tsconfigFile)) {\n    return cache.get(tsconfigFile);\n  }\n  try {\n    const tsconfigJson = await promises$1.readFile(tsconfigFile, \"utf-8\");\n    const json = toJson(tsconfigJson);\n    const result = {\n      tsconfigFile,\n      tsconfig: normalizeTSConfig(JSON.parse(json), require$$0$4.dirname(tsconfigFile))\n    };\n    cache == null ? void 0 : cache.set(tsconfigFile, result);\n    return result;\n  } catch (e) {\n    throw new TSConfckParseError(`parsing ${tsconfigFile} failed: ${e}`, \"PARSE_FILE\", tsconfigFile, e);\n  }\n}\nfunction normalizeTSConfig(tsconfig, dir) {\n  var _a;\n  if (((_a = tsconfig.compilerOptions) == null ? void 0 : _a.baseUrl) && !require$$0$4.isAbsolute(tsconfig.compilerOptions.baseUrl)) {\n    tsconfig.compilerOptions.baseUrl = resolve2posix(dir, tsconfig.compilerOptions.baseUrl);\n  }\n  return tsconfig;\n}\nasync function parseReferences(result, cache) {\n  if (!result.tsconfig.references) {\n    return;\n  }\n  const referencedFiles = resolveReferencedTSConfigFiles(result);\n  const referenced = await Promise.all(referencedFiles.map((file) => parseFile$1(file, cache)));\n  await Promise.all(referenced.map((ref) => parseExtends(ref, cache)));\n  result.referenced = referenced;\n}\nasync function parseExtends(result, cache) {\n  if (!result.tsconfig.extends) {\n    return;\n  }\n  const extended = [\n    { tsconfigFile: result.tsconfigFile, tsconfig: JSON.parse(JSON.stringify(result.tsconfig)) }\n  ];\n  while (extended[extended.length - 1].tsconfig.extends) {\n    const extending = extended[extended.length - 1];\n    const extendedTSConfigFile = resolveExtends(extending.tsconfig.extends, extending.tsconfigFile);\n    if (extended.some((x) => x.tsconfigFile === extendedTSConfigFile)) {\n      const circle = extended.concat({ tsconfigFile: extendedTSConfigFile, tsconfig: null }).map((e) => e.tsconfigFile).join(\" -> \");\n      throw new TSConfckParseError(`Circular dependency in \"extends\": ${circle}`, \"EXTENDS_CIRCULAR\", result.tsconfigFile);\n    }\n    extended.push(await parseFile$1(extendedTSConfigFile, cache));\n  }\n  result.extended = extended;\n  for (const ext of result.extended.slice(1)) {\n    extendTSConfig(result, ext);\n  }\n}\nfunction resolveExtends(extended, from) {\n  let error;\n  try {\n    return createRequire$2(from).resolve(extended);\n  } catch (e) {\n    error = e;\n  }\n  if (!require$$0$4.isAbsolute(extended) && !extended.startsWith(\"./\") && !extended.startsWith(\"../\")) {\n    try {\n      const fallbackExtended = require$$0$4.join(extended, \"tsconfig.json\");\n      return createRequire$2(from).resolve(fallbackExtended);\n    } catch (e) {\n      error = e;\n    }\n  }\n  throw new TSConfckParseError(`failed to resolve \"extends\":\"${extended}\" in ${from}`, \"EXTENDS_RESOLVE\", from, error);\n}\nvar EXTENDABLE_KEYS = [\n  \"compilerOptions\",\n  \"files\",\n  \"include\",\n  \"exclude\",\n  \"watchOptions\",\n  \"compileOnSave\",\n  \"typeAcquisition\",\n  \"buildOptions\"\n];\nfunction extendTSConfig(extending, extended) {\n  const extendingConfig = extending.tsconfig;\n  const extendedConfig = extended.tsconfig;\n  const relativePath = native2posix(require$$0$4.relative(require$$0$4.dirname(extending.tsconfigFile), require$$0$4.dirname(extended.tsconfigFile)));\n  for (const key of Object.keys(extendedConfig).filter((key2) => EXTENDABLE_KEYS.includes(key2))) {\n    if (key === \"compilerOptions\") {\n      if (!extendingConfig.compilerOptions) {\n        extendingConfig.compilerOptions = {};\n      }\n      for (const option of Object.keys(extendedConfig.compilerOptions)) {\n        if (Object.prototype.hasOwnProperty.call(extendingConfig.compilerOptions, option)) {\n          continue;\n        }\n        extendingConfig.compilerOptions[option] = rebaseRelative(option, extendedConfig.compilerOptions[option], relativePath);\n      }\n    } else if (extendingConfig[key] === void 0) {\n      if (key === \"watchOptions\") {\n        extendingConfig.watchOptions = {};\n        for (const option of Object.keys(extendedConfig.watchOptions)) {\n          extendingConfig.watchOptions[option] = rebaseRelative(option, extendedConfig.watchOptions[option], relativePath);\n        }\n      } else {\n        extendingConfig[key] = rebaseRelative(key, extendedConfig[key], relativePath);\n      }\n    }\n  }\n}\nvar REBASE_KEYS = [\n  \"files\",\n  \"include\",\n  \"exclude\",\n  \"baseUrl\",\n  \"rootDir\",\n  \"rootDirs\",\n  \"typeRoots\",\n  \"outDir\",\n  \"outFile\",\n  \"declarationDir\",\n  \"excludeDirectories\",\n  \"excludeFiles\"\n];\nfunction rebaseRelative(key, value, prependPath) {\n  if (!REBASE_KEYS.includes(key)) {\n    return value;\n  }\n  if (Array.isArray(value)) {\n    return value.map((x) => rebasePath(x, prependPath));\n  } else {\n    return rebasePath(value, prependPath);\n  }\n}\nfunction rebasePath(value, prependPath) {\n  if (require$$0$4.isAbsolute(value)) {\n    return value;\n  } else {\n    return require$$0$4.posix.normalize(require$$0$4.posix.join(prependPath, value));\n  }\n}\nvar TSConfckParseError = class extends Error {\n  constructor(message, code, tsconfigFile, cause) {\n    super(message);\n    Object.setPrototypeOf(this, TSConfckParseError.prototype);\n    this.name = TSConfckParseError.name;\n    this.code = code;\n    this.cause = cause;\n    this.tsconfigFile = tsconfigFile;\n  }\n};\n\nconst debug$f = createDebugger('vite:esbuild');\nconst INJECT_HELPERS_IIFE_RE = /^(.*)((?:const|var) [^\\s]+=function\\([^)]*?\\){\"use strict\";)/s;\nconst INJECT_HELPERS_UMD_RE = /^(.*)(\\(function\\([^)]*?\\){.+amd.+function\\([^)]*?\\){\"use strict\";)/s;\nlet server;\nasync function transformWithEsbuild(code, filename, options, inMap) {\n    let loader = options?.loader;\n    if (!loader) {\n        // if the id ends with a valid ext, use it (e.g. vue blocks)\n        // otherwise, cleanup the query before checking the ext\n        const ext = path$n\n            .extname(/\\.\\w+$/.test(filename) ? filename : cleanUrl(filename))\n            .slice(1);\n        if (ext === 'cjs' || ext === 'mjs') {\n            loader = 'js';\n        }\n        else if (ext === 'cts' || ext === 'mts') {\n            loader = 'ts';\n        }\n        else {\n            loader = ext;\n        }\n    }\n    let tsconfigRaw = options?.tsconfigRaw;\n    // if options provide tsconfigRaw in string, it takes highest precedence\n    if (typeof tsconfigRaw !== 'string') {\n        // these fields would affect the compilation result\n        // https://esbuild.github.io/content-types/#tsconfig-json\n        const meaningfulFields = [\n            'target',\n            'jsxFactory',\n            'jsxFragmentFactory',\n            'useDefineForClassFields',\n            'importsNotUsedAsValues',\n            'preserveValueImports'\n        ];\n        const compilerOptionsForFile = {};\n        if (loader === 'ts' || loader === 'tsx') {\n            const loadedTsconfig = await loadTsconfigJsonForFile(filename);\n            const loadedCompilerOptions = loadedTsconfig.compilerOptions ?? {};\n            for (const field of meaningfulFields) {\n                if (field in loadedCompilerOptions) {\n                    // @ts-ignore TypeScript can't tell they are of the same type\n                    compilerOptionsForFile[field] = loadedCompilerOptions[field];\n                }\n            }\n        }\n        tsconfigRaw = {\n            ...tsconfigRaw,\n            compilerOptions: {\n                ...compilerOptionsForFile,\n                ...tsconfigRaw?.compilerOptions\n            }\n        };\n    }\n    const resolvedOptions = {\n        sourcemap: true,\n        // ensure source file name contains full query\n        sourcefile: filename,\n        ...options,\n        loader,\n        tsconfigRaw\n    };\n    delete resolvedOptions.include;\n    delete resolvedOptions.exclude;\n    delete resolvedOptions.jsxInject;\n    try {\n        const result = await transform$2(code, resolvedOptions);\n        let map;\n        if (inMap && resolvedOptions.sourcemap) {\n            const nextMap = JSON.parse(result.map);\n            nextMap.sourcesContent = [];\n            map = combineSourcemaps(filename, [\n                nextMap,\n                inMap\n            ]);\n        }\n        else {\n            map = resolvedOptions.sourcemap\n                ? JSON.parse(result.map)\n                : { mappings: '' };\n        }\n        if (Array.isArray(map.sources)) {\n            map.sources = map.sources.map((it) => toUpperCaseDriveLetter(it));\n        }\n        return {\n            ...result,\n            map\n        };\n    }\n    catch (e) {\n        debug$f(`esbuild error with options used: `, resolvedOptions);\n        // patch error information\n        if (e.errors) {\n            e.frame = '';\n            e.errors.forEach((m) => {\n                e.frame += `\\n` + prettifyMessage(m, code);\n            });\n            e.loc = e.errors[0].location;\n        }\n        throw e;\n    }\n}\nfunction esbuildPlugin(options = {}) {\n    const filter = createFilter(options.include || /\\.(m?ts|[jt]sx)$/, options.exclude || /\\.js$/);\n    // Remove optimization options for dev as we only need to transpile them,\n    // and for build as the final optimization is in `buildEsbuildPlugin`\n    const transformOptions = {\n        ...options,\n        minify: false,\n        minifyIdentifiers: false,\n        minifySyntax: false,\n        minifyWhitespace: false,\n        treeShaking: false,\n        // keepNames is not needed when minify is disabled.\n        // Also transforming multiple times with keepNames enabled breaks\n        // tree-shaking. (#9164)\n        keepNames: false\n    };\n    return {\n        name: 'vite:esbuild',\n        configureServer(_server) {\n            server = _server;\n            server.watcher\n                .on('add', reloadOnTsconfigChange)\n                .on('change', reloadOnTsconfigChange)\n                .on('unlink', reloadOnTsconfigChange);\n        },\n        async configResolved(config) {\n            await initTSConfck(config);\n        },\n        buildEnd() {\n            // recycle serve to avoid preventing Node self-exit (#6815)\n            server = null;\n        },\n        async transform(code, id) {\n            if (filter(id) || filter(cleanUrl(id))) {\n                const result = await transformWithEsbuild(code, id, transformOptions);\n                if (result.warnings.length) {\n                    result.warnings.forEach((m) => {\n                        this.warn(prettifyMessage(m, code));\n                    });\n                }\n                if (options.jsxInject && /\\.(?:j|t)sx\\b/.test(id)) {\n                    result.code = options.jsxInject + ';' + result.code;\n                }\n                return {\n                    code: result.code,\n                    map: result.map\n                };\n            }\n        }\n    };\n}\nconst rollupToEsbuildFormatMap = {\n    es: 'esm',\n    cjs: 'cjs',\n    // passing `var Lib = (() => {})()` to esbuild with format = \"iife\"\n    // will turn it to `(() => { var Lib = (() => {})() })()`,\n    // so we remove the format config to tell esbuild not doing this\n    //\n    // although esbuild doesn't change format, there is still possibility\n    // that `{ treeShaking: true }` removes a top-level no-side-effect variable\n    // like: `var Lib = 1`, which becomes `` after esbuild transforming,\n    // but thankfully rollup does not do this optimization now\n    iife: undefined\n};\nconst buildEsbuildPlugin = (config) => {\n    return {\n        name: 'vite:esbuild-transpile',\n        async configResolved(config) {\n            await initTSConfck(config);\n        },\n        async renderChunk(code, chunk, opts) {\n            // @ts-ignore injected by @vitejs/plugin-legacy\n            if (opts.__vite_skip_esbuild__) {\n                return null;\n            }\n            const options = resolveEsbuildTranspileOptions(config, opts.format);\n            if (!options) {\n                return null;\n            }\n            const res = await transformWithEsbuild(code, chunk.fileName, options);\n            if (config.build.lib) {\n                // #7188, esbuild adds helpers out of the UMD and IIFE wrappers, and the\n                // names are minified potentially causing collision with other globals.\n                // We use a regex to inject the helpers inside the wrappers.\n                // We don't need to create a MagicString here because both the helpers and\n                // the headers don't modify the sourcemap\n                const injectHelpers = opts.format === 'umd'\n                    ? INJECT_HELPERS_UMD_RE\n                    : opts.format === 'iife'\n                        ? INJECT_HELPERS_IIFE_RE\n                        : undefined;\n                if (injectHelpers) {\n                    res.code = res.code.replace(injectHelpers, (_, helpers, header) => header + helpers);\n                }\n            }\n            return res;\n        }\n    };\n};\nfunction resolveEsbuildTranspileOptions(config, format) {\n    const target = config.build.target;\n    const minify = config.build.minify === 'esbuild';\n    if ((!target || target === 'esnext') && !minify) {\n        return null;\n    }\n    // Do not minify whitespace for ES lib output since that would remove\n    // pure annotations and break tree-shaking\n    // https://github.com/vuejs/core/issues/2860#issuecomment-926882793\n    const isEsLibBuild = config.build.lib && format === 'es';\n    const esbuildOptions = config.esbuild || {};\n    const options = {\n        ...esbuildOptions,\n        target: target || undefined,\n        format: rollupToEsbuildFormatMap[format],\n        // the final build should always support dynamic import and import.meta.\n        // if they need to be polyfilled, plugin-legacy should be used.\n        // plugin-legacy detects these two features when checking for modern code.\n        supported: {\n            'dynamic-import': true,\n            'import-meta': true,\n            ...esbuildOptions.supported\n        }\n    };\n    // If no minify, disable all minify options\n    if (!minify) {\n        return {\n            ...options,\n            minify: false,\n            minifyIdentifiers: false,\n            minifySyntax: false,\n            minifyWhitespace: false,\n            treeShaking: false\n        };\n    }\n    // If user enable fine-grain minify options, minify with their options instead\n    if (options.minifyIdentifiers != null ||\n        options.minifySyntax != null ||\n        options.minifyWhitespace != null) {\n        if (isEsLibBuild) {\n            // Disable minify whitespace as it breaks tree-shaking\n            return {\n                ...options,\n                minify: false,\n                minifyIdentifiers: options.minifyIdentifiers ?? true,\n                minifySyntax: options.minifySyntax ?? true,\n                minifyWhitespace: false,\n                treeShaking: true\n            };\n        }\n        else {\n            return {\n                ...options,\n                minify: false,\n                minifyIdentifiers: options.minifyIdentifiers ?? true,\n                minifySyntax: options.minifySyntax ?? true,\n                minifyWhitespace: options.minifyWhitespace ?? true,\n                treeShaking: true\n            };\n        }\n    }\n    // Else apply default minify options\n    if (isEsLibBuild) {\n        // Minify all except whitespace as it breaks tree-shaking\n        return {\n            ...options,\n            minify: false,\n            minifyIdentifiers: true,\n            minifySyntax: true,\n            minifyWhitespace: false,\n            treeShaking: true\n        };\n    }\n    else {\n        return {\n            ...options,\n            minify: true,\n            treeShaking: true\n        };\n    }\n}\nfunction prettifyMessage(m, code) {\n    let res = picocolors.exports.yellow(m.text);\n    if (m.location) {\n        const lines = code.split(/\\r?\\n/g);\n        const line = Number(m.location.line);\n        const column = Number(m.location.column);\n        const offset = lines\n            .slice(0, line - 1)\n            .map((l) => l.length)\n            .reduce((total, l) => total + l + 1, 0) + column;\n        res += `\\n` + generateCodeFrame(code, offset, offset + 1);\n    }\n    return res + `\\n`;\n}\nconst tsconfckParseOptions = {\n    cache: new Map(),\n    tsConfigPaths: undefined,\n    root: undefined,\n    resolveWithEmptyIfConfigNotFound: true\n};\nasync function initTSConfck(config) {\n    tsconfckParseOptions.cache.clear();\n    const workspaceRoot = searchForWorkspaceRoot(config.root);\n    tsconfckParseOptions.root = workspaceRoot;\n    tsconfckParseOptions.tsConfigPaths = new Set([\n        ...(await findAll(workspaceRoot, {\n            skip: (dir) => dir === 'node_modules' || dir === '.git'\n        }))\n    ]);\n}\nasync function loadTsconfigJsonForFile(filename) {\n    try {\n        const result = await parse$g(filename, tsconfckParseOptions);\n        // tsconfig could be out of root, make sure it is watched on dev\n        if (server && result.tsconfigFile !== 'no_tsconfig_file_found') {\n            ensureWatchedFile(server.watcher, result.tsconfigFile, server.config.root);\n        }\n        return result.tsconfig;\n    }\n    catch (e) {\n        if (e instanceof TSConfckParseError) {\n            // tsconfig could be out of root, make sure it is watched on dev\n            if (server && e.tsconfigFile) {\n                ensureWatchedFile(server.watcher, e.tsconfigFile, server.config.root);\n            }\n        }\n        throw e;\n    }\n}\nfunction reloadOnTsconfigChange(changedFile) {\n    // any tsconfig.json that's added in the workspace could be closer to a code file than a previously cached one\n    // any json file in the tsconfig cache could have been used to compile ts\n    if (path$n.basename(changedFile) === 'tsconfig.json' ||\n        (changedFile.endsWith('.json') &&\n            tsconfckParseOptions?.cache?.has(changedFile))) {\n        server.config.logger.info(`changed tsconfig file detected: ${changedFile} - Clearing cache and forcing full-reload to ensure TypeScript is compiled with updated config values.`, { clear: server.config.clearScreen, timestamp: true });\n        // clear module graph to remove code compiled with outdated config\n        server.moduleGraph.invalidateAll();\n        // reset tsconfck so that recompile works with up2date configs\n        initTSConfck(server.config).finally(() => {\n            // server may not be available if vite config is updated at the same time\n            if (server) {\n                // force full reload\n                server.ws.send({\n                    type: 'full-reload',\n                    path: '*'\n                });\n            }\n        });\n    }\n}\n\nvar dist$1 = {};\n\nvar __importDefault = (commonjsGlobal && commonjsGlobal.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(dist$1, \"__esModule\", { value: true });\nvar Worker_1 = dist$1.Worker = void 0;\nconst os_1 = __importDefault(require$$1);\nconst worker_threads_1 = require$$1$1;\nclass Worker {\n    constructor(fn, options = {}) {\n        this.code = genWorkerCode(fn);\n        this.max = options.max || Math.max(1, os_1.default.cpus().length - 1);\n        this.pool = [];\n        this.idlePool = [];\n        this.queue = [];\n    }\n    async run(...args) {\n        const worker = await this._getAvailableWorker();\n        return new Promise((resolve, reject) => {\n            worker.currentResolve = resolve;\n            worker.currentReject = reject;\n            worker.postMessage(args);\n        });\n    }\n    stop() {\n        this.pool.forEach((w) => w.unref());\n        this.queue.forEach(([_, reject]) => reject(new Error('Main worker pool stopped before a worker was available.')));\n        this.pool = [];\n        this.idlePool = [];\n        this.queue = [];\n    }\n    async _getAvailableWorker() {\n        // has idle one?\n        if (this.idlePool.length) {\n            return this.idlePool.shift();\n        }\n        // can spawn more?\n        if (this.pool.length < this.max) {\n            const worker = new worker_threads_1.Worker(this.code, { eval: true });\n            worker.on('message', (res) => {\n                worker.currentResolve && worker.currentResolve(res);\n                worker.currentResolve = null;\n                this._assignDoneWorker(worker);\n            });\n            worker.on('error', (err) => {\n                worker.currentReject && worker.currentReject(err);\n                worker.currentReject = null;\n            });\n            worker.on('exit', (code) => {\n                const i = this.pool.indexOf(worker);\n                if (i > -1)\n                    this.pool.splice(i, 1);\n                if (code !== 0 && worker.currentReject) {\n                    worker.currentReject(new Error(`Wroker stopped with non-0 exit code ${code}`));\n                    worker.currentReject = null;\n                }\n            });\n            this.pool.push(worker);\n            return worker;\n        }\n        // no one is available, we have to wait\n        let resolve;\n        let reject;\n        const onWorkerAvailablePromise = new Promise((r, rj) => {\n            resolve = r;\n            reject = rj;\n        });\n        this.queue.push([resolve, reject]);\n        return onWorkerAvailablePromise;\n    }\n    _assignDoneWorker(worker) {\n        // someone's waiting already?\n        if (this.queue.length) {\n            const [resolve] = this.queue.shift();\n            resolve(worker);\n            return;\n        }\n        // take a rest.\n        this.idlePool.push(worker);\n    }\n}\nWorker_1 = dist$1.Worker = Worker;\nfunction genWorkerCode(fn) {\n    return `\nconst doWork = ${fn.toString()}\n\nconst { parentPort } = require('worker_threads')\n\nparentPort.on('message', async (args) => {\n  const res = await doWork(...args)\n  parentPort.postMessage(res)\n})\n  `;\n}\n\nlet terserPath;\nconst loadTerserPath = (root) => {\n    if (terserPath)\n        return terserPath;\n    try {\n        terserPath = requireResolveFromRootWithFallback(root, 'terser');\n    }\n    catch (e) {\n        if (e.code === 'MODULE_NOT_FOUND') {\n            throw new Error('terser not found. Since Vite v3, terser has become an optional dependency. You need to install it.');\n        }\n        else {\n            const message = new Error(`terser failed to load:\\n${e.message}`);\n            message.stack = e.stack + '\\n' + message.stack;\n            throw message;\n        }\n    }\n    return terserPath;\n};\nfunction terserPlugin(config) {\n    const makeWorker = () => new Worker_1(async (terserPath, code, options) => {\n        // test fails when using `import`. maybe related: https://github.com/nodejs/node/issues/43205\n        // eslint-disable-next-line no-restricted-globals -- this function runs inside cjs\n        const terser = require(terserPath);\n        return terser.minify(code, options);\n    });\n    let worker;\n    return {\n        name: 'vite:terser',\n        async renderChunk(code, _chunk, outputOptions) {\n            // This plugin is included for any non-false value of config.build.minify,\n            // so that normal chunks can use the preferred minifier, and legacy chunks\n            // can use terser.\n            if (config.build.minify !== 'terser' &&\n                // @ts-ignore injected by @vitejs/plugin-legacy\n                !outputOptions.__vite_force_terser__) {\n                return null;\n            }\n            // Do not minify ES lib output since that would remove pure annotations\n            // and break tree-shaking.\n            if (config.build.lib && outputOptions.format === 'es') {\n                return null;\n            }\n            // Lazy load worker.\n            worker || (worker = makeWorker());\n            const terserPath = loadTerserPath(config.root);\n            const res = await worker.run(terserPath, code, {\n                safari10: true,\n                ...config.build.terserOptions,\n                sourceMap: !!outputOptions.sourcemap,\n                module: outputOptions.format.startsWith('es'),\n                toplevel: outputOptions.format === 'cjs'\n            });\n            return {\n                code: res.code,\n                map: res.map\n            };\n        },\n        closeBundle() {\n            worker?.stop();\n        }\n    };\n}\n\nvar tasks = {};\n\nvar utils$g = {};\n\nvar array$1 = {};\n\nObject.defineProperty(array$1, \"__esModule\", { value: true });\narray$1.splitWhen = array$1.flatten = void 0;\nfunction flatten$1(items) {\n    return items.reduce((collection, item) => [].concat(collection, item), []);\n}\narray$1.flatten = flatten$1;\nfunction splitWhen(items, predicate) {\n    const result = [[]];\n    let groupIndex = 0;\n    for (const item of items) {\n        if (predicate(item)) {\n            groupIndex++;\n            result[groupIndex] = [];\n        }\n        else {\n            result[groupIndex].push(item);\n        }\n    }\n    return result;\n}\narray$1.splitWhen = splitWhen;\n\nvar errno$1 = {};\n\nObject.defineProperty(errno$1, \"__esModule\", { value: true });\nerrno$1.isEnoentCodeError = void 0;\nfunction isEnoentCodeError(error) {\n    return error.code === 'ENOENT';\n}\nerrno$1.isEnoentCodeError = isEnoentCodeError;\n\nvar fs$h = {};\n\nObject.defineProperty(fs$h, \"__esModule\", { value: true });\nfs$h.createDirentFromStats = void 0;\nclass DirentFromStats$1 {\n    constructor(name, stats) {\n        this.name = name;\n        this.isBlockDevice = stats.isBlockDevice.bind(stats);\n        this.isCharacterDevice = stats.isCharacterDevice.bind(stats);\n        this.isDirectory = stats.isDirectory.bind(stats);\n        this.isFIFO = stats.isFIFO.bind(stats);\n        this.isFile = stats.isFile.bind(stats);\n        this.isSocket = stats.isSocket.bind(stats);\n        this.isSymbolicLink = stats.isSymbolicLink.bind(stats);\n    }\n}\nfunction createDirentFromStats$1(name, stats) {\n    return new DirentFromStats$1(name, stats);\n}\nfs$h.createDirentFromStats = createDirentFromStats$1;\n\nvar path$h = {};\n\nObject.defineProperty(path$h, \"__esModule\", { value: true });\npath$h.removeLeadingDotSegment = path$h.escape = path$h.makeAbsolute = path$h.unixify = void 0;\nconst path$g = require$$0$4;\nconst LEADING_DOT_SEGMENT_CHARACTERS_COUNT = 2; // ./ or .\\\\\nconst UNESCAPED_GLOB_SYMBOLS_RE = /(\\\\?)([()*?[\\]{|}]|^!|[!+@](?=\\())/g;\n/**\n * Designed to work only with simple paths: `dir\\\\file`.\n */\nfunction unixify(filepath) {\n    return filepath.replace(/\\\\/g, '/');\n}\npath$h.unixify = unixify;\nfunction makeAbsolute(cwd, filepath) {\n    return path$g.resolve(cwd, filepath);\n}\npath$h.makeAbsolute = makeAbsolute;\nfunction escape$2(pattern) {\n    return pattern.replace(UNESCAPED_GLOB_SYMBOLS_RE, '\\\\$2');\n}\npath$h.escape = escape$2;\nfunction removeLeadingDotSegment(entry) {\n    // We do not use `startsWith` because this is 10x slower than current implementation for some cases.\n    // eslint-disable-next-line @typescript-eslint/prefer-string-starts-ends-with\n    if (entry.charAt(0) === '.') {\n        const secondCharactery = entry.charAt(1);\n        if (secondCharactery === '/' || secondCharactery === '\\\\') {\n            return entry.slice(LEADING_DOT_SEGMENT_CHARACTERS_COUNT);\n        }\n    }\n    return entry;\n}\npath$h.removeLeadingDotSegment = removeLeadingDotSegment;\n\nvar pattern$1 = {};\n\n/*!\n * is-extglob <https://github.com/jonschlinkert/is-extglob>\n *\n * Copyright (c) 2014-2016, Jon Schlinkert.\n * Licensed under the MIT License.\n */\n\nvar isExtglob$1 = function isExtglob(str) {\n  if (typeof str !== 'string' || str === '') {\n    return false;\n  }\n\n  var match;\n  while ((match = /(\\\\).|([@?!+*]\\(.*\\))/g.exec(str))) {\n    if (match[2]) return true;\n    str = str.slice(match.index + match[0].length);\n  }\n\n  return false;\n};\n\n/*!\n * is-glob <https://github.com/jonschlinkert/is-glob>\n *\n * Copyright (c) 2014-2017, Jon Schlinkert.\n * Released under the MIT License.\n */\n\nvar isExtglob = isExtglob$1;\nvar chars = { '{': '}', '(': ')', '[': ']'};\nvar strictCheck = function(str) {\n  if (str[0] === '!') {\n    return true;\n  }\n  var index = 0;\n  var pipeIndex = -2;\n  var closeSquareIndex = -2;\n  var closeCurlyIndex = -2;\n  var closeParenIndex = -2;\n  var backSlashIndex = -2;\n  while (index < str.length) {\n    if (str[index] === '*') {\n      return true;\n    }\n\n    if (str[index + 1] === '?' && /[\\].+)]/.test(str[index])) {\n      return true;\n    }\n\n    if (closeSquareIndex !== -1 && str[index] === '[' && str[index + 1] !== ']') {\n      if (closeSquareIndex < index) {\n        closeSquareIndex = str.indexOf(']', index);\n      }\n      if (closeSquareIndex > index) {\n        if (backSlashIndex === -1 || backSlashIndex > closeSquareIndex) {\n          return true;\n        }\n        backSlashIndex = str.indexOf('\\\\', index);\n        if (backSlashIndex === -1 || backSlashIndex > closeSquareIndex) {\n          return true;\n        }\n      }\n    }\n\n    if (closeCurlyIndex !== -1 && str[index] === '{' && str[index + 1] !== '}') {\n      closeCurlyIndex = str.indexOf('}', index);\n      if (closeCurlyIndex > index) {\n        backSlashIndex = str.indexOf('\\\\', index);\n        if (backSlashIndex === -1 || backSlashIndex > closeCurlyIndex) {\n          return true;\n        }\n      }\n    }\n\n    if (closeParenIndex !== -1 && str[index] === '(' && str[index + 1] === '?' && /[:!=]/.test(str[index + 2]) && str[index + 3] !== ')') {\n      closeParenIndex = str.indexOf(')', index);\n      if (closeParenIndex > index) {\n        backSlashIndex = str.indexOf('\\\\', index);\n        if (backSlashIndex === -1 || backSlashIndex > closeParenIndex) {\n          return true;\n        }\n      }\n    }\n\n    if (pipeIndex !== -1 && str[index] === '(' && str[index + 1] !== '|') {\n      if (pipeIndex < index) {\n        pipeIndex = str.indexOf('|', index);\n      }\n      if (pipeIndex !== -1 && str[pipeIndex + 1] !== ')') {\n        closeParenIndex = str.indexOf(')', pipeIndex);\n        if (closeParenIndex > pipeIndex) {\n          backSlashIndex = str.indexOf('\\\\', pipeIndex);\n          if (backSlashIndex === -1 || backSlashIndex > closeParenIndex) {\n            return true;\n          }\n        }\n      }\n    }\n\n    if (str[index] === '\\\\') {\n      var open = str[index + 1];\n      index += 2;\n      var close = chars[open];\n\n      if (close) {\n        var n = str.indexOf(close, index);\n        if (n !== -1) {\n          index = n + 1;\n        }\n      }\n\n      if (str[index] === '!') {\n        return true;\n      }\n    } else {\n      index++;\n    }\n  }\n  return false;\n};\n\nvar relaxedCheck = function(str) {\n  if (str[0] === '!') {\n    return true;\n  }\n  var index = 0;\n  while (index < str.length) {\n    if (/[*?{}()[\\]]/.test(str[index])) {\n      return true;\n    }\n\n    if (str[index] === '\\\\') {\n      var open = str[index + 1];\n      index += 2;\n      var close = chars[open];\n\n      if (close) {\n        var n = str.indexOf(close, index);\n        if (n !== -1) {\n          index = n + 1;\n        }\n      }\n\n      if (str[index] === '!') {\n        return true;\n      }\n    } else {\n      index++;\n    }\n  }\n  return false;\n};\n\nvar isGlob$2 = function isGlob(str, options) {\n  if (typeof str !== 'string' || str === '') {\n    return false;\n  }\n\n  if (isExtglob(str)) {\n    return true;\n  }\n\n  var check = strictCheck;\n\n  // optionally relax check\n  if (options && options.strict === false) {\n    check = relaxedCheck;\n  }\n\n  return check(str);\n};\n\nvar isGlob$1 = isGlob$2;\nvar pathPosixDirname = require$$0$4.posix.dirname;\nvar isWin32 = require$$1.platform() === 'win32';\n\nvar slash = '/';\nvar backslash = /\\\\/g;\nvar enclosure = /[\\{\\[].*[\\}\\]]$/;\nvar globby = /(^|[^\\\\])([\\{\\[]|\\([^\\)]+$)/;\nvar escaped = /\\\\([\\!\\*\\?\\|\\[\\]\\(\\)\\{\\}])/g;\n\n/**\n * @param {string} str\n * @param {Object} opts\n * @param {boolean} [opts.flipBackslashes=true]\n * @returns {string}\n */\nvar globParent$2 = function globParent(str, opts) {\n  var options = Object.assign({ flipBackslashes: true }, opts);\n\n  // flip windows path separators\n  if (options.flipBackslashes && isWin32 && str.indexOf(slash) < 0) {\n    str = str.replace(backslash, slash);\n  }\n\n  // special case for strings ending in enclosure containing path separator\n  if (enclosure.test(str)) {\n    str += slash;\n  }\n\n  // preserves full path in case of trailing path separator\n  str += 'a';\n\n  // remove path parts that are globby\n  do {\n    str = pathPosixDirname(str);\n  } while (isGlob$1(str) || globby.test(str));\n\n  // remove escape chars and return result\n  return str.replace(escaped, '$1');\n};\n\nvar utils$f = {};\n\n(function (exports) {\n\n\texports.isInteger = num => {\n\t  if (typeof num === 'number') {\n\t    return Number.isInteger(num);\n\t  }\n\t  if (typeof num === 'string' && num.trim() !== '') {\n\t    return Number.isInteger(Number(num));\n\t  }\n\t  return false;\n\t};\n\n\t/**\n\t * Find a node of the given type\n\t */\n\n\texports.find = (node, type) => node.nodes.find(node => node.type === type);\n\n\t/**\n\t * Find a node of the given type\n\t */\n\n\texports.exceedsLimit = (min, max, step = 1, limit) => {\n\t  if (limit === false) return false;\n\t  if (!exports.isInteger(min) || !exports.isInteger(max)) return false;\n\t  return ((Number(max) - Number(min)) / Number(step)) >= limit;\n\t};\n\n\t/**\n\t * Escape the given node with '\\\\' before node.value\n\t */\n\n\texports.escapeNode = (block, n = 0, type) => {\n\t  let node = block.nodes[n];\n\t  if (!node) return;\n\n\t  if ((type && node.type === type) || node.type === 'open' || node.type === 'close') {\n\t    if (node.escaped !== true) {\n\t      node.value = '\\\\' + node.value;\n\t      node.escaped = true;\n\t    }\n\t  }\n\t};\n\n\t/**\n\t * Returns true if the given brace node should be enclosed in literal braces\n\t */\n\n\texports.encloseBrace = node => {\n\t  if (node.type !== 'brace') return false;\n\t  if ((node.commas >> 0 + node.ranges >> 0) === 0) {\n\t    node.invalid = true;\n\t    return true;\n\t  }\n\t  return false;\n\t};\n\n\t/**\n\t * Returns true if a brace node is invalid.\n\t */\n\n\texports.isInvalidBrace = block => {\n\t  if (block.type !== 'brace') return false;\n\t  if (block.invalid === true || block.dollar) return true;\n\t  if ((block.commas >> 0 + block.ranges >> 0) === 0) {\n\t    block.invalid = true;\n\t    return true;\n\t  }\n\t  if (block.open !== true || block.close !== true) {\n\t    block.invalid = true;\n\t    return true;\n\t  }\n\t  return false;\n\t};\n\n\t/**\n\t * Returns true if a node is an open or close node\n\t */\n\n\texports.isOpenOrClose = node => {\n\t  if (node.type === 'open' || node.type === 'close') {\n\t    return true;\n\t  }\n\t  return node.open === true || node.close === true;\n\t};\n\n\t/**\n\t * Reduce an array of text nodes.\n\t */\n\n\texports.reduce = nodes => nodes.reduce((acc, node) => {\n\t  if (node.type === 'text') acc.push(node.value);\n\t  if (node.type === 'range') node.type = 'text';\n\t  return acc;\n\t}, []);\n\n\t/**\n\t * Flatten an array\n\t */\n\n\texports.flatten = (...args) => {\n\t  const result = [];\n\t  const flat = arr => {\n\t    for (let i = 0; i < arr.length; i++) {\n\t      let ele = arr[i];\n\t      Array.isArray(ele) ? flat(ele) : ele !== void 0 && result.push(ele);\n\t    }\n\t    return result;\n\t  };\n\t  flat(args);\n\t  return result;\n\t};\n} (utils$f));\n\nconst utils$e = utils$f;\n\nvar stringify$8 = (ast, options = {}) => {\n  let stringify = (node, parent = {}) => {\n    let invalidBlock = options.escapeInvalid && utils$e.isInvalidBrace(parent);\n    let invalidNode = node.invalid === true && options.escapeInvalid === true;\n    let output = '';\n\n    if (node.value) {\n      if ((invalidBlock || invalidNode) && utils$e.isOpenOrClose(node)) {\n        return '\\\\' + node.value;\n      }\n      return node.value;\n    }\n\n    if (node.value) {\n      return node.value;\n    }\n\n    if (node.nodes) {\n      for (let child of node.nodes) {\n        output += stringify(child);\n      }\n    }\n    return output;\n  };\n\n  return stringify(ast);\n};\n\n/*!\n * is-number <https://github.com/jonschlinkert/is-number>\n *\n * Copyright (c) 2014-present, Jon Schlinkert.\n * Released under the MIT License.\n */\n\nvar isNumber$2 = function(num) {\n  if (typeof num === 'number') {\n    return num - num === 0;\n  }\n  if (typeof num === 'string' && num.trim() !== '') {\n    return Number.isFinite ? Number.isFinite(+num) : isFinite(+num);\n  }\n  return false;\n};\n\n/*!\n * to-regex-range <https://github.com/micromatch/to-regex-range>\n *\n * Copyright (c) 2015-present, Jon Schlinkert.\n * Released under the MIT License.\n */\n\nconst isNumber$1 = isNumber$2;\n\nconst toRegexRange$1 = (min, max, options) => {\n  if (isNumber$1(min) === false) {\n    throw new TypeError('toRegexRange: expected the first argument to be a number');\n  }\n\n  if (max === void 0 || min === max) {\n    return String(min);\n  }\n\n  if (isNumber$1(max) === false) {\n    throw new TypeError('toRegexRange: expected the second argument to be a number.');\n  }\n\n  let opts = { relaxZeros: true, ...options };\n  if (typeof opts.strictZeros === 'boolean') {\n    opts.relaxZeros = opts.strictZeros === false;\n  }\n\n  let relax = String(opts.relaxZeros);\n  let shorthand = String(opts.shorthand);\n  let capture = String(opts.capture);\n  let wrap = String(opts.wrap);\n  let cacheKey = min + ':' + max + '=' + relax + shorthand + capture + wrap;\n\n  if (toRegexRange$1.cache.hasOwnProperty(cacheKey)) {\n    return toRegexRange$1.cache[cacheKey].result;\n  }\n\n  let a = Math.min(min, max);\n  let b = Math.max(min, max);\n\n  if (Math.abs(a - b) === 1) {\n    let result = min + '|' + max;\n    if (opts.capture) {\n      return `(${result})`;\n    }\n    if (opts.wrap === false) {\n      return result;\n    }\n    return `(?:${result})`;\n  }\n\n  let isPadded = hasPadding(min) || hasPadding(max);\n  let state = { min, max, a, b };\n  let positives = [];\n  let negatives = [];\n\n  if (isPadded) {\n    state.isPadded = isPadded;\n    state.maxLen = String(state.max).length;\n  }\n\n  if (a < 0) {\n    let newMin = b < 0 ? Math.abs(b) : 1;\n    negatives = splitToPatterns(newMin, Math.abs(a), state, opts);\n    a = state.a = 0;\n  }\n\n  if (b >= 0) {\n    positives = splitToPatterns(a, b, state, opts);\n  }\n\n  state.negatives = negatives;\n  state.positives = positives;\n  state.result = collatePatterns(negatives, positives);\n\n  if (opts.capture === true) {\n    state.result = `(${state.result})`;\n  } else if (opts.wrap !== false && (positives.length + negatives.length) > 1) {\n    state.result = `(?:${state.result})`;\n  }\n\n  toRegexRange$1.cache[cacheKey] = state;\n  return state.result;\n};\n\nfunction collatePatterns(neg, pos, options) {\n  let onlyNegative = filterPatterns(neg, pos, '-', false) || [];\n  let onlyPositive = filterPatterns(pos, neg, '', false) || [];\n  let intersected = filterPatterns(neg, pos, '-?', true) || [];\n  let subpatterns = onlyNegative.concat(intersected).concat(onlyPositive);\n  return subpatterns.join('|');\n}\n\nfunction splitToRanges(min, max) {\n  let nines = 1;\n  let zeros = 1;\n\n  let stop = countNines(min, nines);\n  let stops = new Set([max]);\n\n  while (min <= stop && stop <= max) {\n    stops.add(stop);\n    nines += 1;\n    stop = countNines(min, nines);\n  }\n\n  stop = countZeros(max + 1, zeros) - 1;\n\n  while (min < stop && stop <= max) {\n    stops.add(stop);\n    zeros += 1;\n    stop = countZeros(max + 1, zeros) - 1;\n  }\n\n  stops = [...stops];\n  stops.sort(compare);\n  return stops;\n}\n\n/**\n * Convert a range to a regex pattern\n * @param {Number} `start`\n * @param {Number} `stop`\n * @return {String}\n */\n\nfunction rangeToPattern(start, stop, options) {\n  if (start === stop) {\n    return { pattern: start, count: [], digits: 0 };\n  }\n\n  let zipped = zip(start, stop);\n  let digits = zipped.length;\n  let pattern = '';\n  let count = 0;\n\n  for (let i = 0; i < digits; i++) {\n    let [startDigit, stopDigit] = zipped[i];\n\n    if (startDigit === stopDigit) {\n      pattern += startDigit;\n\n    } else if (startDigit !== '0' || stopDigit !== '9') {\n      pattern += toCharacterClass(startDigit, stopDigit);\n\n    } else {\n      count++;\n    }\n  }\n\n  if (count) {\n    pattern += options.shorthand === true ? '\\\\d' : '[0-9]';\n  }\n\n  return { pattern, count: [count], digits };\n}\n\nfunction splitToPatterns(min, max, tok, options) {\n  let ranges = splitToRanges(min, max);\n  let tokens = [];\n  let start = min;\n  let prev;\n\n  for (let i = 0; i < ranges.length; i++) {\n    let max = ranges[i];\n    let obj = rangeToPattern(String(start), String(max), options);\n    let zeros = '';\n\n    if (!tok.isPadded && prev && prev.pattern === obj.pattern) {\n      if (prev.count.length > 1) {\n        prev.count.pop();\n      }\n\n      prev.count.push(obj.count[0]);\n      prev.string = prev.pattern + toQuantifier(prev.count);\n      start = max + 1;\n      continue;\n    }\n\n    if (tok.isPadded) {\n      zeros = padZeros(max, tok, options);\n    }\n\n    obj.string = zeros + obj.pattern + toQuantifier(obj.count);\n    tokens.push(obj);\n    start = max + 1;\n    prev = obj;\n  }\n\n  return tokens;\n}\n\nfunction filterPatterns(arr, comparison, prefix, intersection, options) {\n  let result = [];\n\n  for (let ele of arr) {\n    let { string } = ele;\n\n    // only push if _both_ are negative...\n    if (!intersection && !contains(comparison, 'string', string)) {\n      result.push(prefix + string);\n    }\n\n    // or _both_ are positive\n    if (intersection && contains(comparison, 'string', string)) {\n      result.push(prefix + string);\n    }\n  }\n  return result;\n}\n\n/**\n * Zip strings\n */\n\nfunction zip(a, b) {\n  let arr = [];\n  for (let i = 0; i < a.length; i++) arr.push([a[i], b[i]]);\n  return arr;\n}\n\nfunction compare(a, b) {\n  return a > b ? 1 : b > a ? -1 : 0;\n}\n\nfunction contains(arr, key, val) {\n  return arr.some(ele => ele[key] === val);\n}\n\nfunction countNines(min, len) {\n  return Number(String(min).slice(0, -len) + '9'.repeat(len));\n}\n\nfunction countZeros(integer, zeros) {\n  return integer - (integer % Math.pow(10, zeros));\n}\n\nfunction toQuantifier(digits) {\n  let [start = 0, stop = ''] = digits;\n  if (stop || start > 1) {\n    return `{${start + (stop ? ',' + stop : '')}}`;\n  }\n  return '';\n}\n\nfunction toCharacterClass(a, b, options) {\n  return `[${a}${(b - a === 1) ? '' : '-'}${b}]`;\n}\n\nfunction hasPadding(str) {\n  return /^-?(0+)\\d/.test(str);\n}\n\nfunction padZeros(value, tok, options) {\n  if (!tok.isPadded) {\n    return value;\n  }\n\n  let diff = Math.abs(tok.maxLen - String(value).length);\n  let relax = options.relaxZeros !== false;\n\n  switch (diff) {\n    case 0:\n      return '';\n    case 1:\n      return relax ? '0?' : '0';\n    case 2:\n      return relax ? '0{0,2}' : '00';\n    default: {\n      return relax ? `0{0,${diff}}` : `0{${diff}}`;\n    }\n  }\n}\n\n/**\n * Cache\n */\n\ntoRegexRange$1.cache = {};\ntoRegexRange$1.clearCache = () => (toRegexRange$1.cache = {});\n\n/**\n * Expose `toRegexRange`\n */\n\nvar toRegexRange_1 = toRegexRange$1;\n\n/*!\n * fill-range <https://github.com/jonschlinkert/fill-range>\n *\n * Copyright (c) 2014-present, Jon Schlinkert.\n * Licensed under the MIT License.\n */\n\nconst util$2 = require$$0$6;\nconst toRegexRange = toRegexRange_1;\n\nconst isObject$1 = val => val !== null && typeof val === 'object' && !Array.isArray(val);\n\nconst transform$1 = toNumber => {\n  return value => toNumber === true ? Number(value) : String(value);\n};\n\nconst isValidValue = value => {\n  return typeof value === 'number' || (typeof value === 'string' && value !== '');\n};\n\nconst isNumber = num => Number.isInteger(+num);\n\nconst zeros = input => {\n  let value = `${input}`;\n  let index = -1;\n  if (value[0] === '-') value = value.slice(1);\n  if (value === '0') return false;\n  while (value[++index] === '0');\n  return index > 0;\n};\n\nconst stringify$7 = (start, end, options) => {\n  if (typeof start === 'string' || typeof end === 'string') {\n    return true;\n  }\n  return options.stringify === true;\n};\n\nconst pad = (input, maxLength, toNumber) => {\n  if (maxLength > 0) {\n    let dash = input[0] === '-' ? '-' : '';\n    if (dash) input = input.slice(1);\n    input = (dash + input.padStart(dash ? maxLength - 1 : maxLength, '0'));\n  }\n  if (toNumber === false) {\n    return String(input);\n  }\n  return input;\n};\n\nconst toMaxLen = (input, maxLength) => {\n  let negative = input[0] === '-' ? '-' : '';\n  if (negative) {\n    input = input.slice(1);\n    maxLength--;\n  }\n  while (input.length < maxLength) input = '0' + input;\n  return negative ? ('-' + input) : input;\n};\n\nconst toSequence = (parts, options) => {\n  parts.negatives.sort((a, b) => a < b ? -1 : a > b ? 1 : 0);\n  parts.positives.sort((a, b) => a < b ? -1 : a > b ? 1 : 0);\n\n  let prefix = options.capture ? '' : '?:';\n  let positives = '';\n  let negatives = '';\n  let result;\n\n  if (parts.positives.length) {\n    positives = parts.positives.join('|');\n  }\n\n  if (parts.negatives.length) {\n    negatives = `-(${prefix}${parts.negatives.join('|')})`;\n  }\n\n  if (positives && negatives) {\n    result = `${positives}|${negatives}`;\n  } else {\n    result = positives || negatives;\n  }\n\n  if (options.wrap) {\n    return `(${prefix}${result})`;\n  }\n\n  return result;\n};\n\nconst toRange = (a, b, isNumbers, options) => {\n  if (isNumbers) {\n    return toRegexRange(a, b, { wrap: false, ...options });\n  }\n\n  let start = String.fromCharCode(a);\n  if (a === b) return start;\n\n  let stop = String.fromCharCode(b);\n  return `[${start}-${stop}]`;\n};\n\nconst toRegex = (start, end, options) => {\n  if (Array.isArray(start)) {\n    let wrap = options.wrap === true;\n    let prefix = options.capture ? '' : '?:';\n    return wrap ? `(${prefix}${start.join('|')})` : start.join('|');\n  }\n  return toRegexRange(start, end, options);\n};\n\nconst rangeError = (...args) => {\n  return new RangeError('Invalid range arguments: ' + util$2.inspect(...args));\n};\n\nconst invalidRange = (start, end, options) => {\n  if (options.strictRanges === true) throw rangeError([start, end]);\n  return [];\n};\n\nconst invalidStep = (step, options) => {\n  if (options.strictRanges === true) {\n    throw new TypeError(`Expected step \"${step}\" to be a number`);\n  }\n  return [];\n};\n\nconst fillNumbers = (start, end, step = 1, options = {}) => {\n  let a = Number(start);\n  let b = Number(end);\n\n  if (!Number.isInteger(a) || !Number.isInteger(b)) {\n    if (options.strictRanges === true) throw rangeError([start, end]);\n    return [];\n  }\n\n  // fix negative zero\n  if (a === 0) a = 0;\n  if (b === 0) b = 0;\n\n  let descending = a > b;\n  let startString = String(start);\n  let endString = String(end);\n  let stepString = String(step);\n  step = Math.max(Math.abs(step), 1);\n\n  let padded = zeros(startString) || zeros(endString) || zeros(stepString);\n  let maxLen = padded ? Math.max(startString.length, endString.length, stepString.length) : 0;\n  let toNumber = padded === false && stringify$7(start, end, options) === false;\n  let format = options.transform || transform$1(toNumber);\n\n  if (options.toRegex && step === 1) {\n    return toRange(toMaxLen(start, maxLen), toMaxLen(end, maxLen), true, options);\n  }\n\n  let parts = { negatives: [], positives: [] };\n  let push = num => parts[num < 0 ? 'negatives' : 'positives'].push(Math.abs(num));\n  let range = [];\n  let index = 0;\n\n  while (descending ? a >= b : a <= b) {\n    if (options.toRegex === true && step > 1) {\n      push(a);\n    } else {\n      range.push(pad(format(a, index), maxLen, toNumber));\n    }\n    a = descending ? a - step : a + step;\n    index++;\n  }\n\n  if (options.toRegex === true) {\n    return step > 1\n      ? toSequence(parts, options)\n      : toRegex(range, null, { wrap: false, ...options });\n  }\n\n  return range;\n};\n\nconst fillLetters = (start, end, step = 1, options = {}) => {\n  if ((!isNumber(start) && start.length > 1) || (!isNumber(end) && end.length > 1)) {\n    return invalidRange(start, end, options);\n  }\n\n\n  let format = options.transform || (val => String.fromCharCode(val));\n  let a = `${start}`.charCodeAt(0);\n  let b = `${end}`.charCodeAt(0);\n\n  let descending = a > b;\n  let min = Math.min(a, b);\n  let max = Math.max(a, b);\n\n  if (options.toRegex && step === 1) {\n    return toRange(min, max, false, options);\n  }\n\n  let range = [];\n  let index = 0;\n\n  while (descending ? a >= b : a <= b) {\n    range.push(format(a, index));\n    a = descending ? a - step : a + step;\n    index++;\n  }\n\n  if (options.toRegex === true) {\n    return toRegex(range, null, { wrap: false, options });\n  }\n\n  return range;\n};\n\nconst fill$2 = (start, end, step, options = {}) => {\n  if (end == null && isValidValue(start)) {\n    return [start];\n  }\n\n  if (!isValidValue(start) || !isValidValue(end)) {\n    return invalidRange(start, end, options);\n  }\n\n  if (typeof step === 'function') {\n    return fill$2(start, end, 1, { transform: step });\n  }\n\n  if (isObject$1(step)) {\n    return fill$2(start, end, 0, step);\n  }\n\n  let opts = { ...options };\n  if (opts.capture === true) opts.wrap = true;\n  step = step || opts.step || 1;\n\n  if (!isNumber(step)) {\n    if (step != null && !isObject$1(step)) return invalidStep(step, opts);\n    return fill$2(start, end, 1, step);\n  }\n\n  if (isNumber(start) && isNumber(end)) {\n    return fillNumbers(start, end, step, opts);\n  }\n\n  return fillLetters(start, end, Math.max(Math.abs(step), 1), opts);\n};\n\nvar fillRange = fill$2;\n\nconst fill$1 = fillRange;\nconst utils$d = utils$f;\n\nconst compile$1 = (ast, options = {}) => {\n  let walk = (node, parent = {}) => {\n    let invalidBlock = utils$d.isInvalidBrace(parent);\n    let invalidNode = node.invalid === true && options.escapeInvalid === true;\n    let invalid = invalidBlock === true || invalidNode === true;\n    let prefix = options.escapeInvalid === true ? '\\\\' : '';\n    let output = '';\n\n    if (node.isOpen === true) {\n      return prefix + node.value;\n    }\n    if (node.isClose === true) {\n      return prefix + node.value;\n    }\n\n    if (node.type === 'open') {\n      return invalid ? (prefix + node.value) : '(';\n    }\n\n    if (node.type === 'close') {\n      return invalid ? (prefix + node.value) : ')';\n    }\n\n    if (node.type === 'comma') {\n      return node.prev.type === 'comma' ? '' : (invalid ? node.value : '|');\n    }\n\n    if (node.value) {\n      return node.value;\n    }\n\n    if (node.nodes && node.ranges > 0) {\n      let args = utils$d.reduce(node.nodes);\n      let range = fill$1(...args, { ...options, wrap: false, toRegex: true });\n\n      if (range.length !== 0) {\n        return args.length > 1 && range.length > 1 ? `(${range})` : range;\n      }\n    }\n\n    if (node.nodes) {\n      for (let child of node.nodes) {\n        output += walk(child, node);\n      }\n    }\n    return output;\n  };\n\n  return walk(ast);\n};\n\nvar compile_1 = compile$1;\n\nconst fill = fillRange;\nconst stringify$6 = stringify$8;\nconst utils$c = utils$f;\n\nconst append$1 = (queue = '', stash = '', enclose = false) => {\n  let result = [];\n\n  queue = [].concat(queue);\n  stash = [].concat(stash);\n\n  if (!stash.length) return queue;\n  if (!queue.length) {\n    return enclose ? utils$c.flatten(stash).map(ele => `{${ele}}`) : stash;\n  }\n\n  for (let item of queue) {\n    if (Array.isArray(item)) {\n      for (let value of item) {\n        result.push(append$1(value, stash, enclose));\n      }\n    } else {\n      for (let ele of stash) {\n        if (enclose === true && typeof ele === 'string') ele = `{${ele}}`;\n        result.push(Array.isArray(ele) ? append$1(item, ele, enclose) : (item + ele));\n      }\n    }\n  }\n  return utils$c.flatten(result);\n};\n\nconst expand$1 = (ast, options = {}) => {\n  let rangeLimit = options.rangeLimit === void 0 ? 1000 : options.rangeLimit;\n\n  let walk = (node, parent = {}) => {\n    node.queue = [];\n\n    let p = parent;\n    let q = parent.queue;\n\n    while (p.type !== 'brace' && p.type !== 'root' && p.parent) {\n      p = p.parent;\n      q = p.queue;\n    }\n\n    if (node.invalid || node.dollar) {\n      q.push(append$1(q.pop(), stringify$6(node, options)));\n      return;\n    }\n\n    if (node.type === 'brace' && node.invalid !== true && node.nodes.length === 2) {\n      q.push(append$1(q.pop(), ['{}']));\n      return;\n    }\n\n    if (node.nodes && node.ranges > 0) {\n      let args = utils$c.reduce(node.nodes);\n\n      if (utils$c.exceedsLimit(...args, options.step, rangeLimit)) {\n        throw new RangeError('expanded array length exceeds range limit. Use options.rangeLimit to increase or disable the limit.');\n      }\n\n      let range = fill(...args, options);\n      if (range.length === 0) {\n        range = stringify$6(node, options);\n      }\n\n      q.push(append$1(q.pop(), range));\n      node.nodes = [];\n      return;\n    }\n\n    let enclose = utils$c.encloseBrace(node);\n    let queue = node.queue;\n    let block = node;\n\n    while (block.type !== 'brace' && block.type !== 'root' && block.parent) {\n      block = block.parent;\n      queue = block.queue;\n    }\n\n    for (let i = 0; i < node.nodes.length; i++) {\n      let child = node.nodes[i];\n\n      if (child.type === 'comma' && node.type === 'brace') {\n        if (i === 1) queue.push('');\n        queue.push('');\n        continue;\n      }\n\n      if (child.type === 'close') {\n        q.push(append$1(q.pop(), queue, enclose));\n        continue;\n      }\n\n      if (child.value && child.type !== 'open') {\n        queue.push(append$1(queue.pop(), child.value));\n        continue;\n      }\n\n      if (child.nodes) {\n        walk(child, node);\n      }\n    }\n\n    return queue;\n  };\n\n  return utils$c.flatten(walk(ast));\n};\n\nvar expand_1 = expand$1;\n\nvar constants$3 = {\n  MAX_LENGTH: 1024 * 64,\n\n  // Digits\n  CHAR_0: '0', /* 0 */\n  CHAR_9: '9', /* 9 */\n\n  // Alphabet chars.\n  CHAR_UPPERCASE_A: 'A', /* A */\n  CHAR_LOWERCASE_A: 'a', /* a */\n  CHAR_UPPERCASE_Z: 'Z', /* Z */\n  CHAR_LOWERCASE_Z: 'z', /* z */\n\n  CHAR_LEFT_PARENTHESES: '(', /* ( */\n  CHAR_RIGHT_PARENTHESES: ')', /* ) */\n\n  CHAR_ASTERISK: '*', /* * */\n\n  // Non-alphabetic chars.\n  CHAR_AMPERSAND: '&', /* & */\n  CHAR_AT: '@', /* @ */\n  CHAR_BACKSLASH: '\\\\', /* \\ */\n  CHAR_BACKTICK: '`', /* ` */\n  CHAR_CARRIAGE_RETURN: '\\r', /* \\r */\n  CHAR_CIRCUMFLEX_ACCENT: '^', /* ^ */\n  CHAR_COLON: ':', /* : */\n  CHAR_COMMA: ',', /* , */\n  CHAR_DOLLAR: '$', /* . */\n  CHAR_DOT: '.', /* . */\n  CHAR_DOUBLE_QUOTE: '\"', /* \" */\n  CHAR_EQUAL: '=', /* = */\n  CHAR_EXCLAMATION_MARK: '!', /* ! */\n  CHAR_FORM_FEED: '\\f', /* \\f */\n  CHAR_FORWARD_SLASH: '/', /* / */\n  CHAR_HASH: '#', /* # */\n  CHAR_HYPHEN_MINUS: '-', /* - */\n  CHAR_LEFT_ANGLE_BRACKET: '<', /* < */\n  CHAR_LEFT_CURLY_BRACE: '{', /* { */\n  CHAR_LEFT_SQUARE_BRACKET: '[', /* [ */\n  CHAR_LINE_FEED: '\\n', /* \\n */\n  CHAR_NO_BREAK_SPACE: '\\u00A0', /* \\u00A0 */\n  CHAR_PERCENT: '%', /* % */\n  CHAR_PLUS: '+', /* + */\n  CHAR_QUESTION_MARK: '?', /* ? */\n  CHAR_RIGHT_ANGLE_BRACKET: '>', /* > */\n  CHAR_RIGHT_CURLY_BRACE: '}', /* } */\n  CHAR_RIGHT_SQUARE_BRACKET: ']', /* ] */\n  CHAR_SEMICOLON: ';', /* ; */\n  CHAR_SINGLE_QUOTE: '\\'', /* ' */\n  CHAR_SPACE: ' ', /*   */\n  CHAR_TAB: '\\t', /* \\t */\n  CHAR_UNDERSCORE: '_', /* _ */\n  CHAR_VERTICAL_LINE: '|', /* | */\n  CHAR_ZERO_WIDTH_NOBREAK_SPACE: '\\uFEFF' /* \\uFEFF */\n};\n\nconst stringify$5 = stringify$8;\n\n/**\n * Constants\n */\n\nconst {\n  MAX_LENGTH,\n  CHAR_BACKSLASH, /* \\ */\n  CHAR_BACKTICK, /* ` */\n  CHAR_COMMA, /* , */\n  CHAR_DOT, /* . */\n  CHAR_LEFT_PARENTHESES, /* ( */\n  CHAR_RIGHT_PARENTHESES, /* ) */\n  CHAR_LEFT_CURLY_BRACE, /* { */\n  CHAR_RIGHT_CURLY_BRACE, /* } */\n  CHAR_LEFT_SQUARE_BRACKET, /* [ */\n  CHAR_RIGHT_SQUARE_BRACKET, /* ] */\n  CHAR_DOUBLE_QUOTE, /* \" */\n  CHAR_SINGLE_QUOTE, /* ' */\n  CHAR_NO_BREAK_SPACE,\n  CHAR_ZERO_WIDTH_NOBREAK_SPACE\n} = constants$3;\n\n/**\n * parse\n */\n\nconst parse$f = (input, options = {}) => {\n  if (typeof input !== 'string') {\n    throw new TypeError('Expected a string');\n  }\n\n  let opts = options || {};\n  let max = typeof opts.maxLength === 'number' ? Math.min(MAX_LENGTH, opts.maxLength) : MAX_LENGTH;\n  if (input.length > max) {\n    throw new SyntaxError(`Input length (${input.length}), exceeds max characters (${max})`);\n  }\n\n  let ast = { type: 'root', input, nodes: [] };\n  let stack = [ast];\n  let block = ast;\n  let prev = ast;\n  let brackets = 0;\n  let length = input.length;\n  let index = 0;\n  let depth = 0;\n  let value;\n\n  /**\n   * Helpers\n   */\n\n  const advance = () => input[index++];\n  const push = node => {\n    if (node.type === 'text' && prev.type === 'dot') {\n      prev.type = 'text';\n    }\n\n    if (prev && prev.type === 'text' && node.type === 'text') {\n      prev.value += node.value;\n      return;\n    }\n\n    block.nodes.push(node);\n    node.parent = block;\n    node.prev = prev;\n    prev = node;\n    return node;\n  };\n\n  push({ type: 'bos' });\n\n  while (index < length) {\n    block = stack[stack.length - 1];\n    value = advance();\n\n    /**\n     * Invalid chars\n     */\n\n    if (value === CHAR_ZERO_WIDTH_NOBREAK_SPACE || value === CHAR_NO_BREAK_SPACE) {\n      continue;\n    }\n\n    /**\n     * Escaped chars\n     */\n\n    if (value === CHAR_BACKSLASH) {\n      push({ type: 'text', value: (options.keepEscaping ? value : '') + advance() });\n      continue;\n    }\n\n    /**\n     * Right square bracket (literal): ']'\n     */\n\n    if (value === CHAR_RIGHT_SQUARE_BRACKET) {\n      push({ type: 'text', value: '\\\\' + value });\n      continue;\n    }\n\n    /**\n     * Left square bracket: '['\n     */\n\n    if (value === CHAR_LEFT_SQUARE_BRACKET) {\n      brackets++;\n      let next;\n\n      while (index < length && (next = advance())) {\n        value += next;\n\n        if (next === CHAR_LEFT_SQUARE_BRACKET) {\n          brackets++;\n          continue;\n        }\n\n        if (next === CHAR_BACKSLASH) {\n          value += advance();\n          continue;\n        }\n\n        if (next === CHAR_RIGHT_SQUARE_BRACKET) {\n          brackets--;\n\n          if (brackets === 0) {\n            break;\n          }\n        }\n      }\n\n      push({ type: 'text', value });\n      continue;\n    }\n\n    /**\n     * Parentheses\n     */\n\n    if (value === CHAR_LEFT_PARENTHESES) {\n      block = push({ type: 'paren', nodes: [] });\n      stack.push(block);\n      push({ type: 'text', value });\n      continue;\n    }\n\n    if (value === CHAR_RIGHT_PARENTHESES) {\n      if (block.type !== 'paren') {\n        push({ type: 'text', value });\n        continue;\n      }\n      block = stack.pop();\n      push({ type: 'text', value });\n      block = stack[stack.length - 1];\n      continue;\n    }\n\n    /**\n     * Quotes: '|\"|`\n     */\n\n    if (value === CHAR_DOUBLE_QUOTE || value === CHAR_SINGLE_QUOTE || value === CHAR_BACKTICK) {\n      let open = value;\n      let next;\n\n      if (options.keepQuotes !== true) {\n        value = '';\n      }\n\n      while (index < length && (next = advance())) {\n        if (next === CHAR_BACKSLASH) {\n          value += next + advance();\n          continue;\n        }\n\n        if (next === open) {\n          if (options.keepQuotes === true) value += next;\n          break;\n        }\n\n        value += next;\n      }\n\n      push({ type: 'text', value });\n      continue;\n    }\n\n    /**\n     * Left curly brace: '{'\n     */\n\n    if (value === CHAR_LEFT_CURLY_BRACE) {\n      depth++;\n\n      let dollar = prev.value && prev.value.slice(-1) === '$' || block.dollar === true;\n      let brace = {\n        type: 'brace',\n        open: true,\n        close: false,\n        dollar,\n        depth,\n        commas: 0,\n        ranges: 0,\n        nodes: []\n      };\n\n      block = push(brace);\n      stack.push(block);\n      push({ type: 'open', value });\n      continue;\n    }\n\n    /**\n     * Right curly brace: '}'\n     */\n\n    if (value === CHAR_RIGHT_CURLY_BRACE) {\n      if (block.type !== 'brace') {\n        push({ type: 'text', value });\n        continue;\n      }\n\n      let type = 'close';\n      block = stack.pop();\n      block.close = true;\n\n      push({ type, value });\n      depth--;\n\n      block = stack[stack.length - 1];\n      continue;\n    }\n\n    /**\n     * Comma: ','\n     */\n\n    if (value === CHAR_COMMA && depth > 0) {\n      if (block.ranges > 0) {\n        block.ranges = 0;\n        let open = block.nodes.shift();\n        block.nodes = [open, { type: 'text', value: stringify$5(block) }];\n      }\n\n      push({ type: 'comma', value });\n      block.commas++;\n      continue;\n    }\n\n    /**\n     * Dot: '.'\n     */\n\n    if (value === CHAR_DOT && depth > 0 && block.commas === 0) {\n      let siblings = block.nodes;\n\n      if (depth === 0 || siblings.length === 0) {\n        push({ type: 'text', value });\n        continue;\n      }\n\n      if (prev.type === 'dot') {\n        block.range = [];\n        prev.value += value;\n        prev.type = 'range';\n\n        if (block.nodes.length !== 3 && block.nodes.length !== 5) {\n          block.invalid = true;\n          block.ranges = 0;\n          prev.type = 'text';\n          continue;\n        }\n\n        block.ranges++;\n        block.args = [];\n        continue;\n      }\n\n      if (prev.type === 'range') {\n        siblings.pop();\n\n        let before = siblings[siblings.length - 1];\n        before.value += prev.value + value;\n        prev = before;\n        block.ranges--;\n        continue;\n      }\n\n      push({ type: 'dot', value });\n      continue;\n    }\n\n    /**\n     * Text\n     */\n\n    push({ type: 'text', value });\n  }\n\n  // Mark imbalanced braces and brackets as invalid\n  do {\n    block = stack.pop();\n\n    if (block.type !== 'root') {\n      block.nodes.forEach(node => {\n        if (!node.nodes) {\n          if (node.type === 'open') node.isOpen = true;\n          if (node.type === 'close') node.isClose = true;\n          if (!node.nodes) node.type = 'text';\n          node.invalid = true;\n        }\n      });\n\n      // get the location of the block on parent.nodes (block's siblings)\n      let parent = stack[stack.length - 1];\n      let index = parent.nodes.indexOf(block);\n      // replace the (invalid) block with it's nodes\n      parent.nodes.splice(index, 1, ...block.nodes);\n    }\n  } while (stack.length > 0);\n\n  push({ type: 'eos' });\n  return ast;\n};\n\nvar parse_1$1 = parse$f;\n\nconst stringify$4 = stringify$8;\nconst compile = compile_1;\nconst expand = expand_1;\nconst parse$e = parse_1$1;\n\n/**\n * Expand the given pattern or create a regex-compatible string.\n *\n * ```js\n * const braces = require('braces');\n * console.log(braces('{a,b,c}', { compile: true })); //=> ['(a|b|c)']\n * console.log(braces('{a,b,c}')); //=> ['a', 'b', 'c']\n * ```\n * @param {String} `str`\n * @param {Object} `options`\n * @return {String}\n * @api public\n */\n\nconst braces$2 = (input, options = {}) => {\n  let output = [];\n\n  if (Array.isArray(input)) {\n    for (let pattern of input) {\n      let result = braces$2.create(pattern, options);\n      if (Array.isArray(result)) {\n        output.push(...result);\n      } else {\n        output.push(result);\n      }\n    }\n  } else {\n    output = [].concat(braces$2.create(input, options));\n  }\n\n  if (options && options.expand === true && options.nodupes === true) {\n    output = [...new Set(output)];\n  }\n  return output;\n};\n\n/**\n * Parse the given `str` with the given `options`.\n *\n * ```js\n * // braces.parse(pattern, [, options]);\n * const ast = braces.parse('a/{b,c}/d');\n * console.log(ast);\n * ```\n * @param {String} pattern Brace pattern to parse\n * @param {Object} options\n * @return {Object} Returns an AST\n * @api public\n */\n\nbraces$2.parse = (input, options = {}) => parse$e(input, options);\n\n/**\n * Creates a braces string from an AST, or an AST node.\n *\n * ```js\n * const braces = require('braces');\n * let ast = braces.parse('foo/{a,b}/bar');\n * console.log(stringify(ast.nodes[2])); //=> '{a,b}'\n * ```\n * @param {String} `input` Brace pattern or AST.\n * @param {Object} `options`\n * @return {Array} Returns an array of expanded values.\n * @api public\n */\n\nbraces$2.stringify = (input, options = {}) => {\n  if (typeof input === 'string') {\n    return stringify$4(braces$2.parse(input, options), options);\n  }\n  return stringify$4(input, options);\n};\n\n/**\n * Compiles a brace pattern into a regex-compatible, optimized string.\n * This method is called by the main [braces](#braces) function by default.\n *\n * ```js\n * const braces = require('braces');\n * console.log(braces.compile('a/{b,c}/d'));\n * //=> ['a/(b|c)/d']\n * ```\n * @param {String} `input` Brace pattern or AST.\n * @param {Object} `options`\n * @return {Array} Returns an array of expanded values.\n * @api public\n */\n\nbraces$2.compile = (input, options = {}) => {\n  if (typeof input === 'string') {\n    input = braces$2.parse(input, options);\n  }\n  return compile(input, options);\n};\n\n/**\n * Expands a brace pattern into an array. This method is called by the\n * main [braces](#braces) function when `options.expand` is true. Before\n * using this method it's recommended that you read the [performance notes](#performance))\n * and advantages of using [.compile](#compile) instead.\n *\n * ```js\n * const braces = require('braces');\n * console.log(braces.expand('a/{b,c}/d'));\n * //=> ['a/b/d', 'a/c/d'];\n * ```\n * @param {String} `pattern` Brace pattern\n * @param {Object} `options`\n * @return {Array} Returns an array of expanded values.\n * @api public\n */\n\nbraces$2.expand = (input, options = {}) => {\n  if (typeof input === 'string') {\n    input = braces$2.parse(input, options);\n  }\n\n  let result = expand(input, options);\n\n  // filter out empty strings if specified\n  if (options.noempty === true) {\n    result = result.filter(Boolean);\n  }\n\n  // filter out duplicates if specified\n  if (options.nodupes === true) {\n    result = [...new Set(result)];\n  }\n\n  return result;\n};\n\n/**\n * Processes a brace pattern and returns either an expanded array\n * (if `options.expand` is true), a highly optimized regex-compatible string.\n * This method is called by the main [braces](#braces) function.\n *\n * ```js\n * const braces = require('braces');\n * console.log(braces.create('user-{200..300}/project-{a,b,c}-{1..10}'))\n * //=> 'user-(20[0-9]|2[1-9][0-9]|300)/project-(a|b|c)-([1-9]|10)'\n * ```\n * @param {String} `pattern` Brace pattern\n * @param {Object} `options`\n * @return {Array} Returns an array of expanded values.\n * @api public\n */\n\nbraces$2.create = (input, options = {}) => {\n  if (input === '' || input.length < 3) {\n    return [input];\n  }\n\n return options.expand !== true\n    ? braces$2.compile(input, options)\n    : braces$2.expand(input, options);\n};\n\n/**\n * Expose \"braces\"\n */\n\nvar braces_1 = braces$2;\n\nconst util$1 = require$$0$6;\nconst braces$1 = braces_1;\nconst picomatch$2 = picomatch$4.exports;\nconst utils$b = utils$k;\nconst isEmptyString = val => val === '' || val === './';\n\n/**\n * Returns an array of strings that match one or more glob patterns.\n *\n * ```js\n * const mm = require('micromatch');\n * // mm(list, patterns[, options]);\n *\n * console.log(mm(['a.js', 'a.txt'], ['*.js']));\n * //=> [ 'a.js' ]\n * ```\n * @param {String|Array<string>} `list` List of strings to match.\n * @param {String|Array<string>} `patterns` One or more glob patterns to use for matching.\n * @param {Object} `options` See available [options](#options)\n * @return {Array} Returns an array of matches\n * @summary false\n * @api public\n */\n\nconst micromatch$1 = (list, patterns, options) => {\n  patterns = [].concat(patterns);\n  list = [].concat(list);\n\n  let omit = new Set();\n  let keep = new Set();\n  let items = new Set();\n  let negatives = 0;\n\n  let onResult = state => {\n    items.add(state.output);\n    if (options && options.onResult) {\n      options.onResult(state);\n    }\n  };\n\n  for (let i = 0; i < patterns.length; i++) {\n    let isMatch = picomatch$2(String(patterns[i]), { ...options, onResult }, true);\n    let negated = isMatch.state.negated || isMatch.state.negatedExtglob;\n    if (negated) negatives++;\n\n    for (let item of list) {\n      let matched = isMatch(item, true);\n\n      let match = negated ? !matched.isMatch : matched.isMatch;\n      if (!match) continue;\n\n      if (negated) {\n        omit.add(matched.output);\n      } else {\n        omit.delete(matched.output);\n        keep.add(matched.output);\n      }\n    }\n  }\n\n  let result = negatives === patterns.length ? [...items] : [...keep];\n  let matches = result.filter(item => !omit.has(item));\n\n  if (options && matches.length === 0) {\n    if (options.failglob === true) {\n      throw new Error(`No matches found for \"${patterns.join(', ')}\"`);\n    }\n\n    if (options.nonull === true || options.nullglob === true) {\n      return options.unescape ? patterns.map(p => p.replace(/\\\\/g, '')) : patterns;\n    }\n  }\n\n  return matches;\n};\n\n/**\n * Backwards compatibility\n */\n\nmicromatch$1.match = micromatch$1;\n\n/**\n * Returns a matcher function from the given glob `pattern` and `options`.\n * The returned function takes a string to match as its only argument and returns\n * true if the string is a match.\n *\n * ```js\n * const mm = require('micromatch');\n * // mm.matcher(pattern[, options]);\n *\n * const isMatch = mm.matcher('*.!(*a)');\n * console.log(isMatch('a.a')); //=> false\n * console.log(isMatch('a.b')); //=> true\n * ```\n * @param {String} `pattern` Glob pattern\n * @param {Object} `options`\n * @return {Function} Returns a matcher function.\n * @api public\n */\n\nmicromatch$1.matcher = (pattern, options) => picomatch$2(pattern, options);\n\n/**\n * Returns true if **any** of the given glob `patterns` match the specified `string`.\n *\n * ```js\n * const mm = require('micromatch');\n * // mm.isMatch(string, patterns[, options]);\n *\n * console.log(mm.isMatch('a.a', ['b.*', '*.a'])); //=> true\n * console.log(mm.isMatch('a.a', 'b.*')); //=> false\n * ```\n * @param {String} `str` The string to test.\n * @param {String|Array} `patterns` One or more glob patterns to use for matching.\n * @param {Object} `[options]` See available [options](#options).\n * @return {Boolean} Returns true if any patterns match `str`\n * @api public\n */\n\nmicromatch$1.isMatch = (str, patterns, options) => picomatch$2(patterns, options)(str);\n\n/**\n * Backwards compatibility\n */\n\nmicromatch$1.any = micromatch$1.isMatch;\n\n/**\n * Returns a list of strings that _**do not match any**_ of the given `patterns`.\n *\n * ```js\n * const mm = require('micromatch');\n * // mm.not(list, patterns[, options]);\n *\n * console.log(mm.not(['a.a', 'b.b', 'c.c'], '*.a'));\n * //=> ['b.b', 'c.c']\n * ```\n * @param {Array} `list` Array of strings to match.\n * @param {String|Array} `patterns` One or more glob pattern to use for matching.\n * @param {Object} `options` See available [options](#options) for changing how matches are performed\n * @return {Array} Returns an array of strings that **do not match** the given patterns.\n * @api public\n */\n\nmicromatch$1.not = (list, patterns, options = {}) => {\n  patterns = [].concat(patterns).map(String);\n  let result = new Set();\n  let items = [];\n\n  let onResult = state => {\n    if (options.onResult) options.onResult(state);\n    items.push(state.output);\n  };\n\n  let matches = new Set(micromatch$1(list, patterns, { ...options, onResult }));\n\n  for (let item of items) {\n    if (!matches.has(item)) {\n      result.add(item);\n    }\n  }\n  return [...result];\n};\n\n/**\n * Returns true if the given `string` contains the given pattern. Similar\n * to [.isMatch](#isMatch) but the pattern can match any part of the string.\n *\n * ```js\n * var mm = require('micromatch');\n * // mm.contains(string, pattern[, options]);\n *\n * console.log(mm.contains('aa/bb/cc', '*b'));\n * //=> true\n * console.log(mm.contains('aa/bb/cc', '*d'));\n * //=> false\n * ```\n * @param {String} `str` The string to match.\n * @param {String|Array} `patterns` Glob pattern to use for matching.\n * @param {Object} `options` See available [options](#options) for changing how matches are performed\n * @return {Boolean} Returns true if any of the patterns matches any part of `str`.\n * @api public\n */\n\nmicromatch$1.contains = (str, pattern, options) => {\n  if (typeof str !== 'string') {\n    throw new TypeError(`Expected a string: \"${util$1.inspect(str)}\"`);\n  }\n\n  if (Array.isArray(pattern)) {\n    return pattern.some(p => micromatch$1.contains(str, p, options));\n  }\n\n  if (typeof pattern === 'string') {\n    if (isEmptyString(str) || isEmptyString(pattern)) {\n      return false;\n    }\n\n    if (str.includes(pattern) || (str.startsWith('./') && str.slice(2).includes(pattern))) {\n      return true;\n    }\n  }\n\n  return micromatch$1.isMatch(str, pattern, { ...options, contains: true });\n};\n\n/**\n * Filter the keys of the given object with the given `glob` pattern\n * and `options`. Does not attempt to match nested keys. If you need this feature,\n * use [glob-object][] instead.\n *\n * ```js\n * const mm = require('micromatch');\n * // mm.matchKeys(object, patterns[, options]);\n *\n * const obj = { aa: 'a', ab: 'b', ac: 'c' };\n * console.log(mm.matchKeys(obj, '*b'));\n * //=> { ab: 'b' }\n * ```\n * @param {Object} `object` The object with keys to filter.\n * @param {String|Array} `patterns` One or more glob patterns to use for matching.\n * @param {Object} `options` See available [options](#options) for changing how matches are performed\n * @return {Object} Returns an object with only keys that match the given patterns.\n * @api public\n */\n\nmicromatch$1.matchKeys = (obj, patterns, options) => {\n  if (!utils$b.isObject(obj)) {\n    throw new TypeError('Expected the first argument to be an object');\n  }\n  let keys = micromatch$1(Object.keys(obj), patterns, options);\n  let res = {};\n  for (let key of keys) res[key] = obj[key];\n  return res;\n};\n\n/**\n * Returns true if some of the strings in the given `list` match any of the given glob `patterns`.\n *\n * ```js\n * const mm = require('micromatch');\n * // mm.some(list, patterns[, options]);\n *\n * console.log(mm.some(['foo.js', 'bar.js'], ['*.js', '!foo.js']));\n * // true\n * console.log(mm.some(['foo.js'], ['*.js', '!foo.js']));\n * // false\n * ```\n * @param {String|Array} `list` The string or array of strings to test. Returns as soon as the first match is found.\n * @param {String|Array} `patterns` One or more glob patterns to use for matching.\n * @param {Object} `options` See available [options](#options) for changing how matches are performed\n * @return {Boolean} Returns true if any `patterns` matches any of the strings in `list`\n * @api public\n */\n\nmicromatch$1.some = (list, patterns, options) => {\n  let items = [].concat(list);\n\n  for (let pattern of [].concat(patterns)) {\n    let isMatch = picomatch$2(String(pattern), options);\n    if (items.some(item => isMatch(item))) {\n      return true;\n    }\n  }\n  return false;\n};\n\n/**\n * Returns true if every string in the given `list` matches\n * any of the given glob `patterns`.\n *\n * ```js\n * const mm = require('micromatch');\n * // mm.every(list, patterns[, options]);\n *\n * console.log(mm.every('foo.js', ['foo.js']));\n * // true\n * console.log(mm.every(['foo.js', 'bar.js'], ['*.js']));\n * // true\n * console.log(mm.every(['foo.js', 'bar.js'], ['*.js', '!foo.js']));\n * // false\n * console.log(mm.every(['foo.js'], ['*.js', '!foo.js']));\n * // false\n * ```\n * @param {String|Array} `list` The string or array of strings to test.\n * @param {String|Array} `patterns` One or more glob patterns to use for matching.\n * @param {Object} `options` See available [options](#options) for changing how matches are performed\n * @return {Boolean} Returns true if all `patterns` matches all of the strings in `list`\n * @api public\n */\n\nmicromatch$1.every = (list, patterns, options) => {\n  let items = [].concat(list);\n\n  for (let pattern of [].concat(patterns)) {\n    let isMatch = picomatch$2(String(pattern), options);\n    if (!items.every(item => isMatch(item))) {\n      return false;\n    }\n  }\n  return true;\n};\n\n/**\n * Returns true if **all** of the given `patterns` match\n * the specified string.\n *\n * ```js\n * const mm = require('micromatch');\n * // mm.all(string, patterns[, options]);\n *\n * console.log(mm.all('foo.js', ['foo.js']));\n * // true\n *\n * console.log(mm.all('foo.js', ['*.js', '!foo.js']));\n * // false\n *\n * console.log(mm.all('foo.js', ['*.js', 'foo.js']));\n * // true\n *\n * console.log(mm.all('foo.js', ['*.js', 'f*', '*o*', '*o.js']));\n * // true\n * ```\n * @param {String|Array} `str` The string to test.\n * @param {String|Array} `patterns` One or more glob patterns to use for matching.\n * @param {Object} `options` See available [options](#options) for changing how matches are performed\n * @return {Boolean} Returns true if any patterns match `str`\n * @api public\n */\n\nmicromatch$1.all = (str, patterns, options) => {\n  if (typeof str !== 'string') {\n    throw new TypeError(`Expected a string: \"${util$1.inspect(str)}\"`);\n  }\n\n  return [].concat(patterns).every(p => picomatch$2(p, options)(str));\n};\n\n/**\n * Returns an array of matches captured by `pattern` in `string, or `null` if the pattern did not match.\n *\n * ```js\n * const mm = require('micromatch');\n * // mm.capture(pattern, string[, options]);\n *\n * console.log(mm.capture('test/*.js', 'test/foo.js'));\n * //=> ['foo']\n * console.log(mm.capture('test/*.js', 'foo/bar.css'));\n * //=> null\n * ```\n * @param {String} `glob` Glob pattern to use for matching.\n * @param {String} `input` String to match\n * @param {Object} `options` See available [options](#options) for changing how matches are performed\n * @return {Array|null} Returns an array of captures if the input matches the glob pattern, otherwise `null`.\n * @api public\n */\n\nmicromatch$1.capture = (glob, input, options) => {\n  let posix = utils$b.isWindows(options);\n  let regex = picomatch$2.makeRe(String(glob), { ...options, capture: true });\n  let match = regex.exec(posix ? utils$b.toPosixSlashes(input) : input);\n\n  if (match) {\n    return match.slice(1).map(v => v === void 0 ? '' : v);\n  }\n};\n\n/**\n * Create a regular expression from the given glob `pattern`.\n *\n * ```js\n * const mm = require('micromatch');\n * // mm.makeRe(pattern[, options]);\n *\n * console.log(mm.makeRe('*.js'));\n * //=> /^(?:(\\.[\\\\\\/])?(?!\\.)(?=.)[^\\/]*?\\.js)$/\n * ```\n * @param {String} `pattern` A glob pattern to convert to regex.\n * @param {Object} `options`\n * @return {RegExp} Returns a regex created from the given pattern.\n * @api public\n */\n\nmicromatch$1.makeRe = (...args) => picomatch$2.makeRe(...args);\n\n/**\n * Scan a glob pattern to separate the pattern into segments. Used\n * by the [split](#split) method.\n *\n * ```js\n * const mm = require('micromatch');\n * const state = mm.scan(pattern[, options]);\n * ```\n * @param {String} `pattern`\n * @param {Object} `options`\n * @return {Object} Returns an object with\n * @api public\n */\n\nmicromatch$1.scan = (...args) => picomatch$2.scan(...args);\n\n/**\n * Parse a glob pattern to create the source string for a regular\n * expression.\n *\n * ```js\n * const mm = require('micromatch');\n * const state = mm.parse(pattern[, options]);\n * ```\n * @param {String} `glob`\n * @param {Object} `options`\n * @return {Object} Returns an object with useful properties and output to be used as regex source string.\n * @api public\n */\n\nmicromatch$1.parse = (patterns, options) => {\n  let res = [];\n  for (let pattern of [].concat(patterns || [])) {\n    for (let str of braces$1(String(pattern), options)) {\n      res.push(picomatch$2.parse(str, options));\n    }\n  }\n  return res;\n};\n\n/**\n * Process the given brace `pattern`.\n *\n * ```js\n * const { braces } = require('micromatch');\n * console.log(braces('foo/{a,b,c}/bar'));\n * //=> [ 'foo/(a|b|c)/bar' ]\n *\n * console.log(braces('foo/{a,b,c}/bar', { expand: true }));\n * //=> [ 'foo/a/bar', 'foo/b/bar', 'foo/c/bar' ]\n * ```\n * @param {String} `pattern` String with brace pattern to process.\n * @param {Object} `options` Any [options](#options) to change how expansion is performed. See the [braces][] library for all available options.\n * @return {Array}\n * @api public\n */\n\nmicromatch$1.braces = (pattern, options) => {\n  if (typeof pattern !== 'string') throw new TypeError('Expected a string');\n  if ((options && options.nobrace === true) || !/\\{.*\\}/.test(pattern)) {\n    return [pattern];\n  }\n  return braces$1(pattern, options);\n};\n\n/**\n * Expand braces\n */\n\nmicromatch$1.braceExpand = (pattern, options) => {\n  if (typeof pattern !== 'string') throw new TypeError('Expected a string');\n  return micromatch$1.braces(pattern, { ...options, expand: true });\n};\n\n/**\n * Expose micromatch\n */\n\nvar micromatch_1 = micromatch$1;\n\nObject.defineProperty(pattern$1, \"__esModule\", { value: true });\npattern$1.matchAny = pattern$1.convertPatternsToRe = pattern$1.makeRe = pattern$1.getPatternParts = pattern$1.expandBraceExpansion = pattern$1.expandPatternsWithBraceExpansion = pattern$1.isAffectDepthOfReadingPattern = pattern$1.endsWithSlashGlobStar = pattern$1.hasGlobStar = pattern$1.getBaseDirectory = pattern$1.isPatternRelatedToParentDirectory = pattern$1.getPatternsOutsideCurrentDirectory = pattern$1.getPatternsInsideCurrentDirectory = pattern$1.getPositivePatterns = pattern$1.getNegativePatterns = pattern$1.isPositivePattern = pattern$1.isNegativePattern = pattern$1.convertToNegativePattern = pattern$1.convertToPositivePattern = pattern$1.isDynamicPattern = pattern$1.isStaticPattern = void 0;\nconst path$f = require$$0$4;\nconst globParent$1 = globParent$2;\nconst micromatch = micromatch_1;\nconst GLOBSTAR$1 = '**';\nconst ESCAPE_SYMBOL = '\\\\';\nconst COMMON_GLOB_SYMBOLS_RE = /[*?]|^!/;\nconst REGEX_CHARACTER_CLASS_SYMBOLS_RE = /\\[[^[]*]/;\nconst REGEX_GROUP_SYMBOLS_RE = /(?:^|[^!*+?@])\\([^(]*\\|[^|]*\\)/;\nconst GLOB_EXTENSION_SYMBOLS_RE = /[!*+?@]\\([^(]*\\)/;\nconst BRACE_EXPANSION_SEPARATORS_RE = /,|\\.\\./;\nfunction isStaticPattern(pattern, options = {}) {\n    return !isDynamicPattern(pattern, options);\n}\npattern$1.isStaticPattern = isStaticPattern;\nfunction isDynamicPattern(pattern, options = {}) {\n    /**\n     * A special case with an empty string is necessary for matching patterns that start with a forward slash.\n     * An empty string cannot be a dynamic pattern.\n     * For example, the pattern `/lib/*` will be spread into parts: '', 'lib', '*'.\n     */\n    if (pattern === '') {\n        return false;\n    }\n    /**\n     * When the `caseSensitiveMatch` option is disabled, all patterns must be marked as dynamic, because we cannot check\n     * filepath directly (without read directory).\n     */\n    if (options.caseSensitiveMatch === false || pattern.includes(ESCAPE_SYMBOL)) {\n        return true;\n    }\n    if (COMMON_GLOB_SYMBOLS_RE.test(pattern) || REGEX_CHARACTER_CLASS_SYMBOLS_RE.test(pattern) || REGEX_GROUP_SYMBOLS_RE.test(pattern)) {\n        return true;\n    }\n    if (options.extglob !== false && GLOB_EXTENSION_SYMBOLS_RE.test(pattern)) {\n        return true;\n    }\n    if (options.braceExpansion !== false && hasBraceExpansion(pattern)) {\n        return true;\n    }\n    return false;\n}\npattern$1.isDynamicPattern = isDynamicPattern;\nfunction hasBraceExpansion(pattern) {\n    const openingBraceIndex = pattern.indexOf('{');\n    if (openingBraceIndex === -1) {\n        return false;\n    }\n    const closingBraceIndex = pattern.indexOf('}', openingBraceIndex + 1);\n    if (closingBraceIndex === -1) {\n        return false;\n    }\n    const braceContent = pattern.slice(openingBraceIndex, closingBraceIndex);\n    return BRACE_EXPANSION_SEPARATORS_RE.test(braceContent);\n}\nfunction convertToPositivePattern(pattern) {\n    return isNegativePattern(pattern) ? pattern.slice(1) : pattern;\n}\npattern$1.convertToPositivePattern = convertToPositivePattern;\nfunction convertToNegativePattern(pattern) {\n    return '!' + pattern;\n}\npattern$1.convertToNegativePattern = convertToNegativePattern;\nfunction isNegativePattern(pattern) {\n    return pattern.startsWith('!') && pattern[1] !== '(';\n}\npattern$1.isNegativePattern = isNegativePattern;\nfunction isPositivePattern(pattern) {\n    return !isNegativePattern(pattern);\n}\npattern$1.isPositivePattern = isPositivePattern;\nfunction getNegativePatterns(patterns) {\n    return patterns.filter(isNegativePattern);\n}\npattern$1.getNegativePatterns = getNegativePatterns;\nfunction getPositivePatterns$1(patterns) {\n    return patterns.filter(isPositivePattern);\n}\npattern$1.getPositivePatterns = getPositivePatterns$1;\n/**\n * Returns patterns that can be applied inside the current directory.\n *\n * @example\n * // ['./*', '*', 'a/*']\n * getPatternsInsideCurrentDirectory(['./*', '*', 'a/*', '../*', './../*'])\n */\nfunction getPatternsInsideCurrentDirectory(patterns) {\n    return patterns.filter((pattern) => !isPatternRelatedToParentDirectory(pattern));\n}\npattern$1.getPatternsInsideCurrentDirectory = getPatternsInsideCurrentDirectory;\n/**\n * Returns patterns to be expanded relative to (outside) the current directory.\n *\n * @example\n * // ['../*', './../*']\n * getPatternsInsideCurrentDirectory(['./*', '*', 'a/*', '../*', './../*'])\n */\nfunction getPatternsOutsideCurrentDirectory(patterns) {\n    return patterns.filter(isPatternRelatedToParentDirectory);\n}\npattern$1.getPatternsOutsideCurrentDirectory = getPatternsOutsideCurrentDirectory;\nfunction isPatternRelatedToParentDirectory(pattern) {\n    return pattern.startsWith('..') || pattern.startsWith('./..');\n}\npattern$1.isPatternRelatedToParentDirectory = isPatternRelatedToParentDirectory;\nfunction getBaseDirectory(pattern) {\n    return globParent$1(pattern, { flipBackslashes: false });\n}\npattern$1.getBaseDirectory = getBaseDirectory;\nfunction hasGlobStar(pattern) {\n    return pattern.includes(GLOBSTAR$1);\n}\npattern$1.hasGlobStar = hasGlobStar;\nfunction endsWithSlashGlobStar(pattern) {\n    return pattern.endsWith('/' + GLOBSTAR$1);\n}\npattern$1.endsWithSlashGlobStar = endsWithSlashGlobStar;\nfunction isAffectDepthOfReadingPattern(pattern) {\n    const basename = path$f.basename(pattern);\n    return endsWithSlashGlobStar(pattern) || isStaticPattern(basename);\n}\npattern$1.isAffectDepthOfReadingPattern = isAffectDepthOfReadingPattern;\nfunction expandPatternsWithBraceExpansion(patterns) {\n    return patterns.reduce((collection, pattern) => {\n        return collection.concat(expandBraceExpansion(pattern));\n    }, []);\n}\npattern$1.expandPatternsWithBraceExpansion = expandPatternsWithBraceExpansion;\nfunction expandBraceExpansion(pattern) {\n    return micromatch.braces(pattern, {\n        expand: true,\n        nodupes: true\n    });\n}\npattern$1.expandBraceExpansion = expandBraceExpansion;\nfunction getPatternParts(pattern, options) {\n    let { parts } = micromatch.scan(pattern, Object.assign(Object.assign({}, options), { parts: true }));\n    /**\n     * The scan method returns an empty array in some cases.\n     * See micromatch/picomatch#58 for more details.\n     */\n    if (parts.length === 0) {\n        parts = [pattern];\n    }\n    /**\n     * The scan method does not return an empty part for the pattern with a forward slash.\n     * This is another part of micromatch/picomatch#58.\n     */\n    if (parts[0].startsWith('/')) {\n        parts[0] = parts[0].slice(1);\n        parts.unshift('');\n    }\n    return parts;\n}\npattern$1.getPatternParts = getPatternParts;\nfunction makeRe(pattern, options) {\n    return micromatch.makeRe(pattern, options);\n}\npattern$1.makeRe = makeRe;\nfunction convertPatternsToRe(patterns, options) {\n    return patterns.map((pattern) => makeRe(pattern, options));\n}\npattern$1.convertPatternsToRe = convertPatternsToRe;\nfunction matchAny(entry, patternsRe) {\n    return patternsRe.some((patternRe) => patternRe.test(entry));\n}\npattern$1.matchAny = matchAny;\n\nvar stream$4 = {};\n\n/*\n * merge2\n * https://github.com/teambition/merge2\n *\n * Copyright (c) 2014-2020 Teambition\n * Licensed under the MIT license.\n */\nconst Stream = require$$0$7;\nconst PassThrough = Stream.PassThrough;\nconst slice = Array.prototype.slice;\n\nvar merge2_1 = merge2$1;\n\nfunction merge2$1 () {\n  const streamsQueue = [];\n  const args = slice.call(arguments);\n  let merging = false;\n  let options = args[args.length - 1];\n\n  if (options && !Array.isArray(options) && options.pipe == null) {\n    args.pop();\n  } else {\n    options = {};\n  }\n\n  const doEnd = options.end !== false;\n  const doPipeError = options.pipeError === true;\n  if (options.objectMode == null) {\n    options.objectMode = true;\n  }\n  if (options.highWaterMark == null) {\n    options.highWaterMark = 64 * 1024;\n  }\n  const mergedStream = PassThrough(options);\n\n  function addStream () {\n    for (let i = 0, len = arguments.length; i < len; i++) {\n      streamsQueue.push(pauseStreams(arguments[i], options));\n    }\n    mergeStream();\n    return this\n  }\n\n  function mergeStream () {\n    if (merging) {\n      return\n    }\n    merging = true;\n\n    let streams = streamsQueue.shift();\n    if (!streams) {\n      process.nextTick(endStream);\n      return\n    }\n    if (!Array.isArray(streams)) {\n      streams = [streams];\n    }\n\n    let pipesCount = streams.length + 1;\n\n    function next () {\n      if (--pipesCount > 0) {\n        return\n      }\n      merging = false;\n      mergeStream();\n    }\n\n    function pipe (stream) {\n      function onend () {\n        stream.removeListener('merge2UnpipeEnd', onend);\n        stream.removeListener('end', onend);\n        if (doPipeError) {\n          stream.removeListener('error', onerror);\n        }\n        next();\n      }\n      function onerror (err) {\n        mergedStream.emit('error', err);\n      }\n      // skip ended stream\n      if (stream._readableState.endEmitted) {\n        return next()\n      }\n\n      stream.on('merge2UnpipeEnd', onend);\n      stream.on('end', onend);\n\n      if (doPipeError) {\n        stream.on('error', onerror);\n      }\n\n      stream.pipe(mergedStream, { end: false });\n      // compatible for old stream\n      stream.resume();\n    }\n\n    for (let i = 0; i < streams.length; i++) {\n      pipe(streams[i]);\n    }\n\n    next();\n  }\n\n  function endStream () {\n    merging = false;\n    // emit 'queueDrain' when all streams merged.\n    mergedStream.emit('queueDrain');\n    if (doEnd) {\n      mergedStream.end();\n    }\n  }\n\n  mergedStream.setMaxListeners(0);\n  mergedStream.add = addStream;\n  mergedStream.on('unpipe', function (stream) {\n    stream.emit('merge2UnpipeEnd');\n  });\n\n  if (args.length) {\n    addStream.apply(null, args);\n  }\n  return mergedStream\n}\n\n// check and pause streams for pipe.\nfunction pauseStreams (streams, options) {\n  if (!Array.isArray(streams)) {\n    // Backwards-compat with old-style streams\n    if (!streams._readableState && streams.pipe) {\n      streams = streams.pipe(PassThrough(options));\n    }\n    if (!streams._readableState || !streams.pause || !streams.pipe) {\n      throw new Error('Only readable stream can be merged.')\n    }\n    streams.pause();\n  } else {\n    for (let i = 0, len = streams.length; i < len; i++) {\n      streams[i] = pauseStreams(streams[i], options);\n    }\n  }\n  return streams\n}\n\nObject.defineProperty(stream$4, \"__esModule\", { value: true });\nstream$4.merge = void 0;\nconst merge2 = merge2_1;\nfunction merge$1(streams) {\n    const mergedStream = merge2(streams);\n    streams.forEach((stream) => {\n        stream.once('error', (error) => mergedStream.emit('error', error));\n    });\n    mergedStream.once('close', () => propagateCloseEventToSources(streams));\n    mergedStream.once('end', () => propagateCloseEventToSources(streams));\n    return mergedStream;\n}\nstream$4.merge = merge$1;\nfunction propagateCloseEventToSources(streams) {\n    streams.forEach((stream) => stream.emit('close'));\n}\n\nvar string$2 = {};\n\nObject.defineProperty(string$2, \"__esModule\", { value: true });\nstring$2.isEmpty = string$2.isString = void 0;\nfunction isString(input) {\n    return typeof input === 'string';\n}\nstring$2.isString = isString;\nfunction isEmpty$1(input) {\n    return input === '';\n}\nstring$2.isEmpty = isEmpty$1;\n\nObject.defineProperty(utils$g, \"__esModule\", { value: true });\nutils$g.string = utils$g.stream = utils$g.pattern = utils$g.path = utils$g.fs = utils$g.errno = utils$g.array = void 0;\nconst array = array$1;\nutils$g.array = array;\nconst errno = errno$1;\nutils$g.errno = errno;\nconst fs$g = fs$h;\nutils$g.fs = fs$g;\nconst path$e = path$h;\nutils$g.path = path$e;\nconst pattern = pattern$1;\nutils$g.pattern = pattern;\nconst stream$3 = stream$4;\nutils$g.stream = stream$3;\nconst string$1 = string$2;\nutils$g.string = string$1;\n\nObject.defineProperty(tasks, \"__esModule\", { value: true });\ntasks.convertPatternGroupToTask = tasks.convertPatternGroupsToTasks = tasks.groupPatternsByBaseDirectory = tasks.getNegativePatternsAsPositive = tasks.getPositivePatterns = tasks.convertPatternsToTasks = tasks.generate = void 0;\nconst utils$a = utils$g;\nfunction generate(patterns, settings) {\n    const positivePatterns = getPositivePatterns(patterns);\n    const negativePatterns = getNegativePatternsAsPositive(patterns, settings.ignore);\n    const staticPatterns = positivePatterns.filter((pattern) => utils$a.pattern.isStaticPattern(pattern, settings));\n    const dynamicPatterns = positivePatterns.filter((pattern) => utils$a.pattern.isDynamicPattern(pattern, settings));\n    const staticTasks = convertPatternsToTasks(staticPatterns, negativePatterns, /* dynamic */ false);\n    const dynamicTasks = convertPatternsToTasks(dynamicPatterns, negativePatterns, /* dynamic */ true);\n    return staticTasks.concat(dynamicTasks);\n}\ntasks.generate = generate;\n/**\n * Returns tasks grouped by basic pattern directories.\n *\n * Patterns that can be found inside (`./`) and outside (`../`) the current directory are handled separately.\n * This is necessary because directory traversal starts at the base directory and goes deeper.\n */\nfunction convertPatternsToTasks(positive, negative, dynamic) {\n    const tasks = [];\n    const patternsOutsideCurrentDirectory = utils$a.pattern.getPatternsOutsideCurrentDirectory(positive);\n    const patternsInsideCurrentDirectory = utils$a.pattern.getPatternsInsideCurrentDirectory(positive);\n    const outsideCurrentDirectoryGroup = groupPatternsByBaseDirectory(patternsOutsideCurrentDirectory);\n    const insideCurrentDirectoryGroup = groupPatternsByBaseDirectory(patternsInsideCurrentDirectory);\n    tasks.push(...convertPatternGroupsToTasks(outsideCurrentDirectoryGroup, negative, dynamic));\n    /*\n     * For the sake of reducing future accesses to the file system, we merge all tasks within the current directory\n     * into a global task, if at least one pattern refers to the root (`.`). In this case, the global task covers the rest.\n     */\n    if ('.' in insideCurrentDirectoryGroup) {\n        tasks.push(convertPatternGroupToTask('.', patternsInsideCurrentDirectory, negative, dynamic));\n    }\n    else {\n        tasks.push(...convertPatternGroupsToTasks(insideCurrentDirectoryGroup, negative, dynamic));\n    }\n    return tasks;\n}\ntasks.convertPatternsToTasks = convertPatternsToTasks;\nfunction getPositivePatterns(patterns) {\n    return utils$a.pattern.getPositivePatterns(patterns);\n}\ntasks.getPositivePatterns = getPositivePatterns;\nfunction getNegativePatternsAsPositive(patterns, ignore) {\n    const negative = utils$a.pattern.getNegativePatterns(patterns).concat(ignore);\n    const positive = negative.map(utils$a.pattern.convertToPositivePattern);\n    return positive;\n}\ntasks.getNegativePatternsAsPositive = getNegativePatternsAsPositive;\nfunction groupPatternsByBaseDirectory(patterns) {\n    const group = {};\n    return patterns.reduce((collection, pattern) => {\n        const base = utils$a.pattern.getBaseDirectory(pattern);\n        if (base in collection) {\n            collection[base].push(pattern);\n        }\n        else {\n            collection[base] = [pattern];\n        }\n        return collection;\n    }, group);\n}\ntasks.groupPatternsByBaseDirectory = groupPatternsByBaseDirectory;\nfunction convertPatternGroupsToTasks(positive, negative, dynamic) {\n    return Object.keys(positive).map((base) => {\n        return convertPatternGroupToTask(base, positive[base], negative, dynamic);\n    });\n}\ntasks.convertPatternGroupsToTasks = convertPatternGroupsToTasks;\nfunction convertPatternGroupToTask(base, positive, negative, dynamic) {\n    return {\n        dynamic,\n        positive,\n        negative,\n        base,\n        patterns: [].concat(positive, negative.map(utils$a.pattern.convertToNegativePattern))\n    };\n}\ntasks.convertPatternGroupToTask = convertPatternGroupToTask;\n\nvar patterns = {};\n\nObject.defineProperty(patterns, \"__esModule\", { value: true });\npatterns.removeDuplicateSlashes = patterns.transform = void 0;\n/**\n * Matches a sequence of two or more consecutive slashes, excluding the first two slashes at the beginning of the string.\n * The latter is due to the presence of the device path at the beginning of the UNC path.\n * @todo rewrite to negative lookbehind with the next major release.\n */\nconst DOUBLE_SLASH_RE$1 = /(?!^)\\/{2,}/g;\nfunction transform(patterns) {\n    return patterns.map((pattern) => removeDuplicateSlashes(pattern));\n}\npatterns.transform = transform;\n/**\n * This package only works with forward slashes as a path separator.\n * Because of this, we cannot use the standard `path.normalize` method, because on Windows platform it will use of backslashes.\n */\nfunction removeDuplicateSlashes(pattern) {\n    return pattern.replace(DOUBLE_SLASH_RE$1, '/');\n}\npatterns.removeDuplicateSlashes = removeDuplicateSlashes;\n\nvar async$6 = {};\n\nvar stream$2 = {};\n\nvar out$3 = {};\n\nvar async$5 = {};\n\nObject.defineProperty(async$5, \"__esModule\", { value: true });\nasync$5.read = void 0;\nfunction read$4(path, settings, callback) {\n    settings.fs.lstat(path, (lstatError, lstat) => {\n        if (lstatError !== null) {\n            callFailureCallback$2(callback, lstatError);\n            return;\n        }\n        if (!lstat.isSymbolicLink() || !settings.followSymbolicLink) {\n            callSuccessCallback$2(callback, lstat);\n            return;\n        }\n        settings.fs.stat(path, (statError, stat) => {\n            if (statError !== null) {\n                if (settings.throwErrorOnBrokenSymbolicLink) {\n                    callFailureCallback$2(callback, statError);\n                    return;\n                }\n                callSuccessCallback$2(callback, lstat);\n                return;\n            }\n            if (settings.markSymbolicLink) {\n                stat.isSymbolicLink = () => true;\n            }\n            callSuccessCallback$2(callback, stat);\n        });\n    });\n}\nasync$5.read = read$4;\nfunction callFailureCallback$2(callback, error) {\n    callback(error);\n}\nfunction callSuccessCallback$2(callback, result) {\n    callback(null, result);\n}\n\nvar sync$8 = {};\n\nObject.defineProperty(sync$8, \"__esModule\", { value: true });\nsync$8.read = void 0;\nfunction read$3(path, settings) {\n    const lstat = settings.fs.lstatSync(path);\n    if (!lstat.isSymbolicLink() || !settings.followSymbolicLink) {\n        return lstat;\n    }\n    try {\n        const stat = settings.fs.statSync(path);\n        if (settings.markSymbolicLink) {\n            stat.isSymbolicLink = () => true;\n        }\n        return stat;\n    }\n    catch (error) {\n        if (!settings.throwErrorOnBrokenSymbolicLink) {\n            return lstat;\n        }\n        throw error;\n    }\n}\nsync$8.read = read$3;\n\nvar settings$3 = {};\n\nvar fs$f = {};\n\n(function (exports) {\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\n\texports.createFileSystemAdapter = exports.FILE_SYSTEM_ADAPTER = void 0;\n\tconst fs = require$$0__default;\n\texports.FILE_SYSTEM_ADAPTER = {\n\t    lstat: fs.lstat,\n\t    stat: fs.stat,\n\t    lstatSync: fs.lstatSync,\n\t    statSync: fs.statSync\n\t};\n\tfunction createFileSystemAdapter(fsMethods) {\n\t    if (fsMethods === undefined) {\n\t        return exports.FILE_SYSTEM_ADAPTER;\n\t    }\n\t    return Object.assign(Object.assign({}, exports.FILE_SYSTEM_ADAPTER), fsMethods);\n\t}\n\texports.createFileSystemAdapter = createFileSystemAdapter;\n} (fs$f));\n\nObject.defineProperty(settings$3, \"__esModule\", { value: true });\nconst fs$e = fs$f;\nclass Settings$2 {\n    constructor(_options = {}) {\n        this._options = _options;\n        this.followSymbolicLink = this._getValue(this._options.followSymbolicLink, true);\n        this.fs = fs$e.createFileSystemAdapter(this._options.fs);\n        this.markSymbolicLink = this._getValue(this._options.markSymbolicLink, false);\n        this.throwErrorOnBrokenSymbolicLink = this._getValue(this._options.throwErrorOnBrokenSymbolicLink, true);\n    }\n    _getValue(option, value) {\n        return option !== null && option !== void 0 ? option : value;\n    }\n}\nsettings$3.default = Settings$2;\n\nObject.defineProperty(out$3, \"__esModule\", { value: true });\nout$3.statSync = out$3.stat = out$3.Settings = void 0;\nconst async$4 = async$5;\nconst sync$7 = sync$8;\nconst settings_1$3 = settings$3;\nout$3.Settings = settings_1$3.default;\nfunction stat$4(path, optionsOrSettingsOrCallback, callback) {\n    if (typeof optionsOrSettingsOrCallback === 'function') {\n        async$4.read(path, getSettings$2(), optionsOrSettingsOrCallback);\n        return;\n    }\n    async$4.read(path, getSettings$2(optionsOrSettingsOrCallback), callback);\n}\nout$3.stat = stat$4;\nfunction statSync(path, optionsOrSettings) {\n    const settings = getSettings$2(optionsOrSettings);\n    return sync$7.read(path, settings);\n}\nout$3.statSync = statSync;\nfunction getSettings$2(settingsOrOptions = {}) {\n    if (settingsOrOptions instanceof settings_1$3.default) {\n        return settingsOrOptions;\n    }\n    return new settings_1$3.default(settingsOrOptions);\n}\n\nvar out$2 = {};\n\nvar async$3 = {};\n\nvar async$2 = {};\n\nvar out$1 = {};\n\nvar async$1 = {};\n\n/*! queue-microtask. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */\n\nlet promise;\n\nvar queueMicrotask_1 = typeof queueMicrotask === 'function'\n  ? queueMicrotask.bind(typeof window !== 'undefined' ? window : commonjsGlobal)\n  // reuse resolved promise, and allocate it lazily\n  : cb => (promise || (promise = Promise.resolve()))\n    .then(cb)\n    .catch(err => setTimeout(() => { throw err }, 0));\n\n/*! run-parallel. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */\n\nvar runParallel_1 = runParallel;\n\nconst queueMicrotask$1 = queueMicrotask_1;\n\nfunction runParallel (tasks, cb) {\n  let results, pending, keys;\n  let isSync = true;\n\n  if (Array.isArray(tasks)) {\n    results = [];\n    pending = tasks.length;\n  } else {\n    keys = Object.keys(tasks);\n    results = {};\n    pending = keys.length;\n  }\n\n  function done (err) {\n    function end () {\n      if (cb) cb(err, results);\n      cb = null;\n    }\n    if (isSync) queueMicrotask$1(end);\n    else end();\n  }\n\n  function each (i, err, result) {\n    results[i] = result;\n    if (--pending === 0 || err) {\n      done(err);\n    }\n  }\n\n  if (!pending) {\n    // empty\n    done(null);\n  } else if (keys) {\n    // object\n    keys.forEach(function (key) {\n      tasks[key](function (err, result) { each(key, err, result); });\n    });\n  } else {\n    // array\n    tasks.forEach(function (task, i) {\n      task(function (err, result) { each(i, err, result); });\n    });\n  }\n\n  isSync = false;\n}\n\nvar constants$2 = {};\n\nObject.defineProperty(constants$2, \"__esModule\", { value: true });\nconstants$2.IS_SUPPORT_READDIR_WITH_FILE_TYPES = void 0;\nconst NODE_PROCESS_VERSION_PARTS = process.versions.node.split('.');\nif (NODE_PROCESS_VERSION_PARTS[0] === undefined || NODE_PROCESS_VERSION_PARTS[1] === undefined) {\n    throw new Error(`Unexpected behavior. The 'process.versions.node' variable has invalid value: ${process.versions.node}`);\n}\nconst MAJOR_VERSION = Number.parseInt(NODE_PROCESS_VERSION_PARTS[0], 10);\nconst MINOR_VERSION = Number.parseInt(NODE_PROCESS_VERSION_PARTS[1], 10);\nconst SUPPORTED_MAJOR_VERSION = 10;\nconst SUPPORTED_MINOR_VERSION = 10;\nconst IS_MATCHED_BY_MAJOR = MAJOR_VERSION > SUPPORTED_MAJOR_VERSION;\nconst IS_MATCHED_BY_MAJOR_AND_MINOR = MAJOR_VERSION === SUPPORTED_MAJOR_VERSION && MINOR_VERSION >= SUPPORTED_MINOR_VERSION;\n/**\n * IS `true` for Node.js 10.10 and greater.\n */\nconstants$2.IS_SUPPORT_READDIR_WITH_FILE_TYPES = IS_MATCHED_BY_MAJOR || IS_MATCHED_BY_MAJOR_AND_MINOR;\n\nvar utils$9 = {};\n\nvar fs$d = {};\n\nObject.defineProperty(fs$d, \"__esModule\", { value: true });\nfs$d.createDirentFromStats = void 0;\nclass DirentFromStats {\n    constructor(name, stats) {\n        this.name = name;\n        this.isBlockDevice = stats.isBlockDevice.bind(stats);\n        this.isCharacterDevice = stats.isCharacterDevice.bind(stats);\n        this.isDirectory = stats.isDirectory.bind(stats);\n        this.isFIFO = stats.isFIFO.bind(stats);\n        this.isFile = stats.isFile.bind(stats);\n        this.isSocket = stats.isSocket.bind(stats);\n        this.isSymbolicLink = stats.isSymbolicLink.bind(stats);\n    }\n}\nfunction createDirentFromStats(name, stats) {\n    return new DirentFromStats(name, stats);\n}\nfs$d.createDirentFromStats = createDirentFromStats;\n\nObject.defineProperty(utils$9, \"__esModule\", { value: true });\nutils$9.fs = void 0;\nconst fs$c = fs$d;\nutils$9.fs = fs$c;\n\nvar common$a = {};\n\nObject.defineProperty(common$a, \"__esModule\", { value: true });\ncommon$a.joinPathSegments = void 0;\nfunction joinPathSegments$1(a, b, separator) {\n    /**\n     * The correct handling of cases when the first segment is a root (`/`, `C:/`) or UNC path (`//?/C:/`).\n     */\n    if (a.endsWith(separator)) {\n        return a + b;\n    }\n    return a + separator + b;\n}\ncommon$a.joinPathSegments = joinPathSegments$1;\n\nObject.defineProperty(async$1, \"__esModule\", { value: true });\nasync$1.readdir = async$1.readdirWithFileTypes = async$1.read = void 0;\nconst fsStat$5 = out$3;\nconst rpl = runParallel_1;\nconst constants_1$1 = constants$2;\nconst utils$8 = utils$9;\nconst common$9 = common$a;\nfunction read$2(directory, settings, callback) {\n    if (!settings.stats && constants_1$1.IS_SUPPORT_READDIR_WITH_FILE_TYPES) {\n        readdirWithFileTypes$1(directory, settings, callback);\n        return;\n    }\n    readdir$3(directory, settings, callback);\n}\nasync$1.read = read$2;\nfunction readdirWithFileTypes$1(directory, settings, callback) {\n    settings.fs.readdir(directory, { withFileTypes: true }, (readdirError, dirents) => {\n        if (readdirError !== null) {\n            callFailureCallback$1(callback, readdirError);\n            return;\n        }\n        const entries = dirents.map((dirent) => ({\n            dirent,\n            name: dirent.name,\n            path: common$9.joinPathSegments(directory, dirent.name, settings.pathSegmentSeparator)\n        }));\n        if (!settings.followSymbolicLinks) {\n            callSuccessCallback$1(callback, entries);\n            return;\n        }\n        const tasks = entries.map((entry) => makeRplTaskEntry(entry, settings));\n        rpl(tasks, (rplError, rplEntries) => {\n            if (rplError !== null) {\n                callFailureCallback$1(callback, rplError);\n                return;\n            }\n            callSuccessCallback$1(callback, rplEntries);\n        });\n    });\n}\nasync$1.readdirWithFileTypes = readdirWithFileTypes$1;\nfunction makeRplTaskEntry(entry, settings) {\n    return (done) => {\n        if (!entry.dirent.isSymbolicLink()) {\n            done(null, entry);\n            return;\n        }\n        settings.fs.stat(entry.path, (statError, stats) => {\n            if (statError !== null) {\n                if (settings.throwErrorOnBrokenSymbolicLink) {\n                    done(statError);\n                    return;\n                }\n                done(null, entry);\n                return;\n            }\n            entry.dirent = utils$8.fs.createDirentFromStats(entry.name, stats);\n            done(null, entry);\n        });\n    };\n}\nfunction readdir$3(directory, settings, callback) {\n    settings.fs.readdir(directory, (readdirError, names) => {\n        if (readdirError !== null) {\n            callFailureCallback$1(callback, readdirError);\n            return;\n        }\n        const tasks = names.map((name) => {\n            const path = common$9.joinPathSegments(directory, name, settings.pathSegmentSeparator);\n            return (done) => {\n                fsStat$5.stat(path, settings.fsStatSettings, (error, stats) => {\n                    if (error !== null) {\n                        done(error);\n                        return;\n                    }\n                    const entry = {\n                        name,\n                        path,\n                        dirent: utils$8.fs.createDirentFromStats(name, stats)\n                    };\n                    if (settings.stats) {\n                        entry.stats = stats;\n                    }\n                    done(null, entry);\n                });\n            };\n        });\n        rpl(tasks, (rplError, entries) => {\n            if (rplError !== null) {\n                callFailureCallback$1(callback, rplError);\n                return;\n            }\n            callSuccessCallback$1(callback, entries);\n        });\n    });\n}\nasync$1.readdir = readdir$3;\nfunction callFailureCallback$1(callback, error) {\n    callback(error);\n}\nfunction callSuccessCallback$1(callback, result) {\n    callback(null, result);\n}\n\nvar sync$6 = {};\n\nObject.defineProperty(sync$6, \"__esModule\", { value: true });\nsync$6.readdir = sync$6.readdirWithFileTypes = sync$6.read = void 0;\nconst fsStat$4 = out$3;\nconst constants_1 = constants$2;\nconst utils$7 = utils$9;\nconst common$8 = common$a;\nfunction read$1(directory, settings) {\n    if (!settings.stats && constants_1.IS_SUPPORT_READDIR_WITH_FILE_TYPES) {\n        return readdirWithFileTypes(directory, settings);\n    }\n    return readdir$2(directory, settings);\n}\nsync$6.read = read$1;\nfunction readdirWithFileTypes(directory, settings) {\n    const dirents = settings.fs.readdirSync(directory, { withFileTypes: true });\n    return dirents.map((dirent) => {\n        const entry = {\n            dirent,\n            name: dirent.name,\n            path: common$8.joinPathSegments(directory, dirent.name, settings.pathSegmentSeparator)\n        };\n        if (entry.dirent.isSymbolicLink() && settings.followSymbolicLinks) {\n            try {\n                const stats = settings.fs.statSync(entry.path);\n                entry.dirent = utils$7.fs.createDirentFromStats(entry.name, stats);\n            }\n            catch (error) {\n                if (settings.throwErrorOnBrokenSymbolicLink) {\n                    throw error;\n                }\n            }\n        }\n        return entry;\n    });\n}\nsync$6.readdirWithFileTypes = readdirWithFileTypes;\nfunction readdir$2(directory, settings) {\n    const names = settings.fs.readdirSync(directory);\n    return names.map((name) => {\n        const entryPath = common$8.joinPathSegments(directory, name, settings.pathSegmentSeparator);\n        const stats = fsStat$4.statSync(entryPath, settings.fsStatSettings);\n        const entry = {\n            name,\n            path: entryPath,\n            dirent: utils$7.fs.createDirentFromStats(name, stats)\n        };\n        if (settings.stats) {\n            entry.stats = stats;\n        }\n        return entry;\n    });\n}\nsync$6.readdir = readdir$2;\n\nvar settings$2 = {};\n\nvar fs$b = {};\n\n(function (exports) {\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\n\texports.createFileSystemAdapter = exports.FILE_SYSTEM_ADAPTER = void 0;\n\tconst fs = require$$0__default;\n\texports.FILE_SYSTEM_ADAPTER = {\n\t    lstat: fs.lstat,\n\t    stat: fs.stat,\n\t    lstatSync: fs.lstatSync,\n\t    statSync: fs.statSync,\n\t    readdir: fs.readdir,\n\t    readdirSync: fs.readdirSync\n\t};\n\tfunction createFileSystemAdapter(fsMethods) {\n\t    if (fsMethods === undefined) {\n\t        return exports.FILE_SYSTEM_ADAPTER;\n\t    }\n\t    return Object.assign(Object.assign({}, exports.FILE_SYSTEM_ADAPTER), fsMethods);\n\t}\n\texports.createFileSystemAdapter = createFileSystemAdapter;\n} (fs$b));\n\nObject.defineProperty(settings$2, \"__esModule\", { value: true });\nconst path$d = require$$0$4;\nconst fsStat$3 = out$3;\nconst fs$a = fs$b;\nclass Settings$1 {\n    constructor(_options = {}) {\n        this._options = _options;\n        this.followSymbolicLinks = this._getValue(this._options.followSymbolicLinks, false);\n        this.fs = fs$a.createFileSystemAdapter(this._options.fs);\n        this.pathSegmentSeparator = this._getValue(this._options.pathSegmentSeparator, path$d.sep);\n        this.stats = this._getValue(this._options.stats, false);\n        this.throwErrorOnBrokenSymbolicLink = this._getValue(this._options.throwErrorOnBrokenSymbolicLink, true);\n        this.fsStatSettings = new fsStat$3.Settings({\n            followSymbolicLink: this.followSymbolicLinks,\n            fs: this.fs,\n            throwErrorOnBrokenSymbolicLink: this.throwErrorOnBrokenSymbolicLink\n        });\n    }\n    _getValue(option, value) {\n        return option !== null && option !== void 0 ? option : value;\n    }\n}\nsettings$2.default = Settings$1;\n\nObject.defineProperty(out$1, \"__esModule\", { value: true });\nout$1.Settings = out$1.scandirSync = out$1.scandir = void 0;\nconst async = async$1;\nconst sync$5 = sync$6;\nconst settings_1$2 = settings$2;\nout$1.Settings = settings_1$2.default;\nfunction scandir(path, optionsOrSettingsOrCallback, callback) {\n    if (typeof optionsOrSettingsOrCallback === 'function') {\n        async.read(path, getSettings$1(), optionsOrSettingsOrCallback);\n        return;\n    }\n    async.read(path, getSettings$1(optionsOrSettingsOrCallback), callback);\n}\nout$1.scandir = scandir;\nfunction scandirSync(path, optionsOrSettings) {\n    const settings = getSettings$1(optionsOrSettings);\n    return sync$5.read(path, settings);\n}\nout$1.scandirSync = scandirSync;\nfunction getSettings$1(settingsOrOptions = {}) {\n    if (settingsOrOptions instanceof settings_1$2.default) {\n        return settingsOrOptions;\n    }\n    return new settings_1$2.default(settingsOrOptions);\n}\n\nvar queue = {exports: {}};\n\nfunction reusify$1 (Constructor) {\n  var head = new Constructor();\n  var tail = head;\n\n  function get () {\n    var current = head;\n\n    if (current.next) {\n      head = current.next;\n    } else {\n      head = new Constructor();\n      tail = head;\n    }\n\n    current.next = null;\n\n    return current\n  }\n\n  function release (obj) {\n    tail.next = obj;\n    tail = obj;\n  }\n\n  return {\n    get: get,\n    release: release\n  }\n}\n\nvar reusify_1 = reusify$1;\n\n/* eslint-disable no-var */\n\nvar reusify = reusify_1;\n\nfunction fastqueue (context, worker, concurrency) {\n  if (typeof context === 'function') {\n    concurrency = worker;\n    worker = context;\n    context = null;\n  }\n\n  if (concurrency < 1) {\n    throw new Error('fastqueue concurrency must be greater than 1')\n  }\n\n  var cache = reusify(Task);\n  var queueHead = null;\n  var queueTail = null;\n  var _running = 0;\n  var errorHandler = null;\n\n  var self = {\n    push: push,\n    drain: noop$3,\n    saturated: noop$3,\n    pause: pause,\n    paused: false,\n    concurrency: concurrency,\n    running: running,\n    resume: resume,\n    idle: idle,\n    length: length,\n    getQueue: getQueue,\n    unshift: unshift,\n    empty: noop$3,\n    kill: kill,\n    killAndDrain: killAndDrain,\n    error: error\n  };\n\n  return self\n\n  function running () {\n    return _running\n  }\n\n  function pause () {\n    self.paused = true;\n  }\n\n  function length () {\n    var current = queueHead;\n    var counter = 0;\n\n    while (current) {\n      current = current.next;\n      counter++;\n    }\n\n    return counter\n  }\n\n  function getQueue () {\n    var current = queueHead;\n    var tasks = [];\n\n    while (current) {\n      tasks.push(current.value);\n      current = current.next;\n    }\n\n    return tasks\n  }\n\n  function resume () {\n    if (!self.paused) return\n    self.paused = false;\n    for (var i = 0; i < self.concurrency; i++) {\n      _running++;\n      release();\n    }\n  }\n\n  function idle () {\n    return _running === 0 && self.length() === 0\n  }\n\n  function push (value, done) {\n    var current = cache.get();\n\n    current.context = context;\n    current.release = release;\n    current.value = value;\n    current.callback = done || noop$3;\n    current.errorHandler = errorHandler;\n\n    if (_running === self.concurrency || self.paused) {\n      if (queueTail) {\n        queueTail.next = current;\n        queueTail = current;\n      } else {\n        queueHead = current;\n        queueTail = current;\n        self.saturated();\n      }\n    } else {\n      _running++;\n      worker.call(context, current.value, current.worked);\n    }\n  }\n\n  function unshift (value, done) {\n    var current = cache.get();\n\n    current.context = context;\n    current.release = release;\n    current.value = value;\n    current.callback = done || noop$3;\n\n    if (_running === self.concurrency || self.paused) {\n      if (queueHead) {\n        current.next = queueHead;\n        queueHead = current;\n      } else {\n        queueHead = current;\n        queueTail = current;\n        self.saturated();\n      }\n    } else {\n      _running++;\n      worker.call(context, current.value, current.worked);\n    }\n  }\n\n  function release (holder) {\n    if (holder) {\n      cache.release(holder);\n    }\n    var next = queueHead;\n    if (next) {\n      if (!self.paused) {\n        if (queueTail === queueHead) {\n          queueTail = null;\n        }\n        queueHead = next.next;\n        next.next = null;\n        worker.call(context, next.value, next.worked);\n        if (queueTail === null) {\n          self.empty();\n        }\n      } else {\n        _running--;\n      }\n    } else if (--_running === 0) {\n      self.drain();\n    }\n  }\n\n  function kill () {\n    queueHead = null;\n    queueTail = null;\n    self.drain = noop$3;\n  }\n\n  function killAndDrain () {\n    queueHead = null;\n    queueTail = null;\n    self.drain();\n    self.drain = noop$3;\n  }\n\n  function error (handler) {\n    errorHandler = handler;\n  }\n}\n\nfunction noop$3 () {}\n\nfunction Task () {\n  this.value = null;\n  this.callback = noop$3;\n  this.next = null;\n  this.release = noop$3;\n  this.context = null;\n  this.errorHandler = null;\n\n  var self = this;\n\n  this.worked = function worked (err, result) {\n    var callback = self.callback;\n    var errorHandler = self.errorHandler;\n    var val = self.value;\n    self.value = null;\n    self.callback = noop$3;\n    if (self.errorHandler) {\n      errorHandler(err, val);\n    }\n    callback.call(self.context, err, result);\n    self.release(self);\n  };\n}\n\nfunction queueAsPromised (context, worker, concurrency) {\n  if (typeof context === 'function') {\n    concurrency = worker;\n    worker = context;\n    context = null;\n  }\n\n  function asyncWrapper (arg, cb) {\n    worker.call(this, arg)\n      .then(function (res) {\n        cb(null, res);\n      }, cb);\n  }\n\n  var queue = fastqueue(context, asyncWrapper, concurrency);\n\n  var pushCb = queue.push;\n  var unshiftCb = queue.unshift;\n\n  queue.push = push;\n  queue.unshift = unshift;\n  queue.drained = drained;\n\n  return queue\n\n  function push (value) {\n    var p = new Promise(function (resolve, reject) {\n      pushCb(value, function (err, result) {\n        if (err) {\n          reject(err);\n          return\n        }\n        resolve(result);\n      });\n    });\n\n    // Let's fork the promise chain to\n    // make the error bubble up to the user but\n    // not lead to a unhandledRejection\n    p.catch(noop$3);\n\n    return p\n  }\n\n  function unshift (value) {\n    var p = new Promise(function (resolve, reject) {\n      unshiftCb(value, function (err, result) {\n        if (err) {\n          reject(err);\n          return\n        }\n        resolve(result);\n      });\n    });\n\n    // Let's fork the promise chain to\n    // make the error bubble up to the user but\n    // not lead to a unhandledRejection\n    p.catch(noop$3);\n\n    return p\n  }\n\n  function drained () {\n    var previousDrain = queue.drain;\n\n    var p = new Promise(function (resolve) {\n      queue.drain = function () {\n        previousDrain();\n        resolve();\n      };\n    });\n\n    return p\n  }\n}\n\nqueue.exports = fastqueue;\nqueue.exports.promise = queueAsPromised;\n\nvar common$7 = {};\n\nObject.defineProperty(common$7, \"__esModule\", { value: true });\ncommon$7.joinPathSegments = common$7.replacePathSegmentSeparator = common$7.isAppliedFilter = common$7.isFatalError = void 0;\nfunction isFatalError(settings, error) {\n    if (settings.errorFilter === null) {\n        return true;\n    }\n    return !settings.errorFilter(error);\n}\ncommon$7.isFatalError = isFatalError;\nfunction isAppliedFilter(filter, value) {\n    return filter === null || filter(value);\n}\ncommon$7.isAppliedFilter = isAppliedFilter;\nfunction replacePathSegmentSeparator(filepath, separator) {\n    return filepath.split(/[/\\\\]/).join(separator);\n}\ncommon$7.replacePathSegmentSeparator = replacePathSegmentSeparator;\nfunction joinPathSegments(a, b, separator) {\n    if (a === '') {\n        return b;\n    }\n    /**\n     * The correct handling of cases when the first segment is a root (`/`, `C:/`) or UNC path (`//?/C:/`).\n     */\n    if (a.endsWith(separator)) {\n        return a + b;\n    }\n    return a + separator + b;\n}\ncommon$7.joinPathSegments = joinPathSegments;\n\nvar reader$1 = {};\n\nObject.defineProperty(reader$1, \"__esModule\", { value: true });\nconst common$6 = common$7;\nclass Reader$1 {\n    constructor(_root, _settings) {\n        this._root = _root;\n        this._settings = _settings;\n        this._root = common$6.replacePathSegmentSeparator(_root, _settings.pathSegmentSeparator);\n    }\n}\nreader$1.default = Reader$1;\n\nObject.defineProperty(async$2, \"__esModule\", { value: true });\nconst events_1 = require$$0$5;\nconst fsScandir$2 = out$1;\nconst fastq = queue.exports;\nconst common$5 = common$7;\nconst reader_1$3 = reader$1;\nclass AsyncReader extends reader_1$3.default {\n    constructor(_root, _settings) {\n        super(_root, _settings);\n        this._settings = _settings;\n        this._scandir = fsScandir$2.scandir;\n        this._emitter = new events_1.EventEmitter();\n        this._queue = fastq(this._worker.bind(this), this._settings.concurrency);\n        this._isFatalError = false;\n        this._isDestroyed = false;\n        this._queue.drain = () => {\n            if (!this._isFatalError) {\n                this._emitter.emit('end');\n            }\n        };\n    }\n    read() {\n        this._isFatalError = false;\n        this._isDestroyed = false;\n        setImmediate(() => {\n            this._pushToQueue(this._root, this._settings.basePath);\n        });\n        return this._emitter;\n    }\n    get isDestroyed() {\n        return this._isDestroyed;\n    }\n    destroy() {\n        if (this._isDestroyed) {\n            throw new Error('The reader is already destroyed');\n        }\n        this._isDestroyed = true;\n        this._queue.killAndDrain();\n    }\n    onEntry(callback) {\n        this._emitter.on('entry', callback);\n    }\n    onError(callback) {\n        this._emitter.once('error', callback);\n    }\n    onEnd(callback) {\n        this._emitter.once('end', callback);\n    }\n    _pushToQueue(directory, base) {\n        const queueItem = { directory, base };\n        this._queue.push(queueItem, (error) => {\n            if (error !== null) {\n                this._handleError(error);\n            }\n        });\n    }\n    _worker(item, done) {\n        this._scandir(item.directory, this._settings.fsScandirSettings, (error, entries) => {\n            if (error !== null) {\n                done(error, undefined);\n                return;\n            }\n            for (const entry of entries) {\n                this._handleEntry(entry, item.base);\n            }\n            done(null, undefined);\n        });\n    }\n    _handleError(error) {\n        if (this._isDestroyed || !common$5.isFatalError(this._settings, error)) {\n            return;\n        }\n        this._isFatalError = true;\n        this._isDestroyed = true;\n        this._emitter.emit('error', error);\n    }\n    _handleEntry(entry, base) {\n        if (this._isDestroyed || this._isFatalError) {\n            return;\n        }\n        const fullpath = entry.path;\n        if (base !== undefined) {\n            entry.path = common$5.joinPathSegments(base, entry.name, this._settings.pathSegmentSeparator);\n        }\n        if (common$5.isAppliedFilter(this._settings.entryFilter, entry)) {\n            this._emitEntry(entry);\n        }\n        if (entry.dirent.isDirectory() && common$5.isAppliedFilter(this._settings.deepFilter, entry)) {\n            this._pushToQueue(fullpath, base === undefined ? undefined : entry.path);\n        }\n    }\n    _emitEntry(entry) {\n        this._emitter.emit('entry', entry);\n    }\n}\nasync$2.default = AsyncReader;\n\nObject.defineProperty(async$3, \"__esModule\", { value: true });\nconst async_1$3 = async$2;\nclass AsyncProvider {\n    constructor(_root, _settings) {\n        this._root = _root;\n        this._settings = _settings;\n        this._reader = new async_1$3.default(this._root, this._settings);\n        this._storage = [];\n    }\n    read(callback) {\n        this._reader.onError((error) => {\n            callFailureCallback(callback, error);\n        });\n        this._reader.onEntry((entry) => {\n            this._storage.push(entry);\n        });\n        this._reader.onEnd(() => {\n            callSuccessCallback(callback, this._storage);\n        });\n        this._reader.read();\n    }\n}\nasync$3.default = AsyncProvider;\nfunction callFailureCallback(callback, error) {\n    callback(error);\n}\nfunction callSuccessCallback(callback, entries) {\n    callback(null, entries);\n}\n\nvar stream$1 = {};\n\nObject.defineProperty(stream$1, \"__esModule\", { value: true });\nconst stream_1$5 = require$$0$7;\nconst async_1$2 = async$2;\nclass StreamProvider {\n    constructor(_root, _settings) {\n        this._root = _root;\n        this._settings = _settings;\n        this._reader = new async_1$2.default(this._root, this._settings);\n        this._stream = new stream_1$5.Readable({\n            objectMode: true,\n            read: () => { },\n            destroy: () => {\n                if (!this._reader.isDestroyed) {\n                    this._reader.destroy();\n                }\n            }\n        });\n    }\n    read() {\n        this._reader.onError((error) => {\n            this._stream.emit('error', error);\n        });\n        this._reader.onEntry((entry) => {\n            this._stream.push(entry);\n        });\n        this._reader.onEnd(() => {\n            this._stream.push(null);\n        });\n        this._reader.read();\n        return this._stream;\n    }\n}\nstream$1.default = StreamProvider;\n\nvar sync$4 = {};\n\nvar sync$3 = {};\n\nObject.defineProperty(sync$3, \"__esModule\", { value: true });\nconst fsScandir$1 = out$1;\nconst common$4 = common$7;\nconst reader_1$2 = reader$1;\nclass SyncReader extends reader_1$2.default {\n    constructor() {\n        super(...arguments);\n        this._scandir = fsScandir$1.scandirSync;\n        this._storage = [];\n        this._queue = new Set();\n    }\n    read() {\n        this._pushToQueue(this._root, this._settings.basePath);\n        this._handleQueue();\n        return this._storage;\n    }\n    _pushToQueue(directory, base) {\n        this._queue.add({ directory, base });\n    }\n    _handleQueue() {\n        for (const item of this._queue.values()) {\n            this._handleDirectory(item.directory, item.base);\n        }\n    }\n    _handleDirectory(directory, base) {\n        try {\n            const entries = this._scandir(directory, this._settings.fsScandirSettings);\n            for (const entry of entries) {\n                this._handleEntry(entry, base);\n            }\n        }\n        catch (error) {\n            this._handleError(error);\n        }\n    }\n    _handleError(error) {\n        if (!common$4.isFatalError(this._settings, error)) {\n            return;\n        }\n        throw error;\n    }\n    _handleEntry(entry, base) {\n        const fullpath = entry.path;\n        if (base !== undefined) {\n            entry.path = common$4.joinPathSegments(base, entry.name, this._settings.pathSegmentSeparator);\n        }\n        if (common$4.isAppliedFilter(this._settings.entryFilter, entry)) {\n            this._pushToStorage(entry);\n        }\n        if (entry.dirent.isDirectory() && common$4.isAppliedFilter(this._settings.deepFilter, entry)) {\n            this._pushToQueue(fullpath, base === undefined ? undefined : entry.path);\n        }\n    }\n    _pushToStorage(entry) {\n        this._storage.push(entry);\n    }\n}\nsync$3.default = SyncReader;\n\nObject.defineProperty(sync$4, \"__esModule\", { value: true });\nconst sync_1$3 = sync$3;\nclass SyncProvider {\n    constructor(_root, _settings) {\n        this._root = _root;\n        this._settings = _settings;\n        this._reader = new sync_1$3.default(this._root, this._settings);\n    }\n    read() {\n        return this._reader.read();\n    }\n}\nsync$4.default = SyncProvider;\n\nvar settings$1 = {};\n\nObject.defineProperty(settings$1, \"__esModule\", { value: true });\nconst path$c = require$$0$4;\nconst fsScandir = out$1;\nclass Settings {\n    constructor(_options = {}) {\n        this._options = _options;\n        this.basePath = this._getValue(this._options.basePath, undefined);\n        this.concurrency = this._getValue(this._options.concurrency, Number.POSITIVE_INFINITY);\n        this.deepFilter = this._getValue(this._options.deepFilter, null);\n        this.entryFilter = this._getValue(this._options.entryFilter, null);\n        this.errorFilter = this._getValue(this._options.errorFilter, null);\n        this.pathSegmentSeparator = this._getValue(this._options.pathSegmentSeparator, path$c.sep);\n        this.fsScandirSettings = new fsScandir.Settings({\n            followSymbolicLinks: this._options.followSymbolicLinks,\n            fs: this._options.fs,\n            pathSegmentSeparator: this._options.pathSegmentSeparator,\n            stats: this._options.stats,\n            throwErrorOnBrokenSymbolicLink: this._options.throwErrorOnBrokenSymbolicLink\n        });\n    }\n    _getValue(option, value) {\n        return option !== null && option !== void 0 ? option : value;\n    }\n}\nsettings$1.default = Settings;\n\nObject.defineProperty(out$2, \"__esModule\", { value: true });\nout$2.Settings = out$2.walkStream = out$2.walkSync = out$2.walk = void 0;\nconst async_1$1 = async$3;\nconst stream_1$4 = stream$1;\nconst sync_1$2 = sync$4;\nconst settings_1$1 = settings$1;\nout$2.Settings = settings_1$1.default;\nfunction walk$2(directory, optionsOrSettingsOrCallback, callback) {\n    if (typeof optionsOrSettingsOrCallback === 'function') {\n        new async_1$1.default(directory, getSettings()).read(optionsOrSettingsOrCallback);\n        return;\n    }\n    new async_1$1.default(directory, getSettings(optionsOrSettingsOrCallback)).read(callback);\n}\nout$2.walk = walk$2;\nfunction walkSync(directory, optionsOrSettings) {\n    const settings = getSettings(optionsOrSettings);\n    const provider = new sync_1$2.default(directory, settings);\n    return provider.read();\n}\nout$2.walkSync = walkSync;\nfunction walkStream(directory, optionsOrSettings) {\n    const settings = getSettings(optionsOrSettings);\n    const provider = new stream_1$4.default(directory, settings);\n    return provider.read();\n}\nout$2.walkStream = walkStream;\nfunction getSettings(settingsOrOptions = {}) {\n    if (settingsOrOptions instanceof settings_1$1.default) {\n        return settingsOrOptions;\n    }\n    return new settings_1$1.default(settingsOrOptions);\n}\n\nvar reader = {};\n\nObject.defineProperty(reader, \"__esModule\", { value: true });\nconst path$b = require$$0$4;\nconst fsStat$2 = out$3;\nconst utils$6 = utils$g;\nclass Reader {\n    constructor(_settings) {\n        this._settings = _settings;\n        this._fsStatSettings = new fsStat$2.Settings({\n            followSymbolicLink: this._settings.followSymbolicLinks,\n            fs: this._settings.fs,\n            throwErrorOnBrokenSymbolicLink: this._settings.followSymbolicLinks\n        });\n    }\n    _getFullEntryPath(filepath) {\n        return path$b.resolve(this._settings.cwd, filepath);\n    }\n    _makeEntry(stats, pattern) {\n        const entry = {\n            name: pattern,\n            path: pattern,\n            dirent: utils$6.fs.createDirentFromStats(pattern, stats)\n        };\n        if (this._settings.stats) {\n            entry.stats = stats;\n        }\n        return entry;\n    }\n    _isFatalError(error) {\n        return !utils$6.errno.isEnoentCodeError(error) && !this._settings.suppressErrors;\n    }\n}\nreader.default = Reader;\n\nObject.defineProperty(stream$2, \"__esModule\", { value: true });\nconst stream_1$3 = require$$0$7;\nconst fsStat$1 = out$3;\nconst fsWalk$1 = out$2;\nconst reader_1$1 = reader;\nclass ReaderStream extends reader_1$1.default {\n    constructor() {\n        super(...arguments);\n        this._walkStream = fsWalk$1.walkStream;\n        this._stat = fsStat$1.stat;\n    }\n    dynamic(root, options) {\n        return this._walkStream(root, options);\n    }\n    static(patterns, options) {\n        const filepaths = patterns.map(this._getFullEntryPath, this);\n        const stream = new stream_1$3.PassThrough({ objectMode: true });\n        stream._write = (index, _enc, done) => {\n            return this._getEntry(filepaths[index], patterns[index], options)\n                .then((entry) => {\n                if (entry !== null && options.entryFilter(entry)) {\n                    stream.push(entry);\n                }\n                if (index === filepaths.length - 1) {\n                    stream.end();\n                }\n                done();\n            })\n                .catch(done);\n        };\n        for (let i = 0; i < filepaths.length; i++) {\n            stream.write(i);\n        }\n        return stream;\n    }\n    _getEntry(filepath, pattern, options) {\n        return this._getStat(filepath)\n            .then((stats) => this._makeEntry(stats, pattern))\n            .catch((error) => {\n            if (options.errorFilter(error)) {\n                return null;\n            }\n            throw error;\n        });\n    }\n    _getStat(filepath) {\n        return new Promise((resolve, reject) => {\n            this._stat(filepath, this._fsStatSettings, (error, stats) => {\n                return error === null ? resolve(stats) : reject(error);\n            });\n        });\n    }\n}\nstream$2.default = ReaderStream;\n\nvar provider = {};\n\nvar deep = {};\n\nvar partial = {};\n\nvar matcher = {};\n\nObject.defineProperty(matcher, \"__esModule\", { value: true });\nconst utils$5 = utils$g;\nclass Matcher {\n    constructor(_patterns, _settings, _micromatchOptions) {\n        this._patterns = _patterns;\n        this._settings = _settings;\n        this._micromatchOptions = _micromatchOptions;\n        this._storage = [];\n        this._fillStorage();\n    }\n    _fillStorage() {\n        /**\n         * The original pattern may include `{,*,**,a/*}`, which will lead to problems with matching (unresolved level).\n         * So, before expand patterns with brace expansion into separated patterns.\n         */\n        const patterns = utils$5.pattern.expandPatternsWithBraceExpansion(this._patterns);\n        for (const pattern of patterns) {\n            const segments = this._getPatternSegments(pattern);\n            const sections = this._splitSegmentsIntoSections(segments);\n            this._storage.push({\n                complete: sections.length <= 1,\n                pattern,\n                segments,\n                sections\n            });\n        }\n    }\n    _getPatternSegments(pattern) {\n        const parts = utils$5.pattern.getPatternParts(pattern, this._micromatchOptions);\n        return parts.map((part) => {\n            const dynamic = utils$5.pattern.isDynamicPattern(part, this._settings);\n            if (!dynamic) {\n                return {\n                    dynamic: false,\n                    pattern: part\n                };\n            }\n            return {\n                dynamic: true,\n                pattern: part,\n                patternRe: utils$5.pattern.makeRe(part, this._micromatchOptions)\n            };\n        });\n    }\n    _splitSegmentsIntoSections(segments) {\n        return utils$5.array.splitWhen(segments, (segment) => segment.dynamic && utils$5.pattern.hasGlobStar(segment.pattern));\n    }\n}\nmatcher.default = Matcher;\n\nObject.defineProperty(partial, \"__esModule\", { value: true });\nconst matcher_1 = matcher;\nclass PartialMatcher extends matcher_1.default {\n    match(filepath) {\n        const parts = filepath.split('/');\n        const levels = parts.length;\n        const patterns = this._storage.filter((info) => !info.complete || info.segments.length > levels);\n        for (const pattern of patterns) {\n            const section = pattern.sections[0];\n            /**\n             * In this case, the pattern has a globstar and we must read all directories unconditionally,\n             * but only if the level has reached the end of the first group.\n             *\n             * fixtures/{a,b}/**\n             *  ^ true/false  ^ always true\n            */\n            if (!pattern.complete && levels > section.length) {\n                return true;\n            }\n            const match = parts.every((part, index) => {\n                const segment = pattern.segments[index];\n                if (segment.dynamic && segment.patternRe.test(part)) {\n                    return true;\n                }\n                if (!segment.dynamic && segment.pattern === part) {\n                    return true;\n                }\n                return false;\n            });\n            if (match) {\n                return true;\n            }\n        }\n        return false;\n    }\n}\npartial.default = PartialMatcher;\n\nObject.defineProperty(deep, \"__esModule\", { value: true });\nconst utils$4 = utils$g;\nconst partial_1 = partial;\nclass DeepFilter {\n    constructor(_settings, _micromatchOptions) {\n        this._settings = _settings;\n        this._micromatchOptions = _micromatchOptions;\n    }\n    getFilter(basePath, positive, negative) {\n        const matcher = this._getMatcher(positive);\n        const negativeRe = this._getNegativePatternsRe(negative);\n        return (entry) => this._filter(basePath, entry, matcher, negativeRe);\n    }\n    _getMatcher(patterns) {\n        return new partial_1.default(patterns, this._settings, this._micromatchOptions);\n    }\n    _getNegativePatternsRe(patterns) {\n        const affectDepthOfReadingPatterns = patterns.filter(utils$4.pattern.isAffectDepthOfReadingPattern);\n        return utils$4.pattern.convertPatternsToRe(affectDepthOfReadingPatterns, this._micromatchOptions);\n    }\n    _filter(basePath, entry, matcher, negativeRe) {\n        if (this._isSkippedByDeep(basePath, entry.path)) {\n            return false;\n        }\n        if (this._isSkippedSymbolicLink(entry)) {\n            return false;\n        }\n        const filepath = utils$4.path.removeLeadingDotSegment(entry.path);\n        if (this._isSkippedByPositivePatterns(filepath, matcher)) {\n            return false;\n        }\n        return this._isSkippedByNegativePatterns(filepath, negativeRe);\n    }\n    _isSkippedByDeep(basePath, entryPath) {\n        /**\n         * Avoid unnecessary depth calculations when it doesn't matter.\n         */\n        if (this._settings.deep === Infinity) {\n            return false;\n        }\n        return this._getEntryLevel(basePath, entryPath) >= this._settings.deep;\n    }\n    _getEntryLevel(basePath, entryPath) {\n        const entryPathDepth = entryPath.split('/').length;\n        if (basePath === '') {\n            return entryPathDepth;\n        }\n        const basePathDepth = basePath.split('/').length;\n        return entryPathDepth - basePathDepth;\n    }\n    _isSkippedSymbolicLink(entry) {\n        return !this._settings.followSymbolicLinks && entry.dirent.isSymbolicLink();\n    }\n    _isSkippedByPositivePatterns(entryPath, matcher) {\n        return !this._settings.baseNameMatch && !matcher.match(entryPath);\n    }\n    _isSkippedByNegativePatterns(entryPath, patternsRe) {\n        return !utils$4.pattern.matchAny(entryPath, patternsRe);\n    }\n}\ndeep.default = DeepFilter;\n\nvar entry$1 = {};\n\nObject.defineProperty(entry$1, \"__esModule\", { value: true });\nconst utils$3 = utils$g;\nclass EntryFilter {\n    constructor(_settings, _micromatchOptions) {\n        this._settings = _settings;\n        this._micromatchOptions = _micromatchOptions;\n        this.index = new Map();\n    }\n    getFilter(positive, negative) {\n        const positiveRe = utils$3.pattern.convertPatternsToRe(positive, this._micromatchOptions);\n        const negativeRe = utils$3.pattern.convertPatternsToRe(negative, this._micromatchOptions);\n        return (entry) => this._filter(entry, positiveRe, negativeRe);\n    }\n    _filter(entry, positiveRe, negativeRe) {\n        if (this._settings.unique && this._isDuplicateEntry(entry)) {\n            return false;\n        }\n        if (this._onlyFileFilter(entry) || this._onlyDirectoryFilter(entry)) {\n            return false;\n        }\n        if (this._isSkippedByAbsoluteNegativePatterns(entry.path, negativeRe)) {\n            return false;\n        }\n        const filepath = this._settings.baseNameMatch ? entry.name : entry.path;\n        const isMatched = this._isMatchToPatterns(filepath, positiveRe) && !this._isMatchToPatterns(entry.path, negativeRe);\n        if (this._settings.unique && isMatched) {\n            this._createIndexRecord(entry);\n        }\n        return isMatched;\n    }\n    _isDuplicateEntry(entry) {\n        return this.index.has(entry.path);\n    }\n    _createIndexRecord(entry) {\n        this.index.set(entry.path, undefined);\n    }\n    _onlyFileFilter(entry) {\n        return this._settings.onlyFiles && !entry.dirent.isFile();\n    }\n    _onlyDirectoryFilter(entry) {\n        return this._settings.onlyDirectories && !entry.dirent.isDirectory();\n    }\n    _isSkippedByAbsoluteNegativePatterns(entryPath, patternsRe) {\n        if (!this._settings.absolute) {\n            return false;\n        }\n        const fullpath = utils$3.path.makeAbsolute(this._settings.cwd, entryPath);\n        return utils$3.pattern.matchAny(fullpath, patternsRe);\n    }\n    /**\n     * First, just trying to apply patterns to the path.\n     * Second, trying to apply patterns to the path with final slash.\n     */\n    _isMatchToPatterns(entryPath, patternsRe) {\n        const filepath = utils$3.path.removeLeadingDotSegment(entryPath);\n        return utils$3.pattern.matchAny(filepath, patternsRe) || utils$3.pattern.matchAny(filepath + '/', patternsRe);\n    }\n}\nentry$1.default = EntryFilter;\n\nvar error$2 = {};\n\nObject.defineProperty(error$2, \"__esModule\", { value: true });\nconst utils$2 = utils$g;\nclass ErrorFilter {\n    constructor(_settings) {\n        this._settings = _settings;\n    }\n    getFilter() {\n        return (error) => this._isNonFatalError(error);\n    }\n    _isNonFatalError(error) {\n        return utils$2.errno.isEnoentCodeError(error) || this._settings.suppressErrors;\n    }\n}\nerror$2.default = ErrorFilter;\n\nvar entry = {};\n\nObject.defineProperty(entry, \"__esModule\", { value: true });\nconst utils$1 = utils$g;\nclass EntryTransformer {\n    constructor(_settings) {\n        this._settings = _settings;\n    }\n    getTransformer() {\n        return (entry) => this._transform(entry);\n    }\n    _transform(entry) {\n        let filepath = entry.path;\n        if (this._settings.absolute) {\n            filepath = utils$1.path.makeAbsolute(this._settings.cwd, filepath);\n            filepath = utils$1.path.unixify(filepath);\n        }\n        if (this._settings.markDirectories && entry.dirent.isDirectory()) {\n            filepath += '/';\n        }\n        if (!this._settings.objectMode) {\n            return filepath;\n        }\n        return Object.assign(Object.assign({}, entry), { path: filepath });\n    }\n}\nentry.default = EntryTransformer;\n\nObject.defineProperty(provider, \"__esModule\", { value: true });\nconst path$a = require$$0$4;\nconst deep_1 = deep;\nconst entry_1 = entry$1;\nconst error_1 = error$2;\nconst entry_2 = entry;\nclass Provider {\n    constructor(_settings) {\n        this._settings = _settings;\n        this.errorFilter = new error_1.default(this._settings);\n        this.entryFilter = new entry_1.default(this._settings, this._getMicromatchOptions());\n        this.deepFilter = new deep_1.default(this._settings, this._getMicromatchOptions());\n        this.entryTransformer = new entry_2.default(this._settings);\n    }\n    _getRootDirectory(task) {\n        return path$a.resolve(this._settings.cwd, task.base);\n    }\n    _getReaderOptions(task) {\n        const basePath = task.base === '.' ? '' : task.base;\n        return {\n            basePath,\n            pathSegmentSeparator: '/',\n            concurrency: this._settings.concurrency,\n            deepFilter: this.deepFilter.getFilter(basePath, task.positive, task.negative),\n            entryFilter: this.entryFilter.getFilter(task.positive, task.negative),\n            errorFilter: this.errorFilter.getFilter(),\n            followSymbolicLinks: this._settings.followSymbolicLinks,\n            fs: this._settings.fs,\n            stats: this._settings.stats,\n            throwErrorOnBrokenSymbolicLink: this._settings.throwErrorOnBrokenSymbolicLink,\n            transform: this.entryTransformer.getTransformer()\n        };\n    }\n    _getMicromatchOptions() {\n        return {\n            dot: this._settings.dot,\n            matchBase: this._settings.baseNameMatch,\n            nobrace: !this._settings.braceExpansion,\n            nocase: !this._settings.caseSensitiveMatch,\n            noext: !this._settings.extglob,\n            noglobstar: !this._settings.globstar,\n            posix: true,\n            strictSlashes: false\n        };\n    }\n}\nprovider.default = Provider;\n\nObject.defineProperty(async$6, \"__esModule\", { value: true });\nconst stream_1$2 = stream$2;\nconst provider_1$2 = provider;\nclass ProviderAsync extends provider_1$2.default {\n    constructor() {\n        super(...arguments);\n        this._reader = new stream_1$2.default(this._settings);\n    }\n    read(task) {\n        const root = this._getRootDirectory(task);\n        const options = this._getReaderOptions(task);\n        const entries = [];\n        return new Promise((resolve, reject) => {\n            const stream = this.api(root, task, options);\n            stream.once('error', reject);\n            stream.on('data', (entry) => entries.push(options.transform(entry)));\n            stream.once('end', () => resolve(entries));\n        });\n    }\n    api(root, task, options) {\n        if (task.dynamic) {\n            return this._reader.dynamic(root, options);\n        }\n        return this._reader.static(task.patterns, options);\n    }\n}\nasync$6.default = ProviderAsync;\n\nvar stream = {};\n\nObject.defineProperty(stream, \"__esModule\", { value: true });\nconst stream_1$1 = require$$0$7;\nconst stream_2 = stream$2;\nconst provider_1$1 = provider;\nclass ProviderStream extends provider_1$1.default {\n    constructor() {\n        super(...arguments);\n        this._reader = new stream_2.default(this._settings);\n    }\n    read(task) {\n        const root = this._getRootDirectory(task);\n        const options = this._getReaderOptions(task);\n        const source = this.api(root, task, options);\n        const destination = new stream_1$1.Readable({ objectMode: true, read: () => { } });\n        source\n            .once('error', (error) => destination.emit('error', error))\n            .on('data', (entry) => destination.emit('data', options.transform(entry)))\n            .once('end', () => destination.emit('end'));\n        destination\n            .once('close', () => source.destroy());\n        return destination;\n    }\n    api(root, task, options) {\n        if (task.dynamic) {\n            return this._reader.dynamic(root, options);\n        }\n        return this._reader.static(task.patterns, options);\n    }\n}\nstream.default = ProviderStream;\n\nvar sync$2 = {};\n\nvar sync$1 = {};\n\nObject.defineProperty(sync$1, \"__esModule\", { value: true });\nconst fsStat = out$3;\nconst fsWalk = out$2;\nconst reader_1 = reader;\nclass ReaderSync extends reader_1.default {\n    constructor() {\n        super(...arguments);\n        this._walkSync = fsWalk.walkSync;\n        this._statSync = fsStat.statSync;\n    }\n    dynamic(root, options) {\n        return this._walkSync(root, options);\n    }\n    static(patterns, options) {\n        const entries = [];\n        for (const pattern of patterns) {\n            const filepath = this._getFullEntryPath(pattern);\n            const entry = this._getEntry(filepath, pattern, options);\n            if (entry === null || !options.entryFilter(entry)) {\n                continue;\n            }\n            entries.push(entry);\n        }\n        return entries;\n    }\n    _getEntry(filepath, pattern, options) {\n        try {\n            const stats = this._getStat(filepath);\n            return this._makeEntry(stats, pattern);\n        }\n        catch (error) {\n            if (options.errorFilter(error)) {\n                return null;\n            }\n            throw error;\n        }\n    }\n    _getStat(filepath) {\n        return this._statSync(filepath, this._fsStatSettings);\n    }\n}\nsync$1.default = ReaderSync;\n\nObject.defineProperty(sync$2, \"__esModule\", { value: true });\nconst sync_1$1 = sync$1;\nconst provider_1 = provider;\nclass ProviderSync extends provider_1.default {\n    constructor() {\n        super(...arguments);\n        this._reader = new sync_1$1.default(this._settings);\n    }\n    read(task) {\n        const root = this._getRootDirectory(task);\n        const options = this._getReaderOptions(task);\n        const entries = this.api(root, task, options);\n        return entries.map(options.transform);\n    }\n    api(root, task, options) {\n        if (task.dynamic) {\n            return this._reader.dynamic(root, options);\n        }\n        return this._reader.static(task.patterns, options);\n    }\n}\nsync$2.default = ProviderSync;\n\nvar settings = {};\n\n(function (exports) {\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\n\texports.DEFAULT_FILE_SYSTEM_ADAPTER = void 0;\n\tconst fs = require$$0__default;\n\tconst os = require$$1;\n\t/**\n\t * The `os.cpus` method can return zero. We expect the number of cores to be greater than zero.\n\t * https://github.com/nodejs/node/blob/7faeddf23a98c53896f8b574a6e66589e8fb1eb8/lib/os.js#L106-L107\n\t */\n\tconst CPU_COUNT = Math.max(os.cpus().length, 1);\n\texports.DEFAULT_FILE_SYSTEM_ADAPTER = {\n\t    lstat: fs.lstat,\n\t    lstatSync: fs.lstatSync,\n\t    stat: fs.stat,\n\t    statSync: fs.statSync,\n\t    readdir: fs.readdir,\n\t    readdirSync: fs.readdirSync\n\t};\n\tclass Settings {\n\t    constructor(_options = {}) {\n\t        this._options = _options;\n\t        this.absolute = this._getValue(this._options.absolute, false);\n\t        this.baseNameMatch = this._getValue(this._options.baseNameMatch, false);\n\t        this.braceExpansion = this._getValue(this._options.braceExpansion, true);\n\t        this.caseSensitiveMatch = this._getValue(this._options.caseSensitiveMatch, true);\n\t        this.concurrency = this._getValue(this._options.concurrency, CPU_COUNT);\n\t        this.cwd = this._getValue(this._options.cwd, process.cwd());\n\t        this.deep = this._getValue(this._options.deep, Infinity);\n\t        this.dot = this._getValue(this._options.dot, false);\n\t        this.extglob = this._getValue(this._options.extglob, true);\n\t        this.followSymbolicLinks = this._getValue(this._options.followSymbolicLinks, true);\n\t        this.fs = this._getFileSystemMethods(this._options.fs);\n\t        this.globstar = this._getValue(this._options.globstar, true);\n\t        this.ignore = this._getValue(this._options.ignore, []);\n\t        this.markDirectories = this._getValue(this._options.markDirectories, false);\n\t        this.objectMode = this._getValue(this._options.objectMode, false);\n\t        this.onlyDirectories = this._getValue(this._options.onlyDirectories, false);\n\t        this.onlyFiles = this._getValue(this._options.onlyFiles, true);\n\t        this.stats = this._getValue(this._options.stats, false);\n\t        this.suppressErrors = this._getValue(this._options.suppressErrors, false);\n\t        this.throwErrorOnBrokenSymbolicLink = this._getValue(this._options.throwErrorOnBrokenSymbolicLink, false);\n\t        this.unique = this._getValue(this._options.unique, true);\n\t        if (this.onlyDirectories) {\n\t            this.onlyFiles = false;\n\t        }\n\t        if (this.stats) {\n\t            this.objectMode = true;\n\t        }\n\t    }\n\t    _getValue(option, value) {\n\t        return option === undefined ? value : option;\n\t    }\n\t    _getFileSystemMethods(methods = {}) {\n\t        return Object.assign(Object.assign({}, exports.DEFAULT_FILE_SYSTEM_ADAPTER), methods);\n\t    }\n\t}\n\texports.default = Settings;\n} (settings));\n\nconst taskManager = tasks;\nconst patternManager = patterns;\nconst async_1 = async$6;\nconst stream_1 = stream;\nconst sync_1 = sync$2;\nconst settings_1 = settings;\nconst utils = utils$g;\nasync function FastGlob(source, options) {\n    assertPatternsInput(source);\n    const works = getWorks(source, async_1.default, options);\n    const result = await Promise.all(works);\n    return utils.array.flatten(result);\n}\n// https://github.com/typescript-eslint/typescript-eslint/issues/60\n// eslint-disable-next-line no-redeclare\n(function (FastGlob) {\n    function sync(source, options) {\n        assertPatternsInput(source);\n        const works = getWorks(source, sync_1.default, options);\n        return utils.array.flatten(works);\n    }\n    FastGlob.sync = sync;\n    function stream(source, options) {\n        assertPatternsInput(source);\n        const works = getWorks(source, stream_1.default, options);\n        /**\n         * The stream returned by the provider cannot work with an asynchronous iterator.\n         * To support asynchronous iterators, regardless of the number of tasks, we always multiplex streams.\n         * This affects performance (+25%). I don't see best solution right now.\n         */\n        return utils.stream.merge(works);\n    }\n    FastGlob.stream = stream;\n    function generateTasks(source, options) {\n        assertPatternsInput(source);\n        const patterns = patternManager.transform([].concat(source));\n        const settings = new settings_1.default(options);\n        return taskManager.generate(patterns, settings);\n    }\n    FastGlob.generateTasks = generateTasks;\n    function isDynamicPattern(source, options) {\n        assertPatternsInput(source);\n        const settings = new settings_1.default(options);\n        return utils.pattern.isDynamicPattern(source, settings);\n    }\n    FastGlob.isDynamicPattern = isDynamicPattern;\n    function escapePath(source) {\n        assertPatternsInput(source);\n        return utils.path.escape(source);\n    }\n    FastGlob.escapePath = escapePath;\n})(FastGlob || (FastGlob = {}));\nfunction getWorks(source, _Provider, options) {\n    const patterns = patternManager.transform([].concat(source));\n    const settings = new settings_1.default(options);\n    const tasks = taskManager.generate(patterns, settings);\n    const provider = new _Provider(settings);\n    return tasks.map(provider.read, provider);\n}\nfunction assertPatternsInput(input) {\n    const source = [].concat(input);\n    const isValidSource = source.every((item) => utils.string.isString(item) && !utils.string.isEmpty(item));\n    if (!isValidSource) {\n        throw new TypeError('Patterns must be a string (non empty) or an array of strings');\n    }\n}\nvar out = FastGlob;\n\nvar dist = {};\n\n(function (exports) {\n\tObject.defineProperty(exports, \"__esModule\", { value: true });\n\texports.lilconfigSync = exports.lilconfig = exports.defaultLoaders = void 0;\n\tconst path = require$$0$4;\n\tconst fs = require$$0__default;\n\tconst os = require$$1;\n\tconst fsReadFileAsync = fs.promises.readFile;\n\tfunction getDefaultSearchPlaces(name) {\n\t    return [\n\t        'package.json',\n\t        `.${name}rc.json`,\n\t        `.${name}rc.js`,\n\t        `${name}.config.js`,\n\t        `.${name}rc.cjs`,\n\t        `${name}.config.cjs`,\n\t    ];\n\t}\n\tfunction getSearchPaths(startDir, stopDir) {\n\t    return startDir\n\t        .split(path.sep)\n\t        .reduceRight((acc, _, ind, arr) => {\n\t        const currentPath = arr.slice(0, ind + 1).join(path.sep);\n\t        if (!acc.passedStopDir)\n\t            acc.searchPlaces.push(currentPath || path.sep);\n\t        if (currentPath === stopDir)\n\t            acc.passedStopDir = true;\n\t        return acc;\n\t    }, { searchPlaces: [], passedStopDir: false }).searchPlaces;\n\t}\n\texports.defaultLoaders = Object.freeze({\n\t    '.js': __require,\n\t    '.json': __require,\n\t    '.cjs': __require,\n\t    noExt(_, content) {\n\t        return JSON.parse(content);\n\t    },\n\t});\n\tfunction getExtDesc(ext) {\n\t    return ext === 'noExt' ? 'files without extensions' : `extension \"${ext}\"`;\n\t}\n\tfunction getOptions(name, options = {}) {\n\t    const conf = {\n\t        stopDir: os.homedir(),\n\t        searchPlaces: getDefaultSearchPlaces(name),\n\t        ignoreEmptySearchPlaces: true,\n\t        transform: (x) => x,\n\t        packageProp: [name],\n\t        ...options,\n\t        loaders: { ...exports.defaultLoaders, ...options.loaders },\n\t    };\n\t    conf.searchPlaces.forEach(place => {\n\t        const key = path.extname(place) || 'noExt';\n\t        const loader = conf.loaders[key];\n\t        if (!loader) {\n\t            throw new Error(`No loader specified for ${getExtDesc(key)}, so searchPlaces item \"${place}\" is invalid`);\n\t        }\n\t        if (typeof loader !== 'function') {\n\t            throw new Error(`loader for ${getExtDesc(key)} is not a function (type provided: \"${typeof loader}\"), so searchPlaces item \"${place}\" is invalid`);\n\t        }\n\t    });\n\t    return conf;\n\t}\n\tfunction getPackageProp(props, obj) {\n\t    if (typeof props === 'string' && props in obj)\n\t        return obj[props];\n\t    return ((Array.isArray(props) ? props : props.split('.')).reduce((acc, prop) => (acc === undefined ? acc : acc[prop]), obj) || null);\n\t}\n\tfunction getSearchItems(searchPlaces, searchPaths) {\n\t    return searchPaths.reduce((acc, searchPath) => {\n\t        searchPlaces.forEach(fileName => acc.push({\n\t            fileName,\n\t            filepath: path.join(searchPath, fileName),\n\t            loaderKey: path.extname(fileName) || 'noExt',\n\t        }));\n\t        return acc;\n\t    }, []);\n\t}\n\tfunction validateFilePath(filepath) {\n\t    if (!filepath)\n\t        throw new Error('load must pass a non-empty string');\n\t}\n\tfunction validateLoader(loader, ext) {\n\t    if (!loader)\n\t        throw new Error(`No loader specified for extension \"${ext}\"`);\n\t    if (typeof loader !== 'function')\n\t        throw new Error('loader is not a function');\n\t}\n\tfunction lilconfig(name, options) {\n\t    const { ignoreEmptySearchPlaces, loaders, packageProp, searchPlaces, stopDir, transform, } = getOptions(name, options);\n\t    return {\n\t        async search(searchFrom = process.cwd()) {\n\t            const searchPaths = getSearchPaths(searchFrom, stopDir);\n\t            const result = {\n\t                config: null,\n\t                filepath: '',\n\t            };\n\t            const searchItems = getSearchItems(searchPlaces, searchPaths);\n\t            for (const { fileName, filepath, loaderKey } of searchItems) {\n\t                try {\n\t                    await fs.promises.access(filepath);\n\t                }\n\t                catch (_a) {\n\t                    continue;\n\t                }\n\t                const content = String(await fsReadFileAsync(filepath));\n\t                const loader = loaders[loaderKey];\n\t                if (fileName === 'package.json') {\n\t                    const pkg = await loader(filepath, content);\n\t                    const maybeConfig = getPackageProp(packageProp, pkg);\n\t                    if (maybeConfig != null) {\n\t                        result.config = maybeConfig;\n\t                        result.filepath = filepath;\n\t                        break;\n\t                    }\n\t                    continue;\n\t                }\n\t                const isEmpty = content.trim() === '';\n\t                if (isEmpty && ignoreEmptySearchPlaces)\n\t                    continue;\n\t                if (isEmpty) {\n\t                    result.isEmpty = true;\n\t                    result.config = undefined;\n\t                }\n\t                else {\n\t                    validateLoader(loader, loaderKey);\n\t                    result.config = await loader(filepath, content);\n\t                }\n\t                result.filepath = filepath;\n\t                break;\n\t            }\n\t            if (result.filepath === '' && result.config === null)\n\t                return transform(null);\n\t            return transform(result);\n\t        },\n\t        async load(filepath) {\n\t            validateFilePath(filepath);\n\t            const absPath = path.resolve(process.cwd(), filepath);\n\t            const { base, ext } = path.parse(absPath);\n\t            const loaderKey = ext || 'noExt';\n\t            const loader = loaders[loaderKey];\n\t            validateLoader(loader, loaderKey);\n\t            const content = String(await fsReadFileAsync(absPath));\n\t            if (base === 'package.json') {\n\t                const pkg = await loader(absPath, content);\n\t                return transform({\n\t                    config: getPackageProp(packageProp, pkg),\n\t                    filepath: absPath,\n\t                });\n\t            }\n\t            const result = {\n\t                config: null,\n\t                filepath: absPath,\n\t            };\n\t            const isEmpty = content.trim() === '';\n\t            if (isEmpty && ignoreEmptySearchPlaces)\n\t                return transform({\n\t                    config: undefined,\n\t                    filepath: absPath,\n\t                    isEmpty: true,\n\t                });\n\t            result.config = isEmpty\n\t                ? undefined\n\t                : await loader(absPath, content);\n\t            return transform(isEmpty ? { ...result, isEmpty, config: undefined } : result);\n\t        },\n\t    };\n\t}\n\texports.lilconfig = lilconfig;\n\tfunction lilconfigSync(name, options) {\n\t    const { ignoreEmptySearchPlaces, loaders, packageProp, searchPlaces, stopDir, transform, } = getOptions(name, options);\n\t    return {\n\t        search(searchFrom = process.cwd()) {\n\t            const searchPaths = getSearchPaths(searchFrom, stopDir);\n\t            const result = {\n\t                config: null,\n\t                filepath: '',\n\t            };\n\t            const searchItems = getSearchItems(searchPlaces, searchPaths);\n\t            for (const { fileName, filepath, loaderKey } of searchItems) {\n\t                try {\n\t                    fs.accessSync(filepath);\n\t                }\n\t                catch (_a) {\n\t                    continue;\n\t                }\n\t                const loader = loaders[loaderKey];\n\t                const content = String(fs.readFileSync(filepath));\n\t                if (fileName === 'package.json') {\n\t                    const pkg = loader(filepath, content);\n\t                    const maybeConfig = getPackageProp(packageProp, pkg);\n\t                    if (maybeConfig != null) {\n\t                        result.config = maybeConfig;\n\t                        result.filepath = filepath;\n\t                        break;\n\t                    }\n\t                    continue;\n\t                }\n\t                const isEmpty = content.trim() === '';\n\t                if (isEmpty && ignoreEmptySearchPlaces)\n\t                    continue;\n\t                if (isEmpty) {\n\t                    result.isEmpty = true;\n\t                    result.config = undefined;\n\t                }\n\t                else {\n\t                    validateLoader(loader, loaderKey);\n\t                    result.config = loader(filepath, content);\n\t                }\n\t                result.filepath = filepath;\n\t                break;\n\t            }\n\t            if (result.filepath === '' && result.config === null)\n\t                return transform(null);\n\t            return transform(result);\n\t        },\n\t        load(filepath) {\n\t            validateFilePath(filepath);\n\t            const absPath = path.resolve(process.cwd(), filepath);\n\t            const { base, ext } = path.parse(absPath);\n\t            const loaderKey = ext || 'noExt';\n\t            const loader = loaders[loaderKey];\n\t            validateLoader(loader, loaderKey);\n\t            const content = String(fs.readFileSync(absPath));\n\t            if (base === 'package.json') {\n\t                const pkg = loader(absPath, content);\n\t                return transform({\n\t                    config: getPackageProp(packageProp, pkg),\n\t                    filepath: absPath,\n\t                });\n\t            }\n\t            const result = {\n\t                config: null,\n\t                filepath: absPath,\n\t            };\n\t            const isEmpty = content.trim() === '';\n\t            if (isEmpty && ignoreEmptySearchPlaces)\n\t                return transform({\n\t                    filepath: absPath,\n\t                    config: undefined,\n\t                    isEmpty: true,\n\t                });\n\t            result.config = isEmpty ? undefined : loader(absPath, content);\n\t            return transform(isEmpty ? { ...result, isEmpty, config: undefined } : result);\n\t        },\n\t    };\n\t}\n\texports.lilconfigSync = lilconfigSync;\n} (dist));\n\nconst ALIAS = Symbol.for('yaml.alias');\nconst DOC = Symbol.for('yaml.document');\nconst MAP = Symbol.for('yaml.map');\nconst PAIR = Symbol.for('yaml.pair');\nconst SCALAR$1 = Symbol.for('yaml.scalar');\nconst SEQ = Symbol.for('yaml.seq');\nconst NODE_TYPE = Symbol.for('yaml.node.type');\nconst isAlias = (node) => !!node && typeof node === 'object' && node[NODE_TYPE] === ALIAS;\nconst isDocument = (node) => !!node && typeof node === 'object' && node[NODE_TYPE] === DOC;\nconst isMap = (node) => !!node && typeof node === 'object' && node[NODE_TYPE] === MAP;\nconst isPair = (node) => !!node && typeof node === 'object' && node[NODE_TYPE] === PAIR;\nconst isScalar$1 = (node) => !!node && typeof node === 'object' && node[NODE_TYPE] === SCALAR$1;\nconst isSeq = (node) => !!node && typeof node === 'object' && node[NODE_TYPE] === SEQ;\nfunction isCollection$1(node) {\n    if (node && typeof node === 'object')\n        switch (node[NODE_TYPE]) {\n            case MAP:\n            case SEQ:\n                return true;\n        }\n    return false;\n}\nfunction isNode(node) {\n    if (node && typeof node === 'object')\n        switch (node[NODE_TYPE]) {\n            case ALIAS:\n            case MAP:\n            case SCALAR$1:\n            case SEQ:\n                return true;\n        }\n    return false;\n}\nconst hasAnchor = (node) => (isScalar$1(node) || isCollection$1(node)) && !!node.anchor;\nclass NodeBase {\n    constructor(type) {\n        Object.defineProperty(this, NODE_TYPE, { value: type });\n    }\n    /** Create a copy of this node.  */\n    clone() {\n        const copy = Object.create(Object.getPrototypeOf(this), Object.getOwnPropertyDescriptors(this));\n        if (this.range)\n            copy.range = this.range.slice();\n        return copy;\n    }\n}\n\nconst BREAK$1 = Symbol('break visit');\nconst SKIP$1 = Symbol('skip children');\nconst REMOVE$1 = Symbol('remove node');\n/**\n * Apply a visitor to an AST node or document.\n *\n * Walks through the tree (depth-first) starting from `node`, calling a\n * `visitor` function with three arguments:\n *   - `key`: For sequence values and map `Pair`, the node's index in the\n *     collection. Within a `Pair`, `'key'` or `'value'`, correspondingly.\n *     `null` for the root node.\n *   - `node`: The current node.\n *   - `path`: The ancestry of the current node.\n *\n * The return value of the visitor may be used to control the traversal:\n *   - `undefined` (default): Do nothing and continue\n *   - `visit.SKIP`: Do not visit the children of this node, continue with next\n *     sibling\n *   - `visit.BREAK`: Terminate traversal completely\n *   - `visit.REMOVE`: Remove the current node, then continue with the next one\n *   - `Node`: Replace the current node, then continue by visiting it\n *   - `number`: While iterating the items of a sequence or map, set the index\n *     of the next step. This is useful especially if the index of the current\n *     node has changed.\n *\n * If `visitor` is a single function, it will be called with all values\n * encountered in the tree, including e.g. `null` values. Alternatively,\n * separate visitor functions may be defined for each `Map`, `Pair`, `Seq`,\n * `Alias` and `Scalar` node. To define the same visitor function for more than\n * one node type, use the `Collection` (map and seq), `Value` (map, seq & scalar)\n * and `Node` (alias, map, seq & scalar) targets. Of all these, only the most\n * specific defined one will be used for each node.\n */\nfunction visit$1(node, visitor) {\n    const visitor_ = initVisitor(visitor);\n    if (isDocument(node)) {\n        const cd = visit_(null, node.contents, visitor_, Object.freeze([node]));\n        if (cd === REMOVE$1)\n            node.contents = null;\n    }\n    else\n        visit_(null, node, visitor_, Object.freeze([]));\n}\n// Without the `as symbol` casts, TS declares these in the `visit`\n// namespace using `var`, but then complains about that because\n// `unique symbol` must be `const`.\n/** Terminate visit traversal completely */\nvisit$1.BREAK = BREAK$1;\n/** Do not visit the children of the current node */\nvisit$1.SKIP = SKIP$1;\n/** Remove the current node */\nvisit$1.REMOVE = REMOVE$1;\nfunction visit_(key, node, visitor, path) {\n    const ctrl = callVisitor(key, node, visitor, path);\n    if (isNode(ctrl) || isPair(ctrl)) {\n        replaceNode(key, path, ctrl);\n        return visit_(key, ctrl, visitor, path);\n    }\n    if (typeof ctrl !== 'symbol') {\n        if (isCollection$1(node)) {\n            path = Object.freeze(path.concat(node));\n            for (let i = 0; i < node.items.length; ++i) {\n                const ci = visit_(i, node.items[i], visitor, path);\n                if (typeof ci === 'number')\n                    i = ci - 1;\n                else if (ci === BREAK$1)\n                    return BREAK$1;\n                else if (ci === REMOVE$1) {\n                    node.items.splice(i, 1);\n                    i -= 1;\n                }\n            }\n        }\n        else if (isPair(node)) {\n            path = Object.freeze(path.concat(node));\n            const ck = visit_('key', node.key, visitor, path);\n            if (ck === BREAK$1)\n                return BREAK$1;\n            else if (ck === REMOVE$1)\n                node.key = null;\n            const cv = visit_('value', node.value, visitor, path);\n            if (cv === BREAK$1)\n                return BREAK$1;\n            else if (cv === REMOVE$1)\n                node.value = null;\n        }\n    }\n    return ctrl;\n}\n/**\n * Apply an async visitor to an AST node or document.\n *\n * Walks through the tree (depth-first) starting from `node`, calling a\n * `visitor` function with three arguments:\n *   - `key`: For sequence values and map `Pair`, the node's index in the\n *     collection. Within a `Pair`, `'key'` or `'value'`, correspondingly.\n *     `null` for the root node.\n *   - `node`: The current node.\n *   - `path`: The ancestry of the current node.\n *\n * The return value of the visitor may be used to control the traversal:\n *   - `Promise`: Must resolve to one of the following values\n *   - `undefined` (default): Do nothing and continue\n *   - `visit.SKIP`: Do not visit the children of this node, continue with next\n *     sibling\n *   - `visit.BREAK`: Terminate traversal completely\n *   - `visit.REMOVE`: Remove the current node, then continue with the next one\n *   - `Node`: Replace the current node, then continue by visiting it\n *   - `number`: While iterating the items of a sequence or map, set the index\n *     of the next step. This is useful especially if the index of the current\n *     node has changed.\n *\n * If `visitor` is a single function, it will be called with all values\n * encountered in the tree, including e.g. `null` values. Alternatively,\n * separate visitor functions may be defined for each `Map`, `Pair`, `Seq`,\n * `Alias` and `Scalar` node. To define the same visitor function for more than\n * one node type, use the `Collection` (map and seq), `Value` (map, seq & scalar)\n * and `Node` (alias, map, seq & scalar) targets. Of all these, only the most\n * specific defined one will be used for each node.\n */\nasync function visitAsync(node, visitor) {\n    const visitor_ = initVisitor(visitor);\n    if (isDocument(node)) {\n        const cd = await visitAsync_(null, node.contents, visitor_, Object.freeze([node]));\n        if (cd === REMOVE$1)\n            node.contents = null;\n    }\n    else\n        await visitAsync_(null, node, visitor_, Object.freeze([]));\n}\n// Without the `as symbol` casts, TS declares these in the `visit`\n// namespace using `var`, but then complains about that because\n// `unique symbol` must be `const`.\n/** Terminate visit traversal completely */\nvisitAsync.BREAK = BREAK$1;\n/** Do not visit the children of the current node */\nvisitAsync.SKIP = SKIP$1;\n/** Remove the current node */\nvisitAsync.REMOVE = REMOVE$1;\nasync function visitAsync_(key, node, visitor, path) {\n    const ctrl = await callVisitor(key, node, visitor, path);\n    if (isNode(ctrl) || isPair(ctrl)) {\n        replaceNode(key, path, ctrl);\n        return visitAsync_(key, ctrl, visitor, path);\n    }\n    if (typeof ctrl !== 'symbol') {\n        if (isCollection$1(node)) {\n            path = Object.freeze(path.concat(node));\n            for (let i = 0; i < node.items.length; ++i) {\n                const ci = await visitAsync_(i, node.items[i], visitor, path);\n                if (typeof ci === 'number')\n                    i = ci - 1;\n                else if (ci === BREAK$1)\n                    return BREAK$1;\n                else if (ci === REMOVE$1) {\n                    node.items.splice(i, 1);\n                    i -= 1;\n                }\n            }\n        }\n        else if (isPair(node)) {\n            path = Object.freeze(path.concat(node));\n            const ck = await visitAsync_('key', node.key, visitor, path);\n            if (ck === BREAK$1)\n                return BREAK$1;\n            else if (ck === REMOVE$1)\n                node.key = null;\n            const cv = await visitAsync_('value', node.value, visitor, path);\n            if (cv === BREAK$1)\n                return BREAK$1;\n            else if (cv === REMOVE$1)\n                node.value = null;\n        }\n    }\n    return ctrl;\n}\nfunction initVisitor(visitor) {\n    if (typeof visitor === 'object' &&\n        (visitor.Collection || visitor.Node || visitor.Value)) {\n        return Object.assign({\n            Alias: visitor.Node,\n            Map: visitor.Node,\n            Scalar: visitor.Node,\n            Seq: visitor.Node\n        }, visitor.Value && {\n            Map: visitor.Value,\n            Scalar: visitor.Value,\n            Seq: visitor.Value\n        }, visitor.Collection && {\n            Map: visitor.Collection,\n            Seq: visitor.Collection\n        }, visitor);\n    }\n    return visitor;\n}\nfunction callVisitor(key, node, visitor, path) {\n    if (typeof visitor === 'function')\n        return visitor(key, node, path);\n    if (isMap(node))\n        return visitor.Map?.(key, node, path);\n    if (isSeq(node))\n        return visitor.Seq?.(key, node, path);\n    if (isPair(node))\n        return visitor.Pair?.(key, node, path);\n    if (isScalar$1(node))\n        return visitor.Scalar?.(key, node, path);\n    if (isAlias(node))\n        return visitor.Alias?.(key, node, path);\n    return undefined;\n}\nfunction replaceNode(key, path, node) {\n    const parent = path[path.length - 1];\n    if (isCollection$1(parent)) {\n        parent.items[key] = node;\n    }\n    else if (isPair(parent)) {\n        if (key === 'key')\n            parent.key = node;\n        else\n            parent.value = node;\n    }\n    else if (isDocument(parent)) {\n        parent.contents = node;\n    }\n    else {\n        const pt = isAlias(parent) ? 'alias' : 'scalar';\n        throw new Error(`Cannot replace node with ${pt} parent`);\n    }\n}\n\nconst escapeChars = {\n    '!': '%21',\n    ',': '%2C',\n    '[': '%5B',\n    ']': '%5D',\n    '{': '%7B',\n    '}': '%7D'\n};\nconst escapeTagName = (tn) => tn.replace(/[!,[\\]{}]/g, ch => escapeChars[ch]);\nclass Directives {\n    constructor(yaml, tags) {\n        /**\n         * The directives-end/doc-start marker `---`. If `null`, a marker may still be\n         * included in the document's stringified representation.\n         */\n        this.docStart = null;\n        /** The doc-end marker `...`.  */\n        this.docEnd = false;\n        this.yaml = Object.assign({}, Directives.defaultYaml, yaml);\n        this.tags = Object.assign({}, Directives.defaultTags, tags);\n    }\n    clone() {\n        const copy = new Directives(this.yaml, this.tags);\n        copy.docStart = this.docStart;\n        return copy;\n    }\n    /**\n     * During parsing, get a Directives instance for the current document and\n     * update the stream state according to the current version's spec.\n     */\n    atDocument() {\n        const res = new Directives(this.yaml, this.tags);\n        switch (this.yaml.version) {\n            case '1.1':\n                this.atNextDocument = true;\n                break;\n            case '1.2':\n                this.atNextDocument = false;\n                this.yaml = {\n                    explicit: Directives.defaultYaml.explicit,\n                    version: '1.2'\n                };\n                this.tags = Object.assign({}, Directives.defaultTags);\n                break;\n        }\n        return res;\n    }\n    /**\n     * @param onError - May be called even if the action was successful\n     * @returns `true` on success\n     */\n    add(line, onError) {\n        if (this.atNextDocument) {\n            this.yaml = { explicit: Directives.defaultYaml.explicit, version: '1.1' };\n            this.tags = Object.assign({}, Directives.defaultTags);\n            this.atNextDocument = false;\n        }\n        const parts = line.trim().split(/[ \\t]+/);\n        const name = parts.shift();\n        switch (name) {\n            case '%TAG': {\n                if (parts.length !== 2) {\n                    onError(0, '%TAG directive should contain exactly two parts');\n                    if (parts.length < 2)\n                        return false;\n                }\n                const [handle, prefix] = parts;\n                this.tags[handle] = prefix;\n                return true;\n            }\n            case '%YAML': {\n                this.yaml.explicit = true;\n                if (parts.length !== 1) {\n                    onError(0, '%YAML directive should contain exactly one part');\n                    return false;\n                }\n                const [version] = parts;\n                if (version === '1.1' || version === '1.2') {\n                    this.yaml.version = version;\n                    return true;\n                }\n                else {\n                    const isValid = /^\\d+\\.\\d+$/.test(version);\n                    onError(6, `Unsupported YAML version ${version}`, isValid);\n                    return false;\n                }\n            }\n            default:\n                onError(0, `Unknown directive ${name}`, true);\n                return false;\n        }\n    }\n    /**\n     * Resolves a tag, matching handles to those defined in %TAG directives.\n     *\n     * @returns Resolved tag, which may also be the non-specific tag `'!'` or a\n     *   `'!local'` tag, or `null` if unresolvable.\n     */\n    tagName(source, onError) {\n        if (source === '!')\n            return '!'; // non-specific tag\n        if (source[0] !== '!') {\n            onError(`Not a valid tag: ${source}`);\n            return null;\n        }\n        if (source[1] === '<') {\n            const verbatim = source.slice(2, -1);\n            if (verbatim === '!' || verbatim === '!!') {\n                onError(`Verbatim tags aren't resolved, so ${source} is invalid.`);\n                return null;\n            }\n            if (source[source.length - 1] !== '>')\n                onError('Verbatim tags must end with a >');\n            return verbatim;\n        }\n        const [, handle, suffix] = source.match(/^(.*!)([^!]*)$/);\n        if (!suffix)\n            onError(`The ${source} tag has no suffix`);\n        const prefix = this.tags[handle];\n        if (prefix)\n            return prefix + decodeURIComponent(suffix);\n        if (handle === '!')\n            return source; // local tag\n        onError(`Could not resolve tag: ${source}`);\n        return null;\n    }\n    /**\n     * Given a fully resolved tag, returns its printable string form,\n     * taking into account current tag prefixes and defaults.\n     */\n    tagString(tag) {\n        for (const [handle, prefix] of Object.entries(this.tags)) {\n            if (tag.startsWith(prefix))\n                return handle + escapeTagName(tag.substring(prefix.length));\n        }\n        return tag[0] === '!' ? tag : `!<${tag}>`;\n    }\n    toString(doc) {\n        const lines = this.yaml.explicit\n            ? [`%YAML ${this.yaml.version || '1.2'}`]\n            : [];\n        const tagEntries = Object.entries(this.tags);\n        let tagNames;\n        if (doc && tagEntries.length > 0 && isNode(doc.contents)) {\n            const tags = {};\n            visit$1(doc.contents, (_key, node) => {\n                if (isNode(node) && node.tag)\n                    tags[node.tag] = true;\n            });\n            tagNames = Object.keys(tags);\n        }\n        else\n            tagNames = [];\n        for (const [handle, prefix] of tagEntries) {\n            if (handle === '!!' && prefix === 'tag:yaml.org,2002:')\n                continue;\n            if (!doc || tagNames.some(tn => tn.startsWith(prefix)))\n                lines.push(`%TAG ${handle} ${prefix}`);\n        }\n        return lines.join('\\n');\n    }\n}\nDirectives.defaultYaml = { explicit: false, version: '1.2' };\nDirectives.defaultTags = { '!!': 'tag:yaml.org,2002:' };\n\n/**\n * Verify that the input string is a valid anchor.\n *\n * Will throw on errors.\n */\nfunction anchorIsValid(anchor) {\n    if (/[\\x00-\\x19\\s,[\\]{}]/.test(anchor)) {\n        const sa = JSON.stringify(anchor);\n        const msg = `Anchor must not contain whitespace or control characters: ${sa}`;\n        throw new Error(msg);\n    }\n    return true;\n}\nfunction anchorNames(root) {\n    const anchors = new Set();\n    visit$1(root, {\n        Value(_key, node) {\n            if (node.anchor)\n                anchors.add(node.anchor);\n        }\n    });\n    return anchors;\n}\n/** Find a new anchor name with the given `prefix` and a one-indexed suffix. */\nfunction findNewAnchor(prefix, exclude) {\n    for (let i = 1; true; ++i) {\n        const name = `${prefix}${i}`;\n        if (!exclude.has(name))\n            return name;\n    }\n}\nfunction createNodeAnchors(doc, prefix) {\n    const aliasObjects = [];\n    const sourceObjects = new Map();\n    let prevAnchors = null;\n    return {\n        onAnchor: (source) => {\n            aliasObjects.push(source);\n            if (!prevAnchors)\n                prevAnchors = anchorNames(doc);\n            const anchor = findNewAnchor(prefix, prevAnchors);\n            prevAnchors.add(anchor);\n            return anchor;\n        },\n        /**\n         * With circular references, the source node is only resolved after all\n         * of its child nodes are. This is why anchors are set only after all of\n         * the nodes have been created.\n         */\n        setAnchors: () => {\n            for (const source of aliasObjects) {\n                const ref = sourceObjects.get(source);\n                if (typeof ref === 'object' &&\n                    ref.anchor &&\n                    (isScalar$1(ref.node) || isCollection$1(ref.node))) {\n                    ref.node.anchor = ref.anchor;\n                }\n                else {\n                    const error = new Error('Failed to resolve repeated object (this should not happen)');\n                    error.source = source;\n                    throw error;\n                }\n            }\n        },\n        sourceObjects\n    };\n}\n\nclass Alias extends NodeBase {\n    constructor(source) {\n        super(ALIAS);\n        this.source = source;\n        Object.defineProperty(this, 'tag', {\n            set() {\n                throw new Error('Alias nodes cannot have tags');\n            }\n        });\n    }\n    /**\n     * Resolve the value of this alias within `doc`, finding the last\n     * instance of the `source` anchor before this node.\n     */\n    resolve(doc) {\n        let found = undefined;\n        visit$1(doc, {\n            Node: (_key, node) => {\n                if (node === this)\n                    return visit$1.BREAK;\n                if (node.anchor === this.source)\n                    found = node;\n            }\n        });\n        return found;\n    }\n    toJSON(_arg, ctx) {\n        if (!ctx)\n            return { source: this.source };\n        const { anchors, doc, maxAliasCount } = ctx;\n        const source = this.resolve(doc);\n        if (!source) {\n            const msg = `Unresolved alias (the anchor must be set before the alias): ${this.source}`;\n            throw new ReferenceError(msg);\n        }\n        const data = anchors.get(source);\n        /* istanbul ignore if */\n        if (!data || data.res === undefined) {\n            const msg = 'This should not happen: Alias anchor was not resolved?';\n            throw new ReferenceError(msg);\n        }\n        if (maxAliasCount >= 0) {\n            data.count += 1;\n            if (data.aliasCount === 0)\n                data.aliasCount = getAliasCount(doc, source, anchors);\n            if (data.count * data.aliasCount > maxAliasCount) {\n                const msg = 'Excessive alias count indicates a resource exhaustion attack';\n                throw new ReferenceError(msg);\n            }\n        }\n        return data.res;\n    }\n    toString(ctx, _onComment, _onChompKeep) {\n        const src = `*${this.source}`;\n        if (ctx) {\n            anchorIsValid(this.source);\n            if (ctx.options.verifyAliasOrder && !ctx.anchors.has(this.source)) {\n                const msg = `Unresolved alias (the anchor must be set before the alias): ${this.source}`;\n                throw new Error(msg);\n            }\n            if (ctx.implicitKey)\n                return `${src} `;\n        }\n        return src;\n    }\n}\nfunction getAliasCount(doc, node, anchors) {\n    if (isAlias(node)) {\n        const source = node.resolve(doc);\n        const anchor = anchors && source && anchors.get(source);\n        return anchor ? anchor.count * anchor.aliasCount : 0;\n    }\n    else if (isCollection$1(node)) {\n        let count = 0;\n        for (const item of node.items) {\n            const c = getAliasCount(doc, item, anchors);\n            if (c > count)\n                count = c;\n        }\n        return count;\n    }\n    else if (isPair(node)) {\n        const kc = getAliasCount(doc, node.key, anchors);\n        const vc = getAliasCount(doc, node.value, anchors);\n        return Math.max(kc, vc);\n    }\n    return 1;\n}\n\n/**\n * Recursively convert any node or its contents to native JavaScript\n *\n * @param value - The input value\n * @param arg - If `value` defines a `toJSON()` method, use this\n *   as its first argument\n * @param ctx - Conversion context, originally set in Document#toJS(). If\n *   `{ keep: true }` is not set, output should be suitable for JSON\n *   stringification.\n */\nfunction toJS(value, arg, ctx) {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n    if (Array.isArray(value))\n        return value.map((v, i) => toJS(v, String(i), ctx));\n    if (value && typeof value.toJSON === 'function') {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-call\n        if (!ctx || !hasAnchor(value))\n            return value.toJSON(arg, ctx);\n        const data = { aliasCount: 0, count: 1, res: undefined };\n        ctx.anchors.set(value, data);\n        ctx.onCreate = res => {\n            data.res = res;\n            delete ctx.onCreate;\n        };\n        const res = value.toJSON(arg, ctx);\n        if (ctx.onCreate)\n            ctx.onCreate(res);\n        return res;\n    }\n    if (typeof value === 'bigint' && !ctx?.keep)\n        return Number(value);\n    return value;\n}\n\nconst isScalarValue = (value) => !value || (typeof value !== 'function' && typeof value !== 'object');\nclass Scalar extends NodeBase {\n    constructor(value) {\n        super(SCALAR$1);\n        this.value = value;\n    }\n    toJSON(arg, ctx) {\n        return ctx?.keep ? this.value : toJS(this.value, arg, ctx);\n    }\n    toString() {\n        return String(this.value);\n    }\n}\nScalar.BLOCK_FOLDED = 'BLOCK_FOLDED';\nScalar.BLOCK_LITERAL = 'BLOCK_LITERAL';\nScalar.PLAIN = 'PLAIN';\nScalar.QUOTE_DOUBLE = 'QUOTE_DOUBLE';\nScalar.QUOTE_SINGLE = 'QUOTE_SINGLE';\n\nconst defaultTagPrefix = 'tag:yaml.org,2002:';\nfunction findTagObject(value, tagName, tags) {\n    if (tagName) {\n        const match = tags.filter(t => t.tag === tagName);\n        const tagObj = match.find(t => !t.format) ?? match[0];\n        if (!tagObj)\n            throw new Error(`Tag ${tagName} not found`);\n        return tagObj;\n    }\n    return tags.find(t => t.identify?.(value) && !t.format);\n}\nfunction createNode(value, tagName, ctx) {\n    if (isDocument(value))\n        value = value.contents;\n    if (isNode(value))\n        return value;\n    if (isPair(value)) {\n        const map = ctx.schema[MAP].createNode?.(ctx.schema, null, ctx);\n        map.items.push(value);\n        return map;\n    }\n    if (value instanceof String ||\n        value instanceof Number ||\n        value instanceof Boolean ||\n        (typeof BigInt === 'function' && value instanceof BigInt) // not supported everywhere\n    ) {\n        // https://tc39.es/ecma262/#sec-serializejsonproperty\n        value = value.valueOf();\n    }\n    const { aliasDuplicateObjects, onAnchor, onTagObj, schema, sourceObjects } = ctx;\n    // Detect duplicate references to the same object & use Alias nodes for all\n    // after first. The `ref` wrapper allows for circular references to resolve.\n    let ref = undefined;\n    if (aliasDuplicateObjects && value && typeof value === 'object') {\n        ref = sourceObjects.get(value);\n        if (ref) {\n            if (!ref.anchor)\n                ref.anchor = onAnchor(value);\n            return new Alias(ref.anchor);\n        }\n        else {\n            ref = { anchor: null, node: null };\n            sourceObjects.set(value, ref);\n        }\n    }\n    if (tagName?.startsWith('!!'))\n        tagName = defaultTagPrefix + tagName.slice(2);\n    let tagObj = findTagObject(value, tagName, schema.tags);\n    if (!tagObj) {\n        if (value && typeof value.toJSON === 'function') {\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-call\n            value = value.toJSON();\n        }\n        if (!value || typeof value !== 'object') {\n            const node = new Scalar(value);\n            if (ref)\n                ref.node = node;\n            return node;\n        }\n        tagObj =\n            value instanceof Map\n                ? schema[MAP]\n                : Symbol.iterator in Object(value)\n                    ? schema[SEQ]\n                    : schema[MAP];\n    }\n    if (onTagObj) {\n        onTagObj(tagObj);\n        delete ctx.onTagObj;\n    }\n    const node = tagObj?.createNode\n        ? tagObj.createNode(ctx.schema, value, ctx)\n        : new Scalar(value);\n    if (tagName)\n        node.tag = tagName;\n    if (ref)\n        ref.node = node;\n    return node;\n}\n\nfunction collectionFromPath(schema, path, value) {\n    let v = value;\n    for (let i = path.length - 1; i >= 0; --i) {\n        const k = path[i];\n        if (typeof k === 'number' && Number.isInteger(k) && k >= 0) {\n            const a = [];\n            a[k] = v;\n            v = a;\n        }\n        else {\n            v = new Map([[k, v]]);\n        }\n    }\n    return createNode(v, undefined, {\n        aliasDuplicateObjects: false,\n        keepUndefined: false,\n        onAnchor: () => {\n            throw new Error('This should not happen, please report a bug.');\n        },\n        schema,\n        sourceObjects: new Map()\n    });\n}\n// Type guard is intentionally a little wrong so as to be more useful,\n// as it does not cover untypable empty non-string iterables (e.g. []).\nconst isEmptyPath = (path) => path == null ||\n    (typeof path === 'object' && !!path[Symbol.iterator]().next().done);\nclass Collection extends NodeBase {\n    constructor(type, schema) {\n        super(type);\n        Object.defineProperty(this, 'schema', {\n            value: schema,\n            configurable: true,\n            enumerable: false,\n            writable: true\n        });\n    }\n    /**\n     * Create a copy of this collection.\n     *\n     * @param schema - If defined, overwrites the original's schema\n     */\n    clone(schema) {\n        const copy = Object.create(Object.getPrototypeOf(this), Object.getOwnPropertyDescriptors(this));\n        if (schema)\n            copy.schema = schema;\n        copy.items = copy.items.map(it => isNode(it) || isPair(it) ? it.clone(schema) : it);\n        if (this.range)\n            copy.range = this.range.slice();\n        return copy;\n    }\n    /**\n     * Adds a value to the collection. For `!!map` and `!!omap` the value must\n     * be a Pair instance or a `{ key, value }` object, which may not have a key\n     * that already exists in the map.\n     */\n    addIn(path, value) {\n        if (isEmptyPath(path))\n            this.add(value);\n        else {\n            const [key, ...rest] = path;\n            const node = this.get(key, true);\n            if (isCollection$1(node))\n                node.addIn(rest, value);\n            else if (node === undefined && this.schema)\n                this.set(key, collectionFromPath(this.schema, rest, value));\n            else\n                throw new Error(`Expected YAML collection at ${key}. Remaining path: ${rest}`);\n        }\n    }\n    /**\n     * Removes a value from the collection.\n     * @returns `true` if the item was found and removed.\n     */\n    deleteIn(path) {\n        const [key, ...rest] = path;\n        if (rest.length === 0)\n            return this.delete(key);\n        const node = this.get(key, true);\n        if (isCollection$1(node))\n            return node.deleteIn(rest);\n        else\n            throw new Error(`Expected YAML collection at ${key}. Remaining path: ${rest}`);\n    }\n    /**\n     * Returns item at `key`, or `undefined` if not found. By default unwraps\n     * scalar values from their surrounding node; to disable set `keepScalar` to\n     * `true` (collections are always returned intact).\n     */\n    getIn(path, keepScalar) {\n        const [key, ...rest] = path;\n        const node = this.get(key, true);\n        if (rest.length === 0)\n            return !keepScalar && isScalar$1(node) ? node.value : node;\n        else\n            return isCollection$1(node) ? node.getIn(rest, keepScalar) : undefined;\n    }\n    hasAllNullValues(allowScalar) {\n        return this.items.every(node => {\n            if (!isPair(node))\n                return false;\n            const n = node.value;\n            return (n == null ||\n                (allowScalar &&\n                    isScalar$1(n) &&\n                    n.value == null &&\n                    !n.commentBefore &&\n                    !n.comment &&\n                    !n.tag));\n        });\n    }\n    /**\n     * Checks if the collection includes a value with the key `key`.\n     */\n    hasIn(path) {\n        const [key, ...rest] = path;\n        if (rest.length === 0)\n            return this.has(key);\n        const node = this.get(key, true);\n        return isCollection$1(node) ? node.hasIn(rest) : false;\n    }\n    /**\n     * Sets a value in this collection. For `!!set`, `value` needs to be a\n     * boolean to add/remove the item from the set.\n     */\n    setIn(path, value) {\n        const [key, ...rest] = path;\n        if (rest.length === 0) {\n            this.set(key, value);\n        }\n        else {\n            const node = this.get(key, true);\n            if (isCollection$1(node))\n                node.setIn(rest, value);\n            else if (node === undefined && this.schema)\n                this.set(key, collectionFromPath(this.schema, rest, value));\n            else\n                throw new Error(`Expected YAML collection at ${key}. Remaining path: ${rest}`);\n        }\n    }\n}\nCollection.maxFlowStringSingleLineLength = 60;\n\n/**\n * Stringifies a comment.\n *\n * Empty comment lines are left empty,\n * lines consisting of a single space are replaced by `#`,\n * and all other lines are prefixed with a `#`.\n */\nconst stringifyComment = (str) => str.replace(/^(?!$)(?: $)?/gm, '#');\nfunction indentComment(comment, indent) {\n    if (/^\\n+$/.test(comment))\n        return comment.substring(1);\n    return indent ? comment.replace(/^(?! *$)/gm, indent) : comment;\n}\nconst lineComment = (str, indent, comment) => str.endsWith('\\n')\n    ? indentComment(comment, indent)\n    : comment.includes('\\n')\n        ? '\\n' + indentComment(comment, indent)\n        : (str.endsWith(' ') ? '' : ' ') + comment;\n\nconst FOLD_FLOW = 'flow';\nconst FOLD_BLOCK = 'block';\nconst FOLD_QUOTED = 'quoted';\n/**\n * Tries to keep input at up to `lineWidth` characters, splitting only on spaces\n * not followed by newlines or spaces unless `mode` is `'quoted'`. Lines are\n * terminated with `\\n` and started with `indent`.\n */\nfunction foldFlowLines(text, indent, mode = 'flow', { indentAtStart, lineWidth = 80, minContentWidth = 20, onFold, onOverflow } = {}) {\n    if (!lineWidth || lineWidth < 0)\n        return text;\n    const endStep = Math.max(1 + minContentWidth, 1 + lineWidth - indent.length);\n    if (text.length <= endStep)\n        return text;\n    const folds = [];\n    const escapedFolds = {};\n    let end = lineWidth - indent.length;\n    if (typeof indentAtStart === 'number') {\n        if (indentAtStart > lineWidth - Math.max(2, minContentWidth))\n            folds.push(0);\n        else\n            end = lineWidth - indentAtStart;\n    }\n    let split = undefined;\n    let prev = undefined;\n    let overflow = false;\n    let i = -1;\n    let escStart = -1;\n    let escEnd = -1;\n    if (mode === FOLD_BLOCK) {\n        i = consumeMoreIndentedLines(text, i);\n        if (i !== -1)\n            end = i + endStep;\n    }\n    for (let ch; (ch = text[(i += 1)]);) {\n        if (mode === FOLD_QUOTED && ch === '\\\\') {\n            escStart = i;\n            switch (text[i + 1]) {\n                case 'x':\n                    i += 3;\n                    break;\n                case 'u':\n                    i += 5;\n                    break;\n                case 'U':\n                    i += 9;\n                    break;\n                default:\n                    i += 1;\n            }\n            escEnd = i;\n        }\n        if (ch === '\\n') {\n            if (mode === FOLD_BLOCK)\n                i = consumeMoreIndentedLines(text, i);\n            end = i + endStep;\n            split = undefined;\n        }\n        else {\n            if (ch === ' ' &&\n                prev &&\n                prev !== ' ' &&\n                prev !== '\\n' &&\n                prev !== '\\t') {\n                // space surrounded by non-space can be replaced with newline + indent\n                const next = text[i + 1];\n                if (next && next !== ' ' && next !== '\\n' && next !== '\\t')\n                    split = i;\n            }\n            if (i >= end) {\n                if (split) {\n                    folds.push(split);\n                    end = split + endStep;\n                    split = undefined;\n                }\n                else if (mode === FOLD_QUOTED) {\n                    // white-space collected at end may stretch past lineWidth\n                    while (prev === ' ' || prev === '\\t') {\n                        prev = ch;\n                        ch = text[(i += 1)];\n                        overflow = true;\n                    }\n                    // Account for newline escape, but don't break preceding escape\n                    const j = i > escEnd + 1 ? i - 2 : escStart - 1;\n                    // Bail out if lineWidth & minContentWidth are shorter than an escape string\n                    if (escapedFolds[j])\n                        return text;\n                    folds.push(j);\n                    escapedFolds[j] = true;\n                    end = j + endStep;\n                    split = undefined;\n                }\n                else {\n                    overflow = true;\n                }\n            }\n        }\n        prev = ch;\n    }\n    if (overflow && onOverflow)\n        onOverflow();\n    if (folds.length === 0)\n        return text;\n    if (onFold)\n        onFold();\n    let res = text.slice(0, folds[0]);\n    for (let i = 0; i < folds.length; ++i) {\n        const fold = folds[i];\n        const end = folds[i + 1] || text.length;\n        if (fold === 0)\n            res = `\\n${indent}${text.slice(0, end)}`;\n        else {\n            if (mode === FOLD_QUOTED && escapedFolds[fold])\n                res += `${text[fold]}\\\\`;\n            res += `\\n${indent}${text.slice(fold + 1, end)}`;\n        }\n    }\n    return res;\n}\n/**\n * Presumes `i + 1` is at the start of a line\n * @returns index of last newline in more-indented block\n */\nfunction consumeMoreIndentedLines(text, i) {\n    let ch = text[i + 1];\n    while (ch === ' ' || ch === '\\t') {\n        do {\n            ch = text[(i += 1)];\n        } while (ch && ch !== '\\n');\n        ch = text[i + 1];\n    }\n    return i;\n}\n\nconst getFoldOptions = (ctx) => ({\n    indentAtStart: ctx.indentAtStart,\n    lineWidth: ctx.options.lineWidth,\n    minContentWidth: ctx.options.minContentWidth\n});\n// Also checks for lines starting with %, as parsing the output as YAML 1.1 will\n// presume that's starting a new document.\nconst containsDocumentMarker = (str) => /^(%|---|\\.\\.\\.)/m.test(str);\nfunction lineLengthOverLimit(str, lineWidth, indentLength) {\n    if (!lineWidth || lineWidth < 0)\n        return false;\n    const limit = lineWidth - indentLength;\n    const strLen = str.length;\n    if (strLen <= limit)\n        return false;\n    for (let i = 0, start = 0; i < strLen; ++i) {\n        if (str[i] === '\\n') {\n            if (i - start > limit)\n                return true;\n            start = i + 1;\n            if (strLen - start <= limit)\n                return false;\n        }\n    }\n    return true;\n}\nfunction doubleQuotedString(value, ctx) {\n    const json = JSON.stringify(value);\n    if (ctx.options.doubleQuotedAsJSON)\n        return json;\n    const { implicitKey } = ctx;\n    const minMultiLineLength = ctx.options.doubleQuotedMinMultiLineLength;\n    const indent = ctx.indent || (containsDocumentMarker(value) ? '  ' : '');\n    let str = '';\n    let start = 0;\n    for (let i = 0, ch = json[i]; ch; ch = json[++i]) {\n        if (ch === ' ' && json[i + 1] === '\\\\' && json[i + 2] === 'n') {\n            // space before newline needs to be escaped to not be folded\n            str += json.slice(start, i) + '\\\\ ';\n            i += 1;\n            start = i;\n            ch = '\\\\';\n        }\n        if (ch === '\\\\')\n            switch (json[i + 1]) {\n                case 'u':\n                    {\n                        str += json.slice(start, i);\n                        const code = json.substr(i + 2, 4);\n                        switch (code) {\n                            case '0000':\n                                str += '\\\\0';\n                                break;\n                            case '0007':\n                                str += '\\\\a';\n                                break;\n                            case '000b':\n                                str += '\\\\v';\n                                break;\n                            case '001b':\n                                str += '\\\\e';\n                                break;\n                            case '0085':\n                                str += '\\\\N';\n                                break;\n                            case '00a0':\n                                str += '\\\\_';\n                                break;\n                            case '2028':\n                                str += '\\\\L';\n                                break;\n                            case '2029':\n                                str += '\\\\P';\n                                break;\n                            default:\n                                if (code.substr(0, 2) === '00')\n                                    str += '\\\\x' + code.substr(2);\n                                else\n                                    str += json.substr(i, 6);\n                        }\n                        i += 5;\n                        start = i + 1;\n                    }\n                    break;\n                case 'n':\n                    if (implicitKey ||\n                        json[i + 2] === '\"' ||\n                        json.length < minMultiLineLength) {\n                        i += 1;\n                    }\n                    else {\n                        // folding will eat first newline\n                        str += json.slice(start, i) + '\\n\\n';\n                        while (json[i + 2] === '\\\\' &&\n                            json[i + 3] === 'n' &&\n                            json[i + 4] !== '\"') {\n                            str += '\\n';\n                            i += 2;\n                        }\n                        str += indent;\n                        // space after newline needs to be escaped to not be folded\n                        if (json[i + 2] === ' ')\n                            str += '\\\\';\n                        i += 1;\n                        start = i + 1;\n                    }\n                    break;\n                default:\n                    i += 1;\n            }\n    }\n    str = start ? str + json.slice(start) : json;\n    return implicitKey\n        ? str\n        : foldFlowLines(str, indent, FOLD_QUOTED, getFoldOptions(ctx));\n}\nfunction singleQuotedString(value, ctx) {\n    if (ctx.options.singleQuote === false ||\n        (ctx.implicitKey && value.includes('\\n')) ||\n        /[ \\t]\\n|\\n[ \\t]/.test(value) // single quoted string can't have leading or trailing whitespace around newline\n    )\n        return doubleQuotedString(value, ctx);\n    const indent = ctx.indent || (containsDocumentMarker(value) ? '  ' : '');\n    const res = \"'\" + value.replace(/'/g, \"''\").replace(/\\n+/g, `$&\\n${indent}`) + \"'\";\n    return ctx.implicitKey\n        ? res\n        : foldFlowLines(res, indent, FOLD_FLOW, getFoldOptions(ctx));\n}\nfunction quotedString(value, ctx) {\n    const { singleQuote } = ctx.options;\n    let qs;\n    if (singleQuote === false)\n        qs = doubleQuotedString;\n    else {\n        const hasDouble = value.includes('\"');\n        const hasSingle = value.includes(\"'\");\n        if (hasDouble && !hasSingle)\n            qs = singleQuotedString;\n        else if (hasSingle && !hasDouble)\n            qs = doubleQuotedString;\n        else\n            qs = singleQuote ? singleQuotedString : doubleQuotedString;\n    }\n    return qs(value, ctx);\n}\nfunction blockString({ comment, type, value }, ctx, onComment, onChompKeep) {\n    const { blockQuote, commentString, lineWidth } = ctx.options;\n    // 1. Block can't end in whitespace unless the last line is non-empty.\n    // 2. Strings consisting of only whitespace are best rendered explicitly.\n    if (!blockQuote || /\\n[\\t ]+$/.test(value) || /^\\s*$/.test(value)) {\n        return quotedString(value, ctx);\n    }\n    const indent = ctx.indent ||\n        (ctx.forceBlockIndent || containsDocumentMarker(value) ? '  ' : '');\n    const literal = blockQuote === 'literal'\n        ? true\n        : blockQuote === 'folded' || type === Scalar.BLOCK_FOLDED\n            ? false\n            : type === Scalar.BLOCK_LITERAL\n                ? true\n                : !lineLengthOverLimit(value, lineWidth, indent.length);\n    if (!value)\n        return literal ? '|\\n' : '>\\n';\n    // determine chomping from whitespace at value end\n    let chomp;\n    let endStart;\n    for (endStart = value.length; endStart > 0; --endStart) {\n        const ch = value[endStart - 1];\n        if (ch !== '\\n' && ch !== '\\t' && ch !== ' ')\n            break;\n    }\n    let end = value.substring(endStart);\n    const endNlPos = end.indexOf('\\n');\n    if (endNlPos === -1) {\n        chomp = '-'; // strip\n    }\n    else if (value === end || endNlPos !== end.length - 1) {\n        chomp = '+'; // keep\n        if (onChompKeep)\n            onChompKeep();\n    }\n    else {\n        chomp = ''; // clip\n    }\n    if (end) {\n        value = value.slice(0, -end.length);\n        if (end[end.length - 1] === '\\n')\n            end = end.slice(0, -1);\n        end = end.replace(/\\n+(?!\\n|$)/g, `$&${indent}`);\n    }\n    // determine indent indicator from whitespace at value start\n    let startWithSpace = false;\n    let startEnd;\n    let startNlPos = -1;\n    for (startEnd = 0; startEnd < value.length; ++startEnd) {\n        const ch = value[startEnd];\n        if (ch === ' ')\n            startWithSpace = true;\n        else if (ch === '\\n')\n            startNlPos = startEnd;\n        else\n            break;\n    }\n    let start = value.substring(0, startNlPos < startEnd ? startNlPos + 1 : startEnd);\n    if (start) {\n        value = value.substring(start.length);\n        start = start.replace(/\\n+/g, `$&${indent}`);\n    }\n    const indentSize = indent ? '2' : '1'; // root is at -1\n    let header = (literal ? '|' : '>') + (startWithSpace ? indentSize : '') + chomp;\n    if (comment) {\n        header += ' ' + commentString(comment.replace(/ ?[\\r\\n]+/g, ' '));\n        if (onComment)\n            onComment();\n    }\n    if (literal) {\n        value = value.replace(/\\n+/g, `$&${indent}`);\n        return `${header}\\n${indent}${start}${value}${end}`;\n    }\n    value = value\n        .replace(/\\n+/g, '\\n$&')\n        .replace(/(?:^|\\n)([\\t ].*)(?:([\\n\\t ]*)\\n(?![\\n\\t ]))?/g, '$1$2') // more-indented lines aren't folded\n        //                ^ more-ind. ^ empty     ^ capture next empty lines only at end of indent\n        .replace(/\\n+/g, `$&${indent}`);\n    const body = foldFlowLines(`${start}${value}${end}`, indent, FOLD_BLOCK, getFoldOptions(ctx));\n    return `${header}\\n${indent}${body}`;\n}\nfunction plainString(item, ctx, onComment, onChompKeep) {\n    const { type, value } = item;\n    const { actualString, implicitKey, indent, inFlow } = ctx;\n    if ((implicitKey && /[\\n[\\]{},]/.test(value)) ||\n        (inFlow && /[[\\]{},]/.test(value))) {\n        return quotedString(value, ctx);\n    }\n    if (!value ||\n        /^[\\n\\t ,[\\]{}#&*!|>'\"%@`]|^[?-]$|^[?-][ \\t]|[\\n:][ \\t]|[ \\t]\\n|[\\n\\t ]#|[\\n\\t :]$/.test(value)) {\n        // not allowed:\n        // - empty string, '-' or '?'\n        // - start with an indicator character (except [?:-]) or /[?-] /\n        // - '\\n ', ': ' or ' \\n' anywhere\n        // - '#' not preceded by a non-space char\n        // - end with ' ' or ':'\n        return implicitKey || inFlow || !value.includes('\\n')\n            ? quotedString(value, ctx)\n            : blockString(item, ctx, onComment, onChompKeep);\n    }\n    if (!implicitKey &&\n        !inFlow &&\n        type !== Scalar.PLAIN &&\n        value.includes('\\n')) {\n        // Where allowed & type not set explicitly, prefer block style for multiline strings\n        return blockString(item, ctx, onComment, onChompKeep);\n    }\n    if (indent === '' && containsDocumentMarker(value)) {\n        ctx.forceBlockIndent = true;\n        return blockString(item, ctx, onComment, onChompKeep);\n    }\n    const str = value.replace(/\\n+/g, `$&\\n${indent}`);\n    // Verify that output will be parsed as a string, as e.g. plain numbers and\n    // booleans get parsed with those types in v1.2 (e.g. '42', 'true' & '0.9e-3'),\n    // and others in v1.1.\n    if (actualString) {\n        const test = (tag) => tag.default && tag.tag !== 'tag:yaml.org,2002:str' && tag.test?.test(str);\n        const { compat, tags } = ctx.doc.schema;\n        if (tags.some(test) || compat?.some(test))\n            return quotedString(value, ctx);\n    }\n    return implicitKey\n        ? str\n        : foldFlowLines(str, indent, FOLD_FLOW, getFoldOptions(ctx));\n}\nfunction stringifyString(item, ctx, onComment, onChompKeep) {\n    const { implicitKey, inFlow } = ctx;\n    const ss = typeof item.value === 'string'\n        ? item\n        : Object.assign({}, item, { value: String(item.value) });\n    let { type } = item;\n    if (type !== Scalar.QUOTE_DOUBLE) {\n        // force double quotes on control characters & unpaired surrogates\n        if (/[\\x00-\\x08\\x0b-\\x1f\\x7f-\\x9f\\u{D800}-\\u{DFFF}]/u.test(ss.value))\n            type = Scalar.QUOTE_DOUBLE;\n    }\n    const _stringify = (_type) => {\n        switch (_type) {\n            case Scalar.BLOCK_FOLDED:\n            case Scalar.BLOCK_LITERAL:\n                return implicitKey || inFlow\n                    ? quotedString(ss.value, ctx) // blocks are not valid inside flow containers\n                    : blockString(ss, ctx, onComment, onChompKeep);\n            case Scalar.QUOTE_DOUBLE:\n                return doubleQuotedString(ss.value, ctx);\n            case Scalar.QUOTE_SINGLE:\n                return singleQuotedString(ss.value, ctx);\n            case Scalar.PLAIN:\n                return plainString(ss, ctx, onComment, onChompKeep);\n            default:\n                return null;\n        }\n    };\n    let res = _stringify(type);\n    if (res === null) {\n        const { defaultKeyType, defaultStringType } = ctx.options;\n        const t = (implicitKey && defaultKeyType) || defaultStringType;\n        res = _stringify(t);\n        if (res === null)\n            throw new Error(`Unsupported default string type ${t}`);\n    }\n    return res;\n}\n\nfunction createStringifyContext(doc, options) {\n    const opt = Object.assign({\n        blockQuote: true,\n        commentString: stringifyComment,\n        defaultKeyType: null,\n        defaultStringType: 'PLAIN',\n        directives: null,\n        doubleQuotedAsJSON: false,\n        doubleQuotedMinMultiLineLength: 40,\n        falseStr: 'false',\n        indentSeq: true,\n        lineWidth: 80,\n        minContentWidth: 20,\n        nullStr: 'null',\n        simpleKeys: false,\n        singleQuote: null,\n        trueStr: 'true',\n        verifyAliasOrder: true\n    }, doc.schema.toStringOptions, options);\n    let inFlow;\n    switch (opt.collectionStyle) {\n        case 'block':\n            inFlow = false;\n            break;\n        case 'flow':\n            inFlow = true;\n            break;\n        default:\n            inFlow = null;\n    }\n    return {\n        anchors: new Set(),\n        doc,\n        indent: '',\n        indentStep: typeof opt.indent === 'number' ? ' '.repeat(opt.indent) : '  ',\n        inFlow,\n        options: opt\n    };\n}\nfunction getTagObject(tags, item) {\n    if (item.tag) {\n        const match = tags.filter(t => t.tag === item.tag);\n        if (match.length > 0)\n            return match.find(t => t.format === item.format) ?? match[0];\n    }\n    let tagObj = undefined;\n    let obj;\n    if (isScalar$1(item)) {\n        obj = item.value;\n        const match = tags.filter(t => t.identify?.(obj));\n        tagObj =\n            match.find(t => t.format === item.format) ?? match.find(t => !t.format);\n    }\n    else {\n        obj = item;\n        tagObj = tags.find(t => t.nodeClass && obj instanceof t.nodeClass);\n    }\n    if (!tagObj) {\n        const name = obj?.constructor?.name ?? typeof obj;\n        throw new Error(`Tag not resolved for ${name} value`);\n    }\n    return tagObj;\n}\n// needs to be called before value stringifier to allow for circular anchor refs\nfunction stringifyProps(node, tagObj, { anchors, doc }) {\n    if (!doc.directives)\n        return '';\n    const props = [];\n    const anchor = (isScalar$1(node) || isCollection$1(node)) && node.anchor;\n    if (anchor && anchorIsValid(anchor)) {\n        anchors.add(anchor);\n        props.push(`&${anchor}`);\n    }\n    const tag = node.tag ? node.tag : tagObj.default ? null : tagObj.tag;\n    if (tag)\n        props.push(doc.directives.tagString(tag));\n    return props.join(' ');\n}\nfunction stringify$3(item, ctx, onComment, onChompKeep) {\n    if (isPair(item))\n        return item.toString(ctx, onComment, onChompKeep);\n    if (isAlias(item)) {\n        if (ctx.doc.directives)\n            return item.toString(ctx);\n        if (ctx.resolvedAliases?.has(item)) {\n            throw new TypeError(`Cannot stringify circular structure without alias nodes`);\n        }\n        else {\n            if (ctx.resolvedAliases)\n                ctx.resolvedAliases.add(item);\n            else\n                ctx.resolvedAliases = new Set([item]);\n            item = item.resolve(ctx.doc);\n        }\n    }\n    let tagObj = undefined;\n    const node = isNode(item)\n        ? item\n        : ctx.doc.createNode(item, { onTagObj: o => (tagObj = o) });\n    if (!tagObj)\n        tagObj = getTagObject(ctx.doc.schema.tags, node);\n    const props = stringifyProps(node, tagObj, ctx);\n    if (props.length > 0)\n        ctx.indentAtStart = (ctx.indentAtStart ?? 0) + props.length + 1;\n    const str = typeof tagObj.stringify === 'function'\n        ? tagObj.stringify(node, ctx, onComment, onChompKeep)\n        : isScalar$1(node)\n            ? stringifyString(node, ctx, onComment, onChompKeep)\n            : node.toString(ctx, onComment, onChompKeep);\n    if (!props)\n        return str;\n    return isScalar$1(node) || str[0] === '{' || str[0] === '['\n        ? `${props} ${str}`\n        : `${props}\\n${ctx.indent}${str}`;\n}\n\nfunction stringifyPair({ key, value }, ctx, onComment, onChompKeep) {\n    const { allNullValues, doc, indent, indentStep, options: { commentString, indentSeq, simpleKeys } } = ctx;\n    let keyComment = (isNode(key) && key.comment) || null;\n    if (simpleKeys) {\n        if (keyComment) {\n            throw new Error('With simple keys, key nodes cannot have comments');\n        }\n        if (isCollection$1(key)) {\n            const msg = 'With simple keys, collection cannot be used as a key value';\n            throw new Error(msg);\n        }\n    }\n    let explicitKey = !simpleKeys &&\n        (!key ||\n            (keyComment && value == null && !ctx.inFlow) ||\n            isCollection$1(key) ||\n            (isScalar$1(key)\n                ? key.type === Scalar.BLOCK_FOLDED || key.type === Scalar.BLOCK_LITERAL\n                : typeof key === 'object'));\n    ctx = Object.assign({}, ctx, {\n        allNullValues: false,\n        implicitKey: !explicitKey && (simpleKeys || !allNullValues),\n        indent: indent + indentStep\n    });\n    let keyCommentDone = false;\n    let chompKeep = false;\n    let str = stringify$3(key, ctx, () => (keyCommentDone = true), () => (chompKeep = true));\n    if (!explicitKey && !ctx.inFlow && str.length > 1024) {\n        if (simpleKeys)\n            throw new Error('With simple keys, single line scalar must not span more than 1024 characters');\n        explicitKey = true;\n    }\n    if (ctx.inFlow) {\n        if (allNullValues || value == null) {\n            if (keyCommentDone && onComment)\n                onComment();\n            return str === '' ? '?' : explicitKey ? `? ${str}` : str;\n        }\n    }\n    else if ((allNullValues && !simpleKeys) || (value == null && explicitKey)) {\n        str = `? ${str}`;\n        if (keyComment && !keyCommentDone) {\n            str += lineComment(str, ctx.indent, commentString(keyComment));\n        }\n        else if (chompKeep && onChompKeep)\n            onChompKeep();\n        return str;\n    }\n    if (keyCommentDone)\n        keyComment = null;\n    if (explicitKey) {\n        if (keyComment)\n            str += lineComment(str, ctx.indent, commentString(keyComment));\n        str = `? ${str}\\n${indent}:`;\n    }\n    else {\n        str = `${str}:`;\n        if (keyComment)\n            str += lineComment(str, ctx.indent, commentString(keyComment));\n    }\n    let vcb = '';\n    let valueComment = null;\n    if (isNode(value)) {\n        if (value.spaceBefore)\n            vcb = '\\n';\n        if (value.commentBefore) {\n            const cs = commentString(value.commentBefore);\n            vcb += `\\n${indentComment(cs, ctx.indent)}`;\n        }\n        valueComment = value.comment;\n    }\n    else if (value && typeof value === 'object') {\n        value = doc.createNode(value);\n    }\n    ctx.implicitKey = false;\n    if (!explicitKey && !keyComment && isScalar$1(value))\n        ctx.indentAtStart = str.length + 1;\n    chompKeep = false;\n    if (!indentSeq &&\n        indentStep.length >= 2 &&\n        !ctx.inFlow &&\n        !explicitKey &&\n        isSeq(value) &&\n        !value.flow &&\n        !value.tag &&\n        !value.anchor) {\n        // If indentSeq === false, consider '- ' as part of indentation where possible\n        ctx.indent = ctx.indent.substr(2);\n    }\n    let valueCommentDone = false;\n    const valueStr = stringify$3(value, ctx, () => (valueCommentDone = true), () => (chompKeep = true));\n    let ws = ' ';\n    if (vcb || keyComment) {\n        if (valueStr === '' && !ctx.inFlow)\n            ws = vcb === '\\n' ? '\\n\\n' : vcb;\n        else\n            ws = `${vcb}\\n${ctx.indent}`;\n    }\n    else if (!explicitKey && isCollection$1(value)) {\n        const flow = valueStr[0] === '[' || valueStr[0] === '{';\n        if (!flow || valueStr.includes('\\n'))\n            ws = `\\n${ctx.indent}`;\n    }\n    else if (valueStr === '' || valueStr[0] === '\\n')\n        ws = '';\n    str += ws + valueStr;\n    if (ctx.inFlow) {\n        if (valueCommentDone && onComment)\n            onComment();\n    }\n    else if (valueComment && !valueCommentDone) {\n        str += lineComment(str, ctx.indent, commentString(valueComment));\n    }\n    else if (chompKeep && onChompKeep) {\n        onChompKeep();\n    }\n    return str;\n}\n\nfunction warn(logLevel, warning) {\n    if (logLevel === 'debug' || logLevel === 'warn') {\n        if (typeof process !== 'undefined' && process.emitWarning)\n            process.emitWarning(warning);\n        else\n            console.warn(warning);\n    }\n}\n\nconst MERGE_KEY = '<<';\nfunction addPairToJSMap(ctx, map, { key, value }) {\n    if (ctx?.doc.schema.merge && isMergeKey(key)) {\n        value = isAlias(value) ? value.resolve(ctx.doc) : value;\n        if (isSeq(value))\n            for (const it of value.items)\n                mergeToJSMap(ctx, map, it);\n        else if (Array.isArray(value))\n            for (const it of value)\n                mergeToJSMap(ctx, map, it);\n        else\n            mergeToJSMap(ctx, map, value);\n    }\n    else {\n        const jsKey = toJS(key, '', ctx);\n        if (map instanceof Map) {\n            map.set(jsKey, toJS(value, jsKey, ctx));\n        }\n        else if (map instanceof Set) {\n            map.add(jsKey);\n        }\n        else {\n            const stringKey = stringifyKey(key, jsKey, ctx);\n            const jsValue = toJS(value, stringKey, ctx);\n            if (stringKey in map)\n                Object.defineProperty(map, stringKey, {\n                    value: jsValue,\n                    writable: true,\n                    enumerable: true,\n                    configurable: true\n                });\n            else\n                map[stringKey] = jsValue;\n        }\n    }\n    return map;\n}\nconst isMergeKey = (key) => key === MERGE_KEY ||\n    (isScalar$1(key) &&\n        key.value === MERGE_KEY &&\n        (!key.type || key.type === Scalar.PLAIN));\n// If the value associated with a merge key is a single mapping node, each of\n// its key/value pairs is inserted into the current mapping, unless the key\n// already exists in it. If the value associated with the merge key is a\n// sequence, then this sequence is expected to contain mapping nodes and each\n// of these nodes is merged in turn according to its order in the sequence.\n// Keys in mapping nodes earlier in the sequence override keys specified in\n// later mapping nodes. -- http://yaml.org/type/merge.html\nfunction mergeToJSMap(ctx, map, value) {\n    const source = ctx && isAlias(value) ? value.resolve(ctx.doc) : value;\n    if (!isMap(source))\n        throw new Error('Merge sources must be maps or map aliases');\n    const srcMap = source.toJSON(null, ctx, Map);\n    for (const [key, value] of srcMap) {\n        if (map instanceof Map) {\n            if (!map.has(key))\n                map.set(key, value);\n        }\n        else if (map instanceof Set) {\n            map.add(key);\n        }\n        else if (!Object.prototype.hasOwnProperty.call(map, key)) {\n            Object.defineProperty(map, key, {\n                value,\n                writable: true,\n                enumerable: true,\n                configurable: true\n            });\n        }\n    }\n    return map;\n}\nfunction stringifyKey(key, jsKey, ctx) {\n    if (jsKey === null)\n        return '';\n    if (typeof jsKey !== 'object')\n        return String(jsKey);\n    if (isNode(key) && ctx && ctx.doc) {\n        const strCtx = createStringifyContext(ctx.doc, {});\n        strCtx.anchors = new Set();\n        for (const node of ctx.anchors.keys())\n            strCtx.anchors.add(node.anchor);\n        strCtx.inFlow = true;\n        strCtx.inStringifyKey = true;\n        const strKey = key.toString(strCtx);\n        if (!ctx.mapKeyWarned) {\n            let jsonStr = JSON.stringify(strKey);\n            if (jsonStr.length > 40)\n                jsonStr = jsonStr.substring(0, 36) + '...\"';\n            warn(ctx.doc.options.logLevel, `Keys with collection values will be stringified due to JS Object restrictions: ${jsonStr}. Set mapAsMap: true to use object keys.`);\n            ctx.mapKeyWarned = true;\n        }\n        return strKey;\n    }\n    return JSON.stringify(jsKey);\n}\n\nfunction createPair(key, value, ctx) {\n    const k = createNode(key, undefined, ctx);\n    const v = createNode(value, undefined, ctx);\n    return new Pair(k, v);\n}\nclass Pair {\n    constructor(key, value = null) {\n        Object.defineProperty(this, NODE_TYPE, { value: PAIR });\n        this.key = key;\n        this.value = value;\n    }\n    clone(schema) {\n        let { key, value } = this;\n        if (isNode(key))\n            key = key.clone(schema);\n        if (isNode(value))\n            value = value.clone(schema);\n        return new Pair(key, value);\n    }\n    toJSON(_, ctx) {\n        const pair = ctx?.mapAsMap ? new Map() : {};\n        return addPairToJSMap(ctx, pair, this);\n    }\n    toString(ctx, onComment, onChompKeep) {\n        return ctx?.doc\n            ? stringifyPair(this, ctx, onComment, onChompKeep)\n            : JSON.stringify(this);\n    }\n}\n\nfunction stringifyCollection(collection, ctx, options) {\n    const flow = ctx.inFlow ?? collection.flow;\n    const stringify = flow ? stringifyFlowCollection : stringifyBlockCollection;\n    return stringify(collection, ctx, options);\n}\nfunction stringifyBlockCollection({ comment, items }, ctx, { blockItemPrefix, flowChars, itemIndent, onChompKeep, onComment }) {\n    const { indent, options: { commentString } } = ctx;\n    const itemCtx = Object.assign({}, ctx, { indent: itemIndent, type: null });\n    let chompKeep = false; // flag for the preceding node's status\n    const lines = [];\n    for (let i = 0; i < items.length; ++i) {\n        const item = items[i];\n        let comment = null;\n        if (isNode(item)) {\n            if (!chompKeep && item.spaceBefore)\n                lines.push('');\n            addCommentBefore(ctx, lines, item.commentBefore, chompKeep);\n            if (item.comment)\n                comment = item.comment;\n        }\n        else if (isPair(item)) {\n            const ik = isNode(item.key) ? item.key : null;\n            if (ik) {\n                if (!chompKeep && ik.spaceBefore)\n                    lines.push('');\n                addCommentBefore(ctx, lines, ik.commentBefore, chompKeep);\n            }\n        }\n        chompKeep = false;\n        let str = stringify$3(item, itemCtx, () => (comment = null), () => (chompKeep = true));\n        if (comment)\n            str += lineComment(str, itemIndent, commentString(comment));\n        if (chompKeep && comment)\n            chompKeep = false;\n        lines.push(blockItemPrefix + str);\n    }\n    let str;\n    if (lines.length === 0) {\n        str = flowChars.start + flowChars.end;\n    }\n    else {\n        str = lines[0];\n        for (let i = 1; i < lines.length; ++i) {\n            const line = lines[i];\n            str += line ? `\\n${indent}${line}` : '\\n';\n        }\n    }\n    if (comment) {\n        str += '\\n' + indentComment(commentString(comment), indent);\n        if (onComment)\n            onComment();\n    }\n    else if (chompKeep && onChompKeep)\n        onChompKeep();\n    return str;\n}\nfunction stringifyFlowCollection({ comment, items }, ctx, { flowChars, itemIndent, onComment }) {\n    const { indent, indentStep, options: { commentString } } = ctx;\n    itemIndent += indentStep;\n    const itemCtx = Object.assign({}, ctx, {\n        indent: itemIndent,\n        inFlow: true,\n        type: null\n    });\n    let reqNewline = false;\n    let linesAtValue = 0;\n    const lines = [];\n    for (let i = 0; i < items.length; ++i) {\n        const item = items[i];\n        let comment = null;\n        if (isNode(item)) {\n            if (item.spaceBefore)\n                lines.push('');\n            addCommentBefore(ctx, lines, item.commentBefore, false);\n            if (item.comment)\n                comment = item.comment;\n        }\n        else if (isPair(item)) {\n            const ik = isNode(item.key) ? item.key : null;\n            if (ik) {\n                if (ik.spaceBefore)\n                    lines.push('');\n                addCommentBefore(ctx, lines, ik.commentBefore, false);\n                if (ik.comment)\n                    reqNewline = true;\n            }\n            const iv = isNode(item.value) ? item.value : null;\n            if (iv) {\n                if (iv.comment)\n                    comment = iv.comment;\n                if (iv.commentBefore)\n                    reqNewline = true;\n            }\n            else if (item.value == null && ik && ik.comment) {\n                comment = ik.comment;\n            }\n        }\n        if (comment)\n            reqNewline = true;\n        let str = stringify$3(item, itemCtx, () => (comment = null));\n        if (i < items.length - 1)\n            str += ',';\n        if (comment)\n            str += lineComment(str, itemIndent, commentString(comment));\n        if (!reqNewline && (lines.length > linesAtValue || str.includes('\\n')))\n            reqNewline = true;\n        lines.push(str);\n        linesAtValue = lines.length;\n    }\n    let str;\n    const { start, end } = flowChars;\n    if (lines.length === 0) {\n        str = start + end;\n    }\n    else {\n        if (!reqNewline) {\n            const len = lines.reduce((sum, line) => sum + line.length + 2, 2);\n            reqNewline = len > Collection.maxFlowStringSingleLineLength;\n        }\n        if (reqNewline) {\n            str = start;\n            for (const line of lines)\n                str += line ? `\\n${indentStep}${indent}${line}` : '\\n';\n            str += `\\n${indent}${end}`;\n        }\n        else {\n            str = `${start} ${lines.join(' ')} ${end}`;\n        }\n    }\n    if (comment) {\n        str += lineComment(str, commentString(comment), indent);\n        if (onComment)\n            onComment();\n    }\n    return str;\n}\nfunction addCommentBefore({ indent, options: { commentString } }, lines, comment, chompKeep) {\n    if (comment && chompKeep)\n        comment = comment.replace(/^\\n+/, '');\n    if (comment) {\n        const ic = indentComment(commentString(comment), indent);\n        lines.push(ic.trimStart()); // Avoid double indent on first line\n    }\n}\n\nfunction findPair(items, key) {\n    const k = isScalar$1(key) ? key.value : key;\n    for (const it of items) {\n        if (isPair(it)) {\n            if (it.key === key || it.key === k)\n                return it;\n            if (isScalar$1(it.key) && it.key.value === k)\n                return it;\n        }\n    }\n    return undefined;\n}\nclass YAMLMap extends Collection {\n    constructor(schema) {\n        super(MAP, schema);\n        this.items = [];\n    }\n    static get tagName() {\n        return 'tag:yaml.org,2002:map';\n    }\n    /**\n     * Adds a value to the collection.\n     *\n     * @param overwrite - If not set `true`, using a key that is already in the\n     *   collection will throw. Otherwise, overwrites the previous value.\n     */\n    add(pair, overwrite) {\n        let _pair;\n        if (isPair(pair))\n            _pair = pair;\n        else if (!pair || typeof pair !== 'object' || !('key' in pair)) {\n            // In TypeScript, this never happens.\n            _pair = new Pair(pair, pair?.value);\n        }\n        else\n            _pair = new Pair(pair.key, pair.value);\n        const prev = findPair(this.items, _pair.key);\n        const sortEntries = this.schema?.sortMapEntries;\n        if (prev) {\n            if (!overwrite)\n                throw new Error(`Key ${_pair.key} already set`);\n            // For scalars, keep the old node & its comments and anchors\n            if (isScalar$1(prev.value) && isScalarValue(_pair.value))\n                prev.value.value = _pair.value;\n            else\n                prev.value = _pair.value;\n        }\n        else if (sortEntries) {\n            const i = this.items.findIndex(item => sortEntries(_pair, item) < 0);\n            if (i === -1)\n                this.items.push(_pair);\n            else\n                this.items.splice(i, 0, _pair);\n        }\n        else {\n            this.items.push(_pair);\n        }\n    }\n    delete(key) {\n        const it = findPair(this.items, key);\n        if (!it)\n            return false;\n        const del = this.items.splice(this.items.indexOf(it), 1);\n        return del.length > 0;\n    }\n    get(key, keepScalar) {\n        const it = findPair(this.items, key);\n        const node = it?.value;\n        return (!keepScalar && isScalar$1(node) ? node.value : node) ?? undefined;\n    }\n    has(key) {\n        return !!findPair(this.items, key);\n    }\n    set(key, value) {\n        this.add(new Pair(key, value), true);\n    }\n    /**\n     * @param ctx - Conversion context, originally set in Document#toJS()\n     * @param {Class} Type - If set, forces the returned collection type\n     * @returns Instance of Type, Map, or Object\n     */\n    toJSON(_, ctx, Type) {\n        const map = Type ? new Type() : ctx?.mapAsMap ? new Map() : {};\n        if (ctx?.onCreate)\n            ctx.onCreate(map);\n        for (const item of this.items)\n            addPairToJSMap(ctx, map, item);\n        return map;\n    }\n    toString(ctx, onComment, onChompKeep) {\n        if (!ctx)\n            return JSON.stringify(this);\n        for (const item of this.items) {\n            if (!isPair(item))\n                throw new Error(`Map items must all be pairs; found ${JSON.stringify(item)} instead`);\n        }\n        if (!ctx.allNullValues && this.hasAllNullValues(false))\n            ctx = Object.assign({}, ctx, { allNullValues: true });\n        return stringifyCollection(this, ctx, {\n            blockItemPrefix: '',\n            flowChars: { start: '{', end: '}' },\n            itemIndent: ctx.indent || '',\n            onChompKeep,\n            onComment\n        });\n    }\n}\n\nfunction createMap(schema, obj, ctx) {\n    const { keepUndefined, replacer } = ctx;\n    const map = new YAMLMap(schema);\n    const add = (key, value) => {\n        if (typeof replacer === 'function')\n            value = replacer.call(obj, key, value);\n        else if (Array.isArray(replacer) && !replacer.includes(key))\n            return;\n        if (value !== undefined || keepUndefined)\n            map.items.push(createPair(key, value, ctx));\n    };\n    if (obj instanceof Map) {\n        for (const [key, value] of obj)\n            add(key, value);\n    }\n    else if (obj && typeof obj === 'object') {\n        for (const key of Object.keys(obj))\n            add(key, obj[key]);\n    }\n    if (typeof schema.sortMapEntries === 'function') {\n        map.items.sort(schema.sortMapEntries);\n    }\n    return map;\n}\nconst map = {\n    collection: 'map',\n    createNode: createMap,\n    default: true,\n    nodeClass: YAMLMap,\n    tag: 'tag:yaml.org,2002:map',\n    resolve(map, onError) {\n        if (!isMap(map))\n            onError('Expected a mapping for this tag');\n        return map;\n    }\n};\n\nclass YAMLSeq extends Collection {\n    constructor(schema) {\n        super(SEQ, schema);\n        this.items = [];\n    }\n    static get tagName() {\n        return 'tag:yaml.org,2002:seq';\n    }\n    add(value) {\n        this.items.push(value);\n    }\n    /**\n     * Removes a value from the collection.\n     *\n     * `key` must contain a representation of an integer for this to succeed.\n     * It may be wrapped in a `Scalar`.\n     *\n     * @returns `true` if the item was found and removed.\n     */\n    delete(key) {\n        const idx = asItemIndex(key);\n        if (typeof idx !== 'number')\n            return false;\n        const del = this.items.splice(idx, 1);\n        return del.length > 0;\n    }\n    get(key, keepScalar) {\n        const idx = asItemIndex(key);\n        if (typeof idx !== 'number')\n            return undefined;\n        const it = this.items[idx];\n        return !keepScalar && isScalar$1(it) ? it.value : it;\n    }\n    /**\n     * Checks if the collection includes a value with the key `key`.\n     *\n     * `key` must contain a representation of an integer for this to succeed.\n     * It may be wrapped in a `Scalar`.\n     */\n    has(key) {\n        const idx = asItemIndex(key);\n        return typeof idx === 'number' && idx < this.items.length;\n    }\n    /**\n     * Sets a value in this collection. For `!!set`, `value` needs to be a\n     * boolean to add/remove the item from the set.\n     *\n     * If `key` does not contain a representation of an integer, this will throw.\n     * It may be wrapped in a `Scalar`.\n     */\n    set(key, value) {\n        const idx = asItemIndex(key);\n        if (typeof idx !== 'number')\n            throw new Error(`Expected a valid index, not ${key}.`);\n        const prev = this.items[idx];\n        if (isScalar$1(prev) && isScalarValue(value))\n            prev.value = value;\n        else\n            this.items[idx] = value;\n    }\n    toJSON(_, ctx) {\n        const seq = [];\n        if (ctx?.onCreate)\n            ctx.onCreate(seq);\n        let i = 0;\n        for (const item of this.items)\n            seq.push(toJS(item, String(i++), ctx));\n        return seq;\n    }\n    toString(ctx, onComment, onChompKeep) {\n        if (!ctx)\n            return JSON.stringify(this);\n        return stringifyCollection(this, ctx, {\n            blockItemPrefix: '- ',\n            flowChars: { start: '[', end: ']' },\n            itemIndent: (ctx.indent || '') + '  ',\n            onChompKeep,\n            onComment\n        });\n    }\n}\nfunction asItemIndex(key) {\n    let idx = isScalar$1(key) ? key.value : key;\n    if (idx && typeof idx === 'string')\n        idx = Number(idx);\n    return typeof idx === 'number' && Number.isInteger(idx) && idx >= 0\n        ? idx\n        : null;\n}\n\nfunction createSeq(schema, obj, ctx) {\n    const { replacer } = ctx;\n    const seq = new YAMLSeq(schema);\n    if (obj && Symbol.iterator in Object(obj)) {\n        let i = 0;\n        for (let it of obj) {\n            if (typeof replacer === 'function') {\n                const key = obj instanceof Set ? it : String(i++);\n                it = replacer.call(obj, key, it);\n            }\n            seq.items.push(createNode(it, undefined, ctx));\n        }\n    }\n    return seq;\n}\nconst seq = {\n    collection: 'seq',\n    createNode: createSeq,\n    default: true,\n    nodeClass: YAMLSeq,\n    tag: 'tag:yaml.org,2002:seq',\n    resolve(seq, onError) {\n        if (!isSeq(seq))\n            onError('Expected a sequence for this tag');\n        return seq;\n    }\n};\n\nconst string = {\n    identify: value => typeof value === 'string',\n    default: true,\n    tag: 'tag:yaml.org,2002:str',\n    resolve: str => str,\n    stringify(item, ctx, onComment, onChompKeep) {\n        ctx = Object.assign({ actualString: true }, ctx);\n        return stringifyString(item, ctx, onComment, onChompKeep);\n    }\n};\n\nconst nullTag = {\n    identify: value => value == null,\n    createNode: () => new Scalar(null),\n    default: true,\n    tag: 'tag:yaml.org,2002:null',\n    test: /^(?:~|[Nn]ull|NULL)?$/,\n    resolve: () => new Scalar(null),\n    stringify: ({ source }, ctx) => typeof source === 'string' && nullTag.test.test(source)\n        ? source\n        : ctx.options.nullStr\n};\n\nconst boolTag = {\n    identify: value => typeof value === 'boolean',\n    default: true,\n    tag: 'tag:yaml.org,2002:bool',\n    test: /^(?:[Tt]rue|TRUE|[Ff]alse|FALSE)$/,\n    resolve: str => new Scalar(str[0] === 't' || str[0] === 'T'),\n    stringify({ source, value }, ctx) {\n        if (source && boolTag.test.test(source)) {\n            const sv = source[0] === 't' || source[0] === 'T';\n            if (value === sv)\n                return source;\n        }\n        return value ? ctx.options.trueStr : ctx.options.falseStr;\n    }\n};\n\nfunction stringifyNumber({ format, minFractionDigits, tag, value }) {\n    if (typeof value === 'bigint')\n        return String(value);\n    const num = typeof value === 'number' ? value : Number(value);\n    if (!isFinite(num))\n        return isNaN(num) ? '.nan' : num < 0 ? '-.inf' : '.inf';\n    let n = JSON.stringify(value);\n    if (!format &&\n        minFractionDigits &&\n        (!tag || tag === 'tag:yaml.org,2002:float') &&\n        /^\\d/.test(n)) {\n        let i = n.indexOf('.');\n        if (i < 0) {\n            i = n.length;\n            n += '.';\n        }\n        let d = minFractionDigits - (n.length - i - 1);\n        while (d-- > 0)\n            n += '0';\n    }\n    return n;\n}\n\nconst floatNaN$1 = {\n    identify: value => typeof value === 'number',\n    default: true,\n    tag: 'tag:yaml.org,2002:float',\n    test: /^(?:[-+]?\\.(?:inf|Inf|INF|nan|NaN|NAN))$/,\n    resolve: str => str.slice(-3).toLowerCase() === 'nan'\n        ? NaN\n        : str[0] === '-'\n            ? Number.NEGATIVE_INFINITY\n            : Number.POSITIVE_INFINITY,\n    stringify: stringifyNumber\n};\nconst floatExp$1 = {\n    identify: value => typeof value === 'number',\n    default: true,\n    tag: 'tag:yaml.org,2002:float',\n    format: 'EXP',\n    test: /^[-+]?(?:\\.[0-9]+|[0-9]+(?:\\.[0-9]*)?)[eE][-+]?[0-9]+$/,\n    resolve: str => parseFloat(str),\n    stringify(node) {\n        const num = Number(node.value);\n        return isFinite(num) ? num.toExponential() : stringifyNumber(node);\n    }\n};\nconst float$1 = {\n    identify: value => typeof value === 'number',\n    default: true,\n    tag: 'tag:yaml.org,2002:float',\n    test: /^[-+]?(?:\\.[0-9]+|[0-9]+\\.[0-9]*)$/,\n    resolve(str) {\n        const node = new Scalar(parseFloat(str));\n        const dot = str.indexOf('.');\n        if (dot !== -1 && str[str.length - 1] === '0')\n            node.minFractionDigits = str.length - dot - 1;\n        return node;\n    },\n    stringify: stringifyNumber\n};\n\nconst intIdentify$2 = (value) => typeof value === 'bigint' || Number.isInteger(value);\nconst intResolve$1 = (str, offset, radix, { intAsBigInt }) => (intAsBigInt ? BigInt(str) : parseInt(str.substring(offset), radix));\nfunction intStringify$1(node, radix, prefix) {\n    const { value } = node;\n    if (intIdentify$2(value) && value >= 0)\n        return prefix + value.toString(radix);\n    return stringifyNumber(node);\n}\nconst intOct$1 = {\n    identify: value => intIdentify$2(value) && value >= 0,\n    default: true,\n    tag: 'tag:yaml.org,2002:int',\n    format: 'OCT',\n    test: /^0o[0-7]+$/,\n    resolve: (str, _onError, opt) => intResolve$1(str, 2, 8, opt),\n    stringify: node => intStringify$1(node, 8, '0o')\n};\nconst int$1 = {\n    identify: intIdentify$2,\n    default: true,\n    tag: 'tag:yaml.org,2002:int',\n    test: /^[-+]?[0-9]+$/,\n    resolve: (str, _onError, opt) => intResolve$1(str, 0, 10, opt),\n    stringify: stringifyNumber\n};\nconst intHex$1 = {\n    identify: value => intIdentify$2(value) && value >= 0,\n    default: true,\n    tag: 'tag:yaml.org,2002:int',\n    format: 'HEX',\n    test: /^0x[0-9a-fA-F]+$/,\n    resolve: (str, _onError, opt) => intResolve$1(str, 2, 16, opt),\n    stringify: node => intStringify$1(node, 16, '0x')\n};\n\nconst schema$2 = [\n    map,\n    seq,\n    string,\n    nullTag,\n    boolTag,\n    intOct$1,\n    int$1,\n    intHex$1,\n    floatNaN$1,\n    floatExp$1,\n    float$1\n];\n\nfunction intIdentify$1(value) {\n    return typeof value === 'bigint' || Number.isInteger(value);\n}\nconst stringifyJSON = ({ value }) => JSON.stringify(value);\nconst jsonScalars = [\n    {\n        identify: value => typeof value === 'string',\n        default: true,\n        tag: 'tag:yaml.org,2002:str',\n        resolve: str => str,\n        stringify: stringifyJSON\n    },\n    {\n        identify: value => value == null,\n        createNode: () => new Scalar(null),\n        default: true,\n        tag: 'tag:yaml.org,2002:null',\n        test: /^null$/,\n        resolve: () => null,\n        stringify: stringifyJSON\n    },\n    {\n        identify: value => typeof value === 'boolean',\n        default: true,\n        tag: 'tag:yaml.org,2002:bool',\n        test: /^true|false$/,\n        resolve: str => str === 'true',\n        stringify: stringifyJSON\n    },\n    {\n        identify: intIdentify$1,\n        default: true,\n        tag: 'tag:yaml.org,2002:int',\n        test: /^-?(?:0|[1-9][0-9]*)$/,\n        resolve: (str, _onError, { intAsBigInt }) => intAsBigInt ? BigInt(str) : parseInt(str, 10),\n        stringify: ({ value }) => intIdentify$1(value) ? value.toString() : JSON.stringify(value)\n    },\n    {\n        identify: value => typeof value === 'number',\n        default: true,\n        tag: 'tag:yaml.org,2002:float',\n        test: /^-?(?:0|[1-9][0-9]*)(?:\\.[0-9]*)?(?:[eE][-+]?[0-9]+)?$/,\n        resolve: str => parseFloat(str),\n        stringify: stringifyJSON\n    }\n];\nconst jsonError = {\n    default: true,\n    tag: '',\n    test: /^/,\n    resolve(str, onError) {\n        onError(`Unresolved plain scalar ${JSON.stringify(str)}`);\n        return str;\n    }\n};\nconst schema$1 = [map, seq].concat(jsonScalars, jsonError);\n\nconst binary = {\n    identify: value => value instanceof Uint8Array,\n    default: false,\n    tag: 'tag:yaml.org,2002:binary',\n    /**\n     * Returns a Buffer in node and an Uint8Array in browsers\n     *\n     * To use the resulting buffer as an image, you'll want to do something like:\n     *\n     *   const blob = new Blob([buffer], { type: 'image/jpeg' })\n     *   document.querySelector('#photo').src = URL.createObjectURL(blob)\n     */\n    resolve(src, onError) {\n        if (typeof Buffer === 'function') {\n            return Buffer.from(src, 'base64');\n        }\n        else if (typeof atob === 'function') {\n            // On IE 11, atob() can't handle newlines\n            const str = atob(src.replace(/[\\n\\r]/g, ''));\n            const buffer = new Uint8Array(str.length);\n            for (let i = 0; i < str.length; ++i)\n                buffer[i] = str.charCodeAt(i);\n            return buffer;\n        }\n        else {\n            onError('This environment does not support reading binary tags; either Buffer or atob is required');\n            return src;\n        }\n    },\n    stringify({ comment, type, value }, ctx, onComment, onChompKeep) {\n        const buf = value; // checked earlier by binary.identify()\n        let str;\n        if (typeof Buffer === 'function') {\n            str =\n                buf instanceof Buffer\n                    ? buf.toString('base64')\n                    : Buffer.from(buf.buffer).toString('base64');\n        }\n        else if (typeof btoa === 'function') {\n            let s = '';\n            for (let i = 0; i < buf.length; ++i)\n                s += String.fromCharCode(buf[i]);\n            str = btoa(s);\n        }\n        else {\n            throw new Error('This environment does not support writing binary tags; either Buffer or btoa is required');\n        }\n        if (!type)\n            type = Scalar.BLOCK_LITERAL;\n        if (type !== Scalar.QUOTE_DOUBLE) {\n            const lineWidth = Math.max(ctx.options.lineWidth - ctx.indent.length, ctx.options.minContentWidth);\n            const n = Math.ceil(str.length / lineWidth);\n            const lines = new Array(n);\n            for (let i = 0, o = 0; i < n; ++i, o += lineWidth) {\n                lines[i] = str.substr(o, lineWidth);\n            }\n            str = lines.join(type === Scalar.BLOCK_LITERAL ? '\\n' : ' ');\n        }\n        return stringifyString({ comment, type, value: str }, ctx, onComment, onChompKeep);\n    }\n};\n\nfunction resolvePairs(seq, onError) {\n    if (isSeq(seq)) {\n        for (let i = 0; i < seq.items.length; ++i) {\n            let item = seq.items[i];\n            if (isPair(item))\n                continue;\n            else if (isMap(item)) {\n                if (item.items.length > 1)\n                    onError('Each pair must have its own sequence indicator');\n                const pair = item.items[0] || new Pair(new Scalar(null));\n                if (item.commentBefore)\n                    pair.key.commentBefore = pair.key.commentBefore\n                        ? `${item.commentBefore}\\n${pair.key.commentBefore}`\n                        : item.commentBefore;\n                if (item.comment) {\n                    const cn = pair.value ?? pair.key;\n                    cn.comment = cn.comment\n                        ? `${item.comment}\\n${cn.comment}`\n                        : item.comment;\n                }\n                item = pair;\n            }\n            seq.items[i] = isPair(item) ? item : new Pair(item);\n        }\n    }\n    else\n        onError('Expected a sequence for this tag');\n    return seq;\n}\nfunction createPairs(schema, iterable, ctx) {\n    const { replacer } = ctx;\n    const pairs = new YAMLSeq(schema);\n    pairs.tag = 'tag:yaml.org,2002:pairs';\n    let i = 0;\n    if (iterable && Symbol.iterator in Object(iterable))\n        for (let it of iterable) {\n            if (typeof replacer === 'function')\n                it = replacer.call(iterable, String(i++), it);\n            let key, value;\n            if (Array.isArray(it)) {\n                if (it.length === 2) {\n                    key = it[0];\n                    value = it[1];\n                }\n                else\n                    throw new TypeError(`Expected [key, value] tuple: ${it}`);\n            }\n            else if (it && it instanceof Object) {\n                const keys = Object.keys(it);\n                if (keys.length === 1) {\n                    key = keys[0];\n                    value = it[key];\n                }\n                else\n                    throw new TypeError(`Expected { key: value } tuple: ${it}`);\n            }\n            else {\n                key = it;\n            }\n            pairs.items.push(createPair(key, value, ctx));\n        }\n    return pairs;\n}\nconst pairs = {\n    collection: 'seq',\n    default: false,\n    tag: 'tag:yaml.org,2002:pairs',\n    resolve: resolvePairs,\n    createNode: createPairs\n};\n\nclass YAMLOMap extends YAMLSeq {\n    constructor() {\n        super();\n        this.add = YAMLMap.prototype.add.bind(this);\n        this.delete = YAMLMap.prototype.delete.bind(this);\n        this.get = YAMLMap.prototype.get.bind(this);\n        this.has = YAMLMap.prototype.has.bind(this);\n        this.set = YAMLMap.prototype.set.bind(this);\n        this.tag = YAMLOMap.tag;\n    }\n    /**\n     * If `ctx` is given, the return type is actually `Map<unknown, unknown>`,\n     * but TypeScript won't allow widening the signature of a child method.\n     */\n    toJSON(_, ctx) {\n        if (!ctx)\n            return super.toJSON(_);\n        const map = new Map();\n        if (ctx?.onCreate)\n            ctx.onCreate(map);\n        for (const pair of this.items) {\n            let key, value;\n            if (isPair(pair)) {\n                key = toJS(pair.key, '', ctx);\n                value = toJS(pair.value, key, ctx);\n            }\n            else {\n                key = toJS(pair, '', ctx);\n            }\n            if (map.has(key))\n                throw new Error('Ordered maps must not include duplicate keys');\n            map.set(key, value);\n        }\n        return map;\n    }\n}\nYAMLOMap.tag = 'tag:yaml.org,2002:omap';\nconst omap = {\n    collection: 'seq',\n    identify: value => value instanceof Map,\n    nodeClass: YAMLOMap,\n    default: false,\n    tag: 'tag:yaml.org,2002:omap',\n    resolve(seq, onError) {\n        const pairs = resolvePairs(seq, onError);\n        const seenKeys = [];\n        for (const { key } of pairs.items) {\n            if (isScalar$1(key)) {\n                if (seenKeys.includes(key.value)) {\n                    onError(`Ordered maps must not include duplicate keys: ${key.value}`);\n                }\n                else {\n                    seenKeys.push(key.value);\n                }\n            }\n        }\n        return Object.assign(new YAMLOMap(), pairs);\n    },\n    createNode(schema, iterable, ctx) {\n        const pairs = createPairs(schema, iterable, ctx);\n        const omap = new YAMLOMap();\n        omap.items = pairs.items;\n        return omap;\n    }\n};\n\nfunction boolStringify({ value, source }, ctx) {\n    const boolObj = value ? trueTag : falseTag;\n    if (source && boolObj.test.test(source))\n        return source;\n    return value ? ctx.options.trueStr : ctx.options.falseStr;\n}\nconst trueTag = {\n    identify: value => value === true,\n    default: true,\n    tag: 'tag:yaml.org,2002:bool',\n    test: /^(?:Y|y|[Yy]es|YES|[Tt]rue|TRUE|[Oo]n|ON)$/,\n    resolve: () => new Scalar(true),\n    stringify: boolStringify\n};\nconst falseTag = {\n    identify: value => value === false,\n    default: true,\n    tag: 'tag:yaml.org,2002:bool',\n    test: /^(?:N|n|[Nn]o|NO|[Ff]alse|FALSE|[Oo]ff|OFF)$/i,\n    resolve: () => new Scalar(false),\n    stringify: boolStringify\n};\n\nconst floatNaN = {\n    identify: value => typeof value === 'number',\n    default: true,\n    tag: 'tag:yaml.org,2002:float',\n    test: /^[-+]?\\.(?:inf|Inf|INF|nan|NaN|NAN)$/,\n    resolve: (str) => str.slice(-3).toLowerCase() === 'nan'\n        ? NaN\n        : str[0] === '-'\n            ? Number.NEGATIVE_INFINITY\n            : Number.POSITIVE_INFINITY,\n    stringify: stringifyNumber\n};\nconst floatExp = {\n    identify: value => typeof value === 'number',\n    default: true,\n    tag: 'tag:yaml.org,2002:float',\n    format: 'EXP',\n    test: /^[-+]?(?:[0-9][0-9_]*)?(?:\\.[0-9_]*)?[eE][-+]?[0-9]+$/,\n    resolve: (str) => parseFloat(str.replace(/_/g, '')),\n    stringify(node) {\n        const num = Number(node.value);\n        return isFinite(num) ? num.toExponential() : stringifyNumber(node);\n    }\n};\nconst float = {\n    identify: value => typeof value === 'number',\n    default: true,\n    tag: 'tag:yaml.org,2002:float',\n    test: /^[-+]?(?:[0-9][0-9_]*)?\\.[0-9_]*$/,\n    resolve(str) {\n        const node = new Scalar(parseFloat(str.replace(/_/g, '')));\n        const dot = str.indexOf('.');\n        if (dot !== -1) {\n            const f = str.substring(dot + 1).replace(/_/g, '');\n            if (f[f.length - 1] === '0')\n                node.minFractionDigits = f.length;\n        }\n        return node;\n    },\n    stringify: stringifyNumber\n};\n\nconst intIdentify = (value) => typeof value === 'bigint' || Number.isInteger(value);\nfunction intResolve(str, offset, radix, { intAsBigInt }) {\n    const sign = str[0];\n    if (sign === '-' || sign === '+')\n        offset += 1;\n    str = str.substring(offset).replace(/_/g, '');\n    if (intAsBigInt) {\n        switch (radix) {\n            case 2:\n                str = `0b${str}`;\n                break;\n            case 8:\n                str = `0o${str}`;\n                break;\n            case 16:\n                str = `0x${str}`;\n                break;\n        }\n        const n = BigInt(str);\n        return sign === '-' ? BigInt(-1) * n : n;\n    }\n    const n = parseInt(str, radix);\n    return sign === '-' ? -1 * n : n;\n}\nfunction intStringify(node, radix, prefix) {\n    const { value } = node;\n    if (intIdentify(value)) {\n        const str = value.toString(radix);\n        return value < 0 ? '-' + prefix + str.substr(1) : prefix + str;\n    }\n    return stringifyNumber(node);\n}\nconst intBin = {\n    identify: intIdentify,\n    default: true,\n    tag: 'tag:yaml.org,2002:int',\n    format: 'BIN',\n    test: /^[-+]?0b[0-1_]+$/,\n    resolve: (str, _onError, opt) => intResolve(str, 2, 2, opt),\n    stringify: node => intStringify(node, 2, '0b')\n};\nconst intOct = {\n    identify: intIdentify,\n    default: true,\n    tag: 'tag:yaml.org,2002:int',\n    format: 'OCT',\n    test: /^[-+]?0[0-7_]+$/,\n    resolve: (str, _onError, opt) => intResolve(str, 1, 8, opt),\n    stringify: node => intStringify(node, 8, '0')\n};\nconst int = {\n    identify: intIdentify,\n    default: true,\n    tag: 'tag:yaml.org,2002:int',\n    test: /^[-+]?[0-9][0-9_]*$/,\n    resolve: (str, _onError, opt) => intResolve(str, 0, 10, opt),\n    stringify: stringifyNumber\n};\nconst intHex = {\n    identify: intIdentify,\n    default: true,\n    tag: 'tag:yaml.org,2002:int',\n    format: 'HEX',\n    test: /^[-+]?0x[0-9a-fA-F_]+$/,\n    resolve: (str, _onError, opt) => intResolve(str, 2, 16, opt),\n    stringify: node => intStringify(node, 16, '0x')\n};\n\nclass YAMLSet extends YAMLMap {\n    constructor(schema) {\n        super(schema);\n        this.tag = YAMLSet.tag;\n    }\n    add(key) {\n        let pair;\n        if (isPair(key))\n            pair = key;\n        else if (typeof key === 'object' &&\n            'key' in key &&\n            'value' in key &&\n            key.value === null)\n            pair = new Pair(key.key, null);\n        else\n            pair = new Pair(key, null);\n        const prev = findPair(this.items, pair.key);\n        if (!prev)\n            this.items.push(pair);\n    }\n    /**\n     * If `keepPair` is `true`, returns the Pair matching `key`.\n     * Otherwise, returns the value of that Pair's key.\n     */\n    get(key, keepPair) {\n        const pair = findPair(this.items, key);\n        return !keepPair && isPair(pair)\n            ? isScalar$1(pair.key)\n                ? pair.key.value\n                : pair.key\n            : pair;\n    }\n    set(key, value) {\n        if (typeof value !== 'boolean')\n            throw new Error(`Expected boolean value for set(key, value) in a YAML set, not ${typeof value}`);\n        const prev = findPair(this.items, key);\n        if (prev && !value) {\n            this.items.splice(this.items.indexOf(prev), 1);\n        }\n        else if (!prev && value) {\n            this.items.push(new Pair(key));\n        }\n    }\n    toJSON(_, ctx) {\n        return super.toJSON(_, ctx, Set);\n    }\n    toString(ctx, onComment, onChompKeep) {\n        if (!ctx)\n            return JSON.stringify(this);\n        if (this.hasAllNullValues(true))\n            return super.toString(Object.assign({}, ctx, { allNullValues: true }), onComment, onChompKeep);\n        else\n            throw new Error('Set items must all have null values');\n    }\n}\nYAMLSet.tag = 'tag:yaml.org,2002:set';\nconst set = {\n    collection: 'map',\n    identify: value => value instanceof Set,\n    nodeClass: YAMLSet,\n    default: false,\n    tag: 'tag:yaml.org,2002:set',\n    resolve(map, onError) {\n        if (isMap(map)) {\n            if (map.hasAllNullValues(true))\n                return Object.assign(new YAMLSet(), map);\n            else\n                onError('Set items must all have null values');\n        }\n        else\n            onError('Expected a mapping for this tag');\n        return map;\n    },\n    createNode(schema, iterable, ctx) {\n        const { replacer } = ctx;\n        const set = new YAMLSet(schema);\n        if (iterable && Symbol.iterator in Object(iterable))\n            for (let value of iterable) {\n                if (typeof replacer === 'function')\n                    value = replacer.call(iterable, value, value);\n                set.items.push(createPair(value, null, ctx));\n            }\n        return set;\n    }\n};\n\n/** Internal types handle bigint as number, because TS can't figure it out. */\nfunction parseSexagesimal(str, asBigInt) {\n    const sign = str[0];\n    const parts = sign === '-' || sign === '+' ? str.substring(1) : str;\n    const num = (n) => asBigInt ? BigInt(n) : Number(n);\n    const res = parts\n        .replace(/_/g, '')\n        .split(':')\n        .reduce((res, p) => res * num(60) + num(p), num(0));\n    return (sign === '-' ? num(-1) * res : res);\n}\n/**\n * hhhh:mm:ss.sss\n *\n * Internal types handle bigint as number, because TS can't figure it out.\n */\nfunction stringifySexagesimal(node) {\n    let { value } = node;\n    let num = (n) => n;\n    if (typeof value === 'bigint')\n        num = n => BigInt(n);\n    else if (isNaN(value) || !isFinite(value))\n        return stringifyNumber(node);\n    let sign = '';\n    if (value < 0) {\n        sign = '-';\n        value *= num(-1);\n    }\n    const _60 = num(60);\n    const parts = [value % _60]; // seconds, including ms\n    if (value < 60) {\n        parts.unshift(0); // at least one : is required\n    }\n    else {\n        value = (value - parts[0]) / _60;\n        parts.unshift(value % _60); // minutes\n        if (value >= 60) {\n            value = (value - parts[0]) / _60;\n            parts.unshift(value); // hours\n        }\n    }\n    return (sign +\n        parts\n            .map(n => (n < 10 ? '0' + String(n) : String(n)))\n            .join(':')\n            .replace(/000000\\d*$/, '') // % 60 may introduce error\n    );\n}\nconst intTime = {\n    identify: value => typeof value === 'bigint' || Number.isInteger(value),\n    default: true,\n    tag: 'tag:yaml.org,2002:int',\n    format: 'TIME',\n    test: /^[-+]?[0-9][0-9_]*(?::[0-5]?[0-9])+$/,\n    resolve: (str, _onError, { intAsBigInt }) => parseSexagesimal(str, intAsBigInt),\n    stringify: stringifySexagesimal\n};\nconst floatTime = {\n    identify: value => typeof value === 'number',\n    default: true,\n    tag: 'tag:yaml.org,2002:float',\n    format: 'TIME',\n    test: /^[-+]?[0-9][0-9_]*(?::[0-5]?[0-9])+\\.[0-9_]*$/,\n    resolve: str => parseSexagesimal(str, false),\n    stringify: stringifySexagesimal\n};\nconst timestamp = {\n    identify: value => value instanceof Date,\n    default: true,\n    tag: 'tag:yaml.org,2002:timestamp',\n    // If the time zone is omitted, the timestamp is assumed to be specified in UTC. The time part\n    // may be omitted altogether, resulting in a date format. In such a case, the time part is\n    // assumed to be 00:00:00Z (start of day, UTC).\n    test: RegExp('^([0-9]{4})-([0-9]{1,2})-([0-9]{1,2})' + // YYYY-Mm-Dd\n        '(?:' + // time is optional\n        '(?:t|T|[ \\\\t]+)' + // t | T | whitespace\n        '([0-9]{1,2}):([0-9]{1,2}):([0-9]{1,2}(\\\\.[0-9]+)?)' + // Hh:Mm:Ss(.ss)?\n        '(?:[ \\\\t]*(Z|[-+][012]?[0-9](?::[0-9]{2})?))?' + // Z | +5 | -03:30\n        ')?$'),\n    resolve(str) {\n        const match = str.match(timestamp.test);\n        if (!match)\n            throw new Error('!!timestamp expects a date, starting with yyyy-mm-dd');\n        const [, year, month, day, hour, minute, second] = match.map(Number);\n        const millisec = match[7] ? Number((match[7] + '00').substr(1, 3)) : 0;\n        let date = Date.UTC(year, month - 1, day, hour || 0, minute || 0, second || 0, millisec);\n        const tz = match[8];\n        if (tz && tz !== 'Z') {\n            let d = parseSexagesimal(tz, false);\n            if (Math.abs(d) < 30)\n                d *= 60;\n            date -= 60000 * d;\n        }\n        return new Date(date);\n    },\n    stringify: ({ value }) => value.toISOString().replace(/((T00:00)?:00)?\\.000Z$/, '')\n};\n\nconst schema = [\n    map,\n    seq,\n    string,\n    nullTag,\n    trueTag,\n    falseTag,\n    intBin,\n    intOct,\n    int,\n    intHex,\n    floatNaN,\n    floatExp,\n    float,\n    binary,\n    omap,\n    pairs,\n    set,\n    intTime,\n    floatTime,\n    timestamp\n];\n\nconst schemas = new Map([\n    ['core', schema$2],\n    ['failsafe', [map, seq, string]],\n    ['json', schema$1],\n    ['yaml11', schema],\n    ['yaml-1.1', schema]\n]);\nconst tagsByName = {\n    binary,\n    bool: boolTag,\n    float: float$1,\n    floatExp: floatExp$1,\n    floatNaN: floatNaN$1,\n    floatTime,\n    int: int$1,\n    intHex: intHex$1,\n    intOct: intOct$1,\n    intTime,\n    map,\n    null: nullTag,\n    omap,\n    pairs,\n    seq,\n    set,\n    timestamp\n};\nconst coreKnownTags = {\n    'tag:yaml.org,2002:binary': binary,\n    'tag:yaml.org,2002:omap': omap,\n    'tag:yaml.org,2002:pairs': pairs,\n    'tag:yaml.org,2002:set': set,\n    'tag:yaml.org,2002:timestamp': timestamp\n};\nfunction getTags(customTags, schemaName) {\n    let tags = schemas.get(schemaName);\n    if (!tags) {\n        if (Array.isArray(customTags))\n            tags = [];\n        else {\n            const keys = Array.from(schemas.keys())\n                .filter(key => key !== 'yaml11')\n                .map(key => JSON.stringify(key))\n                .join(', ');\n            throw new Error(`Unknown schema \"${schemaName}\"; use one of ${keys} or define customTags array`);\n        }\n    }\n    if (Array.isArray(customTags)) {\n        for (const tag of customTags)\n            tags = tags.concat(tag);\n    }\n    else if (typeof customTags === 'function') {\n        tags = customTags(tags.slice());\n    }\n    return tags.map(tag => {\n        if (typeof tag !== 'string')\n            return tag;\n        const tagObj = tagsByName[tag];\n        if (tagObj)\n            return tagObj;\n        const keys = Object.keys(tagsByName)\n            .map(key => JSON.stringify(key))\n            .join(', ');\n        throw new Error(`Unknown custom tag \"${tag}\"; use one of ${keys}`);\n    });\n}\n\nconst sortMapEntriesByKey = (a, b) => a.key < b.key ? -1 : a.key > b.key ? 1 : 0;\nclass Schema {\n    constructor({ compat, customTags, merge, resolveKnownTags, schema, sortMapEntries, toStringDefaults }) {\n        this.compat = Array.isArray(compat)\n            ? getTags(compat, 'compat')\n            : compat\n                ? getTags(null, compat)\n                : null;\n        this.merge = !!merge;\n        this.name = (typeof schema === 'string' && schema) || 'core';\n        this.knownTags = resolveKnownTags ? coreKnownTags : {};\n        this.tags = getTags(customTags, this.name);\n        this.toStringOptions = toStringDefaults ?? null;\n        Object.defineProperty(this, MAP, { value: map });\n        Object.defineProperty(this, SCALAR$1, { value: string });\n        Object.defineProperty(this, SEQ, { value: seq });\n        // Used by createMap()\n        this.sortMapEntries =\n            typeof sortMapEntries === 'function'\n                ? sortMapEntries\n                : sortMapEntries === true\n                    ? sortMapEntriesByKey\n                    : null;\n    }\n    clone() {\n        const copy = Object.create(Schema.prototype, Object.getOwnPropertyDescriptors(this));\n        copy.tags = this.tags.slice();\n        return copy;\n    }\n}\n\nfunction stringifyDocument(doc, options) {\n    const lines = [];\n    let hasDirectives = options.directives === true;\n    if (options.directives !== false && doc.directives) {\n        const dir = doc.directives.toString(doc);\n        if (dir) {\n            lines.push(dir);\n            hasDirectives = true;\n        }\n        else if (doc.directives.docStart)\n            hasDirectives = true;\n    }\n    if (hasDirectives)\n        lines.push('---');\n    const ctx = createStringifyContext(doc, options);\n    const { commentString } = ctx.options;\n    if (doc.commentBefore) {\n        if (lines.length !== 1)\n            lines.unshift('');\n        const cs = commentString(doc.commentBefore);\n        lines.unshift(indentComment(cs, ''));\n    }\n    let chompKeep = false;\n    let contentComment = null;\n    if (doc.contents) {\n        if (isNode(doc.contents)) {\n            if (doc.contents.spaceBefore && hasDirectives)\n                lines.push('');\n            if (doc.contents.commentBefore) {\n                const cs = commentString(doc.contents.commentBefore);\n                lines.push(indentComment(cs, ''));\n            }\n            // top-level block scalars need to be indented if followed by a comment\n            ctx.forceBlockIndent = !!doc.comment;\n            contentComment = doc.contents.comment;\n        }\n        const onChompKeep = contentComment ? undefined : () => (chompKeep = true);\n        let body = stringify$3(doc.contents, ctx, () => (contentComment = null), onChompKeep);\n        if (contentComment)\n            body += lineComment(body, '', commentString(contentComment));\n        if ((body[0] === '|' || body[0] === '>') &&\n            lines[lines.length - 1] === '---') {\n            // Top-level block scalars with a preceding doc marker ought to use the\n            // same line for their header.\n            lines[lines.length - 1] = `--- ${body}`;\n        }\n        else\n            lines.push(body);\n    }\n    else {\n        lines.push(stringify$3(doc.contents, ctx));\n    }\n    if (doc.directives?.docEnd) {\n        if (doc.comment) {\n            const cs = commentString(doc.comment);\n            if (cs.includes('\\n')) {\n                lines.push('...');\n                lines.push(indentComment(cs, ''));\n            }\n            else {\n                lines.push(`... ${cs}`);\n            }\n        }\n        else {\n            lines.push('...');\n        }\n    }\n    else {\n        let dc = doc.comment;\n        if (dc && chompKeep)\n            dc = dc.replace(/^\\n+/, '');\n        if (dc) {\n            if ((!chompKeep || contentComment) && lines[lines.length - 1] !== '')\n                lines.push('');\n            lines.push(indentComment(commentString(dc), ''));\n        }\n    }\n    return lines.join('\\n') + '\\n';\n}\n\n/**\n * Applies the JSON.parse reviver algorithm as defined in the ECMA-262 spec,\n * in section 24.5.1.1 \"Runtime Semantics: InternalizeJSONProperty\" of the\n * 2021 edition: https://tc39.es/ecma262/#sec-json.parse\n *\n * Includes extensions for handling Map and Set objects.\n */\nfunction applyReviver(reviver, obj, key, val) {\n    if (val && typeof val === 'object') {\n        if (Array.isArray(val)) {\n            for (let i = 0, len = val.length; i < len; ++i) {\n                const v0 = val[i];\n                const v1 = applyReviver(reviver, val, String(i), v0);\n                if (v1 === undefined)\n                    delete val[i];\n                else if (v1 !== v0)\n                    val[i] = v1;\n            }\n        }\n        else if (val instanceof Map) {\n            for (const k of Array.from(val.keys())) {\n                const v0 = val.get(k);\n                const v1 = applyReviver(reviver, val, k, v0);\n                if (v1 === undefined)\n                    val.delete(k);\n                else if (v1 !== v0)\n                    val.set(k, v1);\n            }\n        }\n        else if (val instanceof Set) {\n            for (const v0 of Array.from(val)) {\n                const v1 = applyReviver(reviver, val, v0, v0);\n                if (v1 === undefined)\n                    val.delete(v0);\n                else if (v1 !== v0) {\n                    val.delete(v0);\n                    val.add(v1);\n                }\n            }\n        }\n        else {\n            for (const [k, v0] of Object.entries(val)) {\n                const v1 = applyReviver(reviver, val, k, v0);\n                if (v1 === undefined)\n                    delete val[k];\n                else if (v1 !== v0)\n                    val[k] = v1;\n            }\n        }\n    }\n    return reviver.call(obj, key, val);\n}\n\nclass Document {\n    constructor(value, replacer, options) {\n        /** A comment before this Document */\n        this.commentBefore = null;\n        /** A comment immediately after this Document */\n        this.comment = null;\n        /** Errors encountered during parsing. */\n        this.errors = [];\n        /** Warnings encountered during parsing. */\n        this.warnings = [];\n        Object.defineProperty(this, NODE_TYPE, { value: DOC });\n        let _replacer = null;\n        if (typeof replacer === 'function' || Array.isArray(replacer)) {\n            _replacer = replacer;\n        }\n        else if (options === undefined && replacer) {\n            options = replacer;\n            replacer = undefined;\n        }\n        const opt = Object.assign({\n            intAsBigInt: false,\n            keepSourceTokens: false,\n            logLevel: 'warn',\n            prettyErrors: true,\n            strict: true,\n            uniqueKeys: true,\n            version: '1.2'\n        }, options);\n        this.options = opt;\n        let { version } = opt;\n        if (options?._directives) {\n            this.directives = options._directives.atDocument();\n            if (this.directives.yaml.explicit)\n                version = this.directives.yaml.version;\n        }\n        else\n            this.directives = new Directives({ version });\n        this.setSchema(version, options);\n        if (value === undefined)\n            this.contents = null;\n        else {\n            this.contents = this.createNode(value, _replacer, options);\n        }\n    }\n    /**\n     * Create a deep copy of this Document and its contents.\n     *\n     * Custom Node values that inherit from `Object` still refer to their original instances.\n     */\n    clone() {\n        const copy = Object.create(Document.prototype, {\n            [NODE_TYPE]: { value: DOC }\n        });\n        copy.commentBefore = this.commentBefore;\n        copy.comment = this.comment;\n        copy.errors = this.errors.slice();\n        copy.warnings = this.warnings.slice();\n        copy.options = Object.assign({}, this.options);\n        if (this.directives)\n            copy.directives = this.directives.clone();\n        copy.schema = this.schema.clone();\n        copy.contents = isNode(this.contents)\n            ? this.contents.clone(copy.schema)\n            : this.contents;\n        if (this.range)\n            copy.range = this.range.slice();\n        return copy;\n    }\n    /** Adds a value to the document. */\n    add(value) {\n        if (assertCollection(this.contents))\n            this.contents.add(value);\n    }\n    /** Adds a value to the document. */\n    addIn(path, value) {\n        if (assertCollection(this.contents))\n            this.contents.addIn(path, value);\n    }\n    /**\n     * Create a new `Alias` node, ensuring that the target `node` has the required anchor.\n     *\n     * If `node` already has an anchor, `name` is ignored.\n     * Otherwise, the `node.anchor` value will be set to `name`,\n     * or if an anchor with that name is already present in the document,\n     * `name` will be used as a prefix for a new unique anchor.\n     * If `name` is undefined, the generated anchor will use 'a' as a prefix.\n     */\n    createAlias(node, name) {\n        if (!node.anchor) {\n            const prev = anchorNames(this);\n            node.anchor =\n                // eslint-disable-next-line @typescript-eslint/prefer-nullish-coalescing\n                !name || prev.has(name) ? findNewAnchor(name || 'a', prev) : name;\n        }\n        return new Alias(node.anchor);\n    }\n    createNode(value, replacer, options) {\n        let _replacer = undefined;\n        if (typeof replacer === 'function') {\n            value = replacer.call({ '': value }, '', value);\n            _replacer = replacer;\n        }\n        else if (Array.isArray(replacer)) {\n            const keyToStr = (v) => typeof v === 'number' || v instanceof String || v instanceof Number;\n            const asStr = replacer.filter(keyToStr).map(String);\n            if (asStr.length > 0)\n                replacer = replacer.concat(asStr);\n            _replacer = replacer;\n        }\n        else if (options === undefined && replacer) {\n            options = replacer;\n            replacer = undefined;\n        }\n        const { aliasDuplicateObjects, anchorPrefix, flow, keepUndefined, onTagObj, tag } = options ?? {};\n        const { onAnchor, setAnchors, sourceObjects } = createNodeAnchors(this, \n        // eslint-disable-next-line @typescript-eslint/prefer-nullish-coalescing\n        anchorPrefix || 'a');\n        const ctx = {\n            aliasDuplicateObjects: aliasDuplicateObjects ?? true,\n            keepUndefined: keepUndefined ?? false,\n            onAnchor,\n            onTagObj,\n            replacer: _replacer,\n            schema: this.schema,\n            sourceObjects\n        };\n        const node = createNode(value, tag, ctx);\n        if (flow && isCollection$1(node))\n            node.flow = true;\n        setAnchors();\n        return node;\n    }\n    /**\n     * Convert a key and a value into a `Pair` using the current schema,\n     * recursively wrapping all values as `Scalar` or `Collection` nodes.\n     */\n    createPair(key, value, options = {}) {\n        const k = this.createNode(key, null, options);\n        const v = this.createNode(value, null, options);\n        return new Pair(k, v);\n    }\n    /**\n     * Removes a value from the document.\n     * @returns `true` if the item was found and removed.\n     */\n    delete(key) {\n        return assertCollection(this.contents) ? this.contents.delete(key) : false;\n    }\n    /**\n     * Removes a value from the document.\n     * @returns `true` if the item was found and removed.\n     */\n    deleteIn(path) {\n        if (isEmptyPath(path)) {\n            if (this.contents == null)\n                return false;\n            this.contents = null;\n            return true;\n        }\n        return assertCollection(this.contents)\n            ? this.contents.deleteIn(path)\n            : false;\n    }\n    /**\n     * Returns item at `key`, or `undefined` if not found. By default unwraps\n     * scalar values from their surrounding node; to disable set `keepScalar` to\n     * `true` (collections are always returned intact).\n     */\n    get(key, keepScalar) {\n        return isCollection$1(this.contents)\n            ? this.contents.get(key, keepScalar)\n            : undefined;\n    }\n    /**\n     * Returns item at `path`, or `undefined` if not found. By default unwraps\n     * scalar values from their surrounding node; to disable set `keepScalar` to\n     * `true` (collections are always returned intact).\n     */\n    getIn(path, keepScalar) {\n        if (isEmptyPath(path))\n            return !keepScalar && isScalar$1(this.contents)\n                ? this.contents.value\n                : this.contents;\n        return isCollection$1(this.contents)\n            ? this.contents.getIn(path, keepScalar)\n            : undefined;\n    }\n    /**\n     * Checks if the document includes a value with the key `key`.\n     */\n    has(key) {\n        return isCollection$1(this.contents) ? this.contents.has(key) : false;\n    }\n    /**\n     * Checks if the document includes a value at `path`.\n     */\n    hasIn(path) {\n        if (isEmptyPath(path))\n            return this.contents !== undefined;\n        return isCollection$1(this.contents) ? this.contents.hasIn(path) : false;\n    }\n    /**\n     * Sets a value in this document. For `!!set`, `value` needs to be a\n     * boolean to add/remove the item from the set.\n     */\n    set(key, value) {\n        if (this.contents == null) {\n            this.contents = collectionFromPath(this.schema, [key], value);\n        }\n        else if (assertCollection(this.contents)) {\n            this.contents.set(key, value);\n        }\n    }\n    /**\n     * Sets a value in this document. For `!!set`, `value` needs to be a\n     * boolean to add/remove the item from the set.\n     */\n    setIn(path, value) {\n        if (isEmptyPath(path))\n            this.contents = value;\n        else if (this.contents == null) {\n            this.contents = collectionFromPath(this.schema, Array.from(path), value);\n        }\n        else if (assertCollection(this.contents)) {\n            this.contents.setIn(path, value);\n        }\n    }\n    /**\n     * Change the YAML version and schema used by the document.\n     * A `null` version disables support for directives, explicit tags, anchors, and aliases.\n     * It also requires the `schema` option to be given as a `Schema` instance value.\n     *\n     * Overrides all previously set schema options.\n     */\n    setSchema(version, options = {}) {\n        if (typeof version === 'number')\n            version = String(version);\n        let opt;\n        switch (version) {\n            case '1.1':\n                if (this.directives)\n                    this.directives.yaml.version = '1.1';\n                else\n                    this.directives = new Directives({ version: '1.1' });\n                opt = { merge: true, resolveKnownTags: false, schema: 'yaml-1.1' };\n                break;\n            case '1.2':\n            case 'next':\n                if (this.directives)\n                    this.directives.yaml.version = version;\n                else\n                    this.directives = new Directives({ version });\n                opt = { merge: false, resolveKnownTags: true, schema: 'core' };\n                break;\n            case null:\n                if (this.directives)\n                    delete this.directives;\n                opt = null;\n                break;\n            default: {\n                const sv = JSON.stringify(version);\n                throw new Error(`Expected '1.1', '1.2' or null as first argument, but found: ${sv}`);\n            }\n        }\n        // Not using `instanceof Schema` to allow for duck typing\n        if (options.schema instanceof Object)\n            this.schema = options.schema;\n        else if (opt)\n            this.schema = new Schema(Object.assign(opt, options));\n        else\n            throw new Error(`With a null YAML version, the { schema: Schema } option is required`);\n    }\n    // json & jsonArg are only used from toJSON()\n    toJS({ json, jsonArg, mapAsMap, maxAliasCount, onAnchor, reviver } = {}) {\n        const ctx = {\n            anchors: new Map(),\n            doc: this,\n            keep: !json,\n            mapAsMap: mapAsMap === true,\n            mapKeyWarned: false,\n            maxAliasCount: typeof maxAliasCount === 'number' ? maxAliasCount : 100,\n            stringify: stringify$3\n        };\n        const res = toJS(this.contents, jsonArg ?? '', ctx);\n        if (typeof onAnchor === 'function')\n            for (const { count, res } of ctx.anchors.values())\n                onAnchor(res, count);\n        return typeof reviver === 'function'\n            ? applyReviver(reviver, { '': res }, '', res)\n            : res;\n    }\n    /**\n     * A JSON representation of the document `contents`.\n     *\n     * @param jsonArg Used by `JSON.stringify` to indicate the array index or\n     *   property name.\n     */\n    toJSON(jsonArg, onAnchor) {\n        return this.toJS({ json: true, jsonArg, mapAsMap: false, onAnchor });\n    }\n    /** A YAML representation of the document. */\n    toString(options = {}) {\n        if (this.errors.length > 0)\n            throw new Error('Document with errors cannot be stringified');\n        if ('indent' in options &&\n            (!Number.isInteger(options.indent) || Number(options.indent) <= 0)) {\n            const s = JSON.stringify(options.indent);\n            throw new Error(`\"indent\" option must be a positive integer, not ${s}`);\n        }\n        return stringifyDocument(this, options);\n    }\n}\nfunction assertCollection(contents) {\n    if (isCollection$1(contents))\n        return true;\n    throw new Error('Expected a YAML collection as document contents');\n}\n\nclass YAMLError extends Error {\n    constructor(name, pos, code, message) {\n        super();\n        this.name = name;\n        this.code = code;\n        this.message = message;\n        this.pos = pos;\n    }\n}\nclass YAMLParseError extends YAMLError {\n    constructor(pos, code, message) {\n        super('YAMLParseError', pos, code, message);\n    }\n}\nclass YAMLWarning extends YAMLError {\n    constructor(pos, code, message) {\n        super('YAMLWarning', pos, code, message);\n    }\n}\nconst prettifyError = (src, lc) => (error) => {\n    if (error.pos[0] === -1)\n        return;\n    error.linePos = error.pos.map(pos => lc.linePos(pos));\n    const { line, col } = error.linePos[0];\n    error.message += ` at line ${line}, column ${col}`;\n    let ci = col - 1;\n    let lineStr = src\n        .substring(lc.lineStarts[line - 1], lc.lineStarts[line])\n        .replace(/[\\n\\r]+$/, '');\n    // Trim to max 80 chars, keeping col position near the middle\n    if (ci >= 60 && lineStr.length > 80) {\n        const trimStart = Math.min(ci - 39, lineStr.length - 79);\n        lineStr = '\u2026' + lineStr.substring(trimStart);\n        ci -= trimStart - 1;\n    }\n    if (lineStr.length > 80)\n        lineStr = lineStr.substring(0, 79) + '\u2026';\n    // Include previous line in context if pointing at line start\n    if (line > 1 && /^ *$/.test(lineStr.substring(0, ci))) {\n        // Regexp won't match if start is trimmed\n        let prev = src.substring(lc.lineStarts[line - 2], lc.lineStarts[line - 1]);\n        if (prev.length > 80)\n            prev = prev.substring(0, 79) + '\u2026\\n';\n        lineStr = prev + lineStr;\n    }\n    if (/[^ ]/.test(lineStr)) {\n        let count = 1;\n        const end = error.linePos[1];\n        if (end && end.line === line && end.col > col) {\n            count = Math.min(end.col - col, 80 - ci);\n        }\n        const pointer = ' '.repeat(ci) + '^'.repeat(count);\n        error.message += `:\\n\\n${lineStr}\\n${pointer}\\n`;\n    }\n};\n\nfunction resolveProps(tokens, { flow, indicator, next, offset, onError, startOnNewline }) {\n    let spaceBefore = false;\n    let atNewline = startOnNewline;\n    let hasSpace = startOnNewline;\n    let comment = '';\n    let commentSep = '';\n    let hasNewline = false;\n    let hasNewlineAfterProp = false;\n    let reqSpace = false;\n    let anchor = null;\n    let tag = null;\n    let comma = null;\n    let found = null;\n    let start = null;\n    for (const token of tokens) {\n        if (reqSpace) {\n            if (token.type !== 'space' &&\n                token.type !== 'newline' &&\n                token.type !== 'comma')\n                onError(token.offset, 'MISSING_CHAR', 'Tags and anchors must be separated from the next token by white space');\n            reqSpace = false;\n        }\n        switch (token.type) {\n            case 'space':\n                // At the doc level, tabs at line start may be parsed\n                // as leading white space rather than indentation.\n                // In a flow collection, only the parser handles indent.\n                if (!flow &&\n                    atNewline &&\n                    indicator !== 'doc-start' &&\n                    token.source[0] === '\\t')\n                    onError(token, 'TAB_AS_INDENT', 'Tabs are not allowed as indentation');\n                hasSpace = true;\n                break;\n            case 'comment': {\n                if (!hasSpace)\n                    onError(token, 'MISSING_CHAR', 'Comments must be separated from other tokens by white space characters');\n                const cb = token.source.substring(1) || ' ';\n                if (!comment)\n                    comment = cb;\n                else\n                    comment += commentSep + cb;\n                commentSep = '';\n                atNewline = false;\n                break;\n            }\n            case 'newline':\n                if (atNewline) {\n                    if (comment)\n                        comment += token.source;\n                    else\n                        spaceBefore = true;\n                }\n                else\n                    commentSep += token.source;\n                atNewline = true;\n                hasNewline = true;\n                if (anchor || tag)\n                    hasNewlineAfterProp = true;\n                hasSpace = true;\n                break;\n            case 'anchor':\n                if (anchor)\n                    onError(token, 'MULTIPLE_ANCHORS', 'A node can have at most one anchor');\n                if (token.source.endsWith(':'))\n                    onError(token.offset + token.source.length - 1, 'BAD_ALIAS', 'Anchor ending in : is ambiguous', true);\n                anchor = token;\n                if (start === null)\n                    start = token.offset;\n                atNewline = false;\n                hasSpace = false;\n                reqSpace = true;\n                break;\n            case 'tag': {\n                if (tag)\n                    onError(token, 'MULTIPLE_TAGS', 'A node can have at most one tag');\n                tag = token;\n                if (start === null)\n                    start = token.offset;\n                atNewline = false;\n                hasSpace = false;\n                reqSpace = true;\n                break;\n            }\n            case indicator:\n                // Could here handle preceding comments differently\n                if (anchor || tag)\n                    onError(token, 'BAD_PROP_ORDER', `Anchors and tags must be after the ${token.source} indicator`);\n                if (found)\n                    onError(token, 'UNEXPECTED_TOKEN', `Unexpected ${token.source} in ${flow ?? 'collection'}`);\n                found = token;\n                atNewline = false;\n                hasSpace = false;\n                break;\n            case 'comma':\n                if (flow) {\n                    if (comma)\n                        onError(token, 'UNEXPECTED_TOKEN', `Unexpected , in ${flow}`);\n                    comma = token;\n                    atNewline = false;\n                    hasSpace = false;\n                    break;\n                }\n            // else fallthrough\n            default:\n                onError(token, 'UNEXPECTED_TOKEN', `Unexpected ${token.type} token`);\n                atNewline = false;\n                hasSpace = false;\n        }\n    }\n    const last = tokens[tokens.length - 1];\n    const end = last ? last.offset + last.source.length : offset;\n    if (reqSpace &&\n        next &&\n        next.type !== 'space' &&\n        next.type !== 'newline' &&\n        next.type !== 'comma' &&\n        (next.type !== 'scalar' || next.source !== ''))\n        onError(next.offset, 'MISSING_CHAR', 'Tags and anchors must be separated from the next token by white space');\n    return {\n        comma,\n        found,\n        spaceBefore,\n        comment,\n        hasNewline,\n        hasNewlineAfterProp,\n        anchor,\n        tag,\n        end,\n        start: start ?? end\n    };\n}\n\nfunction containsNewline(key) {\n    if (!key)\n        return null;\n    switch (key.type) {\n        case 'alias':\n        case 'scalar':\n        case 'double-quoted-scalar':\n        case 'single-quoted-scalar':\n            if (key.source.includes('\\n'))\n                return true;\n            if (key.end)\n                for (const st of key.end)\n                    if (st.type === 'newline')\n                        return true;\n            return false;\n        case 'flow-collection':\n            for (const it of key.items) {\n                for (const st of it.start)\n                    if (st.type === 'newline')\n                        return true;\n                if (it.sep)\n                    for (const st of it.sep)\n                        if (st.type === 'newline')\n                            return true;\n                if (containsNewline(it.key) || containsNewline(it.value))\n                    return true;\n            }\n            return false;\n        default:\n            return true;\n    }\n}\n\nfunction flowIndentCheck(indent, fc, onError) {\n    if (fc?.type === 'flow-collection') {\n        const end = fc.end[0];\n        if (end.indent === indent &&\n            (end.source === ']' || end.source === '}') &&\n            containsNewline(fc)) {\n            const msg = 'Flow end indicator should be more indented than parent';\n            onError(end, 'BAD_INDENT', msg, true);\n        }\n    }\n}\n\nfunction mapIncludes(ctx, items, search) {\n    const { uniqueKeys } = ctx.options;\n    if (uniqueKeys === false)\n        return false;\n    const isEqual = typeof uniqueKeys === 'function'\n        ? uniqueKeys\n        : (a, b) => a === b ||\n            (isScalar$1(a) &&\n                isScalar$1(b) &&\n                a.value === b.value &&\n                !(a.value === '<<' && ctx.schema.merge));\n    return items.some(pair => isEqual(pair.key, search));\n}\n\nconst startColMsg = 'All mapping items must start at the same column';\nfunction resolveBlockMap({ composeNode, composeEmptyNode }, ctx, bm, onError) {\n    const map = new YAMLMap(ctx.schema);\n    if (ctx.atRoot)\n        ctx.atRoot = false;\n    let offset = bm.offset;\n    for (const collItem of bm.items) {\n        const { start, key, sep, value } = collItem;\n        // key properties\n        const keyProps = resolveProps(start, {\n            indicator: 'explicit-key-ind',\n            next: key ?? sep?.[0],\n            offset,\n            onError,\n            startOnNewline: true\n        });\n        const implicitKey = !keyProps.found;\n        if (implicitKey) {\n            if (key) {\n                if (key.type === 'block-seq')\n                    onError(offset, 'BLOCK_AS_IMPLICIT_KEY', 'A block sequence may not be used as an implicit map key');\n                else if ('indent' in key && key.indent !== bm.indent)\n                    onError(offset, 'BAD_INDENT', startColMsg);\n            }\n            if (!keyProps.anchor && !keyProps.tag && !sep) {\n                // TODO: assert being at last item?\n                if (keyProps.comment) {\n                    if (map.comment)\n                        map.comment += '\\n' + keyProps.comment;\n                    else\n                        map.comment = keyProps.comment;\n                }\n                continue;\n            }\n            if (keyProps.hasNewlineAfterProp || containsNewline(key)) {\n                onError(key ?? start[start.length - 1], 'MULTILINE_IMPLICIT_KEY', 'Implicit keys need to be on a single line');\n            }\n        }\n        else if (keyProps.found?.indent !== bm.indent) {\n            onError(offset, 'BAD_INDENT', startColMsg);\n        }\n        // key value\n        const keyStart = keyProps.end;\n        const keyNode = key\n            ? composeNode(ctx, key, keyProps, onError)\n            : composeEmptyNode(ctx, keyStart, start, null, keyProps, onError);\n        if (ctx.schema.compat)\n            flowIndentCheck(bm.indent, key, onError);\n        if (mapIncludes(ctx, map.items, keyNode))\n            onError(keyStart, 'DUPLICATE_KEY', 'Map keys must be unique');\n        // value properties\n        const valueProps = resolveProps(sep ?? [], {\n            indicator: 'map-value-ind',\n            next: value,\n            offset: keyNode.range[2],\n            onError,\n            startOnNewline: !key || key.type === 'block-scalar'\n        });\n        offset = valueProps.end;\n        if (valueProps.found) {\n            if (implicitKey) {\n                if (value?.type === 'block-map' && !valueProps.hasNewline)\n                    onError(offset, 'BLOCK_AS_IMPLICIT_KEY', 'Nested mappings are not allowed in compact mappings');\n                if (ctx.options.strict &&\n                    keyProps.start < valueProps.found.offset - 1024)\n                    onError(keyNode.range, 'KEY_OVER_1024_CHARS', 'The : indicator must be at most 1024 chars after the start of an implicit block mapping key');\n            }\n            // value value\n            const valueNode = value\n                ? composeNode(ctx, value, valueProps, onError)\n                : composeEmptyNode(ctx, offset, sep, null, valueProps, onError);\n            if (ctx.schema.compat)\n                flowIndentCheck(bm.indent, value, onError);\n            offset = valueNode.range[2];\n            const pair = new Pair(keyNode, valueNode);\n            if (ctx.options.keepSourceTokens)\n                pair.srcToken = collItem;\n            map.items.push(pair);\n        }\n        else {\n            // key with no value\n            if (implicitKey)\n                onError(keyNode.range, 'MISSING_CHAR', 'Implicit map keys need to be followed by map values');\n            if (valueProps.comment) {\n                if (keyNode.comment)\n                    keyNode.comment += '\\n' + valueProps.comment;\n                else\n                    keyNode.comment = valueProps.comment;\n            }\n            const pair = new Pair(keyNode);\n            if (ctx.options.keepSourceTokens)\n                pair.srcToken = collItem;\n            map.items.push(pair);\n        }\n    }\n    map.range = [bm.offset, offset, offset];\n    return map;\n}\n\nfunction resolveBlockSeq({ composeNode, composeEmptyNode }, ctx, bs, onError) {\n    const seq = new YAMLSeq(ctx.schema);\n    if (ctx.atRoot)\n        ctx.atRoot = false;\n    let offset = bs.offset;\n    for (const { start, value } of bs.items) {\n        const props = resolveProps(start, {\n            indicator: 'seq-item-ind',\n            next: value,\n            offset,\n            onError,\n            startOnNewline: true\n        });\n        offset = props.end;\n        if (!props.found) {\n            if (props.anchor || props.tag || value) {\n                if (value && value.type === 'block-seq')\n                    onError(offset, 'BAD_INDENT', 'All sequence items must start at the same column');\n                else\n                    onError(offset, 'MISSING_CHAR', 'Sequence item without - indicator');\n            }\n            else {\n                // TODO: assert being at last item?\n                if (props.comment)\n                    seq.comment = props.comment;\n                continue;\n            }\n        }\n        const node = value\n            ? composeNode(ctx, value, props, onError)\n            : composeEmptyNode(ctx, offset, start, null, props, onError);\n        if (ctx.schema.compat)\n            flowIndentCheck(bs.indent, value, onError);\n        offset = node.range[2];\n        seq.items.push(node);\n    }\n    seq.range = [bs.offset, offset, offset];\n    return seq;\n}\n\nfunction resolveEnd(end, offset, reqSpace, onError) {\n    let comment = '';\n    if (end) {\n        let hasSpace = false;\n        let sep = '';\n        for (const token of end) {\n            const { source, type } = token;\n            switch (type) {\n                case 'space':\n                    hasSpace = true;\n                    break;\n                case 'comment': {\n                    if (reqSpace && !hasSpace)\n                        onError(token, 'MISSING_CHAR', 'Comments must be separated from other tokens by white space characters');\n                    const cb = source.substring(1) || ' ';\n                    if (!comment)\n                        comment = cb;\n                    else\n                        comment += sep + cb;\n                    sep = '';\n                    break;\n                }\n                case 'newline':\n                    if (comment)\n                        sep += source;\n                    hasSpace = true;\n                    break;\n                default:\n                    onError(token, 'UNEXPECTED_TOKEN', `Unexpected ${type} at node end`);\n            }\n            offset += source.length;\n        }\n    }\n    return { comment, offset };\n}\n\nconst blockMsg = 'Block collections are not allowed within flow collections';\nconst isBlock = (token) => token && (token.type === 'block-map' || token.type === 'block-seq');\nfunction resolveFlowCollection({ composeNode, composeEmptyNode }, ctx, fc, onError) {\n    const isMap = fc.start.source === '{';\n    const fcName = isMap ? 'flow map' : 'flow sequence';\n    const coll = isMap\n        ? new YAMLMap(ctx.schema)\n        : new YAMLSeq(ctx.schema);\n    coll.flow = true;\n    const atRoot = ctx.atRoot;\n    if (atRoot)\n        ctx.atRoot = false;\n    let offset = fc.offset + fc.start.source.length;\n    for (let i = 0; i < fc.items.length; ++i) {\n        const collItem = fc.items[i];\n        const { start, key, sep, value } = collItem;\n        const props = resolveProps(start, {\n            flow: fcName,\n            indicator: 'explicit-key-ind',\n            next: key ?? sep?.[0],\n            offset,\n            onError,\n            startOnNewline: false\n        });\n        if (!props.found) {\n            if (!props.anchor && !props.tag && !sep && !value) {\n                if (i === 0 && props.comma)\n                    onError(props.comma, 'UNEXPECTED_TOKEN', `Unexpected , in ${fcName}`);\n                else if (i < fc.items.length - 1)\n                    onError(props.start, 'UNEXPECTED_TOKEN', `Unexpected empty item in ${fcName}`);\n                if (props.comment) {\n                    if (coll.comment)\n                        coll.comment += '\\n' + props.comment;\n                    else\n                        coll.comment = props.comment;\n                }\n                offset = props.end;\n                continue;\n            }\n            if (!isMap && ctx.options.strict && containsNewline(key))\n                onError(key, // checked by containsNewline()\n                'MULTILINE_IMPLICIT_KEY', 'Implicit keys of flow sequence pairs need to be on a single line');\n        }\n        if (i === 0) {\n            if (props.comma)\n                onError(props.comma, 'UNEXPECTED_TOKEN', `Unexpected , in ${fcName}`);\n        }\n        else {\n            if (!props.comma)\n                onError(props.start, 'MISSING_CHAR', `Missing , between ${fcName} items`);\n            if (props.comment) {\n                let prevItemComment = '';\n                loop: for (const st of start) {\n                    switch (st.type) {\n                        case 'comma':\n                        case 'space':\n                            break;\n                        case 'comment':\n                            prevItemComment = st.source.substring(1);\n                            break loop;\n                        default:\n                            break loop;\n                    }\n                }\n                if (prevItemComment) {\n                    let prev = coll.items[coll.items.length - 1];\n                    if (isPair(prev))\n                        prev = prev.value ?? prev.key;\n                    if (prev.comment)\n                        prev.comment += '\\n' + prevItemComment;\n                    else\n                        prev.comment = prevItemComment;\n                    props.comment = props.comment.substring(prevItemComment.length + 1);\n                }\n            }\n        }\n        if (!isMap && !sep && !props.found) {\n            // item is a value in a seq\n            // \u2192 key & sep are empty, start does not include ? or :\n            const valueNode = value\n                ? composeNode(ctx, value, props, onError)\n                : composeEmptyNode(ctx, props.end, sep, null, props, onError);\n            coll.items.push(valueNode);\n            offset = valueNode.range[2];\n            if (isBlock(value))\n                onError(valueNode.range, 'BLOCK_IN_FLOW', blockMsg);\n        }\n        else {\n            // item is a key+value pair\n            // key value\n            const keyStart = props.end;\n            const keyNode = key\n                ? composeNode(ctx, key, props, onError)\n                : composeEmptyNode(ctx, keyStart, start, null, props, onError);\n            if (isBlock(key))\n                onError(keyNode.range, 'BLOCK_IN_FLOW', blockMsg);\n            // value properties\n            const valueProps = resolveProps(sep ?? [], {\n                flow: fcName,\n                indicator: 'map-value-ind',\n                next: value,\n                offset: keyNode.range[2],\n                onError,\n                startOnNewline: false\n            });\n            if (valueProps.found) {\n                if (!isMap && !props.found && ctx.options.strict) {\n                    if (sep)\n                        for (const st of sep) {\n                            if (st === valueProps.found)\n                                break;\n                            if (st.type === 'newline') {\n                                onError(st, 'MULTILINE_IMPLICIT_KEY', 'Implicit keys of flow sequence pairs need to be on a single line');\n                                break;\n                            }\n                        }\n                    if (props.start < valueProps.found.offset - 1024)\n                        onError(valueProps.found, 'KEY_OVER_1024_CHARS', 'The : indicator must be at most 1024 chars after the start of an implicit flow sequence key');\n                }\n            }\n            else if (value) {\n                if ('source' in value && value.source && value.source[0] === ':')\n                    onError(value, 'MISSING_CHAR', `Missing space after : in ${fcName}`);\n                else\n                    onError(valueProps.start, 'MISSING_CHAR', `Missing , or : between ${fcName} items`);\n            }\n            // value value\n            const valueNode = value\n                ? composeNode(ctx, value, valueProps, onError)\n                : valueProps.found\n                    ? composeEmptyNode(ctx, valueProps.end, sep, null, valueProps, onError)\n                    : null;\n            if (valueNode) {\n                if (isBlock(value))\n                    onError(valueNode.range, 'BLOCK_IN_FLOW', blockMsg);\n            }\n            else if (valueProps.comment) {\n                if (keyNode.comment)\n                    keyNode.comment += '\\n' + valueProps.comment;\n                else\n                    keyNode.comment = valueProps.comment;\n            }\n            const pair = new Pair(keyNode, valueNode);\n            if (ctx.options.keepSourceTokens)\n                pair.srcToken = collItem;\n            if (isMap) {\n                const map = coll;\n                if (mapIncludes(ctx, map.items, keyNode))\n                    onError(keyStart, 'DUPLICATE_KEY', 'Map keys must be unique');\n                map.items.push(pair);\n            }\n            else {\n                const map = new YAMLMap(ctx.schema);\n                map.flow = true;\n                map.items.push(pair);\n                coll.items.push(map);\n            }\n            offset = valueNode ? valueNode.range[2] : valueProps.end;\n        }\n    }\n    const expectedEnd = isMap ? '}' : ']';\n    const [ce, ...ee] = fc.end;\n    let cePos = offset;\n    if (ce && ce.source === expectedEnd)\n        cePos = ce.offset + ce.source.length;\n    else {\n        const name = fcName[0].toUpperCase() + fcName.substring(1);\n        const msg = atRoot\n            ? `${name} must end with a ${expectedEnd}`\n            : `${name} in block collection must be sufficiently indented and end with a ${expectedEnd}`;\n        onError(offset, atRoot ? 'MISSING_CHAR' : 'BAD_INDENT', msg);\n        if (ce && ce.source.length !== 1)\n            ee.unshift(ce);\n    }\n    if (ee.length > 0) {\n        const end = resolveEnd(ee, cePos, ctx.options.strict, onError);\n        if (end.comment) {\n            if (coll.comment)\n                coll.comment += '\\n' + end.comment;\n            else\n                coll.comment = end.comment;\n        }\n        coll.range = [fc.offset, cePos, end.offset];\n    }\n    else {\n        coll.range = [fc.offset, cePos, cePos];\n    }\n    return coll;\n}\n\nfunction composeCollection(CN, ctx, token, tagToken, onError) {\n    let coll;\n    switch (token.type) {\n        case 'block-map': {\n            coll = resolveBlockMap(CN, ctx, token, onError);\n            break;\n        }\n        case 'block-seq': {\n            coll = resolveBlockSeq(CN, ctx, token, onError);\n            break;\n        }\n        case 'flow-collection': {\n            coll = resolveFlowCollection(CN, ctx, token, onError);\n            break;\n        }\n    }\n    if (!tagToken)\n        return coll;\n    const tagName = ctx.directives.tagName(tagToken.source, msg => onError(tagToken, 'TAG_RESOLVE_FAILED', msg));\n    if (!tagName)\n        return coll;\n    // Cast needed due to: https://github.com/Microsoft/TypeScript/issues/3841\n    const Coll = coll.constructor;\n    if (tagName === '!' || tagName === Coll.tagName) {\n        coll.tag = Coll.tagName;\n        return coll;\n    }\n    const expType = isMap(coll) ? 'map' : 'seq';\n    let tag = ctx.schema.tags.find(t => t.collection === expType && t.tag === tagName);\n    if (!tag) {\n        const kt = ctx.schema.knownTags[tagName];\n        if (kt && kt.collection === expType) {\n            ctx.schema.tags.push(Object.assign({}, kt, { default: false }));\n            tag = kt;\n        }\n        else {\n            onError(tagToken, 'TAG_RESOLVE_FAILED', `Unresolved tag: ${tagName}`, true);\n            coll.tag = tagName;\n            return coll;\n        }\n    }\n    const res = tag.resolve(coll, msg => onError(tagToken, 'TAG_RESOLVE_FAILED', msg), ctx.options);\n    const node = isNode(res)\n        ? res\n        : new Scalar(res);\n    node.range = coll.range;\n    node.tag = tagName;\n    if (tag?.format)\n        node.format = tag.format;\n    return node;\n}\n\nfunction resolveBlockScalar(scalar, strict, onError) {\n    const start = scalar.offset;\n    const header = parseBlockScalarHeader(scalar, strict, onError);\n    if (!header)\n        return { value: '', type: null, comment: '', range: [start, start, start] };\n    const type = header.mode === '>' ? Scalar.BLOCK_FOLDED : Scalar.BLOCK_LITERAL;\n    const lines = scalar.source ? splitLines(scalar.source) : [];\n    // determine the end of content & start of chomping\n    let chompStart = lines.length;\n    for (let i = lines.length - 1; i >= 0; --i) {\n        const content = lines[i][1];\n        if (content === '' || content === '\\r')\n            chompStart = i;\n        else\n            break;\n    }\n    // shortcut for empty contents\n    if (chompStart === 0) {\n        const value = header.chomp === '+' && lines.length > 0\n            ? '\\n'.repeat(Math.max(1, lines.length - 1))\n            : '';\n        let end = start + header.length;\n        if (scalar.source)\n            end += scalar.source.length;\n        return { value, type, comment: header.comment, range: [start, end, end] };\n    }\n    // find the indentation level to trim from start\n    let trimIndent = scalar.indent + header.indent;\n    let offset = scalar.offset + header.length;\n    let contentStart = 0;\n    for (let i = 0; i < chompStart; ++i) {\n        const [indent, content] = lines[i];\n        if (content === '' || content === '\\r') {\n            if (header.indent === 0 && indent.length > trimIndent)\n                trimIndent = indent.length;\n        }\n        else {\n            if (indent.length < trimIndent) {\n                const message = 'Block scalars with more-indented leading empty lines must use an explicit indentation indicator';\n                onError(offset + indent.length, 'MISSING_CHAR', message);\n            }\n            if (header.indent === 0)\n                trimIndent = indent.length;\n            contentStart = i;\n            break;\n        }\n        offset += indent.length + content.length + 1;\n    }\n    // include trailing more-indented empty lines in content\n    for (let i = lines.length - 1; i >= chompStart; --i) {\n        if (lines[i][0].length > trimIndent)\n            chompStart = i + 1;\n    }\n    let value = '';\n    let sep = '';\n    let prevMoreIndented = false;\n    // leading whitespace is kept intact\n    for (let i = 0; i < contentStart; ++i)\n        value += lines[i][0].slice(trimIndent) + '\\n';\n    for (let i = contentStart; i < chompStart; ++i) {\n        let [indent, content] = lines[i];\n        offset += indent.length + content.length + 1;\n        const crlf = content[content.length - 1] === '\\r';\n        if (crlf)\n            content = content.slice(0, -1);\n        /* istanbul ignore if already caught in lexer */\n        if (content && indent.length < trimIndent) {\n            const src = header.indent\n                ? 'explicit indentation indicator'\n                : 'first line';\n            const message = `Block scalar lines must not be less indented than their ${src}`;\n            onError(offset - content.length - (crlf ? 2 : 1), 'BAD_INDENT', message);\n            indent = '';\n        }\n        if (type === Scalar.BLOCK_LITERAL) {\n            value += sep + indent.slice(trimIndent) + content;\n            sep = '\\n';\n        }\n        else if (indent.length > trimIndent || content[0] === '\\t') {\n            // more-indented content within a folded block\n            if (sep === ' ')\n                sep = '\\n';\n            else if (!prevMoreIndented && sep === '\\n')\n                sep = '\\n\\n';\n            value += sep + indent.slice(trimIndent) + content;\n            sep = '\\n';\n            prevMoreIndented = true;\n        }\n        else if (content === '') {\n            // empty line\n            if (sep === '\\n')\n                value += '\\n';\n            else\n                sep = '\\n';\n        }\n        else {\n            value += sep + content;\n            sep = ' ';\n            prevMoreIndented = false;\n        }\n    }\n    switch (header.chomp) {\n        case '-':\n            break;\n        case '+':\n            for (let i = chompStart; i < lines.length; ++i)\n                value += '\\n' + lines[i][0].slice(trimIndent);\n            if (value[value.length - 1] !== '\\n')\n                value += '\\n';\n            break;\n        default:\n            value += '\\n';\n    }\n    const end = start + header.length + scalar.source.length;\n    return { value, type, comment: header.comment, range: [start, end, end] };\n}\nfunction parseBlockScalarHeader({ offset, props }, strict, onError) {\n    /* istanbul ignore if should not happen */\n    if (props[0].type !== 'block-scalar-header') {\n        onError(props[0], 'IMPOSSIBLE', 'Block scalar header not found');\n        return null;\n    }\n    const { source } = props[0];\n    const mode = source[0];\n    let indent = 0;\n    let chomp = '';\n    let error = -1;\n    for (let i = 1; i < source.length; ++i) {\n        const ch = source[i];\n        if (!chomp && (ch === '-' || ch === '+'))\n            chomp = ch;\n        else {\n            const n = Number(ch);\n            if (!indent && n)\n                indent = n;\n            else if (error === -1)\n                error = offset + i;\n        }\n    }\n    if (error !== -1)\n        onError(error, 'UNEXPECTED_TOKEN', `Block scalar header includes extra characters: ${source}`);\n    let hasSpace = false;\n    let comment = '';\n    let length = source.length;\n    for (let i = 1; i < props.length; ++i) {\n        const token = props[i];\n        switch (token.type) {\n            case 'space':\n                hasSpace = true;\n            // fallthrough\n            case 'newline':\n                length += token.source.length;\n                break;\n            case 'comment':\n                if (strict && !hasSpace) {\n                    const message = 'Comments must be separated from other tokens by white space characters';\n                    onError(token, 'MISSING_CHAR', message);\n                }\n                length += token.source.length;\n                comment = token.source.substring(1);\n                break;\n            case 'error':\n                onError(token, 'UNEXPECTED_TOKEN', token.message);\n                length += token.source.length;\n                break;\n            /* istanbul ignore next should not happen */\n            default: {\n                const message = `Unexpected token in block scalar header: ${token.type}`;\n                onError(token, 'UNEXPECTED_TOKEN', message);\n                const ts = token.source;\n                if (ts && typeof ts === 'string')\n                    length += ts.length;\n            }\n        }\n    }\n    return { mode, indent, chomp, comment, length };\n}\n/** @returns Array of lines split up as `[indent, content]` */\nfunction splitLines(source) {\n    const split = source.split(/\\n( *)/);\n    const first = split[0];\n    const m = first.match(/^( *)/);\n    const line0 = m?.[1]\n        ? [m[1], first.slice(m[1].length)]\n        : ['', first];\n    const lines = [line0];\n    for (let i = 1; i < split.length; i += 2)\n        lines.push([split[i], split[i + 1]]);\n    return lines;\n}\n\nfunction resolveFlowScalar(scalar, strict, onError) {\n    const { offset, type, source, end } = scalar;\n    let _type;\n    let value;\n    const _onError = (rel, code, msg) => onError(offset + rel, code, msg);\n    switch (type) {\n        case 'scalar':\n            _type = Scalar.PLAIN;\n            value = plainValue(source, _onError);\n            break;\n        case 'single-quoted-scalar':\n            _type = Scalar.QUOTE_SINGLE;\n            value = singleQuotedValue(source, _onError);\n            break;\n        case 'double-quoted-scalar':\n            _type = Scalar.QUOTE_DOUBLE;\n            value = doubleQuotedValue(source, _onError);\n            break;\n        /* istanbul ignore next should not happen */\n        default:\n            onError(scalar, 'UNEXPECTED_TOKEN', `Expected a flow scalar value, but found: ${type}`);\n            return {\n                value: '',\n                type: null,\n                comment: '',\n                range: [offset, offset + source.length, offset + source.length]\n            };\n    }\n    const valueEnd = offset + source.length;\n    const re = resolveEnd(end, valueEnd, strict, onError);\n    return {\n        value,\n        type: _type,\n        comment: re.comment,\n        range: [offset, valueEnd, re.offset]\n    };\n}\nfunction plainValue(source, onError) {\n    let badChar = '';\n    switch (source[0]) {\n        /* istanbul ignore next should not happen */\n        case '\\t':\n            badChar = 'a tab character';\n            break;\n        case ',':\n            badChar = 'flow indicator character ,';\n            break;\n        case '%':\n            badChar = 'directive indicator character %';\n            break;\n        case '|':\n        case '>': {\n            badChar = `block scalar indicator ${source[0]}`;\n            break;\n        }\n        case '@':\n        case '`': {\n            badChar = `reserved character ${source[0]}`;\n            break;\n        }\n    }\n    if (badChar)\n        onError(0, 'BAD_SCALAR_START', `Plain value cannot start with ${badChar}`);\n    return foldLines(source);\n}\nfunction singleQuotedValue(source, onError) {\n    if (source[source.length - 1] !== \"'\" || source.length === 1)\n        onError(source.length, 'MISSING_CHAR', \"Missing closing 'quote\");\n    return foldLines(source.slice(1, -1)).replace(/''/g, \"'\");\n}\nfunction foldLines(source) {\n    /**\n     * The negative lookbehind here and in the `re` RegExp is to\n     * prevent causing a polynomial search time in certain cases.\n     *\n     * The try-catch is for Safari, which doesn't support this yet:\n     * https://caniuse.com/js-regexp-lookbehind\n     */\n    let first, line;\n    try {\n        first = new RegExp('(.*?)(?<![ \\t])[ \\t]*\\r?\\n', 'sy');\n        line = new RegExp('[ \\t]*(.*?)(?:(?<![ \\t])[ \\t]*)?\\r?\\n', 'sy');\n    }\n    catch (_) {\n        first = /(.*?)[ \\t]*\\r?\\n/sy;\n        line = /[ \\t]*(.*?)[ \\t]*\\r?\\n/sy;\n    }\n    let match = first.exec(source);\n    if (!match)\n        return source;\n    let res = match[1];\n    let sep = ' ';\n    let pos = first.lastIndex;\n    line.lastIndex = pos;\n    while ((match = line.exec(source))) {\n        if (match[1] === '') {\n            if (sep === '\\n')\n                res += sep;\n            else\n                sep = '\\n';\n        }\n        else {\n            res += sep + match[1];\n            sep = ' ';\n        }\n        pos = line.lastIndex;\n    }\n    const last = /[ \\t]*(.*)/sy;\n    last.lastIndex = pos;\n    match = last.exec(source);\n    return res + sep + (match?.[1] ?? '');\n}\nfunction doubleQuotedValue(source, onError) {\n    let res = '';\n    for (let i = 1; i < source.length - 1; ++i) {\n        const ch = source[i];\n        if (ch === '\\r' && source[i + 1] === '\\n')\n            continue;\n        if (ch === '\\n') {\n            const { fold, offset } = foldNewline(source, i);\n            res += fold;\n            i = offset;\n        }\n        else if (ch === '\\\\') {\n            let next = source[++i];\n            const cc = escapeCodes[next];\n            if (cc)\n                res += cc;\n            else if (next === '\\n') {\n                // skip escaped newlines, but still trim the following line\n                next = source[i + 1];\n                while (next === ' ' || next === '\\t')\n                    next = source[++i + 1];\n            }\n            else if (next === '\\r' && source[i + 1] === '\\n') {\n                // skip escaped CRLF newlines, but still trim the following line\n                next = source[++i + 1];\n                while (next === ' ' || next === '\\t')\n                    next = source[++i + 1];\n            }\n            else if (next === 'x' || next === 'u' || next === 'U') {\n                const length = { x: 2, u: 4, U: 8 }[next];\n                res += parseCharCode(source, i + 1, length, onError);\n                i += length;\n            }\n            else {\n                const raw = source.substr(i - 1, 2);\n                onError(i - 1, 'BAD_DQ_ESCAPE', `Invalid escape sequence ${raw}`);\n                res += raw;\n            }\n        }\n        else if (ch === ' ' || ch === '\\t') {\n            // trim trailing whitespace\n            const wsStart = i;\n            let next = source[i + 1];\n            while (next === ' ' || next === '\\t')\n                next = source[++i + 1];\n            if (next !== '\\n' && !(next === '\\r' && source[i + 2] === '\\n'))\n                res += i > wsStart ? source.slice(wsStart, i + 1) : ch;\n        }\n        else {\n            res += ch;\n        }\n    }\n    if (source[source.length - 1] !== '\"' || source.length === 1)\n        onError(source.length, 'MISSING_CHAR', 'Missing closing \"quote');\n    return res;\n}\n/**\n * Fold a single newline into a space, multiple newlines to N - 1 newlines.\n * Presumes `source[offset] === '\\n'`\n */\nfunction foldNewline(source, offset) {\n    let fold = '';\n    let ch = source[offset + 1];\n    while (ch === ' ' || ch === '\\t' || ch === '\\n' || ch === '\\r') {\n        if (ch === '\\r' && source[offset + 2] !== '\\n')\n            break;\n        if (ch === '\\n')\n            fold += '\\n';\n        offset += 1;\n        ch = source[offset + 1];\n    }\n    if (!fold)\n        fold = ' ';\n    return { fold, offset };\n}\nconst escapeCodes = {\n    '0': '\\0',\n    a: '\\x07',\n    b: '\\b',\n    e: '\\x1b',\n    f: '\\f',\n    n: '\\n',\n    r: '\\r',\n    t: '\\t',\n    v: '\\v',\n    N: '\\u0085',\n    _: '\\u00a0',\n    L: '\\u2028',\n    P: '\\u2029',\n    ' ': ' ',\n    '\"': '\"',\n    '/': '/',\n    '\\\\': '\\\\',\n    '\\t': '\\t'\n};\nfunction parseCharCode(source, offset, length, onError) {\n    const cc = source.substr(offset, length);\n    const ok = cc.length === length && /^[0-9a-fA-F]+$/.test(cc);\n    const code = ok ? parseInt(cc, 16) : NaN;\n    if (isNaN(code)) {\n        const raw = source.substr(offset - 2, length + 2);\n        onError(offset - 2, 'BAD_DQ_ESCAPE', `Invalid escape sequence ${raw}`);\n        return raw;\n    }\n    return String.fromCodePoint(code);\n}\n\nfunction composeScalar(ctx, token, tagToken, onError) {\n    const { value, type, comment, range } = token.type === 'block-scalar'\n        ? resolveBlockScalar(token, ctx.options.strict, onError)\n        : resolveFlowScalar(token, ctx.options.strict, onError);\n    const tagName = tagToken\n        ? ctx.directives.tagName(tagToken.source, msg => onError(tagToken, 'TAG_RESOLVE_FAILED', msg))\n        : null;\n    const tag = tagToken && tagName\n        ? findScalarTagByName(ctx.schema, value, tagName, tagToken, onError)\n        : token.type === 'scalar'\n            ? findScalarTagByTest(ctx, value, token, onError)\n            : ctx.schema[SCALAR$1];\n    let scalar;\n    try {\n        const res = tag.resolve(value, msg => onError(tagToken ?? token, 'TAG_RESOLVE_FAILED', msg), ctx.options);\n        scalar = isScalar$1(res) ? res : new Scalar(res);\n    }\n    catch (error) {\n        const msg = error instanceof Error ? error.message : String(error);\n        onError(tagToken ?? token, 'TAG_RESOLVE_FAILED', msg);\n        scalar = new Scalar(value);\n    }\n    scalar.range = range;\n    scalar.source = value;\n    if (type)\n        scalar.type = type;\n    if (tagName)\n        scalar.tag = tagName;\n    if (tag.format)\n        scalar.format = tag.format;\n    if (comment)\n        scalar.comment = comment;\n    return scalar;\n}\nfunction findScalarTagByName(schema, value, tagName, tagToken, onError) {\n    if (tagName === '!')\n        return schema[SCALAR$1]; // non-specific tag\n    const matchWithTest = [];\n    for (const tag of schema.tags) {\n        if (!tag.collection && tag.tag === tagName) {\n            if (tag.default && tag.test)\n                matchWithTest.push(tag);\n            else\n                return tag;\n        }\n    }\n    for (const tag of matchWithTest)\n        if (tag.test?.test(value))\n            return tag;\n    const kt = schema.knownTags[tagName];\n    if (kt && !kt.collection) {\n        // Ensure that the known tag is available for stringifying,\n        // but does not get used by default.\n        schema.tags.push(Object.assign({}, kt, { default: false, test: undefined }));\n        return kt;\n    }\n    onError(tagToken, 'TAG_RESOLVE_FAILED', `Unresolved tag: ${tagName}`, tagName !== 'tag:yaml.org,2002:str');\n    return schema[SCALAR$1];\n}\nfunction findScalarTagByTest({ directives, schema }, value, token, onError) {\n    const tag = schema.tags.find(tag => tag.default && tag.test?.test(value)) || schema[SCALAR$1];\n    if (schema.compat) {\n        const compat = schema.compat.find(tag => tag.default && tag.test?.test(value)) ??\n            schema[SCALAR$1];\n        if (tag.tag !== compat.tag) {\n            const ts = directives.tagString(tag.tag);\n            const cs = directives.tagString(compat.tag);\n            const msg = `Value may be parsed as either ${ts} or ${cs}`;\n            onError(token, 'TAG_RESOLVE_FAILED', msg, true);\n        }\n    }\n    return tag;\n}\n\nfunction emptyScalarPosition(offset, before, pos) {\n    if (before) {\n        if (pos === null)\n            pos = before.length;\n        for (let i = pos - 1; i >= 0; --i) {\n            let st = before[i];\n            switch (st.type) {\n                case 'space':\n                case 'comment':\n                case 'newline':\n                    offset -= st.source.length;\n                    continue;\n            }\n            // Technically, an empty scalar is immediately after the last non-empty\n            // node, but it's more useful to place it after any whitespace.\n            st = before[++i];\n            while (st?.type === 'space') {\n                offset += st.source.length;\n                st = before[++i];\n            }\n            break;\n        }\n    }\n    return offset;\n}\n\nconst CN = { composeNode, composeEmptyNode };\nfunction composeNode(ctx, token, props, onError) {\n    const { spaceBefore, comment, anchor, tag } = props;\n    let node;\n    let isSrcToken = true;\n    switch (token.type) {\n        case 'alias':\n            node = composeAlias(ctx, token, onError);\n            if (anchor || tag)\n                onError(token, 'ALIAS_PROPS', 'An alias node must not specify any properties');\n            break;\n        case 'scalar':\n        case 'single-quoted-scalar':\n        case 'double-quoted-scalar':\n        case 'block-scalar':\n            node = composeScalar(ctx, token, tag, onError);\n            if (anchor)\n                node.anchor = anchor.source.substring(1);\n            break;\n        case 'block-map':\n        case 'block-seq':\n        case 'flow-collection':\n            node = composeCollection(CN, ctx, token, tag, onError);\n            if (anchor)\n                node.anchor = anchor.source.substring(1);\n            break;\n        default: {\n            const message = token.type === 'error'\n                ? token.message\n                : `Unsupported token (type: ${token.type})`;\n            onError(token, 'UNEXPECTED_TOKEN', message);\n            node = composeEmptyNode(ctx, token.offset, undefined, null, props, onError);\n            isSrcToken = false;\n        }\n    }\n    if (anchor && node.anchor === '')\n        onError(anchor, 'BAD_ALIAS', 'Anchor cannot be an empty string');\n    if (spaceBefore)\n        node.spaceBefore = true;\n    if (comment) {\n        if (token.type === 'scalar' && token.source === '')\n            node.comment = comment;\n        else\n            node.commentBefore = comment;\n    }\n    // @ts-expect-error Type checking misses meaning of isSrcToken\n    if (ctx.options.keepSourceTokens && isSrcToken)\n        node.srcToken = token;\n    return node;\n}\nfunction composeEmptyNode(ctx, offset, before, pos, { spaceBefore, comment, anchor, tag }, onError) {\n    const token = {\n        type: 'scalar',\n        offset: emptyScalarPosition(offset, before, pos),\n        indent: -1,\n        source: ''\n    };\n    const node = composeScalar(ctx, token, tag, onError);\n    if (anchor) {\n        node.anchor = anchor.source.substring(1);\n        if (node.anchor === '')\n            onError(anchor, 'BAD_ALIAS', 'Anchor cannot be an empty string');\n    }\n    if (spaceBefore)\n        node.spaceBefore = true;\n    if (comment)\n        node.comment = comment;\n    return node;\n}\nfunction composeAlias({ options }, { offset, source, end }, onError) {\n    const alias = new Alias(source.substring(1));\n    if (alias.source === '')\n        onError(offset, 'BAD_ALIAS', 'Alias cannot be an empty string');\n    if (alias.source.endsWith(':'))\n        onError(offset + source.length - 1, 'BAD_ALIAS', 'Alias ending in : is ambiguous', true);\n    const valueEnd = offset + source.length;\n    const re = resolveEnd(end, valueEnd, options.strict, onError);\n    alias.range = [offset, valueEnd, re.offset];\n    if (re.comment)\n        alias.comment = re.comment;\n    return alias;\n}\n\nfunction composeDoc(options, directives, { offset, start, value, end }, onError) {\n    const opts = Object.assign({ _directives: directives }, options);\n    const doc = new Document(undefined, opts);\n    const ctx = {\n        atRoot: true,\n        directives: doc.directives,\n        options: doc.options,\n        schema: doc.schema\n    };\n    const props = resolveProps(start, {\n        indicator: 'doc-start',\n        next: value ?? end?.[0],\n        offset,\n        onError,\n        startOnNewline: true\n    });\n    if (props.found) {\n        doc.directives.docStart = true;\n        if (value &&\n            (value.type === 'block-map' || value.type === 'block-seq') &&\n            !props.hasNewline)\n            onError(props.end, 'MISSING_CHAR', 'Block collection cannot start on same line with directives-end marker');\n    }\n    doc.contents = value\n        ? composeNode(ctx, value, props, onError)\n        : composeEmptyNode(ctx, props.end, start, null, props, onError);\n    const contentEnd = doc.contents.range[2];\n    const re = resolveEnd(end, contentEnd, false, onError);\n    if (re.comment)\n        doc.comment = re.comment;\n    doc.range = [offset, contentEnd, re.offset];\n    return doc;\n}\n\nfunction getErrorPos(src) {\n    if (typeof src === 'number')\n        return [src, src + 1];\n    if (Array.isArray(src))\n        return src.length === 2 ? src : [src[0], src[1]];\n    const { offset, source } = src;\n    return [offset, offset + (typeof source === 'string' ? source.length : 1)];\n}\nfunction parsePrelude(prelude) {\n    let comment = '';\n    let atComment = false;\n    let afterEmptyLine = false;\n    for (let i = 0; i < prelude.length; ++i) {\n        const source = prelude[i];\n        switch (source[0]) {\n            case '#':\n                comment +=\n                    (comment === '' ? '' : afterEmptyLine ? '\\n\\n' : '\\n') +\n                        (source.substring(1) || ' ');\n                atComment = true;\n                afterEmptyLine = false;\n                break;\n            case '%':\n                if (prelude[i + 1]?.[0] !== '#')\n                    i += 1;\n                atComment = false;\n                break;\n            default:\n                // This may be wrong after doc-end, but in that case it doesn't matter\n                if (!atComment)\n                    afterEmptyLine = true;\n                atComment = false;\n        }\n    }\n    return { comment, afterEmptyLine };\n}\n/**\n * Compose a stream of CST nodes into a stream of YAML Documents.\n *\n * ```ts\n * import { Composer, Parser } from 'yaml'\n *\n * const src: string = ...\n * const tokens = new Parser().parse(src)\n * const docs = new Composer().compose(tokens)\n * ```\n */\nclass Composer {\n    constructor(options = {}) {\n        this.doc = null;\n        this.atDirectives = false;\n        this.prelude = [];\n        this.errors = [];\n        this.warnings = [];\n        this.onError = (source, code, message, warning) => {\n            const pos = getErrorPos(source);\n            if (warning)\n                this.warnings.push(new YAMLWarning(pos, code, message));\n            else\n                this.errors.push(new YAMLParseError(pos, code, message));\n        };\n        // eslint-disable-next-line @typescript-eslint/prefer-nullish-coalescing\n        this.directives = new Directives({ version: options.version || '1.2' });\n        this.options = options;\n    }\n    decorate(doc, afterDoc) {\n        const { comment, afterEmptyLine } = parsePrelude(this.prelude);\n        //console.log({ dc: doc.comment, prelude, comment })\n        if (comment) {\n            const dc = doc.contents;\n            if (afterDoc) {\n                doc.comment = doc.comment ? `${doc.comment}\\n${comment}` : comment;\n            }\n            else if (afterEmptyLine || doc.directives.docStart || !dc) {\n                doc.commentBefore = comment;\n            }\n            else if (isCollection$1(dc) && !dc.flow && dc.items.length > 0) {\n                let it = dc.items[0];\n                if (isPair(it))\n                    it = it.key;\n                const cb = it.commentBefore;\n                it.commentBefore = cb ? `${comment}\\n${cb}` : comment;\n            }\n            else {\n                const cb = dc.commentBefore;\n                dc.commentBefore = cb ? `${comment}\\n${cb}` : comment;\n            }\n        }\n        if (afterDoc) {\n            Array.prototype.push.apply(doc.errors, this.errors);\n            Array.prototype.push.apply(doc.warnings, this.warnings);\n        }\n        else {\n            doc.errors = this.errors;\n            doc.warnings = this.warnings;\n        }\n        this.prelude = [];\n        this.errors = [];\n        this.warnings = [];\n    }\n    /**\n     * Current stream status information.\n     *\n     * Mostly useful at the end of input for an empty stream.\n     */\n    streamInfo() {\n        return {\n            comment: parsePrelude(this.prelude).comment,\n            directives: this.directives,\n            errors: this.errors,\n            warnings: this.warnings\n        };\n    }\n    /**\n     * Compose tokens into documents.\n     *\n     * @param forceDoc - If the stream contains no document, still emit a final document including any comments and directives that would be applied to a subsequent document.\n     * @param endOffset - Should be set if `forceDoc` is also set, to set the document range end and to indicate errors correctly.\n     */\n    *compose(tokens, forceDoc = false, endOffset = -1) {\n        for (const token of tokens)\n            yield* this.next(token);\n        yield* this.end(forceDoc, endOffset);\n    }\n    /** Advance the composer by one CST token. */\n    *next(token) {\n        switch (token.type) {\n            case 'directive':\n                this.directives.add(token.source, (offset, message, warning) => {\n                    const pos = getErrorPos(token);\n                    pos[0] += offset;\n                    this.onError(pos, 'BAD_DIRECTIVE', message, warning);\n                });\n                this.prelude.push(token.source);\n                this.atDirectives = true;\n                break;\n            case 'document': {\n                const doc = composeDoc(this.options, this.directives, token, this.onError);\n                if (this.atDirectives && !doc.directives.docStart)\n                    this.onError(token, 'MISSING_CHAR', 'Missing directives-end/doc-start indicator line');\n                this.decorate(doc, false);\n                if (this.doc)\n                    yield this.doc;\n                this.doc = doc;\n                this.atDirectives = false;\n                break;\n            }\n            case 'byte-order-mark':\n            case 'space':\n                break;\n            case 'comment':\n            case 'newline':\n                this.prelude.push(token.source);\n                break;\n            case 'error': {\n                const msg = token.source\n                    ? `${token.message}: ${JSON.stringify(token.source)}`\n                    : token.message;\n                const error = new YAMLParseError(getErrorPos(token), 'UNEXPECTED_TOKEN', msg);\n                if (this.atDirectives || !this.doc)\n                    this.errors.push(error);\n                else\n                    this.doc.errors.push(error);\n                break;\n            }\n            case 'doc-end': {\n                if (!this.doc) {\n                    const msg = 'Unexpected doc-end without preceding document';\n                    this.errors.push(new YAMLParseError(getErrorPos(token), 'UNEXPECTED_TOKEN', msg));\n                    break;\n                }\n                this.doc.directives.docEnd = true;\n                const end = resolveEnd(token.end, token.offset + token.source.length, this.doc.options.strict, this.onError);\n                this.decorate(this.doc, true);\n                if (end.comment) {\n                    const dc = this.doc.comment;\n                    this.doc.comment = dc ? `${dc}\\n${end.comment}` : end.comment;\n                }\n                this.doc.range[2] = end.offset;\n                break;\n            }\n            default:\n                this.errors.push(new YAMLParseError(getErrorPos(token), 'UNEXPECTED_TOKEN', `Unsupported token ${token.type}`));\n        }\n    }\n    /**\n     * Call at end of input to yield any remaining document.\n     *\n     * @param forceDoc - If the stream contains no document, still emit a final document including any comments and directives that would be applied to a subsequent document.\n     * @param endOffset - Should be set if `forceDoc` is also set, to set the document range end and to indicate errors correctly.\n     */\n    *end(forceDoc = false, endOffset = -1) {\n        if (this.doc) {\n            this.decorate(this.doc, true);\n            yield this.doc;\n            this.doc = null;\n        }\n        else if (forceDoc) {\n            const opts = Object.assign({ _directives: this.directives }, this.options);\n            const doc = new Document(undefined, opts);\n            if (this.atDirectives)\n                this.onError(endOffset, 'MISSING_CHAR', 'Missing directives-end indicator line');\n            doc.range = [0, endOffset, endOffset];\n            this.decorate(doc, false);\n            yield doc;\n        }\n    }\n}\n\nfunction resolveAsScalar(token, strict = true, onError) {\n    if (token) {\n        const _onError = (pos, code, message) => {\n            const offset = typeof pos === 'number' ? pos : Array.isArray(pos) ? pos[0] : pos.offset;\n            if (onError)\n                onError(offset, code, message);\n            else\n                throw new YAMLParseError([offset, offset + 1], code, message);\n        };\n        switch (token.type) {\n            case 'scalar':\n            case 'single-quoted-scalar':\n            case 'double-quoted-scalar':\n                return resolveFlowScalar(token, strict, _onError);\n            case 'block-scalar':\n                return resolveBlockScalar(token, strict, _onError);\n        }\n    }\n    return null;\n}\n/**\n * Create a new scalar token with `value`\n *\n * Values that represent an actual string but may be parsed as a different type should use a `type` other than `'PLAIN'`,\n * as this function does not support any schema operations and won't check for such conflicts.\n *\n * @param value The string representation of the value, which will have its content properly indented.\n * @param context.end Comments and whitespace after the end of the value, or after the block scalar header. If undefined, a newline will be added.\n * @param context.implicitKey Being within an implicit key may affect the resolved type of the token's value.\n * @param context.indent The indent level of the token.\n * @param context.inFlow Is this scalar within a flow collection? This may affect the resolved type of the token's value.\n * @param context.offset The offset position of the token.\n * @param context.type The preferred type of the scalar token. If undefined, the previous type of the `token` will be used, defaulting to `'PLAIN'`.\n */\nfunction createScalarToken(value, context) {\n    const { implicitKey = false, indent, inFlow = false, offset = -1, type = 'PLAIN' } = context;\n    const source = stringifyString({ type, value }, {\n        implicitKey,\n        indent: indent > 0 ? ' '.repeat(indent) : '',\n        inFlow,\n        options: { blockQuote: true, lineWidth: -1 }\n    });\n    const end = context.end ?? [\n        { type: 'newline', offset: -1, indent, source: '\\n' }\n    ];\n    switch (source[0]) {\n        case '|':\n        case '>': {\n            const he = source.indexOf('\\n');\n            const head = source.substring(0, he);\n            const body = source.substring(he + 1) + '\\n';\n            const props = [\n                { type: 'block-scalar-header', offset, indent, source: head }\n            ];\n            if (!addEndtoBlockProps(props, end))\n                props.push({ type: 'newline', offset: -1, indent, source: '\\n' });\n            return { type: 'block-scalar', offset, indent, props, source: body };\n        }\n        case '\"':\n            return { type: 'double-quoted-scalar', offset, indent, source, end };\n        case \"'\":\n            return { type: 'single-quoted-scalar', offset, indent, source, end };\n        default:\n            return { type: 'scalar', offset, indent, source, end };\n    }\n}\n/**\n * Set the value of `token` to the given string `value`, overwriting any previous contents and type that it may have.\n *\n * Best efforts are made to retain any comments previously associated with the `token`,\n * though all contents within a collection's `items` will be overwritten.\n *\n * Values that represent an actual string but may be parsed as a different type should use a `type` other than `'PLAIN'`,\n * as this function does not support any schema operations and won't check for such conflicts.\n *\n * @param token Any token. If it does not include an `indent` value, the value will be stringified as if it were an implicit key.\n * @param value The string representation of the value, which will have its content properly indented.\n * @param context.afterKey In most cases, values after a key should have an additional level of indentation.\n * @param context.implicitKey Being within an implicit key may affect the resolved type of the token's value.\n * @param context.inFlow Being within a flow collection may affect the resolved type of the token's value.\n * @param context.type The preferred type of the scalar token. If undefined, the previous type of the `token` will be used, defaulting to `'PLAIN'`.\n */\nfunction setScalarValue(token, value, context = {}) {\n    let { afterKey = false, implicitKey = false, inFlow = false, type } = context;\n    let indent = 'indent' in token ? token.indent : null;\n    if (afterKey && typeof indent === 'number')\n        indent += 2;\n    if (!type)\n        switch (token.type) {\n            case 'single-quoted-scalar':\n                type = 'QUOTE_SINGLE';\n                break;\n            case 'double-quoted-scalar':\n                type = 'QUOTE_DOUBLE';\n                break;\n            case 'block-scalar': {\n                const header = token.props[0];\n                if (header.type !== 'block-scalar-header')\n                    throw new Error('Invalid block scalar header');\n                type = header.source[0] === '>' ? 'BLOCK_FOLDED' : 'BLOCK_LITERAL';\n                break;\n            }\n            default:\n                type = 'PLAIN';\n        }\n    const source = stringifyString({ type, value }, {\n        implicitKey: implicitKey || indent === null,\n        indent: indent !== null && indent > 0 ? ' '.repeat(indent) : '',\n        inFlow,\n        options: { blockQuote: true, lineWidth: -1 }\n    });\n    switch (source[0]) {\n        case '|':\n        case '>':\n            setBlockScalarValue(token, source);\n            break;\n        case '\"':\n            setFlowScalarValue(token, source, 'double-quoted-scalar');\n            break;\n        case \"'\":\n            setFlowScalarValue(token, source, 'single-quoted-scalar');\n            break;\n        default:\n            setFlowScalarValue(token, source, 'scalar');\n    }\n}\nfunction setBlockScalarValue(token, source) {\n    const he = source.indexOf('\\n');\n    const head = source.substring(0, he);\n    const body = source.substring(he + 1) + '\\n';\n    if (token.type === 'block-scalar') {\n        const header = token.props[0];\n        if (header.type !== 'block-scalar-header')\n            throw new Error('Invalid block scalar header');\n        header.source = head;\n        token.source = body;\n    }\n    else {\n        const { offset } = token;\n        const indent = 'indent' in token ? token.indent : -1;\n        const props = [\n            { type: 'block-scalar-header', offset, indent, source: head }\n        ];\n        if (!addEndtoBlockProps(props, 'end' in token ? token.end : undefined))\n            props.push({ type: 'newline', offset: -1, indent, source: '\\n' });\n        for (const key of Object.keys(token))\n            if (key !== 'type' && key !== 'offset')\n                delete token[key];\n        Object.assign(token, { type: 'block-scalar', indent, props, source: body });\n    }\n}\n/** @returns `true` if last token is a newline */\nfunction addEndtoBlockProps(props, end) {\n    if (end)\n        for (const st of end)\n            switch (st.type) {\n                case 'space':\n                case 'comment':\n                    props.push(st);\n                    break;\n                case 'newline':\n                    props.push(st);\n                    return true;\n            }\n    return false;\n}\nfunction setFlowScalarValue(token, source, type) {\n    switch (token.type) {\n        case 'scalar':\n        case 'double-quoted-scalar':\n        case 'single-quoted-scalar':\n            token.type = type;\n            token.source = source;\n            break;\n        case 'block-scalar': {\n            const end = token.props.slice(1);\n            let oa = source.length;\n            if (token.props[0].type === 'block-scalar-header')\n                oa -= token.props[0].source.length;\n            for (const tok of end)\n                tok.offset += oa;\n            delete token.props;\n            Object.assign(token, { type, source, end });\n            break;\n        }\n        case 'block-map':\n        case 'block-seq': {\n            const offset = token.offset + source.length;\n            const nl = { type: 'newline', offset, indent: token.indent, source: '\\n' };\n            delete token.items;\n            Object.assign(token, { type, source, end: [nl] });\n            break;\n        }\n        default: {\n            const indent = 'indent' in token ? token.indent : -1;\n            const end = 'end' in token && Array.isArray(token.end)\n                ? token.end.filter(st => st.type === 'space' ||\n                    st.type === 'comment' ||\n                    st.type === 'newline')\n                : [];\n            for (const key of Object.keys(token))\n                if (key !== 'type' && key !== 'offset')\n                    delete token[key];\n            Object.assign(token, { type, indent, source, end });\n        }\n    }\n}\n\n/**\n * Stringify a CST document, token, or collection item\n *\n * Fair warning: This applies no validation whatsoever, and\n * simply concatenates the sources in their logical order.\n */\nconst stringify$2 = (cst) => 'type' in cst ? stringifyToken(cst) : stringifyItem(cst);\nfunction stringifyToken(token) {\n    switch (token.type) {\n        case 'block-scalar': {\n            let res = '';\n            for (const tok of token.props)\n                res += stringifyToken(tok);\n            return res + token.source;\n        }\n        case 'block-map':\n        case 'block-seq': {\n            let res = '';\n            for (const item of token.items)\n                res += stringifyItem(item);\n            return res;\n        }\n        case 'flow-collection': {\n            let res = token.start.source;\n            for (const item of token.items)\n                res += stringifyItem(item);\n            for (const st of token.end)\n                res += st.source;\n            return res;\n        }\n        case 'document': {\n            let res = stringifyItem(token);\n            if (token.end)\n                for (const st of token.end)\n                    res += st.source;\n            return res;\n        }\n        default: {\n            let res = token.source;\n            if ('end' in token && token.end)\n                for (const st of token.end)\n                    res += st.source;\n            return res;\n        }\n    }\n}\nfunction stringifyItem({ start, key, sep, value }) {\n    let res = '';\n    for (const st of start)\n        res += st.source;\n    if (key)\n        res += stringifyToken(key);\n    if (sep)\n        for (const st of sep)\n            res += st.source;\n    if (value)\n        res += stringifyToken(value);\n    return res;\n}\n\nconst BREAK = Symbol('break visit');\nconst SKIP = Symbol('skip children');\nconst REMOVE = Symbol('remove item');\n/**\n * Apply a visitor to a CST document or item.\n *\n * Walks through the tree (depth-first) starting from the root, calling a\n * `visitor` function with two arguments when entering each item:\n *   - `item`: The current item, which included the following members:\n *     - `start: SourceToken[]` \u2013 Source tokens before the key or value,\n *       possibly including its anchor or tag.\n *     - `key?: Token | null` \u2013 Set for pair values. May then be `null`, if\n *       the key before the `:` separator is empty.\n *     - `sep?: SourceToken[]` \u2013 Source tokens between the key and the value,\n *       which should include the `:` map value indicator if `value` is set.\n *     - `value?: Token` \u2013 The value of a sequence item, or of a map pair.\n *   - `path`: The steps from the root to the current node, as an array of\n *     `['key' | 'value', number]` tuples.\n *\n * The return value of the visitor may be used to control the traversal:\n *   - `undefined` (default): Do nothing and continue\n *   - `visit.SKIP`: Do not visit the children of this token, continue with\n *      next sibling\n *   - `visit.BREAK`: Terminate traversal completely\n *   - `visit.REMOVE`: Remove the current item, then continue with the next one\n *   - `number`: Set the index of the next step. This is useful especially if\n *     the index of the current token has changed.\n *   - `function`: Define the next visitor for this item. After the original\n *     visitor is called on item entry, next visitors are called after handling\n *     a non-empty `key` and when exiting the item.\n */\nfunction visit(cst, visitor) {\n    if ('type' in cst && cst.type === 'document')\n        cst = { start: cst.start, value: cst.value };\n    _visit(Object.freeze([]), cst, visitor);\n}\n// Without the `as symbol` casts, TS declares these in the `visit`\n// namespace using `var`, but then complains about that because\n// `unique symbol` must be `const`.\n/** Terminate visit traversal completely */\nvisit.BREAK = BREAK;\n/** Do not visit the children of the current item */\nvisit.SKIP = SKIP;\n/** Remove the current item */\nvisit.REMOVE = REMOVE;\n/** Find the item at `path` from `cst` as the root */\nvisit.itemAtPath = (cst, path) => {\n    let item = cst;\n    for (const [field, index] of path) {\n        const tok = item?.[field];\n        if (tok && 'items' in tok) {\n            item = tok.items[index];\n        }\n        else\n            return undefined;\n    }\n    return item;\n};\n/**\n * Get the immediate parent collection of the item at `path` from `cst` as the root.\n *\n * Throws an error if the collection is not found, which should never happen if the item itself exists.\n */\nvisit.parentCollection = (cst, path) => {\n    const parent = visit.itemAtPath(cst, path.slice(0, -1));\n    const field = path[path.length - 1][0];\n    const coll = parent?.[field];\n    if (coll && 'items' in coll)\n        return coll;\n    throw new Error('Parent collection not found');\n};\nfunction _visit(path, item, visitor) {\n    let ctrl = visitor(item, path);\n    if (typeof ctrl === 'symbol')\n        return ctrl;\n    for (const field of ['key', 'value']) {\n        const token = item[field];\n        if (token && 'items' in token) {\n            for (let i = 0; i < token.items.length; ++i) {\n                const ci = _visit(Object.freeze(path.concat([[field, i]])), token.items[i], visitor);\n                if (typeof ci === 'number')\n                    i = ci - 1;\n                else if (ci === BREAK)\n                    return BREAK;\n                else if (ci === REMOVE) {\n                    token.items.splice(i, 1);\n                    i -= 1;\n                }\n            }\n            if (typeof ctrl === 'function' && field === 'key')\n                ctrl = ctrl(item, path);\n        }\n    }\n    return typeof ctrl === 'function' ? ctrl(item, path) : ctrl;\n}\n\n/** The byte order mark */\nconst BOM = '\\u{FEFF}';\n/** Start of doc-mode */\nconst DOCUMENT = '\\x02'; // C0: Start of Text\n/** Unexpected end of flow-mode */\nconst FLOW_END = '\\x18'; // C0: Cancel\n/** Next token is a scalar value */\nconst SCALAR = '\\x1f'; // C0: Unit Separator\n/** @returns `true` if `token` is a flow or block collection */\nconst isCollection = (token) => !!token && 'items' in token;\n/** @returns `true` if `token` is a flow or block scalar; not an alias */\nconst isScalar = (token) => !!token &&\n    (token.type === 'scalar' ||\n        token.type === 'single-quoted-scalar' ||\n        token.type === 'double-quoted-scalar' ||\n        token.type === 'block-scalar');\n/* istanbul ignore next */\n/** Get a printable representation of a lexer token */\nfunction prettyToken(token) {\n    switch (token) {\n        case BOM:\n            return '<BOM>';\n        case DOCUMENT:\n            return '<DOC>';\n        case FLOW_END:\n            return '<FLOW_END>';\n        case SCALAR:\n            return '<SCALAR>';\n        default:\n            return JSON.stringify(token);\n    }\n}\n/** Identify the type of a lexer token. May return `null` for unknown tokens. */\nfunction tokenType(source) {\n    switch (source) {\n        case BOM:\n            return 'byte-order-mark';\n        case DOCUMENT:\n            return 'doc-mode';\n        case FLOW_END:\n            return 'flow-error-end';\n        case SCALAR:\n            return 'scalar';\n        case '---':\n            return 'doc-start';\n        case '...':\n            return 'doc-end';\n        case '':\n        case '\\n':\n        case '\\r\\n':\n            return 'newline';\n        case '-':\n            return 'seq-item-ind';\n        case '?':\n            return 'explicit-key-ind';\n        case ':':\n            return 'map-value-ind';\n        case '{':\n            return 'flow-map-start';\n        case '}':\n            return 'flow-map-end';\n        case '[':\n            return 'flow-seq-start';\n        case ']':\n            return 'flow-seq-end';\n        case ',':\n            return 'comma';\n    }\n    switch (source[0]) {\n        case ' ':\n        case '\\t':\n            return 'space';\n        case '#':\n            return 'comment';\n        case '%':\n            return 'directive-line';\n        case '*':\n            return 'alias';\n        case '&':\n            return 'anchor';\n        case '!':\n            return 'tag';\n        case \"'\":\n            return 'single-quoted-scalar';\n        case '\"':\n            return 'double-quoted-scalar';\n        case '|':\n        case '>':\n            return 'block-scalar-header';\n    }\n    return null;\n}\n\nvar cst = {\n\t__proto__: null,\n\tBOM: BOM,\n\tDOCUMENT: DOCUMENT,\n\tFLOW_END: FLOW_END,\n\tSCALAR: SCALAR,\n\tisCollection: isCollection,\n\tisScalar: isScalar,\n\tprettyToken: prettyToken,\n\ttokenType: tokenType,\n\tcreateScalarToken: createScalarToken,\n\tresolveAsScalar: resolveAsScalar,\n\tsetScalarValue: setScalarValue,\n\tstringify: stringify$2,\n\tvisit: visit\n};\n\n/*\nSTART -> stream\n\nstream\n  directive -> line-end -> stream\n  indent + line-end -> stream\n  [else] -> line-start\n\nline-end\n  comment -> line-end\n  newline -> .\n  input-end -> END\n\nline-start\n  doc-start -> doc\n  doc-end -> stream\n  [else] -> indent -> block-start\n\nblock-start\n  seq-item-start -> block-start\n  explicit-key-start -> block-start\n  map-value-start -> block-start\n  [else] -> doc\n\ndoc\n  line-end -> line-start\n  spaces -> doc\n  anchor -> doc\n  tag -> doc\n  flow-start -> flow -> doc\n  flow-end -> error -> doc\n  seq-item-start -> error -> doc\n  explicit-key-start -> error -> doc\n  map-value-start -> doc\n  alias -> doc\n  quote-start -> quoted-scalar -> doc\n  block-scalar-header -> line-end -> block-scalar(min) -> line-start\n  [else] -> plain-scalar(false, min) -> doc\n\nflow\n  line-end -> flow\n  spaces -> flow\n  anchor -> flow\n  tag -> flow\n  flow-start -> flow -> flow\n  flow-end -> .\n  seq-item-start -> error -> flow\n  explicit-key-start -> flow\n  map-value-start -> flow\n  alias -> flow\n  quote-start -> quoted-scalar -> flow\n  comma -> flow\n  [else] -> plain-scalar(true, 0) -> flow\n\nquoted-scalar\n  quote-end -> .\n  [else] -> quoted-scalar\n\nblock-scalar(min)\n  newline + peek(indent < min) -> .\n  [else] -> block-scalar(min)\n\nplain-scalar(is-flow, min)\n  scalar-end(is-flow) -> .\n  peek(newline + (indent < min)) -> .\n  [else] -> plain-scalar(min)\n*/\nfunction isEmpty(ch) {\n    switch (ch) {\n        case undefined:\n        case ' ':\n        case '\\n':\n        case '\\r':\n        case '\\t':\n            return true;\n        default:\n            return false;\n    }\n}\nconst hexDigits = '0123456789ABCDEFabcdef'.split('');\nconst tagChars = \"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-#;/?:@&=+$_.!~*'()\".split('');\nconst invalidFlowScalarChars = ',[]{}'.split('');\nconst invalidAnchorChars = ' ,[]{}\\n\\r\\t'.split('');\nconst isNotAnchorChar = (ch) => !ch || invalidAnchorChars.includes(ch);\n/**\n * Splits an input string into lexical tokens, i.e. smaller strings that are\n * easily identifiable by `tokens.tokenType()`.\n *\n * Lexing starts always in a \"stream\" context. Incomplete input may be buffered\n * until a complete token can be emitted.\n *\n * In addition to slices of the original input, the following control characters\n * may also be emitted:\n *\n * - `\\x02` (Start of Text): A document starts with the next token\n * - `\\x18` (Cancel): Unexpected end of flow-mode (indicates an error)\n * - `\\x1f` (Unit Separator): Next token is a scalar value\n * - `\\u{FEFF}` (Byte order mark): Emitted separately outside documents\n */\nclass Lexer {\n    constructor() {\n        /**\n         * Flag indicating whether the end of the current buffer marks the end of\n         * all input\n         */\n        this.atEnd = false;\n        /**\n         * Explicit indent set in block scalar header, as an offset from the current\n         * minimum indent, so e.g. set to 1 from a header `|2+`. Set to -1 if not\n         * explicitly set.\n         */\n        this.blockScalarIndent = -1;\n        /**\n         * Block scalars that include a + (keep) chomping indicator in their header\n         * include trailing empty lines, which are otherwise excluded from the\n         * scalar's contents.\n         */\n        this.blockScalarKeep = false;\n        /** Current input */\n        this.buffer = '';\n        /**\n         * Flag noting whether the map value indicator : can immediately follow this\n         * node within a flow context.\n         */\n        this.flowKey = false;\n        /** Count of surrounding flow collection levels. */\n        this.flowLevel = 0;\n        /**\n         * Minimum level of indentation required for next lines to be parsed as a\n         * part of the current scalar value.\n         */\n        this.indentNext = 0;\n        /** Indentation level of the current line. */\n        this.indentValue = 0;\n        /** Position of the next \\n character. */\n        this.lineEndPos = null;\n        /** Stores the state of the lexer if reaching the end of incpomplete input */\n        this.next = null;\n        /** A pointer to `buffer`; the current position of the lexer. */\n        this.pos = 0;\n    }\n    /**\n     * Generate YAML tokens from the `source` string. If `incomplete`,\n     * a part of the last line may be left as a buffer for the next call.\n     *\n     * @returns A generator of lexical tokens\n     */\n    *lex(source, incomplete = false) {\n        if (source) {\n            this.buffer = this.buffer ? this.buffer + source : source;\n            this.lineEndPos = null;\n        }\n        this.atEnd = !incomplete;\n        let next = this.next ?? 'stream';\n        while (next && (incomplete || this.hasChars(1)))\n            next = yield* this.parseNext(next);\n    }\n    atLineEnd() {\n        let i = this.pos;\n        let ch = this.buffer[i];\n        while (ch === ' ' || ch === '\\t')\n            ch = this.buffer[++i];\n        if (!ch || ch === '#' || ch === '\\n')\n            return true;\n        if (ch === '\\r')\n            return this.buffer[i + 1] === '\\n';\n        return false;\n    }\n    charAt(n) {\n        return this.buffer[this.pos + n];\n    }\n    continueScalar(offset) {\n        let ch = this.buffer[offset];\n        if (this.indentNext > 0) {\n            let indent = 0;\n            while (ch === ' ')\n                ch = this.buffer[++indent + offset];\n            if (ch === '\\r') {\n                const next = this.buffer[indent + offset + 1];\n                if (next === '\\n' || (!next && !this.atEnd))\n                    return offset + indent + 1;\n            }\n            return ch === '\\n' || indent >= this.indentNext || (!ch && !this.atEnd)\n                ? offset + indent\n                : -1;\n        }\n        if (ch === '-' || ch === '.') {\n            const dt = this.buffer.substr(offset, 3);\n            if ((dt === '---' || dt === '...') && isEmpty(this.buffer[offset + 3]))\n                return -1;\n        }\n        return offset;\n    }\n    getLine() {\n        let end = this.lineEndPos;\n        if (typeof end !== 'number' || (end !== -1 && end < this.pos)) {\n            end = this.buffer.indexOf('\\n', this.pos);\n            this.lineEndPos = end;\n        }\n        if (end === -1)\n            return this.atEnd ? this.buffer.substring(this.pos) : null;\n        if (this.buffer[end - 1] === '\\r')\n            end -= 1;\n        return this.buffer.substring(this.pos, end);\n    }\n    hasChars(n) {\n        return this.pos + n <= this.buffer.length;\n    }\n    setNext(state) {\n        this.buffer = this.buffer.substring(this.pos);\n        this.pos = 0;\n        this.lineEndPos = null;\n        this.next = state;\n        return null;\n    }\n    peek(n) {\n        return this.buffer.substr(this.pos, n);\n    }\n    *parseNext(next) {\n        switch (next) {\n            case 'stream':\n                return yield* this.parseStream();\n            case 'line-start':\n                return yield* this.parseLineStart();\n            case 'block-start':\n                return yield* this.parseBlockStart();\n            case 'doc':\n                return yield* this.parseDocument();\n            case 'flow':\n                return yield* this.parseFlowCollection();\n            case 'quoted-scalar':\n                return yield* this.parseQuotedScalar();\n            case 'block-scalar':\n                return yield* this.parseBlockScalar();\n            case 'plain-scalar':\n                return yield* this.parsePlainScalar();\n        }\n    }\n    *parseStream() {\n        let line = this.getLine();\n        if (line === null)\n            return this.setNext('stream');\n        if (line[0] === BOM) {\n            yield* this.pushCount(1);\n            line = line.substring(1);\n        }\n        if (line[0] === '%') {\n            let dirEnd = line.length;\n            const cs = line.indexOf('#');\n            if (cs !== -1) {\n                const ch = line[cs - 1];\n                if (ch === ' ' || ch === '\\t')\n                    dirEnd = cs - 1;\n            }\n            while (true) {\n                const ch = line[dirEnd - 1];\n                if (ch === ' ' || ch === '\\t')\n                    dirEnd -= 1;\n                else\n                    break;\n            }\n            const n = (yield* this.pushCount(dirEnd)) + (yield* this.pushSpaces(true));\n            yield* this.pushCount(line.length - n); // possible comment\n            this.pushNewline();\n            return 'stream';\n        }\n        if (this.atLineEnd()) {\n            const sp = yield* this.pushSpaces(true);\n            yield* this.pushCount(line.length - sp);\n            yield* this.pushNewline();\n            return 'stream';\n        }\n        yield DOCUMENT;\n        return yield* this.parseLineStart();\n    }\n    *parseLineStart() {\n        const ch = this.charAt(0);\n        if (!ch && !this.atEnd)\n            return this.setNext('line-start');\n        if (ch === '-' || ch === '.') {\n            if (!this.atEnd && !this.hasChars(4))\n                return this.setNext('line-start');\n            const s = this.peek(3);\n            if (s === '---' && isEmpty(this.charAt(3))) {\n                yield* this.pushCount(3);\n                this.indentValue = 0;\n                this.indentNext = 0;\n                return 'doc';\n            }\n            else if (s === '...' && isEmpty(this.charAt(3))) {\n                yield* this.pushCount(3);\n                return 'stream';\n            }\n        }\n        this.indentValue = yield* this.pushSpaces(false);\n        if (this.indentNext > this.indentValue && !isEmpty(this.charAt(1)))\n            this.indentNext = this.indentValue;\n        return yield* this.parseBlockStart();\n    }\n    *parseBlockStart() {\n        const [ch0, ch1] = this.peek(2);\n        if (!ch1 && !this.atEnd)\n            return this.setNext('block-start');\n        if ((ch0 === '-' || ch0 === '?' || ch0 === ':') && isEmpty(ch1)) {\n            const n = (yield* this.pushCount(1)) + (yield* this.pushSpaces(true));\n            this.indentNext = this.indentValue + 1;\n            this.indentValue += n;\n            return yield* this.parseBlockStart();\n        }\n        return 'doc';\n    }\n    *parseDocument() {\n        yield* this.pushSpaces(true);\n        const line = this.getLine();\n        if (line === null)\n            return this.setNext('doc');\n        let n = yield* this.pushIndicators();\n        switch (line[n]) {\n            case '#':\n                yield* this.pushCount(line.length - n);\n            // fallthrough\n            case undefined:\n                yield* this.pushNewline();\n                return yield* this.parseLineStart();\n            case '{':\n            case '[':\n                yield* this.pushCount(1);\n                this.flowKey = false;\n                this.flowLevel = 1;\n                return 'flow';\n            case '}':\n            case ']':\n                // this is an error\n                yield* this.pushCount(1);\n                return 'doc';\n            case '*':\n                yield* this.pushUntil(isNotAnchorChar);\n                return 'doc';\n            case '\"':\n            case \"'\":\n                return yield* this.parseQuotedScalar();\n            case '|':\n            case '>':\n                n += yield* this.parseBlockScalarHeader();\n                n += yield* this.pushSpaces(true);\n                yield* this.pushCount(line.length - n);\n                yield* this.pushNewline();\n                return yield* this.parseBlockScalar();\n            default:\n                return yield* this.parsePlainScalar();\n        }\n    }\n    *parseFlowCollection() {\n        let nl, sp;\n        let indent = -1;\n        do {\n            nl = yield* this.pushNewline();\n            if (nl > 0) {\n                sp = yield* this.pushSpaces(false);\n                this.indentValue = indent = sp;\n            }\n            else {\n                sp = 0;\n            }\n            sp += yield* this.pushSpaces(true);\n        } while (nl + sp > 0);\n        const line = this.getLine();\n        if (line === null)\n            return this.setNext('flow');\n        if ((indent !== -1 && indent < this.indentNext && line[0] !== '#') ||\n            (indent === 0 &&\n                (line.startsWith('---') || line.startsWith('...')) &&\n                isEmpty(line[3]))) {\n            // Allowing for the terminal ] or } at the same (rather than greater)\n            // indent level as the initial [ or { is technically invalid, but\n            // failing here would be surprising to users.\n            const atFlowEndMarker = indent === this.indentNext - 1 &&\n                this.flowLevel === 1 &&\n                (line[0] === ']' || line[0] === '}');\n            if (!atFlowEndMarker) {\n                // this is an error\n                this.flowLevel = 0;\n                yield FLOW_END;\n                return yield* this.parseLineStart();\n            }\n        }\n        let n = 0;\n        while (line[n] === ',') {\n            n += yield* this.pushCount(1);\n            n += yield* this.pushSpaces(true);\n            this.flowKey = false;\n        }\n        n += yield* this.pushIndicators();\n        switch (line[n]) {\n            case undefined:\n                return 'flow';\n            case '#':\n                yield* this.pushCount(line.length - n);\n                return 'flow';\n            case '{':\n            case '[':\n                yield* this.pushCount(1);\n                this.flowKey = false;\n                this.flowLevel += 1;\n                return 'flow';\n            case '}':\n            case ']':\n                yield* this.pushCount(1);\n                this.flowKey = true;\n                this.flowLevel -= 1;\n                return this.flowLevel ? 'flow' : 'doc';\n            case '*':\n                yield* this.pushUntil(isNotAnchorChar);\n                return 'flow';\n            case '\"':\n            case \"'\":\n                this.flowKey = true;\n                return yield* this.parseQuotedScalar();\n            case ':': {\n                const next = this.charAt(1);\n                if (this.flowKey || isEmpty(next) || next === ',') {\n                    this.flowKey = false;\n                    yield* this.pushCount(1);\n                    yield* this.pushSpaces(true);\n                    return 'flow';\n                }\n            }\n            // fallthrough\n            default:\n                this.flowKey = false;\n                return yield* this.parsePlainScalar();\n        }\n    }\n    *parseQuotedScalar() {\n        const quote = this.charAt(0);\n        let end = this.buffer.indexOf(quote, this.pos + 1);\n        if (quote === \"'\") {\n            while (end !== -1 && this.buffer[end + 1] === \"'\")\n                end = this.buffer.indexOf(\"'\", end + 2);\n        }\n        else {\n            // double-quote\n            while (end !== -1) {\n                let n = 0;\n                while (this.buffer[end - 1 - n] === '\\\\')\n                    n += 1;\n                if (n % 2 === 0)\n                    break;\n                end = this.buffer.indexOf('\"', end + 1);\n            }\n        }\n        // Only looking for newlines within the quotes\n        const qb = this.buffer.substring(0, end);\n        let nl = qb.indexOf('\\n', this.pos);\n        if (nl !== -1) {\n            while (nl !== -1) {\n                const cs = this.continueScalar(nl + 1);\n                if (cs === -1)\n                    break;\n                nl = qb.indexOf('\\n', cs);\n            }\n            if (nl !== -1) {\n                // this is an error caused by an unexpected unindent\n                end = nl - (qb[nl - 1] === '\\r' ? 2 : 1);\n            }\n        }\n        if (end === -1) {\n            if (!this.atEnd)\n                return this.setNext('quoted-scalar');\n            end = this.buffer.length;\n        }\n        yield* this.pushToIndex(end + 1, false);\n        return this.flowLevel ? 'flow' : 'doc';\n    }\n    *parseBlockScalarHeader() {\n        this.blockScalarIndent = -1;\n        this.blockScalarKeep = false;\n        let i = this.pos;\n        while (true) {\n            const ch = this.buffer[++i];\n            if (ch === '+')\n                this.blockScalarKeep = true;\n            else if (ch > '0' && ch <= '9')\n                this.blockScalarIndent = Number(ch) - 1;\n            else if (ch !== '-')\n                break;\n        }\n        return yield* this.pushUntil(ch => isEmpty(ch) || ch === '#');\n    }\n    *parseBlockScalar() {\n        let nl = this.pos - 1; // may be -1 if this.pos === 0\n        let indent = 0;\n        let ch;\n        loop: for (let i = this.pos; (ch = this.buffer[i]); ++i) {\n            switch (ch) {\n                case ' ':\n                    indent += 1;\n                    break;\n                case '\\n':\n                    nl = i;\n                    indent = 0;\n                    break;\n                case '\\r': {\n                    const next = this.buffer[i + 1];\n                    if (!next && !this.atEnd)\n                        return this.setNext('block-scalar');\n                    if (next === '\\n')\n                        break;\n                } // fallthrough\n                default:\n                    break loop;\n            }\n        }\n        if (!ch && !this.atEnd)\n            return this.setNext('block-scalar');\n        if (indent >= this.indentNext) {\n            if (this.blockScalarIndent === -1)\n                this.indentNext = indent;\n            else\n                this.indentNext += this.blockScalarIndent;\n            do {\n                const cs = this.continueScalar(nl + 1);\n                if (cs === -1)\n                    break;\n                nl = this.buffer.indexOf('\\n', cs);\n            } while (nl !== -1);\n            if (nl === -1) {\n                if (!this.atEnd)\n                    return this.setNext('block-scalar');\n                nl = this.buffer.length;\n            }\n        }\n        if (!this.blockScalarKeep) {\n            do {\n                let i = nl - 1;\n                let ch = this.buffer[i];\n                if (ch === '\\r')\n                    ch = this.buffer[--i];\n                const lastChar = i; // Drop the line if last char not more indented\n                while (ch === ' ' || ch === '\\t')\n                    ch = this.buffer[--i];\n                if (ch === '\\n' && i >= this.pos && i + 1 + indent > lastChar)\n                    nl = i;\n                else\n                    break;\n            } while (true);\n        }\n        yield SCALAR;\n        yield* this.pushToIndex(nl + 1, true);\n        return yield* this.parseLineStart();\n    }\n    *parsePlainScalar() {\n        const inFlow = this.flowLevel > 0;\n        let end = this.pos - 1;\n        let i = this.pos - 1;\n        let ch;\n        while ((ch = this.buffer[++i])) {\n            if (ch === ':') {\n                const next = this.buffer[i + 1];\n                if (isEmpty(next) || (inFlow && next === ','))\n                    break;\n                end = i;\n            }\n            else if (isEmpty(ch)) {\n                let next = this.buffer[i + 1];\n                if (ch === '\\r') {\n                    if (next === '\\n') {\n                        i += 1;\n                        ch = '\\n';\n                        next = this.buffer[i + 1];\n                    }\n                    else\n                        end = i;\n                }\n                if (next === '#' || (inFlow && invalidFlowScalarChars.includes(next)))\n                    break;\n                if (ch === '\\n') {\n                    const cs = this.continueScalar(i + 1);\n                    if (cs === -1)\n                        break;\n                    i = Math.max(i, cs - 2); // to advance, but still account for ' #'\n                }\n            }\n            else {\n                if (inFlow && invalidFlowScalarChars.includes(ch))\n                    break;\n                end = i;\n            }\n        }\n        if (!ch && !this.atEnd)\n            return this.setNext('plain-scalar');\n        yield SCALAR;\n        yield* this.pushToIndex(end + 1, true);\n        return inFlow ? 'flow' : 'doc';\n    }\n    *pushCount(n) {\n        if (n > 0) {\n            yield this.buffer.substr(this.pos, n);\n            this.pos += n;\n            return n;\n        }\n        return 0;\n    }\n    *pushToIndex(i, allowEmpty) {\n        const s = this.buffer.slice(this.pos, i);\n        if (s) {\n            yield s;\n            this.pos += s.length;\n            return s.length;\n        }\n        else if (allowEmpty)\n            yield '';\n        return 0;\n    }\n    *pushIndicators() {\n        switch (this.charAt(0)) {\n            case '!':\n                return ((yield* this.pushTag()) +\n                    (yield* this.pushSpaces(true)) +\n                    (yield* this.pushIndicators()));\n            case '&':\n                return ((yield* this.pushUntil(isNotAnchorChar)) +\n                    (yield* this.pushSpaces(true)) +\n                    (yield* this.pushIndicators()));\n            case '-': // this is an error\n            case '?': // this is an error outside flow collections\n            case ':': {\n                const inFlow = this.flowLevel > 0;\n                const ch1 = this.charAt(1);\n                if (isEmpty(ch1) || (inFlow && invalidFlowScalarChars.includes(ch1))) {\n                    if (!inFlow)\n                        this.indentNext = this.indentValue + 1;\n                    else if (this.flowKey)\n                        this.flowKey = false;\n                    return ((yield* this.pushCount(1)) +\n                        (yield* this.pushSpaces(true)) +\n                        (yield* this.pushIndicators()));\n                }\n            }\n        }\n        return 0;\n    }\n    *pushTag() {\n        if (this.charAt(1) === '<') {\n            let i = this.pos + 2;\n            let ch = this.buffer[i];\n            while (!isEmpty(ch) && ch !== '>')\n                ch = this.buffer[++i];\n            return yield* this.pushToIndex(ch === '>' ? i + 1 : i, false);\n        }\n        else {\n            let i = this.pos + 1;\n            let ch = this.buffer[i];\n            while (ch) {\n                if (tagChars.includes(ch))\n                    ch = this.buffer[++i];\n                else if (ch === '%' &&\n                    hexDigits.includes(this.buffer[i + 1]) &&\n                    hexDigits.includes(this.buffer[i + 2])) {\n                    ch = this.buffer[(i += 3)];\n                }\n                else\n                    break;\n            }\n            return yield* this.pushToIndex(i, false);\n        }\n    }\n    *pushNewline() {\n        const ch = this.buffer[this.pos];\n        if (ch === '\\n')\n            return yield* this.pushCount(1);\n        else if (ch === '\\r' && this.charAt(1) === '\\n')\n            return yield* this.pushCount(2);\n        else\n            return 0;\n    }\n    *pushSpaces(allowTabs) {\n        let i = this.pos - 1;\n        let ch;\n        do {\n            ch = this.buffer[++i];\n        } while (ch === ' ' || (allowTabs && ch === '\\t'));\n        const n = i - this.pos;\n        if (n > 0) {\n            yield this.buffer.substr(this.pos, n);\n            this.pos = i;\n        }\n        return n;\n    }\n    *pushUntil(test) {\n        let i = this.pos;\n        let ch = this.buffer[i];\n        while (!test(ch))\n            ch = this.buffer[++i];\n        return yield* this.pushToIndex(i, false);\n    }\n}\n\n/**\n * Tracks newlines during parsing in order to provide an efficient API for\n * determining the one-indexed `{ line, col }` position for any offset\n * within the input.\n */\nclass LineCounter {\n    constructor() {\n        this.lineStarts = [];\n        /**\n         * Should be called in ascending order. Otherwise, call\n         * `lineCounter.lineStarts.sort()` before calling `linePos()`.\n         */\n        this.addNewLine = (offset) => this.lineStarts.push(offset);\n        /**\n         * Performs a binary search and returns the 1-indexed { line, col }\n         * position of `offset`. If `line === 0`, `addNewLine` has never been\n         * called or `offset` is before the first known newline.\n         */\n        this.linePos = (offset) => {\n            let low = 0;\n            let high = this.lineStarts.length;\n            while (low < high) {\n                const mid = (low + high) >> 1; // Math.floor((low + high) / 2)\n                if (this.lineStarts[mid] < offset)\n                    low = mid + 1;\n                else\n                    high = mid;\n            }\n            if (this.lineStarts[low] === offset)\n                return { line: low + 1, col: 1 };\n            if (low === 0)\n                return { line: 0, col: offset };\n            const start = this.lineStarts[low - 1];\n            return { line: low, col: offset - start + 1 };\n        };\n    }\n}\n\nfunction includesToken(list, type) {\n    for (let i = 0; i < list.length; ++i)\n        if (list[i].type === type)\n            return true;\n    return false;\n}\nfunction findNonEmptyIndex(list) {\n    for (let i = 0; i < list.length; ++i) {\n        switch (list[i].type) {\n            case 'space':\n            case 'comment':\n            case 'newline':\n                break;\n            default:\n                return i;\n        }\n    }\n    return -1;\n}\nfunction isFlowToken(token) {\n    switch (token?.type) {\n        case 'alias':\n        case 'scalar':\n        case 'single-quoted-scalar':\n        case 'double-quoted-scalar':\n        case 'flow-collection':\n            return true;\n        default:\n            return false;\n    }\n}\nfunction getPrevProps(parent) {\n    switch (parent.type) {\n        case 'document':\n            return parent.start;\n        case 'block-map': {\n            const it = parent.items[parent.items.length - 1];\n            return it.sep ?? it.start;\n        }\n        case 'block-seq':\n            return parent.items[parent.items.length - 1].start;\n        /* istanbul ignore next should not happen */\n        default:\n            return [];\n    }\n}\n/** Note: May modify input array */\nfunction getFirstKeyStartProps(prev) {\n    if (prev.length === 0)\n        return [];\n    let i = prev.length;\n    loop: while (--i >= 0) {\n        switch (prev[i].type) {\n            case 'doc-start':\n            case 'explicit-key-ind':\n            case 'map-value-ind':\n            case 'seq-item-ind':\n            case 'newline':\n                break loop;\n        }\n    }\n    while (prev[++i]?.type === 'space') {\n        /* loop */\n    }\n    return prev.splice(i, prev.length);\n}\nfunction fixFlowSeqItems(fc) {\n    if (fc.start.type === 'flow-seq-start') {\n        for (const it of fc.items) {\n            if (it.sep &&\n                !it.value &&\n                !includesToken(it.start, 'explicit-key-ind') &&\n                !includesToken(it.sep, 'map-value-ind')) {\n                if (it.key)\n                    it.value = it.key;\n                delete it.key;\n                if (isFlowToken(it.value)) {\n                    if (it.value.end)\n                        Array.prototype.push.apply(it.value.end, it.sep);\n                    else\n                        it.value.end = it.sep;\n                }\n                else\n                    Array.prototype.push.apply(it.start, it.sep);\n                delete it.sep;\n            }\n        }\n    }\n}\n/**\n * A YAML concrete syntax tree (CST) parser\n *\n * ```ts\n * const src: string = ...\n * for (const token of new Parser().parse(src)) {\n *   // token: Token\n * }\n * ```\n *\n * To use the parser with a user-provided lexer:\n *\n * ```ts\n * function* parse(source: string, lexer: Lexer) {\n *   const parser = new Parser()\n *   for (const lexeme of lexer.lex(source))\n *     yield* parser.next(lexeme)\n *   yield* parser.end()\n * }\n *\n * const src: string = ...\n * const lexer = new Lexer()\n * for (const token of parse(src, lexer)) {\n *   // token: Token\n * }\n * ```\n */\nclass Parser$1 {\n    /**\n     * @param onNewLine - If defined, called separately with the start position of\n     *   each new line (in `parse()`, including the start of input).\n     */\n    constructor(onNewLine) {\n        /** If true, space and sequence indicators count as indentation */\n        this.atNewLine = true;\n        /** If true, next token is a scalar value */\n        this.atScalar = false;\n        /** Current indentation level */\n        this.indent = 0;\n        /** Current offset since the start of parsing */\n        this.offset = 0;\n        /** On the same line with a block map key */\n        this.onKeyLine = false;\n        /** Top indicates the node that's currently being built */\n        this.stack = [];\n        /** The source of the current token, set in parse() */\n        this.source = '';\n        /** The type of the current token, set in parse() */\n        this.type = '';\n        // Must be defined after `next()`\n        this.lexer = new Lexer();\n        this.onNewLine = onNewLine;\n    }\n    /**\n     * Parse `source` as a YAML stream.\n     * If `incomplete`, a part of the last line may be left as a buffer for the next call.\n     *\n     * Errors are not thrown, but yielded as `{ type: 'error', message }` tokens.\n     *\n     * @returns A generator of tokens representing each directive, document, and other structure.\n     */\n    *parse(source, incomplete = false) {\n        if (this.onNewLine && this.offset === 0)\n            this.onNewLine(0);\n        for (const lexeme of this.lexer.lex(source, incomplete))\n            yield* this.next(lexeme);\n        if (!incomplete)\n            yield* this.end();\n    }\n    /**\n     * Advance the parser by the `source` of one lexical token.\n     */\n    *next(source) {\n        this.source = source;\n        if (this.atScalar) {\n            this.atScalar = false;\n            yield* this.step();\n            this.offset += source.length;\n            return;\n        }\n        const type = tokenType(source);\n        if (!type) {\n            const message = `Not a YAML token: ${source}`;\n            yield* this.pop({ type: 'error', offset: this.offset, message, source });\n            this.offset += source.length;\n        }\n        else if (type === 'scalar') {\n            this.atNewLine = false;\n            this.atScalar = true;\n            this.type = 'scalar';\n        }\n        else {\n            this.type = type;\n            yield* this.step();\n            switch (type) {\n                case 'newline':\n                    this.atNewLine = true;\n                    this.indent = 0;\n                    if (this.onNewLine)\n                        this.onNewLine(this.offset + source.length);\n                    break;\n                case 'space':\n                    if (this.atNewLine && source[0] === ' ')\n                        this.indent += source.length;\n                    break;\n                case 'explicit-key-ind':\n                case 'map-value-ind':\n                case 'seq-item-ind':\n                    if (this.atNewLine)\n                        this.indent += source.length;\n                    break;\n                case 'doc-mode':\n                case 'flow-error-end':\n                    return;\n                default:\n                    this.atNewLine = false;\n            }\n            this.offset += source.length;\n        }\n    }\n    /** Call at end of input to push out any remaining constructions */\n    *end() {\n        while (this.stack.length > 0)\n            yield* this.pop();\n    }\n    get sourceToken() {\n        const st = {\n            type: this.type,\n            offset: this.offset,\n            indent: this.indent,\n            source: this.source\n        };\n        return st;\n    }\n    *step() {\n        const top = this.peek(1);\n        if (this.type === 'doc-end' && (!top || top.type !== 'doc-end')) {\n            while (this.stack.length > 0)\n                yield* this.pop();\n            this.stack.push({\n                type: 'doc-end',\n                offset: this.offset,\n                source: this.source\n            });\n            return;\n        }\n        if (!top)\n            return yield* this.stream();\n        switch (top.type) {\n            case 'document':\n                return yield* this.document(top);\n            case 'alias':\n            case 'scalar':\n            case 'single-quoted-scalar':\n            case 'double-quoted-scalar':\n                return yield* this.scalar(top);\n            case 'block-scalar':\n                return yield* this.blockScalar(top);\n            case 'block-map':\n                return yield* this.blockMap(top);\n            case 'block-seq':\n                return yield* this.blockSequence(top);\n            case 'flow-collection':\n                return yield* this.flowCollection(top);\n            case 'doc-end':\n                return yield* this.documentEnd(top);\n        }\n        /* istanbul ignore next should not happen */\n        yield* this.pop();\n    }\n    peek(n) {\n        return this.stack[this.stack.length - n];\n    }\n    *pop(error) {\n        const token = error ?? this.stack.pop();\n        /* istanbul ignore if should not happen */\n        if (!token) {\n            const message = 'Tried to pop an empty stack';\n            yield { type: 'error', offset: this.offset, source: '', message };\n        }\n        else if (this.stack.length === 0) {\n            yield token;\n        }\n        else {\n            const top = this.peek(1);\n            if (token.type === 'block-scalar') {\n                // Block scalars use their parent rather than header indent\n                token.indent = 'indent' in top ? top.indent : 0;\n            }\n            else if (token.type === 'flow-collection' && top.type === 'document') {\n                // Ignore all indent for top-level flow collections\n                token.indent = 0;\n            }\n            if (token.type === 'flow-collection')\n                fixFlowSeqItems(token);\n            switch (top.type) {\n                case 'document':\n                    top.value = token;\n                    break;\n                case 'block-scalar':\n                    top.props.push(token); // error\n                    break;\n                case 'block-map': {\n                    const it = top.items[top.items.length - 1];\n                    if (it.value) {\n                        top.items.push({ start: [], key: token, sep: [] });\n                        this.onKeyLine = true;\n                        return;\n                    }\n                    else if (it.sep) {\n                        it.value = token;\n                    }\n                    else {\n                        Object.assign(it, { key: token, sep: [] });\n                        this.onKeyLine = !includesToken(it.start, 'explicit-key-ind');\n                        return;\n                    }\n                    break;\n                }\n                case 'block-seq': {\n                    const it = top.items[top.items.length - 1];\n                    if (it.value)\n                        top.items.push({ start: [], value: token });\n                    else\n                        it.value = token;\n                    break;\n                }\n                case 'flow-collection': {\n                    const it = top.items[top.items.length - 1];\n                    if (!it || it.value)\n                        top.items.push({ start: [], key: token, sep: [] });\n                    else if (it.sep)\n                        it.value = token;\n                    else\n                        Object.assign(it, { key: token, sep: [] });\n                    return;\n                }\n                /* istanbul ignore next should not happen */\n                default:\n                    yield* this.pop();\n                    yield* this.pop(token);\n            }\n            if ((top.type === 'document' ||\n                top.type === 'block-map' ||\n                top.type === 'block-seq') &&\n                (token.type === 'block-map' || token.type === 'block-seq')) {\n                const last = token.items[token.items.length - 1];\n                if (last &&\n                    !last.sep &&\n                    !last.value &&\n                    last.start.length > 0 &&\n                    findNonEmptyIndex(last.start) === -1 &&\n                    (token.indent === 0 ||\n                        last.start.every(st => st.type !== 'comment' || st.indent < token.indent))) {\n                    if (top.type === 'document')\n                        top.end = last.start;\n                    else\n                        top.items.push({ start: last.start });\n                    token.items.splice(-1, 1);\n                }\n            }\n        }\n    }\n    *stream() {\n        switch (this.type) {\n            case 'directive-line':\n                yield { type: 'directive', offset: this.offset, source: this.source };\n                return;\n            case 'byte-order-mark':\n            case 'space':\n            case 'comment':\n            case 'newline':\n                yield this.sourceToken;\n                return;\n            case 'doc-mode':\n            case 'doc-start': {\n                const doc = {\n                    type: 'document',\n                    offset: this.offset,\n                    start: []\n                };\n                if (this.type === 'doc-start')\n                    doc.start.push(this.sourceToken);\n                this.stack.push(doc);\n                return;\n            }\n        }\n        yield {\n            type: 'error',\n            offset: this.offset,\n            message: `Unexpected ${this.type} token in YAML stream`,\n            source: this.source\n        };\n    }\n    *document(doc) {\n        if (doc.value)\n            return yield* this.lineEnd(doc);\n        switch (this.type) {\n            case 'doc-start': {\n                if (findNonEmptyIndex(doc.start) !== -1) {\n                    yield* this.pop();\n                    yield* this.step();\n                }\n                else\n                    doc.start.push(this.sourceToken);\n                return;\n            }\n            case 'anchor':\n            case 'tag':\n            case 'space':\n            case 'comment':\n            case 'newline':\n                doc.start.push(this.sourceToken);\n                return;\n        }\n        const bv = this.startBlockValue(doc);\n        if (bv)\n            this.stack.push(bv);\n        else {\n            yield {\n                type: 'error',\n                offset: this.offset,\n                message: `Unexpected ${this.type} token in YAML document`,\n                source: this.source\n            };\n        }\n    }\n    *scalar(scalar) {\n        if (this.type === 'map-value-ind') {\n            const prev = getPrevProps(this.peek(2));\n            const start = getFirstKeyStartProps(prev);\n            let sep;\n            if (scalar.end) {\n                sep = scalar.end;\n                sep.push(this.sourceToken);\n                delete scalar.end;\n            }\n            else\n                sep = [this.sourceToken];\n            const map = {\n                type: 'block-map',\n                offset: scalar.offset,\n                indent: scalar.indent,\n                items: [{ start, key: scalar, sep }]\n            };\n            this.onKeyLine = true;\n            this.stack[this.stack.length - 1] = map;\n        }\n        else\n            yield* this.lineEnd(scalar);\n    }\n    *blockScalar(scalar) {\n        switch (this.type) {\n            case 'space':\n            case 'comment':\n            case 'newline':\n                scalar.props.push(this.sourceToken);\n                return;\n            case 'scalar':\n                scalar.source = this.source;\n                // block-scalar source includes trailing newline\n                this.atNewLine = true;\n                this.indent = 0;\n                if (this.onNewLine) {\n                    let nl = this.source.indexOf('\\n') + 1;\n                    while (nl !== 0) {\n                        this.onNewLine(this.offset + nl);\n                        nl = this.source.indexOf('\\n', nl) + 1;\n                    }\n                }\n                yield* this.pop();\n                break;\n            /* istanbul ignore next should not happen */\n            default:\n                yield* this.pop();\n                yield* this.step();\n        }\n    }\n    *blockMap(map) {\n        const it = map.items[map.items.length - 1];\n        // it.sep is true-ish if pair already has key or : separator\n        switch (this.type) {\n            case 'newline':\n                this.onKeyLine = false;\n                if (it.value) {\n                    const end = 'end' in it.value ? it.value.end : undefined;\n                    const last = Array.isArray(end) ? end[end.length - 1] : undefined;\n                    if (last?.type === 'comment')\n                        end?.push(this.sourceToken);\n                    else\n                        map.items.push({ start: [this.sourceToken] });\n                }\n                else if (it.sep) {\n                    it.sep.push(this.sourceToken);\n                }\n                else {\n                    it.start.push(this.sourceToken);\n                }\n                return;\n            case 'space':\n            case 'comment':\n                if (it.value) {\n                    map.items.push({ start: [this.sourceToken] });\n                }\n                else if (it.sep) {\n                    it.sep.push(this.sourceToken);\n                }\n                else {\n                    if (this.atIndentedComment(it.start, map.indent)) {\n                        const prev = map.items[map.items.length - 2];\n                        const end = prev?.value?.end;\n                        if (Array.isArray(end)) {\n                            Array.prototype.push.apply(end, it.start);\n                            end.push(this.sourceToken);\n                            map.items.pop();\n                            return;\n                        }\n                    }\n                    it.start.push(this.sourceToken);\n                }\n                return;\n        }\n        if (this.indent >= map.indent) {\n            const atNextItem = !this.onKeyLine && this.indent === map.indent && it.sep;\n            // For empty nodes, assign newline-separated not indented empty tokens to following node\n            let start = [];\n            if (atNextItem && it.sep && !it.value) {\n                const nl = [];\n                for (let i = 0; i < it.sep.length; ++i) {\n                    const st = it.sep[i];\n                    switch (st.type) {\n                        case 'newline':\n                            nl.push(i);\n                            break;\n                        case 'space':\n                            break;\n                        case 'comment':\n                            if (st.indent > map.indent)\n                                nl.length = 0;\n                            break;\n                        default:\n                            nl.length = 0;\n                    }\n                }\n                if (nl.length >= 2)\n                    start = it.sep.splice(nl[1]);\n            }\n            switch (this.type) {\n                case 'anchor':\n                case 'tag':\n                    if (atNextItem || it.value) {\n                        start.push(this.sourceToken);\n                        map.items.push({ start });\n                        this.onKeyLine = true;\n                    }\n                    else if (it.sep) {\n                        it.sep.push(this.sourceToken);\n                    }\n                    else {\n                        it.start.push(this.sourceToken);\n                    }\n                    return;\n                case 'explicit-key-ind':\n                    if (!it.sep && !includesToken(it.start, 'explicit-key-ind')) {\n                        it.start.push(this.sourceToken);\n                    }\n                    else if (atNextItem || it.value) {\n                        start.push(this.sourceToken);\n                        map.items.push({ start });\n                    }\n                    else {\n                        this.stack.push({\n                            type: 'block-map',\n                            offset: this.offset,\n                            indent: this.indent,\n                            items: [{ start: [this.sourceToken] }]\n                        });\n                    }\n                    this.onKeyLine = true;\n                    return;\n                case 'map-value-ind':\n                    if (includesToken(it.start, 'explicit-key-ind')) {\n                        if (!it.sep) {\n                            if (includesToken(it.start, 'newline')) {\n                                Object.assign(it, { key: null, sep: [this.sourceToken] });\n                            }\n                            else {\n                                const start = getFirstKeyStartProps(it.start);\n                                this.stack.push({\n                                    type: 'block-map',\n                                    offset: this.offset,\n                                    indent: this.indent,\n                                    items: [{ start, key: null, sep: [this.sourceToken] }]\n                                });\n                            }\n                        }\n                        else if (it.value) {\n                            map.items.push({ start: [], key: null, sep: [this.sourceToken] });\n                        }\n                        else if (includesToken(it.sep, 'map-value-ind')) {\n                            this.stack.push({\n                                type: 'block-map',\n                                offset: this.offset,\n                                indent: this.indent,\n                                items: [{ start, key: null, sep: [this.sourceToken] }]\n                            });\n                        }\n                        else if (isFlowToken(it.key) &&\n                            !includesToken(it.sep, 'newline')) {\n                            const start = getFirstKeyStartProps(it.start);\n                            const key = it.key;\n                            const sep = it.sep;\n                            sep.push(this.sourceToken);\n                            // @ts-expect-error type guard is wrong here\n                            delete it.key, delete it.sep;\n                            this.stack.push({\n                                type: 'block-map',\n                                offset: this.offset,\n                                indent: this.indent,\n                                items: [{ start, key, sep }]\n                            });\n                        }\n                        else if (start.length > 0) {\n                            // Not actually at next item\n                            it.sep = it.sep.concat(start, this.sourceToken);\n                        }\n                        else {\n                            it.sep.push(this.sourceToken);\n                        }\n                    }\n                    else {\n                        if (!it.sep) {\n                            Object.assign(it, { key: null, sep: [this.sourceToken] });\n                        }\n                        else if (it.value || atNextItem) {\n                            map.items.push({ start, key: null, sep: [this.sourceToken] });\n                        }\n                        else if (includesToken(it.sep, 'map-value-ind')) {\n                            this.stack.push({\n                                type: 'block-map',\n                                offset: this.offset,\n                                indent: this.indent,\n                                items: [{ start: [], key: null, sep: [this.sourceToken] }]\n                            });\n                        }\n                        else {\n                            it.sep.push(this.sourceToken);\n                        }\n                    }\n                    this.onKeyLine = true;\n                    return;\n                case 'alias':\n                case 'scalar':\n                case 'single-quoted-scalar':\n                case 'double-quoted-scalar': {\n                    const fs = this.flowScalar(this.type);\n                    if (atNextItem || it.value) {\n                        map.items.push({ start, key: fs, sep: [] });\n                        this.onKeyLine = true;\n                    }\n                    else if (it.sep) {\n                        this.stack.push(fs);\n                    }\n                    else {\n                        Object.assign(it, { key: fs, sep: [] });\n                        this.onKeyLine = true;\n                    }\n                    return;\n                }\n                default: {\n                    const bv = this.startBlockValue(map);\n                    if (bv) {\n                        if (atNextItem &&\n                            bv.type !== 'block-seq' &&\n                            includesToken(it.start, 'explicit-key-ind')) {\n                            map.items.push({ start });\n                        }\n                        this.stack.push(bv);\n                        return;\n                    }\n                }\n            }\n        }\n        yield* this.pop();\n        yield* this.step();\n    }\n    *blockSequence(seq) {\n        const it = seq.items[seq.items.length - 1];\n        switch (this.type) {\n            case 'newline':\n                if (it.value) {\n                    const end = 'end' in it.value ? it.value.end : undefined;\n                    const last = Array.isArray(end) ? end[end.length - 1] : undefined;\n                    if (last?.type === 'comment')\n                        end?.push(this.sourceToken);\n                    else\n                        seq.items.push({ start: [this.sourceToken] });\n                }\n                else\n                    it.start.push(this.sourceToken);\n                return;\n            case 'space':\n            case 'comment':\n                if (it.value)\n                    seq.items.push({ start: [this.sourceToken] });\n                else {\n                    if (this.atIndentedComment(it.start, seq.indent)) {\n                        const prev = seq.items[seq.items.length - 2];\n                        const end = prev?.value?.end;\n                        if (Array.isArray(end)) {\n                            Array.prototype.push.apply(end, it.start);\n                            end.push(this.sourceToken);\n                            seq.items.pop();\n                            return;\n                        }\n                    }\n                    it.start.push(this.sourceToken);\n                }\n                return;\n            case 'anchor':\n            case 'tag':\n                if (it.value || this.indent <= seq.indent)\n                    break;\n                it.start.push(this.sourceToken);\n                return;\n            case 'seq-item-ind':\n                if (this.indent !== seq.indent)\n                    break;\n                if (it.value || includesToken(it.start, 'seq-item-ind'))\n                    seq.items.push({ start: [this.sourceToken] });\n                else\n                    it.start.push(this.sourceToken);\n                return;\n        }\n        if (this.indent > seq.indent) {\n            const bv = this.startBlockValue(seq);\n            if (bv) {\n                this.stack.push(bv);\n                return;\n            }\n        }\n        yield* this.pop();\n        yield* this.step();\n    }\n    *flowCollection(fc) {\n        const it = fc.items[fc.items.length - 1];\n        if (this.type === 'flow-error-end') {\n            let top;\n            do {\n                yield* this.pop();\n                top = this.peek(1);\n            } while (top && top.type === 'flow-collection');\n        }\n        else if (fc.end.length === 0) {\n            switch (this.type) {\n                case 'comma':\n                case 'explicit-key-ind':\n                    if (!it || it.sep)\n                        fc.items.push({ start: [this.sourceToken] });\n                    else\n                        it.start.push(this.sourceToken);\n                    return;\n                case 'map-value-ind':\n                    if (!it || it.value)\n                        fc.items.push({ start: [], key: null, sep: [this.sourceToken] });\n                    else if (it.sep)\n                        it.sep.push(this.sourceToken);\n                    else\n                        Object.assign(it, { key: null, sep: [this.sourceToken] });\n                    return;\n                case 'space':\n                case 'comment':\n                case 'newline':\n                case 'anchor':\n                case 'tag':\n                    if (!it || it.value)\n                        fc.items.push({ start: [this.sourceToken] });\n                    else if (it.sep)\n                        it.sep.push(this.sourceToken);\n                    else\n                        it.start.push(this.sourceToken);\n                    return;\n                case 'alias':\n                case 'scalar':\n                case 'single-quoted-scalar':\n                case 'double-quoted-scalar': {\n                    const fs = this.flowScalar(this.type);\n                    if (!it || it.value)\n                        fc.items.push({ start: [], key: fs, sep: [] });\n                    else if (it.sep)\n                        this.stack.push(fs);\n                    else\n                        Object.assign(it, { key: fs, sep: [] });\n                    return;\n                }\n                case 'flow-map-end':\n                case 'flow-seq-end':\n                    fc.end.push(this.sourceToken);\n                    return;\n            }\n            const bv = this.startBlockValue(fc);\n            /* istanbul ignore else should not happen */\n            if (bv)\n                this.stack.push(bv);\n            else {\n                yield* this.pop();\n                yield* this.step();\n            }\n        }\n        else {\n            const parent = this.peek(2);\n            if (parent.type === 'block-map' &&\n                ((this.type === 'map-value-ind' && parent.indent === fc.indent) ||\n                    (this.type === 'newline' &&\n                        !parent.items[parent.items.length - 1].sep))) {\n                yield* this.pop();\n                yield* this.step();\n            }\n            else if (this.type === 'map-value-ind' &&\n                parent.type !== 'flow-collection') {\n                const prev = getPrevProps(parent);\n                const start = getFirstKeyStartProps(prev);\n                fixFlowSeqItems(fc);\n                const sep = fc.end.splice(1, fc.end.length);\n                sep.push(this.sourceToken);\n                const map = {\n                    type: 'block-map',\n                    offset: fc.offset,\n                    indent: fc.indent,\n                    items: [{ start, key: fc, sep }]\n                };\n                this.onKeyLine = true;\n                this.stack[this.stack.length - 1] = map;\n            }\n            else {\n                yield* this.lineEnd(fc);\n            }\n        }\n    }\n    flowScalar(type) {\n        if (this.onNewLine) {\n            let nl = this.source.indexOf('\\n') + 1;\n            while (nl !== 0) {\n                this.onNewLine(this.offset + nl);\n                nl = this.source.indexOf('\\n', nl) + 1;\n            }\n        }\n        return {\n            type,\n            offset: this.offset,\n            indent: this.indent,\n            source: this.source\n        };\n    }\n    startBlockValue(parent) {\n        switch (this.type) {\n            case 'alias':\n            case 'scalar':\n            case 'single-quoted-scalar':\n            case 'double-quoted-scalar':\n                return this.flowScalar(this.type);\n            case 'block-scalar-header':\n                return {\n                    type: 'block-scalar',\n                    offset: this.offset,\n                    indent: this.indent,\n                    props: [this.sourceToken],\n                    source: ''\n                };\n            case 'flow-map-start':\n            case 'flow-seq-start':\n                return {\n                    type: 'flow-collection',\n                    offset: this.offset,\n                    indent: this.indent,\n                    start: this.sourceToken,\n                    items: [],\n                    end: []\n                };\n            case 'seq-item-ind':\n                return {\n                    type: 'block-seq',\n                    offset: this.offset,\n                    indent: this.indent,\n                    items: [{ start: [this.sourceToken] }]\n                };\n            case 'explicit-key-ind': {\n                this.onKeyLine = true;\n                const prev = getPrevProps(parent);\n                const start = getFirstKeyStartProps(prev);\n                start.push(this.sourceToken);\n                return {\n                    type: 'block-map',\n                    offset: this.offset,\n                    indent: this.indent,\n                    items: [{ start }]\n                };\n            }\n            case 'map-value-ind': {\n                this.onKeyLine = true;\n                const prev = getPrevProps(parent);\n                const start = getFirstKeyStartProps(prev);\n                return {\n                    type: 'block-map',\n                    offset: this.offset,\n                    indent: this.indent,\n                    items: [{ start, key: null, sep: [this.sourceToken] }]\n                };\n            }\n        }\n        return null;\n    }\n    atIndentedComment(start, indent) {\n        if (this.type !== 'comment')\n            return false;\n        if (this.indent <= indent)\n            return false;\n        return start.every(st => st.type === 'newline' || st.type === 'space');\n    }\n    *documentEnd(docEnd) {\n        if (this.type !== 'doc-mode') {\n            if (docEnd.end)\n                docEnd.end.push(this.sourceToken);\n            else\n                docEnd.end = [this.sourceToken];\n            if (this.type === 'newline')\n                yield* this.pop();\n        }\n    }\n    *lineEnd(token) {\n        switch (this.type) {\n            case 'comma':\n            case 'doc-start':\n            case 'doc-end':\n            case 'flow-seq-end':\n            case 'flow-map-end':\n            case 'map-value-ind':\n                yield* this.pop();\n                yield* this.step();\n                break;\n            case 'newline':\n                this.onKeyLine = false;\n            // fallthrough\n            case 'space':\n            case 'comment':\n            default:\n                // all other values are errors\n                if (token.end)\n                    token.end.push(this.sourceToken);\n                else\n                    token.end = [this.sourceToken];\n                if (this.type === 'newline')\n                    yield* this.pop();\n        }\n    }\n}\n\nfunction parseOptions(options) {\n    const prettyErrors = options.prettyErrors !== false;\n    const lineCounter = options.lineCounter || (prettyErrors && new LineCounter()) || null;\n    return { lineCounter, prettyErrors };\n}\n/**\n * Parse the input as a stream of YAML documents.\n *\n * Documents should be separated from each other by `...` or `---` marker lines.\n *\n * @returns If an empty `docs` array is returned, it will be of type\n *   EmptyStream and contain additional stream information. In\n *   TypeScript, you should use `'empty' in docs` as a type guard for it.\n */\nfunction parseAllDocuments(source, options = {}) {\n    const { lineCounter, prettyErrors } = parseOptions(options);\n    const parser = new Parser$1(lineCounter?.addNewLine);\n    const composer = new Composer(options);\n    const docs = Array.from(composer.compose(parser.parse(source)));\n    if (prettyErrors && lineCounter)\n        for (const doc of docs) {\n            doc.errors.forEach(prettifyError(source, lineCounter));\n            doc.warnings.forEach(prettifyError(source, lineCounter));\n        }\n    if (docs.length > 0)\n        return docs;\n    return Object.assign([], { empty: true }, composer.streamInfo());\n}\n/** Parse an input string into a single YAML.Document */\nfunction parseDocument(source, options = {}) {\n    const { lineCounter, prettyErrors } = parseOptions(options);\n    const parser = new Parser$1(lineCounter?.addNewLine);\n    const composer = new Composer(options);\n    // `doc` is always set by compose.end(true) at the very latest\n    let doc = null;\n    for (const _doc of composer.compose(parser.parse(source), true, source.length)) {\n        if (!doc)\n            doc = _doc;\n        else if (doc.options.logLevel !== 'silent') {\n            doc.errors.push(new YAMLParseError(_doc.range.slice(0, 2), 'MULTIPLE_DOCS', 'Source contains multiple documents; please use YAML.parseAllDocuments()'));\n            break;\n        }\n    }\n    if (prettyErrors && lineCounter) {\n        doc.errors.forEach(prettifyError(source, lineCounter));\n        doc.warnings.forEach(prettifyError(source, lineCounter));\n    }\n    return doc;\n}\nfunction parse$d(src, reviver, options) {\n    let _reviver = undefined;\n    if (typeof reviver === 'function') {\n        _reviver = reviver;\n    }\n    else if (options === undefined && reviver && typeof reviver === 'object') {\n        options = reviver;\n    }\n    const doc = parseDocument(src, options);\n    if (!doc)\n        return null;\n    doc.warnings.forEach(warning => warn(doc.options.logLevel, warning));\n    if (doc.errors.length > 0) {\n        if (doc.options.logLevel !== 'silent')\n            throw doc.errors[0];\n        else\n            doc.errors = [];\n    }\n    return doc.toJS(Object.assign({ reviver: _reviver }, options));\n}\nfunction stringify$1(value, replacer, options) {\n    let _replacer = null;\n    if (typeof replacer === 'function' || Array.isArray(replacer)) {\n        _replacer = replacer;\n    }\n    else if (options === undefined && replacer) {\n        options = replacer;\n    }\n    if (typeof options === 'string')\n        options = options.length;\n    if (typeof options === 'number') {\n        const indent = Math.round(options);\n        options = indent < 1 ? undefined : indent > 8 ? { indent: 8 } : { indent };\n    }\n    if (value === undefined) {\n        const { keepUndefined } = options ?? replacer ?? {};\n        if (!keepUndefined)\n            return undefined;\n    }\n    return new Document(value, _replacer, options).toString(options);\n}\n\nvar YAML = {\n\t__proto__: null,\n\tCST: cst,\n\tComposer: Composer,\n\tDocument: Document,\n\tSchema: Schema,\n\tYAMLError: YAMLError,\n\tYAMLParseError: YAMLParseError,\n\tYAMLWarning: YAMLWarning,\n\tAlias: Alias,\n\tisAlias: isAlias,\n\tisCollection: isCollection$1,\n\tisDocument: isDocument,\n\tisMap: isMap,\n\tisNode: isNode,\n\tisPair: isPair,\n\tisScalar: isScalar$1,\n\tisSeq: isSeq,\n\tPair: Pair,\n\tScalar: Scalar,\n\tYAMLMap: YAMLMap,\n\tYAMLSeq: YAMLSeq,\n\tLexer: Lexer,\n\tLineCounter: LineCounter,\n\tParser: Parser$1,\n\tparse: parse$d,\n\tparseAllDocuments: parseAllDocuments,\n\tparseDocument: parseDocument,\n\tstringify: stringify$1,\n\tvisit: visit$1,\n\tvisitAsync: visitAsync\n};\n\n// `export * as default from ...` fails on Webpack v4\n\nvar browser$1 = {\n\t__proto__: null,\n\t'default': YAML,\n\tComposer: Composer,\n\tDocument: Document,\n\tSchema: Schema,\n\tYAMLError: YAMLError,\n\tYAMLParseError: YAMLParseError,\n\tYAMLWarning: YAMLWarning,\n\tAlias: Alias,\n\tisAlias: isAlias,\n\tisCollection: isCollection$1,\n\tisDocument: isDocument,\n\tisMap: isMap,\n\tisNode: isNode,\n\tisPair: isPair,\n\tisScalar: isScalar$1,\n\tisSeq: isSeq,\n\tPair: Pair,\n\tScalar: Scalar,\n\tYAMLMap: YAMLMap,\n\tYAMLSeq: YAMLSeq,\n\tLexer: Lexer,\n\tLineCounter: LineCounter,\n\tParser: Parser$1,\n\tparse: parse$d,\n\tparseAllDocuments: parseAllDocuments,\n\tparseDocument: parseDocument,\n\tstringify: stringify$1,\n\tvisit: visit$1,\n\tvisitAsync: visitAsync,\n\tCST: cst\n};\n\nvar require$$3 = /*@__PURE__*/getAugmentedNamespace(browser$1);\n\n// eslint-disable-next-line n/no-deprecated-api\nconst { createRequire, createRequireFromPath } = require$$0$8;\n\nfunction req$2 (name, rootFile) {\n  const create = createRequire || createRequireFromPath;\n  const require = create(rootFile);\n  return require(name)\n}\n\nvar req_1 = req$2;\n\nconst req$1 = req_1;\n\n/**\n * Load Options\n *\n * @private\n * @method options\n *\n * @param  {Object} config  PostCSS Config\n *\n * @return {Object} options PostCSS Options\n */\nconst options = (config, file) => {\n  if (config.parser && typeof config.parser === 'string') {\n    try {\n      config.parser = req$1(config.parser, file);\n    } catch (err) {\n      throw new Error(`Loading PostCSS Parser failed: ${err.message}\\n\\n(@${file})`)\n    }\n  }\n\n  if (config.syntax && typeof config.syntax === 'string') {\n    try {\n      config.syntax = req$1(config.syntax, file);\n    } catch (err) {\n      throw new Error(`Loading PostCSS Syntax failed: ${err.message}\\n\\n(@${file})`)\n    }\n  }\n\n  if (config.stringifier && typeof config.stringifier === 'string') {\n    try {\n      config.stringifier = req$1(config.stringifier, file);\n    } catch (err) {\n      throw new Error(`Loading PostCSS Stringifier failed: ${err.message}\\n\\n(@${file})`)\n    }\n  }\n\n  if (config.plugins) {\n    delete config.plugins;\n  }\n\n  return config\n};\n\nvar options_1 = options;\n\nconst req = req_1;\n\n/**\n * Plugin Loader\n *\n * @private\n * @method load\n *\n * @param  {String} plugin PostCSS Plugin Name\n * @param  {Object} options PostCSS Plugin Options\n *\n * @return {Function} PostCSS Plugin\n */\nconst load = (plugin, options, file) => {\n  try {\n    if (\n      options === null ||\n      options === undefined ||\n      Object.keys(options).length === 0\n    ) {\n      return req(plugin, file)\n    } else {\n      return req(plugin, file)(options)\n    }\n  } catch (err) {\n    throw new Error(`Loading PostCSS Plugin failed: ${err.message}\\n\\n(@${file})`)\n  }\n};\n\n/**\n * Load Plugins\n *\n * @private\n * @method plugins\n *\n * @param {Object} config PostCSS Config Plugins\n *\n * @return {Array} plugins PostCSS Plugins\n */\nconst plugins = (config, file) => {\n  let plugins = [];\n\n  if (Array.isArray(config.plugins)) {\n    plugins = config.plugins.filter(Boolean);\n  } else {\n    plugins = Object.keys(config.plugins)\n      .filter((plugin) => {\n        return config.plugins[plugin] !== false ? plugin : ''\n      })\n      .map((plugin) => {\n        return load(plugin, config.plugins[plugin], file)\n      });\n  }\n\n  if (plugins.length && plugins.length > 0) {\n    plugins.forEach((plugin, i) => {\n      if (plugin.default) {\n        plugin = plugin.default;\n      }\n\n      if (plugin.postcss === true) {\n        plugin = plugin();\n      } else if (plugin.postcss) {\n        plugin = plugin.postcss;\n      }\n\n      if (\n        // eslint-disable-next-line\n        !(\n          (typeof plugin === 'object' && Array.isArray(plugin.plugins)) ||\n          (typeof plugin === 'object' && plugin.postcssPlugin) ||\n          (typeof plugin === 'function')\n        )\n      ) {\n        throw new TypeError(`Invalid PostCSS Plugin found at: plugins[${i}]\\n\\n(@${file})`)\n      }\n    });\n  }\n\n  return plugins\n};\n\nvar plugins_1 = plugins;\n\nconst resolve$1 = require$$0$4.resolve;\nconst url$4 = require$$0$9;\n\nconst config$1 = dist;\nconst yaml = require$$3;\n\nconst loadOptions = options_1;\nconst loadPlugins = plugins_1;\n\n/* istanbul ignore next */\nconst interopRequireDefault = (obj) => obj && obj.__esModule ? obj : { default: obj };\n\n/**\n * Process the result from cosmiconfig\n *\n * @param  {Object} ctx Config Context\n * @param  {Object} result Cosmiconfig result\n *\n * @return {Object} PostCSS Config\n */\nconst processResult = (ctx, result) => {\n  const file = result.filepath || '';\n  let config = interopRequireDefault(result.config).default || {};\n\n  if (typeof config === 'function') {\n    config = config(ctx);\n  } else {\n    config = Object.assign({}, config, ctx);\n  }\n\n  if (!config.plugins) {\n    config.plugins = [];\n  }\n\n  return {\n    plugins: loadPlugins(config, file),\n    options: loadOptions(config, file),\n    file\n  }\n};\n\n/**\n * Builds the Config Context\n *\n * @param  {Object} ctx Config Context\n *\n * @return {Object} Config Context\n */\nconst createContext = (ctx) => {\n  /**\n   * @type {Object}\n   *\n   * @prop {String} cwd=process.cwd() Config search start location\n   * @prop {String} env=process.env.NODE_ENV Config Enviroment, will be set to `development` by `postcss-load-config` if `process.env.NODE_ENV` is `undefined`\n   */\n  ctx = Object.assign({\n    cwd: process.cwd(),\n    env: process.env.NODE_ENV\n  }, ctx);\n\n  if (!ctx.env) {\n    process.env.NODE_ENV = 'development';\n  }\n\n  return ctx\n};\n\nconst importDefault = async filepath => {\n  const module = await import(url$4.pathToFileURL(filepath).href);\n  return module.default\n};\n\nconst addTypeScriptLoader = (options = {}, loader) => {\n  const moduleName = 'postcss';\n\n  return {\n    ...options,\n    searchPlaces: [\n      ...(options.searchPlaces || []),\n      'package.json',\n      `.${moduleName}rc`,\n      `.${moduleName}rc.json`,\n      `.${moduleName}rc.yaml`,\n      `.${moduleName}rc.yml`,\n      `.${moduleName}rc.ts`,\n      `.${moduleName}rc.js`,\n      `.${moduleName}rc.cjs`,\n      `.${moduleName}rc.mjs`,\n      `${moduleName}.config.ts`,\n      `${moduleName}.config.js`,\n      `${moduleName}.config.cjs`,\n      `${moduleName}.config.mjs`\n    ],\n    loaders: {\n      ...options.loaders,\n      '.yaml': (filepath, content) => yaml.parse(content),\n      '.yml': (filepath, content) => yaml.parse(content),\n      '.js': importDefault,\n      '.cjs': importDefault,\n      '.mjs': importDefault,\n      '.ts': loader\n    }\n  }\n};\n\nconst withTypeScriptLoader = (rcFunc) => {\n  return (ctx, path, options) => {\n    return rcFunc(ctx, path, addTypeScriptLoader(options, (configFile) => {\n      let registerer = { enabled () {} };\n\n      try {\n        // Register TypeScript compiler instance\n        registerer = eval('require')('ts-node').register();\n\n        return eval('require')(configFile)\n      } catch (err) {\n        if (err.code === 'MODULE_NOT_FOUND') {\n          throw new Error(\n            `'ts-node' is required for the TypeScript configuration files. Make sure it is installed\\nError: ${err.message}`\n          )\n        }\n\n        throw err\n      } finally {\n        registerer.enabled(false);\n      }\n    }))\n  }\n};\n\n/**\n * Load Config\n *\n * @method rc\n *\n * @param  {Object} ctx Config Context\n * @param  {String} path Config Path\n * @param  {Object} options Config Options\n *\n * @return {Promise} config PostCSS Config\n */\nconst rc = withTypeScriptLoader((ctx, path, options) => {\n  /**\n   * @type {Object} The full Config Context\n   */\n  ctx = createContext(ctx);\n\n  /**\n   * @type {String} `process.cwd()`\n   */\n  path = path ? resolve$1(path) : process.cwd();\n\n  return config$1.lilconfig('postcss', options)\n    .search(path)\n    .then((result) => {\n      if (!result) {\n        throw new Error(`No PostCSS Config found in: ${path}`)\n      }\n\n      return processResult(ctx, result)\n    })\n});\n\n/**\n * Autoload Config for PostCSS\n *\n * @author Michael Ciniawsky @michael-ciniawsky <michael.ciniawsky@gmail.com>\n * @license MIT\n *\n * @module postcss-load-config\n * @version 2.1.0\n *\n * @requires comsiconfig\n * @requires ./options\n * @requires ./plugins\n */\nvar src$1 = rc;\n\nclass BitSet {\n\tconstructor(arg) {\n\t\tthis.bits = arg instanceof BitSet ? arg.bits.slice() : [];\n\t}\n\n\tadd(n) {\n\t\tthis.bits[n >> 5] |= 1 << (n & 31);\n\t}\n\n\thas(n) {\n\t\treturn !!(this.bits[n >> 5] & (1 << (n & 31)));\n\t}\n}\n\nclass Chunk {\n\tconstructor(start, end, content) {\n\t\tthis.start = start;\n\t\tthis.end = end;\n\t\tthis.original = content;\n\n\t\tthis.intro = '';\n\t\tthis.outro = '';\n\n\t\tthis.content = content;\n\t\tthis.storeName = false;\n\t\tthis.edited = false;\n\n\t\t// we make these non-enumerable, for sanity while debugging\n\t\tObject.defineProperties(this, {\n\t\t\tprevious: { writable: true, value: null },\n\t\t\tnext: { writable: true, value: null },\n\t\t});\n\t}\n\n\tappendLeft(content) {\n\t\tthis.outro += content;\n\t}\n\n\tappendRight(content) {\n\t\tthis.intro = this.intro + content;\n\t}\n\n\tclone() {\n\t\tconst chunk = new Chunk(this.start, this.end, this.original);\n\n\t\tchunk.intro = this.intro;\n\t\tchunk.outro = this.outro;\n\t\tchunk.content = this.content;\n\t\tchunk.storeName = this.storeName;\n\t\tchunk.edited = this.edited;\n\n\t\treturn chunk;\n\t}\n\n\tcontains(index) {\n\t\treturn this.start < index && index < this.end;\n\t}\n\n\teachNext(fn) {\n\t\tlet chunk = this;\n\t\twhile (chunk) {\n\t\t\tfn(chunk);\n\t\t\tchunk = chunk.next;\n\t\t}\n\t}\n\n\teachPrevious(fn) {\n\t\tlet chunk = this;\n\t\twhile (chunk) {\n\t\t\tfn(chunk);\n\t\t\tchunk = chunk.previous;\n\t\t}\n\t}\n\n\tedit(content, storeName, contentOnly) {\n\t\tthis.content = content;\n\t\tif (!contentOnly) {\n\t\t\tthis.intro = '';\n\t\t\tthis.outro = '';\n\t\t}\n\t\tthis.storeName = storeName;\n\n\t\tthis.edited = true;\n\n\t\treturn this;\n\t}\n\n\tprependLeft(content) {\n\t\tthis.outro = content + this.outro;\n\t}\n\n\tprependRight(content) {\n\t\tthis.intro = content + this.intro;\n\t}\n\n\tsplit(index) {\n\t\tconst sliceIndex = index - this.start;\n\n\t\tconst originalBefore = this.original.slice(0, sliceIndex);\n\t\tconst originalAfter = this.original.slice(sliceIndex);\n\n\t\tthis.original = originalBefore;\n\n\t\tconst newChunk = new Chunk(index, this.end, originalAfter);\n\t\tnewChunk.outro = this.outro;\n\t\tthis.outro = '';\n\n\t\tthis.end = index;\n\n\t\tif (this.edited) {\n\t\t\t// TODO is this block necessary?...\n\t\t\tnewChunk.edit('', false);\n\t\t\tthis.content = '';\n\t\t} else {\n\t\t\tthis.content = originalBefore;\n\t\t}\n\n\t\tnewChunk.next = this.next;\n\t\tif (newChunk.next) newChunk.next.previous = newChunk;\n\t\tnewChunk.previous = this;\n\t\tthis.next = newChunk;\n\n\t\treturn newChunk;\n\t}\n\n\ttoString() {\n\t\treturn this.intro + this.content + this.outro;\n\t}\n\n\ttrimEnd(rx) {\n\t\tthis.outro = this.outro.replace(rx, '');\n\t\tif (this.outro.length) return true;\n\n\t\tconst trimmed = this.content.replace(rx, '');\n\n\t\tif (trimmed.length) {\n\t\t\tif (trimmed !== this.content) {\n\t\t\t\tthis.split(this.start + trimmed.length).edit('', undefined, true);\n\t\t\t}\n\t\t\treturn true;\n\t\t} else {\n\t\t\tthis.edit('', undefined, true);\n\n\t\t\tthis.intro = this.intro.replace(rx, '');\n\t\t\tif (this.intro.length) return true;\n\t\t}\n\t}\n\n\ttrimStart(rx) {\n\t\tthis.intro = this.intro.replace(rx, '');\n\t\tif (this.intro.length) return true;\n\n\t\tconst trimmed = this.content.replace(rx, '');\n\n\t\tif (trimmed.length) {\n\t\t\tif (trimmed !== this.content) {\n\t\t\t\tthis.split(this.end - trimmed.length);\n\t\t\t\tthis.edit('', undefined, true);\n\t\t\t}\n\t\t\treturn true;\n\t\t} else {\n\t\t\tthis.edit('', undefined, true);\n\n\t\t\tthis.outro = this.outro.replace(rx, '');\n\t\t\tif (this.outro.length) return true;\n\t\t}\n\t}\n}\n\nlet btoa$1 = () => {\n\tthrow new Error('Unsupported environment: `window.btoa` or `Buffer` should be supported.');\n};\nif (typeof window !== 'undefined' && typeof window.btoa === 'function') {\n\tbtoa$1 = (str) => window.btoa(unescape(encodeURIComponent(str)));\n} else if (typeof Buffer === 'function') {\n\tbtoa$1 = (str) => Buffer.from(str, 'utf-8').toString('base64');\n}\n\nclass SourceMap {\n\tconstructor(properties) {\n\t\tthis.version = 3;\n\t\tthis.file = properties.file;\n\t\tthis.sources = properties.sources;\n\t\tthis.sourcesContent = properties.sourcesContent;\n\t\tthis.names = properties.names;\n\t\tthis.mappings = encode$2(properties.mappings);\n\t}\n\n\ttoString() {\n\t\treturn JSON.stringify(this);\n\t}\n\n\ttoUrl() {\n\t\treturn 'data:application/json;charset=utf-8;base64,' + btoa$1(this.toString());\n\t}\n}\n\nfunction guessIndent(code) {\n\tconst lines = code.split('\\n');\n\n\tconst tabbed = lines.filter((line) => /^\\t+/.test(line));\n\tconst spaced = lines.filter((line) => /^ {2,}/.test(line));\n\n\tif (tabbed.length === 0 && spaced.length === 0) {\n\t\treturn null;\n\t}\n\n\t// More lines tabbed than spaced? Assume tabs, and\n\t// default to tabs in the case of a tie (or nothing\n\t// to go on)\n\tif (tabbed.length >= spaced.length) {\n\t\treturn '\\t';\n\t}\n\n\t// Otherwise, we need to guess the multiple\n\tconst min = spaced.reduce((previous, current) => {\n\t\tconst numSpaces = /^ +/.exec(current)[0].length;\n\t\treturn Math.min(numSpaces, previous);\n\t}, Infinity);\n\n\treturn new Array(min + 1).join(' ');\n}\n\nfunction getRelativePath(from, to) {\n\tconst fromParts = from.split(/[/\\\\]/);\n\tconst toParts = to.split(/[/\\\\]/);\n\n\tfromParts.pop(); // get dirname\n\n\twhile (fromParts[0] === toParts[0]) {\n\t\tfromParts.shift();\n\t\ttoParts.shift();\n\t}\n\n\tif (fromParts.length) {\n\t\tlet i = fromParts.length;\n\t\twhile (i--) fromParts[i] = '..';\n\t}\n\n\treturn fromParts.concat(toParts).join('/');\n}\n\nconst toString$2 = Object.prototype.toString;\n\nfunction isObject(thing) {\n\treturn toString$2.call(thing) === '[object Object]';\n}\n\nfunction getLocator(source) {\n\tconst originalLines = source.split('\\n');\n\tconst lineOffsets = [];\n\n\tfor (let i = 0, pos = 0; i < originalLines.length; i++) {\n\t\tlineOffsets.push(pos);\n\t\tpos += originalLines[i].length + 1;\n\t}\n\n\treturn function locate(index) {\n\t\tlet i = 0;\n\t\tlet j = lineOffsets.length;\n\t\twhile (i < j) {\n\t\t\tconst m = (i + j) >> 1;\n\t\t\tif (index < lineOffsets[m]) {\n\t\t\t\tj = m;\n\t\t\t} else {\n\t\t\t\ti = m + 1;\n\t\t\t}\n\t\t}\n\t\tconst line = i - 1;\n\t\tconst column = index - lineOffsets[line];\n\t\treturn { line, column };\n\t};\n}\n\nclass Mappings {\n\tconstructor(hires) {\n\t\tthis.hires = hires;\n\t\tthis.generatedCodeLine = 0;\n\t\tthis.generatedCodeColumn = 0;\n\t\tthis.raw = [];\n\t\tthis.rawSegments = this.raw[this.generatedCodeLine] = [];\n\t\tthis.pending = null;\n\t}\n\n\taddEdit(sourceIndex, content, loc, nameIndex) {\n\t\tif (content.length) {\n\t\t\tconst segment = [this.generatedCodeColumn, sourceIndex, loc.line, loc.column];\n\t\t\tif (nameIndex >= 0) {\n\t\t\t\tsegment.push(nameIndex);\n\t\t\t}\n\t\t\tthis.rawSegments.push(segment);\n\t\t} else if (this.pending) {\n\t\t\tthis.rawSegments.push(this.pending);\n\t\t}\n\n\t\tthis.advance(content);\n\t\tthis.pending = null;\n\t}\n\n\taddUneditedChunk(sourceIndex, chunk, original, loc, sourcemapLocations) {\n\t\tlet originalCharIndex = chunk.start;\n\t\tlet first = true;\n\n\t\twhile (originalCharIndex < chunk.end) {\n\t\t\tif (this.hires || first || sourcemapLocations.has(originalCharIndex)) {\n\t\t\t\tthis.rawSegments.push([this.generatedCodeColumn, sourceIndex, loc.line, loc.column]);\n\t\t\t}\n\n\t\t\tif (original[originalCharIndex] === '\\n') {\n\t\t\t\tloc.line += 1;\n\t\t\t\tloc.column = 0;\n\t\t\t\tthis.generatedCodeLine += 1;\n\t\t\t\tthis.raw[this.generatedCodeLine] = this.rawSegments = [];\n\t\t\t\tthis.generatedCodeColumn = 0;\n\t\t\t\tfirst = true;\n\t\t\t} else {\n\t\t\t\tloc.column += 1;\n\t\t\t\tthis.generatedCodeColumn += 1;\n\t\t\t\tfirst = false;\n\t\t\t}\n\n\t\t\toriginalCharIndex += 1;\n\t\t}\n\n\t\tthis.pending = null;\n\t}\n\n\tadvance(str) {\n\t\tif (!str) return;\n\n\t\tconst lines = str.split('\\n');\n\n\t\tif (lines.length > 1) {\n\t\t\tfor (let i = 0; i < lines.length - 1; i++) {\n\t\t\t\tthis.generatedCodeLine++;\n\t\t\t\tthis.raw[this.generatedCodeLine] = this.rawSegments = [];\n\t\t\t}\n\t\t\tthis.generatedCodeColumn = 0;\n\t\t}\n\n\t\tthis.generatedCodeColumn += lines[lines.length - 1].length;\n\t}\n}\n\nconst n = '\\n';\n\nconst warned = {\n\tinsertLeft: false,\n\tinsertRight: false,\n\tstoreName: false,\n};\n\nclass MagicString {\n\tconstructor(string, options = {}) {\n\t\tconst chunk = new Chunk(0, string.length, string);\n\n\t\tObject.defineProperties(this, {\n\t\t\toriginal: { writable: true, value: string },\n\t\t\toutro: { writable: true, value: '' },\n\t\t\tintro: { writable: true, value: '' },\n\t\t\tfirstChunk: { writable: true, value: chunk },\n\t\t\tlastChunk: { writable: true, value: chunk },\n\t\t\tlastSearchedChunk: { writable: true, value: chunk },\n\t\t\tbyStart: { writable: true, value: {} },\n\t\t\tbyEnd: { writable: true, value: {} },\n\t\t\tfilename: { writable: true, value: options.filename },\n\t\t\tindentExclusionRanges: { writable: true, value: options.indentExclusionRanges },\n\t\t\tsourcemapLocations: { writable: true, value: new BitSet() },\n\t\t\tstoredNames: { writable: true, value: {} },\n\t\t\tindentStr: { writable: true, value: guessIndent(string) },\n\t\t});\n\n\t\tthis.byStart[0] = chunk;\n\t\tthis.byEnd[string.length] = chunk;\n\t}\n\n\taddSourcemapLocation(char) {\n\t\tthis.sourcemapLocations.add(char);\n\t}\n\n\tappend(content) {\n\t\tif (typeof content !== 'string') throw new TypeError('outro content must be a string');\n\n\t\tthis.outro += content;\n\t\treturn this;\n\t}\n\n\tappendLeft(index, content) {\n\t\tif (typeof content !== 'string') throw new TypeError('inserted content must be a string');\n\n\t\tthis._split(index);\n\n\t\tconst chunk = this.byEnd[index];\n\n\t\tif (chunk) {\n\t\t\tchunk.appendLeft(content);\n\t\t} else {\n\t\t\tthis.intro += content;\n\t\t}\n\t\treturn this;\n\t}\n\n\tappendRight(index, content) {\n\t\tif (typeof content !== 'string') throw new TypeError('inserted content must be a string');\n\n\t\tthis._split(index);\n\n\t\tconst chunk = this.byStart[index];\n\n\t\tif (chunk) {\n\t\t\tchunk.appendRight(content);\n\t\t} else {\n\t\t\tthis.outro += content;\n\t\t}\n\t\treturn this;\n\t}\n\n\tclone() {\n\t\tconst cloned = new MagicString(this.original, { filename: this.filename });\n\n\t\tlet originalChunk = this.firstChunk;\n\t\tlet clonedChunk = (cloned.firstChunk = cloned.lastSearchedChunk = originalChunk.clone());\n\n\t\twhile (originalChunk) {\n\t\t\tcloned.byStart[clonedChunk.start] = clonedChunk;\n\t\t\tcloned.byEnd[clonedChunk.end] = clonedChunk;\n\n\t\t\tconst nextOriginalChunk = originalChunk.next;\n\t\t\tconst nextClonedChunk = nextOriginalChunk && nextOriginalChunk.clone();\n\n\t\t\tif (nextClonedChunk) {\n\t\t\t\tclonedChunk.next = nextClonedChunk;\n\t\t\t\tnextClonedChunk.previous = clonedChunk;\n\n\t\t\t\tclonedChunk = nextClonedChunk;\n\t\t\t}\n\n\t\t\toriginalChunk = nextOriginalChunk;\n\t\t}\n\n\t\tcloned.lastChunk = clonedChunk;\n\n\t\tif (this.indentExclusionRanges) {\n\t\t\tcloned.indentExclusionRanges = this.indentExclusionRanges.slice();\n\t\t}\n\n\t\tcloned.sourcemapLocations = new BitSet(this.sourcemapLocations);\n\n\t\tcloned.intro = this.intro;\n\t\tcloned.outro = this.outro;\n\n\t\treturn cloned;\n\t}\n\n\tgenerateDecodedMap(options) {\n\t\toptions = options || {};\n\n\t\tconst sourceIndex = 0;\n\t\tconst names = Object.keys(this.storedNames);\n\t\tconst mappings = new Mappings(options.hires);\n\n\t\tconst locate = getLocator(this.original);\n\n\t\tif (this.intro) {\n\t\t\tmappings.advance(this.intro);\n\t\t}\n\n\t\tthis.firstChunk.eachNext((chunk) => {\n\t\t\tconst loc = locate(chunk.start);\n\n\t\t\tif (chunk.intro.length) mappings.advance(chunk.intro);\n\n\t\t\tif (chunk.edited) {\n\t\t\t\tmappings.addEdit(\n\t\t\t\t\tsourceIndex,\n\t\t\t\t\tchunk.content,\n\t\t\t\t\tloc,\n\t\t\t\t\tchunk.storeName ? names.indexOf(chunk.original) : -1\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tmappings.addUneditedChunk(sourceIndex, chunk, this.original, loc, this.sourcemapLocations);\n\t\t\t}\n\n\t\t\tif (chunk.outro.length) mappings.advance(chunk.outro);\n\t\t});\n\n\t\treturn {\n\t\t\tfile: options.file ? options.file.split(/[/\\\\]/).pop() : null,\n\t\t\tsources: [options.source ? getRelativePath(options.file || '', options.source) : null],\n\t\t\tsourcesContent: options.includeContent ? [this.original] : [null],\n\t\t\tnames,\n\t\t\tmappings: mappings.raw,\n\t\t};\n\t}\n\n\tgenerateMap(options) {\n\t\treturn new SourceMap(this.generateDecodedMap(options));\n\t}\n\n\tgetIndentString() {\n\t\treturn this.indentStr === null ? '\\t' : this.indentStr;\n\t}\n\n\tindent(indentStr, options) {\n\t\tconst pattern = /^[^\\r\\n]/gm;\n\n\t\tif (isObject(indentStr)) {\n\t\t\toptions = indentStr;\n\t\t\tindentStr = undefined;\n\t\t}\n\n\t\tindentStr = indentStr !== undefined ? indentStr : this.indentStr || '\\t';\n\n\t\tif (indentStr === '') return this; // noop\n\n\t\toptions = options || {};\n\n\t\t// Process exclusion ranges\n\t\tconst isExcluded = {};\n\n\t\tif (options.exclude) {\n\t\t\tconst exclusions =\n\t\t\t\ttypeof options.exclude[0] === 'number' ? [options.exclude] : options.exclude;\n\t\t\texclusions.forEach((exclusion) => {\n\t\t\t\tfor (let i = exclusion[0]; i < exclusion[1]; i += 1) {\n\t\t\t\t\tisExcluded[i] = true;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\tlet shouldIndentNextCharacter = options.indentStart !== false;\n\t\tconst replacer = (match) => {\n\t\t\tif (shouldIndentNextCharacter) return `${indentStr}${match}`;\n\t\t\tshouldIndentNextCharacter = true;\n\t\t\treturn match;\n\t\t};\n\n\t\tthis.intro = this.intro.replace(pattern, replacer);\n\n\t\tlet charIndex = 0;\n\t\tlet chunk = this.firstChunk;\n\n\t\twhile (chunk) {\n\t\t\tconst end = chunk.end;\n\n\t\t\tif (chunk.edited) {\n\t\t\t\tif (!isExcluded[charIndex]) {\n\t\t\t\t\tchunk.content = chunk.content.replace(pattern, replacer);\n\n\t\t\t\t\tif (chunk.content.length) {\n\t\t\t\t\t\tshouldIndentNextCharacter = chunk.content[chunk.content.length - 1] === '\\n';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tcharIndex = chunk.start;\n\n\t\t\t\twhile (charIndex < end) {\n\t\t\t\t\tif (!isExcluded[charIndex]) {\n\t\t\t\t\t\tconst char = this.original[charIndex];\n\n\t\t\t\t\t\tif (char === '\\n') {\n\t\t\t\t\t\t\tshouldIndentNextCharacter = true;\n\t\t\t\t\t\t} else if (char !== '\\r' && shouldIndentNextCharacter) {\n\t\t\t\t\t\t\tshouldIndentNextCharacter = false;\n\n\t\t\t\t\t\t\tif (charIndex === chunk.start) {\n\t\t\t\t\t\t\t\tchunk.prependRight(indentStr);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tthis._splitChunk(chunk, charIndex);\n\t\t\t\t\t\t\t\tchunk = chunk.next;\n\t\t\t\t\t\t\t\tchunk.prependRight(indentStr);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tcharIndex += 1;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tcharIndex = chunk.end;\n\t\t\tchunk = chunk.next;\n\t\t}\n\n\t\tthis.outro = this.outro.replace(pattern, replacer);\n\n\t\treturn this;\n\t}\n\n\tinsert() {\n\t\tthrow new Error(\n\t\t\t'magicString.insert(...) is deprecated. Use prependRight(...) or appendLeft(...)'\n\t\t);\n\t}\n\n\tinsertLeft(index, content) {\n\t\tif (!warned.insertLeft) {\n\t\t\tconsole.warn(\n\t\t\t\t'magicString.insertLeft(...) is deprecated. Use magicString.appendLeft(...) instead'\n\t\t\t); // eslint-disable-line no-console\n\t\t\twarned.insertLeft = true;\n\t\t}\n\n\t\treturn this.appendLeft(index, content);\n\t}\n\n\tinsertRight(index, content) {\n\t\tif (!warned.insertRight) {\n\t\t\tconsole.warn(\n\t\t\t\t'magicString.insertRight(...) is deprecated. Use magicString.prependRight(...) instead'\n\t\t\t); // eslint-disable-line no-console\n\t\t\twarned.insertRight = true;\n\t\t}\n\n\t\treturn this.prependRight(index, content);\n\t}\n\n\tmove(start, end, index) {\n\t\tif (index >= start && index <= end) throw new Error('Cannot move a selection inside itself');\n\n\t\tthis._split(start);\n\t\tthis._split(end);\n\t\tthis._split(index);\n\n\t\tconst first = this.byStart[start];\n\t\tconst last = this.byEnd[end];\n\n\t\tconst oldLeft = first.previous;\n\t\tconst oldRight = last.next;\n\n\t\tconst newRight = this.byStart[index];\n\t\tif (!newRight && last === this.lastChunk) return this;\n\t\tconst newLeft = newRight ? newRight.previous : this.lastChunk;\n\n\t\tif (oldLeft) oldLeft.next = oldRight;\n\t\tif (oldRight) oldRight.previous = oldLeft;\n\n\t\tif (newLeft) newLeft.next = first;\n\t\tif (newRight) newRight.previous = last;\n\n\t\tif (!first.previous) this.firstChunk = last.next;\n\t\tif (!last.next) {\n\t\t\tthis.lastChunk = first.previous;\n\t\t\tthis.lastChunk.next = null;\n\t\t}\n\n\t\tfirst.previous = newLeft;\n\t\tlast.next = newRight || null;\n\n\t\tif (!newLeft) this.firstChunk = first;\n\t\tif (!newRight) this.lastChunk = last;\n\t\treturn this;\n\t}\n\n\toverwrite(start, end, content, options) {\n\t\tif (typeof content !== 'string') throw new TypeError('replacement content must be a string');\n\n\t\twhile (start < 0) start += this.original.length;\n\t\twhile (end < 0) end += this.original.length;\n\n\t\tif (end > this.original.length) throw new Error('end is out of bounds');\n\t\tif (start === end)\n\t\t\tthrow new Error(\n\t\t\t\t'Cannot overwrite a zero-length range \u2013 use appendLeft or prependRight instead'\n\t\t\t);\n\n\t\tthis._split(start);\n\t\tthis._split(end);\n\n\t\tif (options === true) {\n\t\t\tif (!warned.storeName) {\n\t\t\t\tconsole.warn(\n\t\t\t\t\t'The final argument to magicString.overwrite(...) should be an options object. See https://github.com/rich-harris/magic-string'\n\t\t\t\t); // eslint-disable-line no-console\n\t\t\t\twarned.storeName = true;\n\t\t\t}\n\n\t\t\toptions = { storeName: true };\n\t\t}\n\t\tconst storeName = options !== undefined ? options.storeName : false;\n\t\tconst contentOnly = options !== undefined ? options.contentOnly : false;\n\n\t\tif (storeName) {\n\t\t\tconst original = this.original.slice(start, end);\n\t\t\tObject.defineProperty(this.storedNames, original, {\n\t\t\t\twritable: true,\n\t\t\t\tvalue: true,\n\t\t\t\tenumerable: true,\n\t\t\t});\n\t\t}\n\n\t\tconst first = this.byStart[start];\n\t\tconst last = this.byEnd[end];\n\n\t\tif (first) {\n\t\t\tlet chunk = first;\n\t\t\twhile (chunk !== last) {\n\t\t\t\tif (chunk.next !== this.byStart[chunk.end]) {\n\t\t\t\t\tthrow new Error('Cannot overwrite across a split point');\n\t\t\t\t}\n\t\t\t\tchunk = chunk.next;\n\t\t\t\tchunk.edit('', false);\n\t\t\t}\n\n\t\t\tfirst.edit(content, storeName, contentOnly);\n\t\t} else {\n\t\t\t// must be inserting at the end\n\t\t\tconst newChunk = new Chunk(start, end, '').edit(content, storeName);\n\n\t\t\t// TODO last chunk in the array may not be the last chunk, if it's moved...\n\t\t\tlast.next = newChunk;\n\t\t\tnewChunk.previous = last;\n\t\t}\n\t\treturn this;\n\t}\n\n\tprepend(content) {\n\t\tif (typeof content !== 'string') throw new TypeError('outro content must be a string');\n\n\t\tthis.intro = content + this.intro;\n\t\treturn this;\n\t}\n\n\tprependLeft(index, content) {\n\t\tif (typeof content !== 'string') throw new TypeError('inserted content must be a string');\n\n\t\tthis._split(index);\n\n\t\tconst chunk = this.byEnd[index];\n\n\t\tif (chunk) {\n\t\t\tchunk.prependLeft(content);\n\t\t} else {\n\t\t\tthis.intro = content + this.intro;\n\t\t}\n\t\treturn this;\n\t}\n\n\tprependRight(index, content) {\n\t\tif (typeof content !== 'string') throw new TypeError('inserted content must be a string');\n\n\t\tthis._split(index);\n\n\t\tconst chunk = this.byStart[index];\n\n\t\tif (chunk) {\n\t\t\tchunk.prependRight(content);\n\t\t} else {\n\t\t\tthis.outro = content + this.outro;\n\t\t}\n\t\treturn this;\n\t}\n\n\tremove(start, end) {\n\t\twhile (start < 0) start += this.original.length;\n\t\twhile (end < 0) end += this.original.length;\n\n\t\tif (start === end) return this;\n\n\t\tif (start < 0 || end > this.original.length) throw new Error('Character is out of bounds');\n\t\tif (start > end) throw new Error('end must be greater than start');\n\n\t\tthis._split(start);\n\t\tthis._split(end);\n\n\t\tlet chunk = this.byStart[start];\n\n\t\twhile (chunk) {\n\t\t\tchunk.intro = '';\n\t\t\tchunk.outro = '';\n\t\t\tchunk.edit('');\n\n\t\t\tchunk = end > chunk.end ? this.byStart[chunk.end] : null;\n\t\t}\n\t\treturn this;\n\t}\n\n\tlastChar() {\n\t\tif (this.outro.length) return this.outro[this.outro.length - 1];\n\t\tlet chunk = this.lastChunk;\n\t\tdo {\n\t\t\tif (chunk.outro.length) return chunk.outro[chunk.outro.length - 1];\n\t\t\tif (chunk.content.length) return chunk.content[chunk.content.length - 1];\n\t\t\tif (chunk.intro.length) return chunk.intro[chunk.intro.length - 1];\n\t\t} while ((chunk = chunk.previous));\n\t\tif (this.intro.length) return this.intro[this.intro.length - 1];\n\t\treturn '';\n\t}\n\n\tlastLine() {\n\t\tlet lineIndex = this.outro.lastIndexOf(n);\n\t\tif (lineIndex !== -1) return this.outro.substr(lineIndex + 1);\n\t\tlet lineStr = this.outro;\n\t\tlet chunk = this.lastChunk;\n\t\tdo {\n\t\t\tif (chunk.outro.length > 0) {\n\t\t\t\tlineIndex = chunk.outro.lastIndexOf(n);\n\t\t\t\tif (lineIndex !== -1) return chunk.outro.substr(lineIndex + 1) + lineStr;\n\t\t\t\tlineStr = chunk.outro + lineStr;\n\t\t\t}\n\n\t\t\tif (chunk.content.length > 0) {\n\t\t\t\tlineIndex = chunk.content.lastIndexOf(n);\n\t\t\t\tif (lineIndex !== -1) return chunk.content.substr(lineIndex + 1) + lineStr;\n\t\t\t\tlineStr = chunk.content + lineStr;\n\t\t\t}\n\n\t\t\tif (chunk.intro.length > 0) {\n\t\t\t\tlineIndex = chunk.intro.lastIndexOf(n);\n\t\t\t\tif (lineIndex !== -1) return chunk.intro.substr(lineIndex + 1) + lineStr;\n\t\t\t\tlineStr = chunk.intro + lineStr;\n\t\t\t}\n\t\t} while ((chunk = chunk.previous));\n\t\tlineIndex = this.intro.lastIndexOf(n);\n\t\tif (lineIndex !== -1) return this.intro.substr(lineIndex + 1) + lineStr;\n\t\treturn this.intro + lineStr;\n\t}\n\n\tslice(start = 0, end = this.original.length) {\n\t\twhile (start < 0) start += this.original.length;\n\t\twhile (end < 0) end += this.original.length;\n\n\t\tlet result = '';\n\n\t\t// find start chunk\n\t\tlet chunk = this.firstChunk;\n\t\twhile (chunk && (chunk.start > start || chunk.end <= start)) {\n\t\t\t// found end chunk before start\n\t\t\tif (chunk.start < end && chunk.end >= end) {\n\t\t\t\treturn result;\n\t\t\t}\n\n\t\t\tchunk = chunk.next;\n\t\t}\n\n\t\tif (chunk && chunk.edited && chunk.start !== start)\n\t\t\tthrow new Error(`Cannot use replaced character ${start} as slice start anchor.`);\n\n\t\tconst startChunk = chunk;\n\t\twhile (chunk) {\n\t\t\tif (chunk.intro && (startChunk !== chunk || chunk.start === start)) {\n\t\t\t\tresult += chunk.intro;\n\t\t\t}\n\n\t\t\tconst containsEnd = chunk.start < end && chunk.end >= end;\n\t\t\tif (containsEnd && chunk.edited && chunk.end !== end)\n\t\t\t\tthrow new Error(`Cannot use replaced character ${end} as slice end anchor.`);\n\n\t\t\tconst sliceStart = startChunk === chunk ? start - chunk.start : 0;\n\t\t\tconst sliceEnd = containsEnd ? chunk.content.length + end - chunk.end : chunk.content.length;\n\n\t\t\tresult += chunk.content.slice(sliceStart, sliceEnd);\n\n\t\t\tif (chunk.outro && (!containsEnd || chunk.end === end)) {\n\t\t\t\tresult += chunk.outro;\n\t\t\t}\n\n\t\t\tif (containsEnd) {\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tchunk = chunk.next;\n\t\t}\n\n\t\treturn result;\n\t}\n\n\t// TODO deprecate this? not really very useful\n\tsnip(start, end) {\n\t\tconst clone = this.clone();\n\t\tclone.remove(0, start);\n\t\tclone.remove(end, clone.original.length);\n\n\t\treturn clone;\n\t}\n\n\t_split(index) {\n\t\tif (this.byStart[index] || this.byEnd[index]) return;\n\n\t\tlet chunk = this.lastSearchedChunk;\n\t\tconst searchForward = index > chunk.end;\n\n\t\twhile (chunk) {\n\t\t\tif (chunk.contains(index)) return this._splitChunk(chunk, index);\n\n\t\t\tchunk = searchForward ? this.byStart[chunk.end] : this.byEnd[chunk.start];\n\t\t}\n\t}\n\n\t_splitChunk(chunk, index) {\n\t\tif (chunk.edited && chunk.content.length) {\n\t\t\t// zero-length edited chunks are a special case (overlapping replacements)\n\t\t\tconst loc = getLocator(this.original)(index);\n\t\t\tthrow new Error(\n\t\t\t\t`Cannot split a chunk that has already been edited (${loc.line}:${loc.column} \u2013 \"${chunk.original}\")`\n\t\t\t);\n\t\t}\n\n\t\tconst newChunk = chunk.split(index);\n\n\t\tthis.byEnd[index] = chunk;\n\t\tthis.byStart[index] = newChunk;\n\t\tthis.byEnd[newChunk.end] = newChunk;\n\n\t\tif (chunk === this.lastChunk) this.lastChunk = newChunk;\n\n\t\tthis.lastSearchedChunk = chunk;\n\t\treturn true;\n\t}\n\n\ttoString() {\n\t\tlet str = this.intro;\n\n\t\tlet chunk = this.firstChunk;\n\t\twhile (chunk) {\n\t\t\tstr += chunk.toString();\n\t\t\tchunk = chunk.next;\n\t\t}\n\n\t\treturn str + this.outro;\n\t}\n\n\tisEmpty() {\n\t\tlet chunk = this.firstChunk;\n\t\tdo {\n\t\t\tif (\n\t\t\t\t(chunk.intro.length && chunk.intro.trim()) ||\n\t\t\t\t(chunk.content.length && chunk.content.trim()) ||\n\t\t\t\t(chunk.outro.length && chunk.outro.trim())\n\t\t\t)\n\t\t\t\treturn false;\n\t\t} while ((chunk = chunk.next));\n\t\treturn true;\n\t}\n\n\tlength() {\n\t\tlet chunk = this.firstChunk;\n\t\tlet length = 0;\n\t\tdo {\n\t\t\tlength += chunk.intro.length + chunk.content.length + chunk.outro.length;\n\t\t} while ((chunk = chunk.next));\n\t\treturn length;\n\t}\n\n\ttrimLines() {\n\t\treturn this.trim('[\\\\r\\\\n]');\n\t}\n\n\ttrim(charType) {\n\t\treturn this.trimStart(charType).trimEnd(charType);\n\t}\n\n\ttrimEndAborted(charType) {\n\t\tconst rx = new RegExp((charType || '\\\\s') + '+$');\n\n\t\tthis.outro = this.outro.replace(rx, '');\n\t\tif (this.outro.length) return true;\n\n\t\tlet chunk = this.lastChunk;\n\n\t\tdo {\n\t\t\tconst end = chunk.end;\n\t\t\tconst aborted = chunk.trimEnd(rx);\n\n\t\t\t// if chunk was trimmed, we have a new lastChunk\n\t\t\tif (chunk.end !== end) {\n\t\t\t\tif (this.lastChunk === chunk) {\n\t\t\t\t\tthis.lastChunk = chunk.next;\n\t\t\t\t}\n\n\t\t\t\tthis.byEnd[chunk.end] = chunk;\n\t\t\t\tthis.byStart[chunk.next.start] = chunk.next;\n\t\t\t\tthis.byEnd[chunk.next.end] = chunk.next;\n\t\t\t}\n\n\t\t\tif (aborted) return true;\n\t\t\tchunk = chunk.previous;\n\t\t} while (chunk);\n\n\t\treturn false;\n\t}\n\n\ttrimEnd(charType) {\n\t\tthis.trimEndAborted(charType);\n\t\treturn this;\n\t}\n\ttrimStartAborted(charType) {\n\t\tconst rx = new RegExp('^' + (charType || '\\\\s') + '+');\n\n\t\tthis.intro = this.intro.replace(rx, '');\n\t\tif (this.intro.length) return true;\n\n\t\tlet chunk = this.firstChunk;\n\n\t\tdo {\n\t\t\tconst end = chunk.end;\n\t\t\tconst aborted = chunk.trimStart(rx);\n\n\t\t\tif (chunk.end !== end) {\n\t\t\t\t// special case...\n\t\t\t\tif (chunk === this.lastChunk) this.lastChunk = chunk.next;\n\n\t\t\t\tthis.byEnd[chunk.end] = chunk;\n\t\t\t\tthis.byStart[chunk.next.start] = chunk.next;\n\t\t\t\tthis.byEnd[chunk.next.end] = chunk.next;\n\t\t\t}\n\n\t\t\tif (aborted) return true;\n\t\t\tchunk = chunk.next;\n\t\t} while (chunk);\n\n\t\treturn false;\n\t}\n\n\ttrimStart(charType) {\n\t\tthis.trimStartAborted(charType);\n\t\treturn this;\n\t}\n\n\thasChanged() {\n\t\treturn this.original !== this.toString();\n\t}\n\n\treplace(searchValue, replacement) {\n\t\tfunction getReplacement(match, str) {\n\t\t\tif (typeof replacement === 'string') {\n\t\t\t\treturn replacement.replace(/\\$(\\$|&|\\d+)/g, (_, i) => {\n\t\t\t\t\t// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/replace#specifying_a_string_as_a_parameter\n\t\t\t\t\tif (i === '$') return '$';\n\t\t\t\t\tif (i === '&') return match[0];\n\t\t\t\t\tconst num = +i;\n\t\t\t\t\tif (num < match.length) return match[+i];\n\t\t\t\t\treturn `$${i}`;\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\treturn replacement(...match, match.index, str, match.groups);\n\t\t\t}\n\t\t}\n\t\tfunction matchAll(re, str) {\n\t\t\tlet match;\n\t\t\tconst matches = [];\n\t\t\twhile ((match = re.exec(str))) {\n\t\t\t\tmatches.push(match);\n\t\t\t}\n\t\t\treturn matches;\n\t\t}\n\t\tif (typeof searchValue !== 'string' && searchValue.global) {\n\t\t\tconst matches = matchAll(searchValue, this.original);\n\t\t\tmatches.forEach((match) => {\n\t\t\t\tif (match.index != null)\n\t\t\t\t\tthis.overwrite(\n\t\t\t\t\t\tmatch.index,\n\t\t\t\t\t\tmatch.index + match[0].length,\n\t\t\t\t\t\tgetReplacement(match, this.original)\n\t\t\t\t\t);\n\t\t\t});\n\t\t} else {\n\t\t\tconst match = this.original.match(searchValue);\n\t\t\tif (match && match.index != null)\n\t\t\t\tthis.overwrite(\n\t\t\t\t\tmatch.index,\n\t\t\t\t\tmatch.index + match[0].length,\n\t\t\t\t\tgetReplacement(match, this.original)\n\t\t\t\t);\n\t\t}\n\t\treturn this;\n\t}\n}\n\nconst isDebug$6 = !!process.env.DEBUG;\nconst debug$e = createDebugger('vite:sourcemap', {\n    onlyWhenFocused: true\n});\n// Virtual modules should be prefixed with a null byte to avoid a\n// false positive \"missing source\" warning. We also check for certain\n// prefixes used for special handling in esbuildDepPlugin.\nconst virtualSourceRE = /^(\\0|dep:|browser-external:)/;\nasync function injectSourcesContent(map, file, logger) {\n    let sourceRoot;\n    try {\n        // The source root is undefined for virtual modules and permission errors.\n        sourceRoot = await promises$2.realpath(path$n.resolve(path$n.dirname(file), map.sourceRoot || ''));\n    }\n    catch { }\n    const missingSources = [];\n    map.sourcesContent = await Promise.all(map.sources.map((sourcePath) => {\n        if (sourcePath && !virtualSourceRE.test(sourcePath)) {\n            sourcePath = decodeURI(sourcePath);\n            if (sourceRoot) {\n                sourcePath = path$n.resolve(sourceRoot, sourcePath);\n            }\n            return promises$2.readFile(sourcePath, 'utf-8').catch(() => {\n                missingSources.push(sourcePath);\n                return null;\n            });\n        }\n        return null;\n    }));\n    // Use this command\u2026\n    //    DEBUG=\"vite:sourcemap\" vite build\n    // \u2026to log the missing sources.\n    if (missingSources.length) {\n        logger.warnOnce(`Sourcemap for \"${file}\" points to missing source files`);\n        isDebug$6 && debug$e(`Missing sources:\\n  ` + missingSources.join(`\\n  `));\n    }\n}\nfunction genSourceMapUrl(map) {\n    if (typeof map !== 'string') {\n        map = JSON.stringify(map);\n    }\n    return `data:application/json;base64,${Buffer.from(map).toString('base64')}`;\n}\nfunction getCodeWithSourcemap(type, code, map) {\n    if (isDebug$6) {\n        code += `\\n/*${JSON.stringify(map, null, 2).replace(/\\*\\//g, '*\\\\/')}*/\\n`;\n    }\n    if (type === 'js') {\n        code += `\\n//# sourceMappingURL=${genSourceMapUrl(map ?? undefined)}`;\n    }\n    else if (type === 'css') {\n        code += `\\n/*# sourceMappingURL=${genSourceMapUrl(map ?? undefined)} */`;\n    }\n    return code;\n}\n\n// This file was generated. Do not modify manually!\nvar astralIdentifierCodes = [509, 0, 227, 0, 150, 4, 294, 9, 1368, 2, 2, 1, 6, 3, 41, 2, 5, 0, 166, 1, 574, 3, 9, 9, 370, 1, 154, 10, 50, 3, 123, 2, 54, 14, 32, 10, 3, 1, 11, 3, 46, 10, 8, 0, 46, 9, 7, 2, 37, 13, 2, 9, 6, 1, 45, 0, 13, 2, 49, 13, 9, 3, 2, 11, 83, 11, 7, 0, 161, 11, 6, 9, 7, 3, 56, 1, 2, 6, 3, 1, 3, 2, 10, 0, 11, 1, 3, 6, 4, 4, 193, 17, 10, 9, 5, 0, 82, 19, 13, 9, 214, 6, 3, 8, 28, 1, 83, 16, 16, 9, 82, 12, 9, 9, 84, 14, 5, 9, 243, 14, 166, 9, 71, 5, 2, 1, 3, 3, 2, 0, 2, 1, 13, 9, 120, 6, 3, 6, 4, 0, 29, 9, 41, 6, 2, 3, 9, 0, 10, 10, 47, 15, 406, 7, 2, 7, 17, 9, 57, 21, 2, 13, 123, 5, 4, 0, 2, 1, 2, 6, 2, 0, 9, 9, 49, 4, 2, 1, 2, 4, 9, 9, 330, 3, 19306, 9, 87, 9, 39, 4, 60, 6, 26, 9, 1014, 0, 2, 54, 8, 3, 82, 0, 12, 1, 19628, 1, 4706, 45, 3, 22, 543, 4, 4, 5, 9, 7, 3, 6, 31, 3, 149, 2, 1418, 49, 513, 54, 5, 49, 9, 0, 15, 0, 23, 4, 2, 14, 1361, 6, 2, 16, 3, 6, 2, 1, 2, 4, 262, 6, 10, 9, 357, 0, 62, 13, 1495, 6, 110, 6, 6, 9, 4759, 9, 787719, 239];\n\n// This file was generated. Do not modify manually!\nvar astralIdentifierStartCodes = [0, 11, 2, 25, 2, 18, 2, 1, 2, 14, 3, 13, 35, 122, 70, 52, 268, 28, 4, 48, 48, 31, 14, 29, 6, 37, 11, 29, 3, 35, 5, 7, 2, 4, 43, 157, 19, 35, 5, 35, 5, 39, 9, 51, 13, 10, 2, 14, 2, 6, 2, 1, 2, 10, 2, 14, 2, 6, 2, 1, 68, 310, 10, 21, 11, 7, 25, 5, 2, 41, 2, 8, 70, 5, 3, 0, 2, 43, 2, 1, 4, 0, 3, 22, 11, 22, 10, 30, 66, 18, 2, 1, 11, 21, 11, 25, 71, 55, 7, 1, 65, 0, 16, 3, 2, 2, 2, 28, 43, 28, 4, 28, 36, 7, 2, 27, 28, 53, 11, 21, 11, 18, 14, 17, 111, 72, 56, 50, 14, 50, 14, 35, 349, 41, 7, 1, 79, 28, 11, 0, 9, 21, 43, 17, 47, 20, 28, 22, 13, 52, 58, 1, 3, 0, 14, 44, 33, 24, 27, 35, 30, 0, 3, 0, 9, 34, 4, 0, 13, 47, 15, 3, 22, 0, 2, 0, 36, 17, 2, 24, 85, 6, 2, 0, 2, 3, 2, 14, 2, 9, 8, 46, 39, 7, 3, 1, 3, 21, 2, 6, 2, 1, 2, 4, 4, 0, 19, 0, 13, 4, 159, 52, 19, 3, 21, 2, 31, 47, 21, 1, 2, 0, 185, 46, 42, 3, 37, 47, 21, 0, 60, 42, 14, 0, 72, 26, 38, 6, 186, 43, 117, 63, 32, 7, 3, 0, 3, 7, 2, 1, 2, 23, 16, 0, 2, 0, 95, 7, 3, 38, 17, 0, 2, 0, 29, 0, 11, 39, 8, 0, 22, 0, 12, 45, 20, 0, 19, 72, 264, 8, 2, 36, 18, 0, 50, 29, 113, 6, 2, 1, 2, 37, 22, 0, 26, 5, 2, 1, 2, 31, 15, 0, 328, 18, 190, 0, 80, 921, 103, 110, 18, 195, 2637, 96, 16, 1070, 4050, 582, 8634, 568, 8, 30, 18, 78, 18, 29, 19, 47, 17, 3, 32, 20, 6, 18, 689, 63, 129, 74, 6, 0, 67, 12, 65, 1, 2, 0, 29, 6135, 9, 1237, 43, 8, 8936, 3, 2, 6, 2, 1, 2, 290, 46, 2, 18, 3, 9, 395, 2309, 106, 6, 12, 4, 8, 8, 9, 5991, 84, 2, 70, 2, 1, 3, 0, 3, 1, 3, 3, 2, 11, 2, 0, 2, 6, 2, 64, 2, 3, 3, 7, 2, 6, 2, 27, 2, 3, 2, 4, 2, 0, 4, 6, 2, 339, 3, 24, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 30, 2, 24, 2, 7, 1845, 30, 482, 44, 11, 6, 17, 0, 322, 29, 19, 43, 1269, 6, 2, 3, 2, 1, 2, 14, 2, 196, 60, 67, 8, 0, 1205, 3, 2, 26, 2, 1, 2, 0, 3, 0, 2, 9, 2, 3, 2, 0, 2, 0, 7, 0, 5, 0, 2, 0, 2, 0, 2, 2, 2, 1, 2, 0, 3, 0, 2, 0, 2, 0, 2, 0, 2, 0, 2, 1, 2, 0, 3, 3, 2, 6, 2, 3, 2, 3, 2, 0, 2, 9, 2, 16, 6, 2, 2, 4, 2, 16, 4421, 42719, 33, 4152, 8, 221, 3, 5761, 15, 7472, 3104, 541, 1507, 4938];\n\n// This file was generated. Do not modify manually!\nvar nonASCIIidentifierChars = \"\\u200c\\u200d\\xb7\\u0300-\\u036f\\u0387\\u0483-\\u0487\\u0591-\\u05bd\\u05bf\\u05c1\\u05c2\\u05c4\\u05c5\\u05c7\\u0610-\\u061a\\u064b-\\u0669\\u0670\\u06d6-\\u06dc\\u06df-\\u06e4\\u06e7\\u06e8\\u06ea-\\u06ed\\u06f0-\\u06f9\\u0711\\u0730-\\u074a\\u07a6-\\u07b0\\u07c0-\\u07c9\\u07eb-\\u07f3\\u07fd\\u0816-\\u0819\\u081b-\\u0823\\u0825-\\u0827\\u0829-\\u082d\\u0859-\\u085b\\u0898-\\u089f\\u08ca-\\u08e1\\u08e3-\\u0903\\u093a-\\u093c\\u093e-\\u094f\\u0951-\\u0957\\u0962\\u0963\\u0966-\\u096f\\u0981-\\u0983\\u09bc\\u09be-\\u09c4\\u09c7\\u09c8\\u09cb-\\u09cd\\u09d7\\u09e2\\u09e3\\u09e6-\\u09ef\\u09fe\\u0a01-\\u0a03\\u0a3c\\u0a3e-\\u0a42\\u0a47\\u0a48\\u0a4b-\\u0a4d\\u0a51\\u0a66-\\u0a71\\u0a75\\u0a81-\\u0a83\\u0abc\\u0abe-\\u0ac5\\u0ac7-\\u0ac9\\u0acb-\\u0acd\\u0ae2\\u0ae3\\u0ae6-\\u0aef\\u0afa-\\u0aff\\u0b01-\\u0b03\\u0b3c\\u0b3e-\\u0b44\\u0b47\\u0b48\\u0b4b-\\u0b4d\\u0b55-\\u0b57\\u0b62\\u0b63\\u0b66-\\u0b6f\\u0b82\\u0bbe-\\u0bc2\\u0bc6-\\u0bc8\\u0bca-\\u0bcd\\u0bd7\\u0be6-\\u0bef\\u0c00-\\u0c04\\u0c3c\\u0c3e-\\u0c44\\u0c46-\\u0c48\\u0c4a-\\u0c4d\\u0c55\\u0c56\\u0c62\\u0c63\\u0c66-\\u0c6f\\u0c81-\\u0c83\\u0cbc\\u0cbe-\\u0cc4\\u0cc6-\\u0cc8\\u0cca-\\u0ccd\\u0cd5\\u0cd6\\u0ce2\\u0ce3\\u0ce6-\\u0cef\\u0d00-\\u0d03\\u0d3b\\u0d3c\\u0d3e-\\u0d44\\u0d46-\\u0d48\\u0d4a-\\u0d4d\\u0d57\\u0d62\\u0d63\\u0d66-\\u0d6f\\u0d81-\\u0d83\\u0dca\\u0dcf-\\u0dd4\\u0dd6\\u0dd8-\\u0ddf\\u0de6-\\u0def\\u0df2\\u0df3\\u0e31\\u0e34-\\u0e3a\\u0e47-\\u0e4e\\u0e50-\\u0e59\\u0eb1\\u0eb4-\\u0ebc\\u0ec8-\\u0ecd\\u0ed0-\\u0ed9\\u0f18\\u0f19\\u0f20-\\u0f29\\u0f35\\u0f37\\u0f39\\u0f3e\\u0f3f\\u0f71-\\u0f84\\u0f86\\u0f87\\u0f8d-\\u0f97\\u0f99-\\u0fbc\\u0fc6\\u102b-\\u103e\\u1040-\\u1049\\u1056-\\u1059\\u105e-\\u1060\\u1062-\\u1064\\u1067-\\u106d\\u1071-\\u1074\\u1082-\\u108d\\u108f-\\u109d\\u135d-\\u135f\\u1369-\\u1371\\u1712-\\u1715\\u1732-\\u1734\\u1752\\u1753\\u1772\\u1773\\u17b4-\\u17d3\\u17dd\\u17e0-\\u17e9\\u180b-\\u180d\\u180f-\\u1819\\u18a9\\u1920-\\u192b\\u1930-\\u193b\\u1946-\\u194f\\u19d0-\\u19da\\u1a17-\\u1a1b\\u1a55-\\u1a5e\\u1a60-\\u1a7c\\u1a7f-\\u1a89\\u1a90-\\u1a99\\u1ab0-\\u1abd\\u1abf-\\u1ace\\u1b00-\\u1b04\\u1b34-\\u1b44\\u1b50-\\u1b59\\u1b6b-\\u1b73\\u1b80-\\u1b82\\u1ba1-\\u1bad\\u1bb0-\\u1bb9\\u1be6-\\u1bf3\\u1c24-\\u1c37\\u1c40-\\u1c49\\u1c50-\\u1c59\\u1cd0-\\u1cd2\\u1cd4-\\u1ce8\\u1ced\\u1cf4\\u1cf7-\\u1cf9\\u1dc0-\\u1dff\\u203f\\u2040\\u2054\\u20d0-\\u20dc\\u20e1\\u20e5-\\u20f0\\u2cef-\\u2cf1\\u2d7f\\u2de0-\\u2dff\\u302a-\\u302f\\u3099\\u309a\\ua620-\\ua629\\ua66f\\ua674-\\ua67d\\ua69e\\ua69f\\ua6f0\\ua6f1\\ua802\\ua806\\ua80b\\ua823-\\ua827\\ua82c\\ua880\\ua881\\ua8b4-\\ua8c5\\ua8d0-\\ua8d9\\ua8e0-\\ua8f1\\ua8ff-\\ua909\\ua926-\\ua92d\\ua947-\\ua953\\ua980-\\ua983\\ua9b3-\\ua9c0\\ua9d0-\\ua9d9\\ua9e5\\ua9f0-\\ua9f9\\uaa29-\\uaa36\\uaa43\\uaa4c\\uaa4d\\uaa50-\\uaa59\\uaa7b-\\uaa7d\\uaab0\\uaab2-\\uaab4\\uaab7\\uaab8\\uaabe\\uaabf\\uaac1\\uaaeb-\\uaaef\\uaaf5\\uaaf6\\uabe3-\\uabea\\uabec\\uabed\\uabf0-\\uabf9\\ufb1e\\ufe00-\\ufe0f\\ufe20-\\ufe2f\\ufe33\\ufe34\\ufe4d-\\ufe4f\\uff10-\\uff19\\uff3f\";\n\n// This file was generated. Do not modify manually!\nvar nonASCIIidentifierStartChars = \"\\xaa\\xb5\\xba\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02c1\\u02c6-\\u02d1\\u02e0-\\u02e4\\u02ec\\u02ee\\u0370-\\u0374\\u0376\\u0377\\u037a-\\u037d\\u037f\\u0386\\u0388-\\u038a\\u038c\\u038e-\\u03a1\\u03a3-\\u03f5\\u03f7-\\u0481\\u048a-\\u052f\\u0531-\\u0556\\u0559\\u0560-\\u0588\\u05d0-\\u05ea\\u05ef-\\u05f2\\u0620-\\u064a\\u066e\\u066f\\u0671-\\u06d3\\u06d5\\u06e5\\u06e6\\u06ee\\u06ef\\u06fa-\\u06fc\\u06ff\\u0710\\u0712-\\u072f\\u074d-\\u07a5\\u07b1\\u07ca-\\u07ea\\u07f4\\u07f5\\u07fa\\u0800-\\u0815\\u081a\\u0824\\u0828\\u0840-\\u0858\\u0860-\\u086a\\u0870-\\u0887\\u0889-\\u088e\\u08a0-\\u08c9\\u0904-\\u0939\\u093d\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098c\\u098f\\u0990\\u0993-\\u09a8\\u09aa-\\u09b0\\u09b2\\u09b6-\\u09b9\\u09bd\\u09ce\\u09dc\\u09dd\\u09df-\\u09e1\\u09f0\\u09f1\\u09fc\\u0a05-\\u0a0a\\u0a0f\\u0a10\\u0a13-\\u0a28\\u0a2a-\\u0a30\\u0a32\\u0a33\\u0a35\\u0a36\\u0a38\\u0a39\\u0a59-\\u0a5c\\u0a5e\\u0a72-\\u0a74\\u0a85-\\u0a8d\\u0a8f-\\u0a91\\u0a93-\\u0aa8\\u0aaa-\\u0ab0\\u0ab2\\u0ab3\\u0ab5-\\u0ab9\\u0abd\\u0ad0\\u0ae0\\u0ae1\\u0af9\\u0b05-\\u0b0c\\u0b0f\\u0b10\\u0b13-\\u0b28\\u0b2a-\\u0b30\\u0b32\\u0b33\\u0b35-\\u0b39\\u0b3d\\u0b5c\\u0b5d\\u0b5f-\\u0b61\\u0b71\\u0b83\\u0b85-\\u0b8a\\u0b8e-\\u0b90\\u0b92-\\u0b95\\u0b99\\u0b9a\\u0b9c\\u0b9e\\u0b9f\\u0ba3\\u0ba4\\u0ba8-\\u0baa\\u0bae-\\u0bb9\\u0bd0\\u0c05-\\u0c0c\\u0c0e-\\u0c10\\u0c12-\\u0c28\\u0c2a-\\u0c39\\u0c3d\\u0c58-\\u0c5a\\u0c5d\\u0c60\\u0c61\\u0c80\\u0c85-\\u0c8c\\u0c8e-\\u0c90\\u0c92-\\u0ca8\\u0caa-\\u0cb3\\u0cb5-\\u0cb9\\u0cbd\\u0cdd\\u0cde\\u0ce0\\u0ce1\\u0cf1\\u0cf2\\u0d04-\\u0d0c\\u0d0e-\\u0d10\\u0d12-\\u0d3a\\u0d3d\\u0d4e\\u0d54-\\u0d56\\u0d5f-\\u0d61\\u0d7a-\\u0d7f\\u0d85-\\u0d96\\u0d9a-\\u0db1\\u0db3-\\u0dbb\\u0dbd\\u0dc0-\\u0dc6\\u0e01-\\u0e30\\u0e32\\u0e33\\u0e40-\\u0e46\\u0e81\\u0e82\\u0e84\\u0e86-\\u0e8a\\u0e8c-\\u0ea3\\u0ea5\\u0ea7-\\u0eb0\\u0eb2\\u0eb3\\u0ebd\\u0ec0-\\u0ec4\\u0ec6\\u0edc-\\u0edf\\u0f00\\u0f40-\\u0f47\\u0f49-\\u0f6c\\u0f88-\\u0f8c\\u1000-\\u102a\\u103f\\u1050-\\u1055\\u105a-\\u105d\\u1061\\u1065\\u1066\\u106e-\\u1070\\u1075-\\u1081\\u108e\\u10a0-\\u10c5\\u10c7\\u10cd\\u10d0-\\u10fa\\u10fc-\\u1248\\u124a-\\u124d\\u1250-\\u1256\\u1258\\u125a-\\u125d\\u1260-\\u1288\\u128a-\\u128d\\u1290-\\u12b0\\u12b2-\\u12b5\\u12b8-\\u12be\\u12c0\\u12c2-\\u12c5\\u12c8-\\u12d6\\u12d8-\\u1310\\u1312-\\u1315\\u1318-\\u135a\\u1380-\\u138f\\u13a0-\\u13f5\\u13f8-\\u13fd\\u1401-\\u166c\\u166f-\\u167f\\u1681-\\u169a\\u16a0-\\u16ea\\u16ee-\\u16f8\\u1700-\\u1711\\u171f-\\u1731\\u1740-\\u1751\\u1760-\\u176c\\u176e-\\u1770\\u1780-\\u17b3\\u17d7\\u17dc\\u1820-\\u1878\\u1880-\\u18a8\\u18aa\\u18b0-\\u18f5\\u1900-\\u191e\\u1950-\\u196d\\u1970-\\u1974\\u1980-\\u19ab\\u19b0-\\u19c9\\u1a00-\\u1a16\\u1a20-\\u1a54\\u1aa7\\u1b05-\\u1b33\\u1b45-\\u1b4c\\u1b83-\\u1ba0\\u1bae\\u1baf\\u1bba-\\u1be5\\u1c00-\\u1c23\\u1c4d-\\u1c4f\\u1c5a-\\u1c7d\\u1c80-\\u1c88\\u1c90-\\u1cba\\u1cbd-\\u1cbf\\u1ce9-\\u1cec\\u1cee-\\u1cf3\\u1cf5\\u1cf6\\u1cfa\\u1d00-\\u1dbf\\u1e00-\\u1f15\\u1f18-\\u1f1d\\u1f20-\\u1f45\\u1f48-\\u1f4d\\u1f50-\\u1f57\\u1f59\\u1f5b\\u1f5d\\u1f5f-\\u1f7d\\u1f80-\\u1fb4\\u1fb6-\\u1fbc\\u1fbe\\u1fc2-\\u1fc4\\u1fc6-\\u1fcc\\u1fd0-\\u1fd3\\u1fd6-\\u1fdb\\u1fe0-\\u1fec\\u1ff2-\\u1ff4\\u1ff6-\\u1ffc\\u2071\\u207f\\u2090-\\u209c\\u2102\\u2107\\u210a-\\u2113\\u2115\\u2118-\\u211d\\u2124\\u2126\\u2128\\u212a-\\u2139\\u213c-\\u213f\\u2145-\\u2149\\u214e\\u2160-\\u2188\\u2c00-\\u2ce4\\u2ceb-\\u2cee\\u2cf2\\u2cf3\\u2d00-\\u2d25\\u2d27\\u2d2d\\u2d30-\\u2d67\\u2d6f\\u2d80-\\u2d96\\u2da0-\\u2da6\\u2da8-\\u2dae\\u2db0-\\u2db6\\u2db8-\\u2dbe\\u2dc0-\\u2dc6\\u2dc8-\\u2dce\\u2dd0-\\u2dd6\\u2dd8-\\u2dde\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303c\\u3041-\\u3096\\u309b-\\u309f\\u30a1-\\u30fa\\u30fc-\\u30ff\\u3105-\\u312f\\u3131-\\u318e\\u31a0-\\u31bf\\u31f0-\\u31ff\\u3400-\\u4dbf\\u4e00-\\ua48c\\ua4d0-\\ua4fd\\ua500-\\ua60c\\ua610-\\ua61f\\ua62a\\ua62b\\ua640-\\ua66e\\ua67f-\\ua69d\\ua6a0-\\ua6ef\\ua717-\\ua71f\\ua722-\\ua788\\ua78b-\\ua7ca\\ua7d0\\ua7d1\\ua7d3\\ua7d5-\\ua7d9\\ua7f2-\\ua801\\ua803-\\ua805\\ua807-\\ua80a\\ua80c-\\ua822\\ua840-\\ua873\\ua882-\\ua8b3\\ua8f2-\\ua8f7\\ua8fb\\ua8fd\\ua8fe\\ua90a-\\ua925\\ua930-\\ua946\\ua960-\\ua97c\\ua984-\\ua9b2\\ua9cf\\ua9e0-\\ua9e4\\ua9e6-\\ua9ef\\ua9fa-\\ua9fe\\uaa00-\\uaa28\\uaa40-\\uaa42\\uaa44-\\uaa4b\\uaa60-\\uaa76\\uaa7a\\uaa7e-\\uaaaf\\uaab1\\uaab5\\uaab6\\uaab9-\\uaabd\\uaac0\\uaac2\\uaadb-\\uaadd\\uaae0-\\uaaea\\uaaf2-\\uaaf4\\uab01-\\uab06\\uab09-\\uab0e\\uab11-\\uab16\\uab20-\\uab26\\uab28-\\uab2e\\uab30-\\uab5a\\uab5c-\\uab69\\uab70-\\uabe2\\uac00-\\ud7a3\\ud7b0-\\ud7c6\\ud7cb-\\ud7fb\\uf900-\\ufa6d\\ufa70-\\ufad9\\ufb00-\\ufb06\\ufb13-\\ufb17\\ufb1d\\ufb1f-\\ufb28\\ufb2a-\\ufb36\\ufb38-\\ufb3c\\ufb3e\\ufb40\\ufb41\\ufb43\\ufb44\\ufb46-\\ufbb1\\ufbd3-\\ufd3d\\ufd50-\\ufd8f\\ufd92-\\ufdc7\\ufdf0-\\ufdfb\\ufe70-\\ufe74\\ufe76-\\ufefc\\uff21-\\uff3a\\uff41-\\uff5a\\uff66-\\uffbe\\uffc2-\\uffc7\\uffca-\\uffcf\\uffd2-\\uffd7\\uffda-\\uffdc\";\n\n// These are a run-length and offset encoded representation of the\n\n// Reserved word lists for various dialects of the language\n\nvar reservedWords = {\n  3: \"abstract boolean byte char class double enum export extends final float goto implements import int interface long native package private protected public short static super synchronized throws transient volatile\",\n  5: \"class enum extends super const export import\",\n  6: \"enum\",\n  strict: \"implements interface let package private protected public static yield\",\n  strictBind: \"eval arguments\"\n};\n\n// And the keywords\n\nvar ecma5AndLessKeywords = \"break case catch continue debugger default do else finally for function if return switch throw try var while with null true false instanceof typeof void delete new in this\";\n\nvar keywords$1 = {\n  5: ecma5AndLessKeywords,\n  \"5module\": ecma5AndLessKeywords + \" export import\",\n  6: ecma5AndLessKeywords + \" const class extends export import super\"\n};\n\nvar keywordRelationalOperator = /^in(stanceof)?$/;\n\n// ## Character categories\n\nvar nonASCIIidentifierStart = new RegExp(\"[\" + nonASCIIidentifierStartChars + \"]\");\nvar nonASCIIidentifier = new RegExp(\"[\" + nonASCIIidentifierStartChars + nonASCIIidentifierChars + \"]\");\n\n// This has a complexity linear to the value of the code. The\n// assumption is that looking up astral identifier characters is\n// rare.\nfunction isInAstralSet(code, set) {\n  var pos = 0x10000;\n  for (var i = 0; i < set.length; i += 2) {\n    pos += set[i];\n    if (pos > code) { return false }\n    pos += set[i + 1];\n    if (pos >= code) { return true }\n  }\n}\n\n// Test whether a given character code starts an identifier.\n\nfunction isIdentifierStart(code, astral) {\n  if (code < 65) { return code === 36 }\n  if (code < 91) { return true }\n  if (code < 97) { return code === 95 }\n  if (code < 123) { return true }\n  if (code <= 0xffff) { return code >= 0xaa && nonASCIIidentifierStart.test(String.fromCharCode(code)) }\n  if (astral === false) { return false }\n  return isInAstralSet(code, astralIdentifierStartCodes)\n}\n\n// Test whether a given character is part of an identifier.\n\nfunction isIdentifierChar(code, astral) {\n  if (code < 48) { return code === 36 }\n  if (code < 58) { return true }\n  if (code < 65) { return false }\n  if (code < 91) { return true }\n  if (code < 97) { return code === 95 }\n  if (code < 123) { return true }\n  if (code <= 0xffff) { return code >= 0xaa && nonASCIIidentifier.test(String.fromCharCode(code)) }\n  if (astral === false) { return false }\n  return isInAstralSet(code, astralIdentifierStartCodes) || isInAstralSet(code, astralIdentifierCodes)\n}\n\n// ## Token types\n\n// The assignment of fine-grained, information-carrying type objects\n// allows the tokenizer to store the information it has about a\n// token in a way that is very cheap for the parser to look up.\n\n// All token type variables start with an underscore, to make them\n// easy to recognize.\n\n// The `beforeExpr` property is used to disambiguate between regular\n// expressions and divisions. It is set on all token types that can\n// be followed by an expression (thus, a slash after them would be a\n// regular expression).\n//\n// The `startsExpr` property is used to check if the token ends a\n// `yield` expression. It is set on all token types that either can\n// directly start an expression (like a quotation mark) or can\n// continue an expression (like the body of a string).\n//\n// `isLoop` marks a keyword as starting a loop, which is important\n// to know when parsing a label, in order to allow or disallow\n// continue jumps to that label.\n\nvar TokenType = function TokenType(label, conf) {\n  if ( conf === void 0 ) conf = {};\n\n  this.label = label;\n  this.keyword = conf.keyword;\n  this.beforeExpr = !!conf.beforeExpr;\n  this.startsExpr = !!conf.startsExpr;\n  this.isLoop = !!conf.isLoop;\n  this.isAssign = !!conf.isAssign;\n  this.prefix = !!conf.prefix;\n  this.postfix = !!conf.postfix;\n  this.binop = conf.binop || null;\n  this.updateContext = null;\n};\n\nfunction binop(name, prec) {\n  return new TokenType(name, {beforeExpr: true, binop: prec})\n}\nvar beforeExpr = {beforeExpr: true}, startsExpr = {startsExpr: true};\n\n// Map keyword names to token types.\n\nvar keywords = {};\n\n// Succinct definitions of keyword token types\nfunction kw(name, options) {\n  if ( options === void 0 ) options = {};\n\n  options.keyword = name;\n  return keywords[name] = new TokenType(name, options)\n}\n\nvar types$1 = {\n  num: new TokenType(\"num\", startsExpr),\n  regexp: new TokenType(\"regexp\", startsExpr),\n  string: new TokenType(\"string\", startsExpr),\n  name: new TokenType(\"name\", startsExpr),\n  privateId: new TokenType(\"privateId\", startsExpr),\n  eof: new TokenType(\"eof\"),\n\n  // Punctuation token types.\n  bracketL: new TokenType(\"[\", {beforeExpr: true, startsExpr: true}),\n  bracketR: new TokenType(\"]\"),\n  braceL: new TokenType(\"{\", {beforeExpr: true, startsExpr: true}),\n  braceR: new TokenType(\"}\"),\n  parenL: new TokenType(\"(\", {beforeExpr: true, startsExpr: true}),\n  parenR: new TokenType(\")\"),\n  comma: new TokenType(\",\", beforeExpr),\n  semi: new TokenType(\";\", beforeExpr),\n  colon: new TokenType(\":\", beforeExpr),\n  dot: new TokenType(\".\"),\n  question: new TokenType(\"?\", beforeExpr),\n  questionDot: new TokenType(\"?.\"),\n  arrow: new TokenType(\"=>\", beforeExpr),\n  template: new TokenType(\"template\"),\n  invalidTemplate: new TokenType(\"invalidTemplate\"),\n  ellipsis: new TokenType(\"...\", beforeExpr),\n  backQuote: new TokenType(\"`\", startsExpr),\n  dollarBraceL: new TokenType(\"${\", {beforeExpr: true, startsExpr: true}),\n\n  // Operators. These carry several kinds of properties to help the\n  // parser use them properly (the presence of these properties is\n  // what categorizes them as operators).\n  //\n  // `binop`, when present, specifies that this operator is a binary\n  // operator, and will refer to its precedence.\n  //\n  // `prefix` and `postfix` mark the operator as a prefix or postfix\n  // unary operator.\n  //\n  // `isAssign` marks all of `=`, `+=`, `-=` etcetera, which act as\n  // binary operators with a very low precedence, that should result\n  // in AssignmentExpression nodes.\n\n  eq: new TokenType(\"=\", {beforeExpr: true, isAssign: true}),\n  assign: new TokenType(\"_=\", {beforeExpr: true, isAssign: true}),\n  incDec: new TokenType(\"++/--\", {prefix: true, postfix: true, startsExpr: true}),\n  prefix: new TokenType(\"!/~\", {beforeExpr: true, prefix: true, startsExpr: true}),\n  logicalOR: binop(\"||\", 1),\n  logicalAND: binop(\"&&\", 2),\n  bitwiseOR: binop(\"|\", 3),\n  bitwiseXOR: binop(\"^\", 4),\n  bitwiseAND: binop(\"&\", 5),\n  equality: binop(\"==/!=/===/!==\", 6),\n  relational: binop(\"</>/<=/>=\", 7),\n  bitShift: binop(\"<</>>/>>>\", 8),\n  plusMin: new TokenType(\"+/-\", {beforeExpr: true, binop: 9, prefix: true, startsExpr: true}),\n  modulo: binop(\"%\", 10),\n  star: binop(\"*\", 10),\n  slash: binop(\"/\", 10),\n  starstar: new TokenType(\"**\", {beforeExpr: true}),\n  coalesce: binop(\"??\", 1),\n\n  // Keyword token types.\n  _break: kw(\"break\"),\n  _case: kw(\"case\", beforeExpr),\n  _catch: kw(\"catch\"),\n  _continue: kw(\"continue\"),\n  _debugger: kw(\"debugger\"),\n  _default: kw(\"default\", beforeExpr),\n  _do: kw(\"do\", {isLoop: true, beforeExpr: true}),\n  _else: kw(\"else\", beforeExpr),\n  _finally: kw(\"finally\"),\n  _for: kw(\"for\", {isLoop: true}),\n  _function: kw(\"function\", startsExpr),\n  _if: kw(\"if\"),\n  _return: kw(\"return\", beforeExpr),\n  _switch: kw(\"switch\"),\n  _throw: kw(\"throw\", beforeExpr),\n  _try: kw(\"try\"),\n  _var: kw(\"var\"),\n  _const: kw(\"const\"),\n  _while: kw(\"while\", {isLoop: true}),\n  _with: kw(\"with\"),\n  _new: kw(\"new\", {beforeExpr: true, startsExpr: true}),\n  _this: kw(\"this\", startsExpr),\n  _super: kw(\"super\", startsExpr),\n  _class: kw(\"class\", startsExpr),\n  _extends: kw(\"extends\", beforeExpr),\n  _export: kw(\"export\"),\n  _import: kw(\"import\", startsExpr),\n  _null: kw(\"null\", startsExpr),\n  _true: kw(\"true\", startsExpr),\n  _false: kw(\"false\", startsExpr),\n  _in: kw(\"in\", {beforeExpr: true, binop: 7}),\n  _instanceof: kw(\"instanceof\", {beforeExpr: true, binop: 7}),\n  _typeof: kw(\"typeof\", {beforeExpr: true, prefix: true, startsExpr: true}),\n  _void: kw(\"void\", {beforeExpr: true, prefix: true, startsExpr: true}),\n  _delete: kw(\"delete\", {beforeExpr: true, prefix: true, startsExpr: true})\n};\n\n// Matches a whole line break (where CRLF is considered a single\n// line break). Used to count lines.\n\nvar lineBreak = /\\r\\n?|\\n|\\u2028|\\u2029/;\nvar lineBreakG = new RegExp(lineBreak.source, \"g\");\n\nfunction isNewLine(code) {\n  return code === 10 || code === 13 || code === 0x2028 || code === 0x2029\n}\n\nfunction nextLineBreak(code, from, end) {\n  if ( end === void 0 ) end = code.length;\n\n  for (var i = from; i < end; i++) {\n    var next = code.charCodeAt(i);\n    if (isNewLine(next))\n      { return i < end - 1 && next === 13 && code.charCodeAt(i + 1) === 10 ? i + 2 : i + 1 }\n  }\n  return -1\n}\n\nvar nonASCIIwhitespace = /[\\u1680\\u2000-\\u200a\\u202f\\u205f\\u3000\\ufeff]/;\n\nvar skipWhiteSpace = /(?:\\s|\\/\\/.*|\\/\\*[^]*?\\*\\/)*/g;\n\nvar ref = Object.prototype;\nvar hasOwnProperty$1 = ref.hasOwnProperty;\nvar toString$1 = ref.toString;\n\nvar hasOwn = Object.hasOwn || (function (obj, propName) { return (\n  hasOwnProperty$1.call(obj, propName)\n); });\n\nvar isArray = Array.isArray || (function (obj) { return (\n  toString$1.call(obj) === \"[object Array]\"\n); });\n\nfunction wordsRegexp(words) {\n  return new RegExp(\"^(?:\" + words.replace(/ /g, \"|\") + \")$\")\n}\n\nfunction codePointToString(code) {\n  // UTF-16 Decoding\n  if (code <= 0xFFFF) { return String.fromCharCode(code) }\n  code -= 0x10000;\n  return String.fromCharCode((code >> 10) + 0xD800, (code & 1023) + 0xDC00)\n}\n\nvar loneSurrogate = /(?:[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF])/;\n\n// These are used when `options.locations` is on, for the\n// `startLoc` and `endLoc` properties.\n\nvar Position = function Position(line, col) {\n  this.line = line;\n  this.column = col;\n};\n\nPosition.prototype.offset = function offset (n) {\n  return new Position(this.line, this.column + n)\n};\n\nvar SourceLocation = function SourceLocation(p, start, end) {\n  this.start = start;\n  this.end = end;\n  if (p.sourceFile !== null) { this.source = p.sourceFile; }\n};\n\n// The `getLineInfo` function is mostly useful when the\n// `locations` option is off (for performance reasons) and you\n// want to find the line/column position for a given character\n// offset. `input` should be the code string that the offset refers\n// into.\n\nfunction getLineInfo(input, offset) {\n  for (var line = 1, cur = 0;;) {\n    var nextBreak = nextLineBreak(input, cur, offset);\n    if (nextBreak < 0) { return new Position(line, offset - cur) }\n    ++line;\n    cur = nextBreak;\n  }\n}\n\n// A second argument must be given to configure the parser process.\n// These options are recognized (only `ecmaVersion` is required):\n\nvar defaultOptions = {\n  // `ecmaVersion` indicates the ECMAScript version to parse. Must be\n  // either 3, 5, 6 (or 2015), 7 (2016), 8 (2017), 9 (2018), 10\n  // (2019), 11 (2020), 12 (2021), 13 (2022), 14 (2023), or `\"latest\"`\n  // (the latest version the library supports). This influences\n  // support for strict mode, the set of reserved words, and support\n  // for new syntax features.\n  ecmaVersion: null,\n  // `sourceType` indicates the mode the code should be parsed in.\n  // Can be either `\"script\"` or `\"module\"`. This influences global\n  // strict mode and parsing of `import` and `export` declarations.\n  sourceType: \"script\",\n  // `onInsertedSemicolon` can be a callback that will be called\n  // when a semicolon is automatically inserted. It will be passed\n  // the position of the comma as an offset, and if `locations` is\n  // enabled, it is given the location as a `{line, column}` object\n  // as second argument.\n  onInsertedSemicolon: null,\n  // `onTrailingComma` is similar to `onInsertedSemicolon`, but for\n  // trailing commas.\n  onTrailingComma: null,\n  // By default, reserved words are only enforced if ecmaVersion >= 5.\n  // Set `allowReserved` to a boolean value to explicitly turn this on\n  // an off. When this option has the value \"never\", reserved words\n  // and keywords can also not be used as property names.\n  allowReserved: null,\n  // When enabled, a return at the top level is not considered an\n  // error.\n  allowReturnOutsideFunction: false,\n  // When enabled, import/export statements are not constrained to\n  // appearing at the top of the program, and an import.meta expression\n  // in a script isn't considered an error.\n  allowImportExportEverywhere: false,\n  // By default, await identifiers are allowed to appear at the top-level scope only if ecmaVersion >= 2022.\n  // When enabled, await identifiers are allowed to appear at the top-level scope,\n  // but they are still not allowed in non-async functions.\n  allowAwaitOutsideFunction: null,\n  // When enabled, super identifiers are not constrained to\n  // appearing in methods and do not raise an error when they appear elsewhere.\n  allowSuperOutsideMethod: null,\n  // When enabled, hashbang directive in the beginning of file is\n  // allowed and treated as a line comment. Enabled by default when\n  // `ecmaVersion` >= 2023.\n  allowHashBang: false,\n  // When `locations` is on, `loc` properties holding objects with\n  // `start` and `end` properties in `{line, column}` form (with\n  // line being 1-based and column 0-based) will be attached to the\n  // nodes.\n  locations: false,\n  // A function can be passed as `onToken` option, which will\n  // cause Acorn to call that function with object in the same\n  // format as tokens returned from `tokenizer().getToken()`. Note\n  // that you are not allowed to call the parser from the\n  // callback\u2014that will corrupt its internal state.\n  onToken: null,\n  // A function can be passed as `onComment` option, which will\n  // cause Acorn to call that function with `(block, text, start,\n  // end)` parameters whenever a comment is skipped. `block` is a\n  // boolean indicating whether this is a block (`/* */`) comment,\n  // `text` is the content of the comment, and `start` and `end` are\n  // character offsets that denote the start and end of the comment.\n  // When the `locations` option is on, two more parameters are\n  // passed, the full `{line, column}` locations of the start and\n  // end of the comments. Note that you are not allowed to call the\n  // parser from the callback\u2014that will corrupt its internal state.\n  onComment: null,\n  // Nodes have their start and end characters offsets recorded in\n  // `start` and `end` properties (directly on the node, rather than\n  // the `loc` object, which holds line/column data. To also add a\n  // [semi-standardized][range] `range` property holding a `[start,\n  // end]` array with the same numbers, set the `ranges` option to\n  // `true`.\n  //\n  // [range]: https://bugzilla.mozilla.org/show_bug.cgi?id=745678\n  ranges: false,\n  // It is possible to parse multiple files into a single AST by\n  // passing the tree produced by parsing the first file as\n  // `program` option in subsequent parses. This will add the\n  // toplevel forms of the parsed file to the `Program` (top) node\n  // of an existing parse tree.\n  program: null,\n  // When `locations` is on, you can pass this to record the source\n  // file in every node's `loc` object.\n  sourceFile: null,\n  // This value, if given, is stored in every node, whether\n  // `locations` is on or off.\n  directSourceFile: null,\n  // When enabled, parenthesized expressions are represented by\n  // (non-standard) ParenthesizedExpression nodes\n  preserveParens: false\n};\n\n// Interpret and default an options object\n\nvar warnedAboutEcmaVersion = false;\n\nfunction getOptions(opts) {\n  var options = {};\n\n  for (var opt in defaultOptions)\n    { options[opt] = opts && hasOwn(opts, opt) ? opts[opt] : defaultOptions[opt]; }\n\n  if (options.ecmaVersion === \"latest\") {\n    options.ecmaVersion = 1e8;\n  } else if (options.ecmaVersion == null) {\n    if (!warnedAboutEcmaVersion && typeof console === \"object\" && console.warn) {\n      warnedAboutEcmaVersion = true;\n      console.warn(\"Since Acorn 8.0.0, options.ecmaVersion is required.\\nDefaulting to 2020, but this will stop working in the future.\");\n    }\n    options.ecmaVersion = 11;\n  } else if (options.ecmaVersion >= 2015) {\n    options.ecmaVersion -= 2009;\n  }\n\n  if (options.allowReserved == null)\n    { options.allowReserved = options.ecmaVersion < 5; }\n\n  if (opts.allowHashBang == null)\n    { options.allowHashBang = options.ecmaVersion >= 14; }\n\n  if (isArray(options.onToken)) {\n    var tokens = options.onToken;\n    options.onToken = function (token) { return tokens.push(token); };\n  }\n  if (isArray(options.onComment))\n    { options.onComment = pushComment(options, options.onComment); }\n\n  return options\n}\n\nfunction pushComment(options, array) {\n  return function(block, text, start, end, startLoc, endLoc) {\n    var comment = {\n      type: block ? \"Block\" : \"Line\",\n      value: text,\n      start: start,\n      end: end\n    };\n    if (options.locations)\n      { comment.loc = new SourceLocation(this, startLoc, endLoc); }\n    if (options.ranges)\n      { comment.range = [start, end]; }\n    array.push(comment);\n  }\n}\n\n// Each scope gets a bitset that may contain these flags\nvar\n    SCOPE_TOP = 1,\n    SCOPE_FUNCTION = 2,\n    SCOPE_ASYNC = 4,\n    SCOPE_GENERATOR = 8,\n    SCOPE_ARROW = 16,\n    SCOPE_SIMPLE_CATCH = 32,\n    SCOPE_SUPER = 64,\n    SCOPE_DIRECT_SUPER = 128,\n    SCOPE_CLASS_STATIC_BLOCK = 256,\n    SCOPE_VAR = SCOPE_TOP | SCOPE_FUNCTION | SCOPE_CLASS_STATIC_BLOCK;\n\nfunction functionFlags(async, generator) {\n  return SCOPE_FUNCTION | (async ? SCOPE_ASYNC : 0) | (generator ? SCOPE_GENERATOR : 0)\n}\n\n// Used in checkLVal* and declareName to determine the type of a binding\nvar\n    BIND_NONE = 0, // Not a binding\n    BIND_VAR = 1, // Var-style binding\n    BIND_LEXICAL = 2, // Let- or const-style binding\n    BIND_FUNCTION = 3, // Function declaration\n    BIND_SIMPLE_CATCH = 4, // Simple (identifier pattern) catch binding\n    BIND_OUTSIDE = 5; // Special case for function names as bound inside the function\n\nvar Parser = function Parser(options, input, startPos) {\n  this.options = options = getOptions(options);\n  this.sourceFile = options.sourceFile;\n  this.keywords = wordsRegexp(keywords$1[options.ecmaVersion >= 6 ? 6 : options.sourceType === \"module\" ? \"5module\" : 5]);\n  var reserved = \"\";\n  if (options.allowReserved !== true) {\n    reserved = reservedWords[options.ecmaVersion >= 6 ? 6 : options.ecmaVersion === 5 ? 5 : 3];\n    if (options.sourceType === \"module\") { reserved += \" await\"; }\n  }\n  this.reservedWords = wordsRegexp(reserved);\n  var reservedStrict = (reserved ? reserved + \" \" : \"\") + reservedWords.strict;\n  this.reservedWordsStrict = wordsRegexp(reservedStrict);\n  this.reservedWordsStrictBind = wordsRegexp(reservedStrict + \" \" + reservedWords.strictBind);\n  this.input = String(input);\n\n  // Used to signal to callers of `readWord1` whether the word\n  // contained any escape sequences. This is needed because words with\n  // escape sequences must not be interpreted as keywords.\n  this.containsEsc = false;\n\n  // Set up token state\n\n  // The current position of the tokenizer in the input.\n  if (startPos) {\n    this.pos = startPos;\n    this.lineStart = this.input.lastIndexOf(\"\\n\", startPos - 1) + 1;\n    this.curLine = this.input.slice(0, this.lineStart).split(lineBreak).length;\n  } else {\n    this.pos = this.lineStart = 0;\n    this.curLine = 1;\n  }\n\n  // Properties of the current token:\n  // Its type\n  this.type = types$1.eof;\n  // For tokens that include more information than their type, the value\n  this.value = null;\n  // Its start and end offset\n  this.start = this.end = this.pos;\n  // And, if locations are used, the {line, column} object\n  // corresponding to those offsets\n  this.startLoc = this.endLoc = this.curPosition();\n\n  // Position information for the previous token\n  this.lastTokEndLoc = this.lastTokStartLoc = null;\n  this.lastTokStart = this.lastTokEnd = this.pos;\n\n  // The context stack is used to superficially track syntactic\n  // context to predict whether a regular expression is allowed in a\n  // given position.\n  this.context = this.initialContext();\n  this.exprAllowed = true;\n\n  // Figure out if it's a module code.\n  this.inModule = options.sourceType === \"module\";\n  this.strict = this.inModule || this.strictDirective(this.pos);\n\n  // Used to signify the start of a potential arrow function\n  this.potentialArrowAt = -1;\n  this.potentialArrowInForAwait = false;\n\n  // Positions to delayed-check that yield/await does not exist in default parameters.\n  this.yieldPos = this.awaitPos = this.awaitIdentPos = 0;\n  // Labels in scope.\n  this.labels = [];\n  // Thus-far undefined exports.\n  this.undefinedExports = Object.create(null);\n\n  // If enabled, skip leading hashbang line.\n  if (this.pos === 0 && options.allowHashBang && this.input.slice(0, 2) === \"#!\")\n    { this.skipLineComment(2); }\n\n  // Scope tracking for duplicate variable names (see scope.js)\n  this.scopeStack = [];\n  this.enterScope(SCOPE_TOP);\n\n  // For RegExp validation\n  this.regexpState = null;\n\n  // The stack of private names.\n  // Each element has two properties: 'declared' and 'used'.\n  // When it exited from the outermost class definition, all used private names must be declared.\n  this.privateNameStack = [];\n};\n\nvar prototypeAccessors = { inFunction: { configurable: true },inGenerator: { configurable: true },inAsync: { configurable: true },canAwait: { configurable: true },allowSuper: { configurable: true },allowDirectSuper: { configurable: true },treatFunctionsAsVar: { configurable: true },allowNewDotTarget: { configurable: true },inClassStaticBlock: { configurable: true } };\n\nParser.prototype.parse = function parse () {\n  var node = this.options.program || this.startNode();\n  this.nextToken();\n  return this.parseTopLevel(node)\n};\n\nprototypeAccessors.inFunction.get = function () { return (this.currentVarScope().flags & SCOPE_FUNCTION) > 0 };\n\nprototypeAccessors.inGenerator.get = function () { return (this.currentVarScope().flags & SCOPE_GENERATOR) > 0 && !this.currentVarScope().inClassFieldInit };\n\nprototypeAccessors.inAsync.get = function () { return (this.currentVarScope().flags & SCOPE_ASYNC) > 0 && !this.currentVarScope().inClassFieldInit };\n\nprototypeAccessors.canAwait.get = function () {\n  for (var i = this.scopeStack.length - 1; i >= 0; i--) {\n    var scope = this.scopeStack[i];\n    if (scope.inClassFieldInit || scope.flags & SCOPE_CLASS_STATIC_BLOCK) { return false }\n    if (scope.flags & SCOPE_FUNCTION) { return (scope.flags & SCOPE_ASYNC) > 0 }\n  }\n  return (this.inModule && this.options.ecmaVersion >= 13) || this.options.allowAwaitOutsideFunction\n};\n\nprototypeAccessors.allowSuper.get = function () {\n  var ref = this.currentThisScope();\n    var flags = ref.flags;\n    var inClassFieldInit = ref.inClassFieldInit;\n  return (flags & SCOPE_SUPER) > 0 || inClassFieldInit || this.options.allowSuperOutsideMethod\n};\n\nprototypeAccessors.allowDirectSuper.get = function () { return (this.currentThisScope().flags & SCOPE_DIRECT_SUPER) > 0 };\n\nprototypeAccessors.treatFunctionsAsVar.get = function () { return this.treatFunctionsAsVarInScope(this.currentScope()) };\n\nprototypeAccessors.allowNewDotTarget.get = function () {\n  var ref = this.currentThisScope();\n    var flags = ref.flags;\n    var inClassFieldInit = ref.inClassFieldInit;\n  return (flags & (SCOPE_FUNCTION | SCOPE_CLASS_STATIC_BLOCK)) > 0 || inClassFieldInit\n};\n\nprototypeAccessors.inClassStaticBlock.get = function () {\n  return (this.currentVarScope().flags & SCOPE_CLASS_STATIC_BLOCK) > 0\n};\n\nParser.extend = function extend () {\n    var plugins = [], len = arguments.length;\n    while ( len-- ) plugins[ len ] = arguments[ len ];\n\n  var cls = this;\n  for (var i = 0; i < plugins.length; i++) { cls = plugins[i](cls); }\n  return cls\n};\n\nParser.parse = function parse (input, options) {\n  return new this(options, input).parse()\n};\n\nParser.parseExpressionAt = function parseExpressionAt (input, pos, options) {\n  var parser = new this(options, input, pos);\n  parser.nextToken();\n  return parser.parseExpression()\n};\n\nParser.tokenizer = function tokenizer (input, options) {\n  return new this(options, input)\n};\n\nObject.defineProperties( Parser.prototype, prototypeAccessors );\n\nvar pp$9 = Parser.prototype;\n\n// ## Parser utilities\n\nvar literal$1 = /^(?:'((?:\\\\.|[^'\\\\])*?)'|\"((?:\\\\.|[^\"\\\\])*?)\")/;\npp$9.strictDirective = function(start) {\n  if (this.options.ecmaVersion < 5) { return false }\n  for (;;) {\n    // Try to find string literal.\n    skipWhiteSpace.lastIndex = start;\n    start += skipWhiteSpace.exec(this.input)[0].length;\n    var match = literal$1.exec(this.input.slice(start));\n    if (!match) { return false }\n    if ((match[1] || match[2]) === \"use strict\") {\n      skipWhiteSpace.lastIndex = start + match[0].length;\n      var spaceAfter = skipWhiteSpace.exec(this.input), end = spaceAfter.index + spaceAfter[0].length;\n      var next = this.input.charAt(end);\n      return next === \";\" || next === \"}\" ||\n        (lineBreak.test(spaceAfter[0]) &&\n         !(/[(`.[+\\-/*%<>=,?^&]/.test(next) || next === \"!\" && this.input.charAt(end + 1) === \"=\"))\n    }\n    start += match[0].length;\n\n    // Skip semicolon, if any.\n    skipWhiteSpace.lastIndex = start;\n    start += skipWhiteSpace.exec(this.input)[0].length;\n    if (this.input[start] === \";\")\n      { start++; }\n  }\n};\n\n// Predicate that tests whether the next token is of the given\n// type, and if yes, consumes it as a side effect.\n\npp$9.eat = function(type) {\n  if (this.type === type) {\n    this.next();\n    return true\n  } else {\n    return false\n  }\n};\n\n// Tests whether parsed token is a contextual keyword.\n\npp$9.isContextual = function(name) {\n  return this.type === types$1.name && this.value === name && !this.containsEsc\n};\n\n// Consumes contextual keyword if possible.\n\npp$9.eatContextual = function(name) {\n  if (!this.isContextual(name)) { return false }\n  this.next();\n  return true\n};\n\n// Asserts that following token is given contextual keyword.\n\npp$9.expectContextual = function(name) {\n  if (!this.eatContextual(name)) { this.unexpected(); }\n};\n\n// Test whether a semicolon can be inserted at the current position.\n\npp$9.canInsertSemicolon = function() {\n  return this.type === types$1.eof ||\n    this.type === types$1.braceR ||\n    lineBreak.test(this.input.slice(this.lastTokEnd, this.start))\n};\n\npp$9.insertSemicolon = function() {\n  if (this.canInsertSemicolon()) {\n    if (this.options.onInsertedSemicolon)\n      { this.options.onInsertedSemicolon(this.lastTokEnd, this.lastTokEndLoc); }\n    return true\n  }\n};\n\n// Consume a semicolon, or, failing that, see if we are allowed to\n// pretend that there is a semicolon at this position.\n\npp$9.semicolon = function() {\n  if (!this.eat(types$1.semi) && !this.insertSemicolon()) { this.unexpected(); }\n};\n\npp$9.afterTrailingComma = function(tokType, notNext) {\n  if (this.type === tokType) {\n    if (this.options.onTrailingComma)\n      { this.options.onTrailingComma(this.lastTokStart, this.lastTokStartLoc); }\n    if (!notNext)\n      { this.next(); }\n    return true\n  }\n};\n\n// Expect a token of a given type. If found, consume it, otherwise,\n// raise an unexpected token error.\n\npp$9.expect = function(type) {\n  this.eat(type) || this.unexpected();\n};\n\n// Raise an unexpected token error.\n\npp$9.unexpected = function(pos) {\n  this.raise(pos != null ? pos : this.start, \"Unexpected token\");\n};\n\nvar DestructuringErrors = function DestructuringErrors() {\n  this.shorthandAssign =\n  this.trailingComma =\n  this.parenthesizedAssign =\n  this.parenthesizedBind =\n  this.doubleProto =\n    -1;\n};\n\npp$9.checkPatternErrors = function(refDestructuringErrors, isAssign) {\n  if (!refDestructuringErrors) { return }\n  if (refDestructuringErrors.trailingComma > -1)\n    { this.raiseRecoverable(refDestructuringErrors.trailingComma, \"Comma is not permitted after the rest element\"); }\n  var parens = isAssign ? refDestructuringErrors.parenthesizedAssign : refDestructuringErrors.parenthesizedBind;\n  if (parens > -1) { this.raiseRecoverable(parens, isAssign ? \"Assigning to rvalue\" : \"Parenthesized pattern\"); }\n};\n\npp$9.checkExpressionErrors = function(refDestructuringErrors, andThrow) {\n  if (!refDestructuringErrors) { return false }\n  var shorthandAssign = refDestructuringErrors.shorthandAssign;\n  var doubleProto = refDestructuringErrors.doubleProto;\n  if (!andThrow) { return shorthandAssign >= 0 || doubleProto >= 0 }\n  if (shorthandAssign >= 0)\n    { this.raise(shorthandAssign, \"Shorthand property assignments are valid only in destructuring patterns\"); }\n  if (doubleProto >= 0)\n    { this.raiseRecoverable(doubleProto, \"Redefinition of __proto__ property\"); }\n};\n\npp$9.checkYieldAwaitInDefaultParams = function() {\n  if (this.yieldPos && (!this.awaitPos || this.yieldPos < this.awaitPos))\n    { this.raise(this.yieldPos, \"Yield expression cannot be a default value\"); }\n  if (this.awaitPos)\n    { this.raise(this.awaitPos, \"Await expression cannot be a default value\"); }\n};\n\npp$9.isSimpleAssignTarget = function(expr) {\n  if (expr.type === \"ParenthesizedExpression\")\n    { return this.isSimpleAssignTarget(expr.expression) }\n  return expr.type === \"Identifier\" || expr.type === \"MemberExpression\"\n};\n\nvar pp$8 = Parser.prototype;\n\n// ### Statement parsing\n\n// Parse a program. Initializes the parser, reads any number of\n// statements, and wraps them in a Program node.  Optionally takes a\n// `program` argument.  If present, the statements will be appended\n// to its body instead of creating a new node.\n\npp$8.parseTopLevel = function(node) {\n  var exports = Object.create(null);\n  if (!node.body) { node.body = []; }\n  while (this.type !== types$1.eof) {\n    var stmt = this.parseStatement(null, true, exports);\n    node.body.push(stmt);\n  }\n  if (this.inModule)\n    { for (var i = 0, list = Object.keys(this.undefinedExports); i < list.length; i += 1)\n      {\n        var name = list[i];\n\n        this.raiseRecoverable(this.undefinedExports[name].start, (\"Export '\" + name + \"' is not defined\"));\n      } }\n  this.adaptDirectivePrologue(node.body);\n  this.next();\n  node.sourceType = this.options.sourceType;\n  return this.finishNode(node, \"Program\")\n};\n\nvar loopLabel = {kind: \"loop\"}, switchLabel = {kind: \"switch\"};\n\npp$8.isLet = function(context) {\n  if (this.options.ecmaVersion < 6 || !this.isContextual(\"let\")) { return false }\n  skipWhiteSpace.lastIndex = this.pos;\n  var skip = skipWhiteSpace.exec(this.input);\n  var next = this.pos + skip[0].length, nextCh = this.input.charCodeAt(next);\n  // For ambiguous cases, determine if a LexicalDeclaration (or only a\n  // Statement) is allowed here. If context is not empty then only a Statement\n  // is allowed. However, `let [` is an explicit negative lookahead for\n  // ExpressionStatement, so special-case it first.\n  if (nextCh === 91 || nextCh === 92 || nextCh > 0xd7ff && nextCh < 0xdc00) { return true } // '[', '/', astral\n  if (context) { return false }\n\n  if (nextCh === 123) { return true } // '{'\n  if (isIdentifierStart(nextCh, true)) {\n    var pos = next + 1;\n    while (isIdentifierChar(nextCh = this.input.charCodeAt(pos), true)) { ++pos; }\n    if (nextCh === 92 || nextCh > 0xd7ff && nextCh < 0xdc00) { return true }\n    var ident = this.input.slice(next, pos);\n    if (!keywordRelationalOperator.test(ident)) { return true }\n  }\n  return false\n};\n\n// check 'async [no LineTerminator here] function'\n// - 'async /*foo*/ function' is OK.\n// - 'async /*\\n*/ function' is invalid.\npp$8.isAsyncFunction = function() {\n  if (this.options.ecmaVersion < 8 || !this.isContextual(\"async\"))\n    { return false }\n\n  skipWhiteSpace.lastIndex = this.pos;\n  var skip = skipWhiteSpace.exec(this.input);\n  var next = this.pos + skip[0].length, after;\n  return !lineBreak.test(this.input.slice(this.pos, next)) &&\n    this.input.slice(next, next + 8) === \"function\" &&\n    (next + 8 === this.input.length ||\n     !(isIdentifierChar(after = this.input.charCodeAt(next + 8)) || after > 0xd7ff && after < 0xdc00))\n};\n\n// Parse a single statement.\n//\n// If expecting a statement and finding a slash operator, parse a\n// regular expression literal. This is to handle cases like\n// `if (foo) /blah/.exec(foo)`, where looking at the previous token\n// does not help.\n\npp$8.parseStatement = function(context, topLevel, exports) {\n  var starttype = this.type, node = this.startNode(), kind;\n\n  if (this.isLet(context)) {\n    starttype = types$1._var;\n    kind = \"let\";\n  }\n\n  // Most types of statements are recognized by the keyword they\n  // start with. Many are trivial to parse, some require a bit of\n  // complexity.\n\n  switch (starttype) {\n  case types$1._break: case types$1._continue: return this.parseBreakContinueStatement(node, starttype.keyword)\n  case types$1._debugger: return this.parseDebuggerStatement(node)\n  case types$1._do: return this.parseDoStatement(node)\n  case types$1._for: return this.parseForStatement(node)\n  case types$1._function:\n    // Function as sole body of either an if statement or a labeled statement\n    // works, but not when it is part of a labeled statement that is the sole\n    // body of an if statement.\n    if ((context && (this.strict || context !== \"if\" && context !== \"label\")) && this.options.ecmaVersion >= 6) { this.unexpected(); }\n    return this.parseFunctionStatement(node, false, !context)\n  case types$1._class:\n    if (context) { this.unexpected(); }\n    return this.parseClass(node, true)\n  case types$1._if: return this.parseIfStatement(node)\n  case types$1._return: return this.parseReturnStatement(node)\n  case types$1._switch: return this.parseSwitchStatement(node)\n  case types$1._throw: return this.parseThrowStatement(node)\n  case types$1._try: return this.parseTryStatement(node)\n  case types$1._const: case types$1._var:\n    kind = kind || this.value;\n    if (context && kind !== \"var\") { this.unexpected(); }\n    return this.parseVarStatement(node, kind)\n  case types$1._while: return this.parseWhileStatement(node)\n  case types$1._with: return this.parseWithStatement(node)\n  case types$1.braceL: return this.parseBlock(true, node)\n  case types$1.semi: return this.parseEmptyStatement(node)\n  case types$1._export:\n  case types$1._import:\n    if (this.options.ecmaVersion > 10 && starttype === types$1._import) {\n      skipWhiteSpace.lastIndex = this.pos;\n      var skip = skipWhiteSpace.exec(this.input);\n      var next = this.pos + skip[0].length, nextCh = this.input.charCodeAt(next);\n      if (nextCh === 40 || nextCh === 46) // '(' or '.'\n        { return this.parseExpressionStatement(node, this.parseExpression()) }\n    }\n\n    if (!this.options.allowImportExportEverywhere) {\n      if (!topLevel)\n        { this.raise(this.start, \"'import' and 'export' may only appear at the top level\"); }\n      if (!this.inModule)\n        { this.raise(this.start, \"'import' and 'export' may appear only with 'sourceType: module'\"); }\n    }\n    return starttype === types$1._import ? this.parseImport(node) : this.parseExport(node, exports)\n\n    // If the statement does not start with a statement keyword or a\n    // brace, it's an ExpressionStatement or LabeledStatement. We\n    // simply start parsing an expression, and afterwards, if the\n    // next token is a colon and the expression was a simple\n    // Identifier node, we switch to interpreting it as a label.\n  default:\n    if (this.isAsyncFunction()) {\n      if (context) { this.unexpected(); }\n      this.next();\n      return this.parseFunctionStatement(node, true, !context)\n    }\n\n    var maybeName = this.value, expr = this.parseExpression();\n    if (starttype === types$1.name && expr.type === \"Identifier\" && this.eat(types$1.colon))\n      { return this.parseLabeledStatement(node, maybeName, expr, context) }\n    else { return this.parseExpressionStatement(node, expr) }\n  }\n};\n\npp$8.parseBreakContinueStatement = function(node, keyword) {\n  var isBreak = keyword === \"break\";\n  this.next();\n  if (this.eat(types$1.semi) || this.insertSemicolon()) { node.label = null; }\n  else if (this.type !== types$1.name) { this.unexpected(); }\n  else {\n    node.label = this.parseIdent();\n    this.semicolon();\n  }\n\n  // Verify that there is an actual destination to break or\n  // continue to.\n  var i = 0;\n  for (; i < this.labels.length; ++i) {\n    var lab = this.labels[i];\n    if (node.label == null || lab.name === node.label.name) {\n      if (lab.kind != null && (isBreak || lab.kind === \"loop\")) { break }\n      if (node.label && isBreak) { break }\n    }\n  }\n  if (i === this.labels.length) { this.raise(node.start, \"Unsyntactic \" + keyword); }\n  return this.finishNode(node, isBreak ? \"BreakStatement\" : \"ContinueStatement\")\n};\n\npp$8.parseDebuggerStatement = function(node) {\n  this.next();\n  this.semicolon();\n  return this.finishNode(node, \"DebuggerStatement\")\n};\n\npp$8.parseDoStatement = function(node) {\n  this.next();\n  this.labels.push(loopLabel);\n  node.body = this.parseStatement(\"do\");\n  this.labels.pop();\n  this.expect(types$1._while);\n  node.test = this.parseParenExpression();\n  if (this.options.ecmaVersion >= 6)\n    { this.eat(types$1.semi); }\n  else\n    { this.semicolon(); }\n  return this.finishNode(node, \"DoWhileStatement\")\n};\n\n// Disambiguating between a `for` and a `for`/`in` or `for`/`of`\n// loop is non-trivial. Basically, we have to parse the init `var`\n// statement or expression, disallowing the `in` operator (see\n// the second parameter to `parseExpression`), and then check\n// whether the next token is `in` or `of`. When there is no init\n// part (semicolon immediately after the opening parenthesis), it\n// is a regular `for` loop.\n\npp$8.parseForStatement = function(node) {\n  this.next();\n  var awaitAt = (this.options.ecmaVersion >= 9 && this.canAwait && this.eatContextual(\"await\")) ? this.lastTokStart : -1;\n  this.labels.push(loopLabel);\n  this.enterScope(0);\n  this.expect(types$1.parenL);\n  if (this.type === types$1.semi) {\n    if (awaitAt > -1) { this.unexpected(awaitAt); }\n    return this.parseFor(node, null)\n  }\n  var isLet = this.isLet();\n  if (this.type === types$1._var || this.type === types$1._const || isLet) {\n    var init$1 = this.startNode(), kind = isLet ? \"let\" : this.value;\n    this.next();\n    this.parseVar(init$1, true, kind);\n    this.finishNode(init$1, \"VariableDeclaration\");\n    if ((this.type === types$1._in || (this.options.ecmaVersion >= 6 && this.isContextual(\"of\"))) && init$1.declarations.length === 1) {\n      if (this.options.ecmaVersion >= 9) {\n        if (this.type === types$1._in) {\n          if (awaitAt > -1) { this.unexpected(awaitAt); }\n        } else { node.await = awaitAt > -1; }\n      }\n      return this.parseForIn(node, init$1)\n    }\n    if (awaitAt > -1) { this.unexpected(awaitAt); }\n    return this.parseFor(node, init$1)\n  }\n  var startsWithLet = this.isContextual(\"let\"), isForOf = false;\n  var refDestructuringErrors = new DestructuringErrors;\n  var init = this.parseExpression(awaitAt > -1 ? \"await\" : true, refDestructuringErrors);\n  if (this.type === types$1._in || (isForOf = this.options.ecmaVersion >= 6 && this.isContextual(\"of\"))) {\n    if (this.options.ecmaVersion >= 9) {\n      if (this.type === types$1._in) {\n        if (awaitAt > -1) { this.unexpected(awaitAt); }\n      } else { node.await = awaitAt > -1; }\n    }\n    if (startsWithLet && isForOf) { this.raise(init.start, \"The left-hand side of a for-of loop may not start with 'let'.\"); }\n    this.toAssignable(init, false, refDestructuringErrors);\n    this.checkLValPattern(init);\n    return this.parseForIn(node, init)\n  } else {\n    this.checkExpressionErrors(refDestructuringErrors, true);\n  }\n  if (awaitAt > -1) { this.unexpected(awaitAt); }\n  return this.parseFor(node, init)\n};\n\npp$8.parseFunctionStatement = function(node, isAsync, declarationPosition) {\n  this.next();\n  return this.parseFunction(node, FUNC_STATEMENT | (declarationPosition ? 0 : FUNC_HANGING_STATEMENT), false, isAsync)\n};\n\npp$8.parseIfStatement = function(node) {\n  this.next();\n  node.test = this.parseParenExpression();\n  // allow function declarations in branches, but only in non-strict mode\n  node.consequent = this.parseStatement(\"if\");\n  node.alternate = this.eat(types$1._else) ? this.parseStatement(\"if\") : null;\n  return this.finishNode(node, \"IfStatement\")\n};\n\npp$8.parseReturnStatement = function(node) {\n  if (!this.inFunction && !this.options.allowReturnOutsideFunction)\n    { this.raise(this.start, \"'return' outside of function\"); }\n  this.next();\n\n  // In `return` (and `break`/`continue`), the keywords with\n  // optional arguments, we eagerly look for a semicolon or the\n  // possibility to insert one.\n\n  if (this.eat(types$1.semi) || this.insertSemicolon()) { node.argument = null; }\n  else { node.argument = this.parseExpression(); this.semicolon(); }\n  return this.finishNode(node, \"ReturnStatement\")\n};\n\npp$8.parseSwitchStatement = function(node) {\n  this.next();\n  node.discriminant = this.parseParenExpression();\n  node.cases = [];\n  this.expect(types$1.braceL);\n  this.labels.push(switchLabel);\n  this.enterScope(0);\n\n  // Statements under must be grouped (by label) in SwitchCase\n  // nodes. `cur` is used to keep the node that we are currently\n  // adding statements to.\n\n  var cur;\n  for (var sawDefault = false; this.type !== types$1.braceR;) {\n    if (this.type === types$1._case || this.type === types$1._default) {\n      var isCase = this.type === types$1._case;\n      if (cur) { this.finishNode(cur, \"SwitchCase\"); }\n      node.cases.push(cur = this.startNode());\n      cur.consequent = [];\n      this.next();\n      if (isCase) {\n        cur.test = this.parseExpression();\n      } else {\n        if (sawDefault) { this.raiseRecoverable(this.lastTokStart, \"Multiple default clauses\"); }\n        sawDefault = true;\n        cur.test = null;\n      }\n      this.expect(types$1.colon);\n    } else {\n      if (!cur) { this.unexpected(); }\n      cur.consequent.push(this.parseStatement(null));\n    }\n  }\n  this.exitScope();\n  if (cur) { this.finishNode(cur, \"SwitchCase\"); }\n  this.next(); // Closing brace\n  this.labels.pop();\n  return this.finishNode(node, \"SwitchStatement\")\n};\n\npp$8.parseThrowStatement = function(node) {\n  this.next();\n  if (lineBreak.test(this.input.slice(this.lastTokEnd, this.start)))\n    { this.raise(this.lastTokEnd, \"Illegal newline after throw\"); }\n  node.argument = this.parseExpression();\n  this.semicolon();\n  return this.finishNode(node, \"ThrowStatement\")\n};\n\n// Reused empty array added for node fields that are always empty.\n\nvar empty$1 = [];\n\npp$8.parseTryStatement = function(node) {\n  this.next();\n  node.block = this.parseBlock();\n  node.handler = null;\n  if (this.type === types$1._catch) {\n    var clause = this.startNode();\n    this.next();\n    if (this.eat(types$1.parenL)) {\n      clause.param = this.parseBindingAtom();\n      var simple = clause.param.type === \"Identifier\";\n      this.enterScope(simple ? SCOPE_SIMPLE_CATCH : 0);\n      this.checkLValPattern(clause.param, simple ? BIND_SIMPLE_CATCH : BIND_LEXICAL);\n      this.expect(types$1.parenR);\n    } else {\n      if (this.options.ecmaVersion < 10) { this.unexpected(); }\n      clause.param = null;\n      this.enterScope(0);\n    }\n    clause.body = this.parseBlock(false);\n    this.exitScope();\n    node.handler = this.finishNode(clause, \"CatchClause\");\n  }\n  node.finalizer = this.eat(types$1._finally) ? this.parseBlock() : null;\n  if (!node.handler && !node.finalizer)\n    { this.raise(node.start, \"Missing catch or finally clause\"); }\n  return this.finishNode(node, \"TryStatement\")\n};\n\npp$8.parseVarStatement = function(node, kind) {\n  this.next();\n  this.parseVar(node, false, kind);\n  this.semicolon();\n  return this.finishNode(node, \"VariableDeclaration\")\n};\n\npp$8.parseWhileStatement = function(node) {\n  this.next();\n  node.test = this.parseParenExpression();\n  this.labels.push(loopLabel);\n  node.body = this.parseStatement(\"while\");\n  this.labels.pop();\n  return this.finishNode(node, \"WhileStatement\")\n};\n\npp$8.parseWithStatement = function(node) {\n  if (this.strict) { this.raise(this.start, \"'with' in strict mode\"); }\n  this.next();\n  node.object = this.parseParenExpression();\n  node.body = this.parseStatement(\"with\");\n  return this.finishNode(node, \"WithStatement\")\n};\n\npp$8.parseEmptyStatement = function(node) {\n  this.next();\n  return this.finishNode(node, \"EmptyStatement\")\n};\n\npp$8.parseLabeledStatement = function(node, maybeName, expr, context) {\n  for (var i$1 = 0, list = this.labels; i$1 < list.length; i$1 += 1)\n    {\n    var label = list[i$1];\n\n    if (label.name === maybeName)\n      { this.raise(expr.start, \"Label '\" + maybeName + \"' is already declared\");\n  } }\n  var kind = this.type.isLoop ? \"loop\" : this.type === types$1._switch ? \"switch\" : null;\n  for (var i = this.labels.length - 1; i >= 0; i--) {\n    var label$1 = this.labels[i];\n    if (label$1.statementStart === node.start) {\n      // Update information about previous labels on this node\n      label$1.statementStart = this.start;\n      label$1.kind = kind;\n    } else { break }\n  }\n  this.labels.push({name: maybeName, kind: kind, statementStart: this.start});\n  node.body = this.parseStatement(context ? context.indexOf(\"label\") === -1 ? context + \"label\" : context : \"label\");\n  this.labels.pop();\n  node.label = expr;\n  return this.finishNode(node, \"LabeledStatement\")\n};\n\npp$8.parseExpressionStatement = function(node, expr) {\n  node.expression = expr;\n  this.semicolon();\n  return this.finishNode(node, \"ExpressionStatement\")\n};\n\n// Parse a semicolon-enclosed block of statements, handling `\"use\n// strict\"` declarations when `allowStrict` is true (used for\n// function bodies).\n\npp$8.parseBlock = function(createNewLexicalScope, node, exitStrict) {\n  if ( createNewLexicalScope === void 0 ) createNewLexicalScope = true;\n  if ( node === void 0 ) node = this.startNode();\n\n  node.body = [];\n  this.expect(types$1.braceL);\n  if (createNewLexicalScope) { this.enterScope(0); }\n  while (this.type !== types$1.braceR) {\n    var stmt = this.parseStatement(null);\n    node.body.push(stmt);\n  }\n  if (exitStrict) { this.strict = false; }\n  this.next();\n  if (createNewLexicalScope) { this.exitScope(); }\n  return this.finishNode(node, \"BlockStatement\")\n};\n\n// Parse a regular `for` loop. The disambiguation code in\n// `parseStatement` will already have parsed the init statement or\n// expression.\n\npp$8.parseFor = function(node, init) {\n  node.init = init;\n  this.expect(types$1.semi);\n  node.test = this.type === types$1.semi ? null : this.parseExpression();\n  this.expect(types$1.semi);\n  node.update = this.type === types$1.parenR ? null : this.parseExpression();\n  this.expect(types$1.parenR);\n  node.body = this.parseStatement(\"for\");\n  this.exitScope();\n  this.labels.pop();\n  return this.finishNode(node, \"ForStatement\")\n};\n\n// Parse a `for`/`in` and `for`/`of` loop, which are almost\n// same from parser's perspective.\n\npp$8.parseForIn = function(node, init) {\n  var isForIn = this.type === types$1._in;\n  this.next();\n\n  if (\n    init.type === \"VariableDeclaration\" &&\n    init.declarations[0].init != null &&\n    (\n      !isForIn ||\n      this.options.ecmaVersion < 8 ||\n      this.strict ||\n      init.kind !== \"var\" ||\n      init.declarations[0].id.type !== \"Identifier\"\n    )\n  ) {\n    this.raise(\n      init.start,\n      ((isForIn ? \"for-in\" : \"for-of\") + \" loop variable declaration may not have an initializer\")\n    );\n  }\n  node.left = init;\n  node.right = isForIn ? this.parseExpression() : this.parseMaybeAssign();\n  this.expect(types$1.parenR);\n  node.body = this.parseStatement(\"for\");\n  this.exitScope();\n  this.labels.pop();\n  return this.finishNode(node, isForIn ? \"ForInStatement\" : \"ForOfStatement\")\n};\n\n// Parse a list of variable declarations.\n\npp$8.parseVar = function(node, isFor, kind) {\n  node.declarations = [];\n  node.kind = kind;\n  for (;;) {\n    var decl = this.startNode();\n    this.parseVarId(decl, kind);\n    if (this.eat(types$1.eq)) {\n      decl.init = this.parseMaybeAssign(isFor);\n    } else if (kind === \"const\" && !(this.type === types$1._in || (this.options.ecmaVersion >= 6 && this.isContextual(\"of\")))) {\n      this.unexpected();\n    } else if (decl.id.type !== \"Identifier\" && !(isFor && (this.type === types$1._in || this.isContextual(\"of\")))) {\n      this.raise(this.lastTokEnd, \"Complex binding patterns require an initialization value\");\n    } else {\n      decl.init = null;\n    }\n    node.declarations.push(this.finishNode(decl, \"VariableDeclarator\"));\n    if (!this.eat(types$1.comma)) { break }\n  }\n  return node\n};\n\npp$8.parseVarId = function(decl, kind) {\n  decl.id = this.parseBindingAtom();\n  this.checkLValPattern(decl.id, kind === \"var\" ? BIND_VAR : BIND_LEXICAL, false);\n};\n\nvar FUNC_STATEMENT = 1, FUNC_HANGING_STATEMENT = 2, FUNC_NULLABLE_ID = 4;\n\n// Parse a function declaration or literal (depending on the\n// `statement & FUNC_STATEMENT`).\n\n// Remove `allowExpressionBody` for 7.0.0, as it is only called with false\npp$8.parseFunction = function(node, statement, allowExpressionBody, isAsync, forInit) {\n  this.initFunction(node);\n  if (this.options.ecmaVersion >= 9 || this.options.ecmaVersion >= 6 && !isAsync) {\n    if (this.type === types$1.star && (statement & FUNC_HANGING_STATEMENT))\n      { this.unexpected(); }\n    node.generator = this.eat(types$1.star);\n  }\n  if (this.options.ecmaVersion >= 8)\n    { node.async = !!isAsync; }\n\n  if (statement & FUNC_STATEMENT) {\n    node.id = (statement & FUNC_NULLABLE_ID) && this.type !== types$1.name ? null : this.parseIdent();\n    if (node.id && !(statement & FUNC_HANGING_STATEMENT))\n      // If it is a regular function declaration in sloppy mode, then it is\n      // subject to Annex B semantics (BIND_FUNCTION). Otherwise, the binding\n      // mode depends on properties of the current scope (see\n      // treatFunctionsAsVar).\n      { this.checkLValSimple(node.id, (this.strict || node.generator || node.async) ? this.treatFunctionsAsVar ? BIND_VAR : BIND_LEXICAL : BIND_FUNCTION); }\n  }\n\n  var oldYieldPos = this.yieldPos, oldAwaitPos = this.awaitPos, oldAwaitIdentPos = this.awaitIdentPos;\n  this.yieldPos = 0;\n  this.awaitPos = 0;\n  this.awaitIdentPos = 0;\n  this.enterScope(functionFlags(node.async, node.generator));\n\n  if (!(statement & FUNC_STATEMENT))\n    { node.id = this.type === types$1.name ? this.parseIdent() : null; }\n\n  this.parseFunctionParams(node);\n  this.parseFunctionBody(node, allowExpressionBody, false, forInit);\n\n  this.yieldPos = oldYieldPos;\n  this.awaitPos = oldAwaitPos;\n  this.awaitIdentPos = oldAwaitIdentPos;\n  return this.finishNode(node, (statement & FUNC_STATEMENT) ? \"FunctionDeclaration\" : \"FunctionExpression\")\n};\n\npp$8.parseFunctionParams = function(node) {\n  this.expect(types$1.parenL);\n  node.params = this.parseBindingList(types$1.parenR, false, this.options.ecmaVersion >= 8);\n  this.checkYieldAwaitInDefaultParams();\n};\n\n// Parse a class declaration or literal (depending on the\n// `isStatement` parameter).\n\npp$8.parseClass = function(node, isStatement) {\n  this.next();\n\n  // ecma-262 14.6 Class Definitions\n  // A class definition is always strict mode code.\n  var oldStrict = this.strict;\n  this.strict = true;\n\n  this.parseClassId(node, isStatement);\n  this.parseClassSuper(node);\n  var privateNameMap = this.enterClassBody();\n  var classBody = this.startNode();\n  var hadConstructor = false;\n  classBody.body = [];\n  this.expect(types$1.braceL);\n  while (this.type !== types$1.braceR) {\n    var element = this.parseClassElement(node.superClass !== null);\n    if (element) {\n      classBody.body.push(element);\n      if (element.type === \"MethodDefinition\" && element.kind === \"constructor\") {\n        if (hadConstructor) { this.raise(element.start, \"Duplicate constructor in the same class\"); }\n        hadConstructor = true;\n      } else if (element.key && element.key.type === \"PrivateIdentifier\" && isPrivateNameConflicted(privateNameMap, element)) {\n        this.raiseRecoverable(element.key.start, (\"Identifier '#\" + (element.key.name) + \"' has already been declared\"));\n      }\n    }\n  }\n  this.strict = oldStrict;\n  this.next();\n  node.body = this.finishNode(classBody, \"ClassBody\");\n  this.exitClassBody();\n  return this.finishNode(node, isStatement ? \"ClassDeclaration\" : \"ClassExpression\")\n};\n\npp$8.parseClassElement = function(constructorAllowsSuper) {\n  if (this.eat(types$1.semi)) { return null }\n\n  var ecmaVersion = this.options.ecmaVersion;\n  var node = this.startNode();\n  var keyName = \"\";\n  var isGenerator = false;\n  var isAsync = false;\n  var kind = \"method\";\n  var isStatic = false;\n\n  if (this.eatContextual(\"static\")) {\n    // Parse static init block\n    if (ecmaVersion >= 13 && this.eat(types$1.braceL)) {\n      this.parseClassStaticBlock(node);\n      return node\n    }\n    if (this.isClassElementNameStart() || this.type === types$1.star) {\n      isStatic = true;\n    } else {\n      keyName = \"static\";\n    }\n  }\n  node.static = isStatic;\n  if (!keyName && ecmaVersion >= 8 && this.eatContextual(\"async\")) {\n    if ((this.isClassElementNameStart() || this.type === types$1.star) && !this.canInsertSemicolon()) {\n      isAsync = true;\n    } else {\n      keyName = \"async\";\n    }\n  }\n  if (!keyName && (ecmaVersion >= 9 || !isAsync) && this.eat(types$1.star)) {\n    isGenerator = true;\n  }\n  if (!keyName && !isAsync && !isGenerator) {\n    var lastValue = this.value;\n    if (this.eatContextual(\"get\") || this.eatContextual(\"set\")) {\n      if (this.isClassElementNameStart()) {\n        kind = lastValue;\n      } else {\n        keyName = lastValue;\n      }\n    }\n  }\n\n  // Parse element name\n  if (keyName) {\n    // 'async', 'get', 'set', or 'static' were not a keyword contextually.\n    // The last token is any of those. Make it the element name.\n    node.computed = false;\n    node.key = this.startNodeAt(this.lastTokStart, this.lastTokStartLoc);\n    node.key.name = keyName;\n    this.finishNode(node.key, \"Identifier\");\n  } else {\n    this.parseClassElementName(node);\n  }\n\n  // Parse element value\n  if (ecmaVersion < 13 || this.type === types$1.parenL || kind !== \"method\" || isGenerator || isAsync) {\n    var isConstructor = !node.static && checkKeyName(node, \"constructor\");\n    var allowsDirectSuper = isConstructor && constructorAllowsSuper;\n    // Couldn't move this check into the 'parseClassMethod' method for backward compatibility.\n    if (isConstructor && kind !== \"method\") { this.raise(node.key.start, \"Constructor can't have get/set modifier\"); }\n    node.kind = isConstructor ? \"constructor\" : kind;\n    this.parseClassMethod(node, isGenerator, isAsync, allowsDirectSuper);\n  } else {\n    this.parseClassField(node);\n  }\n\n  return node\n};\n\npp$8.isClassElementNameStart = function() {\n  return (\n    this.type === types$1.name ||\n    this.type === types$1.privateId ||\n    this.type === types$1.num ||\n    this.type === types$1.string ||\n    this.type === types$1.bracketL ||\n    this.type.keyword\n  )\n};\n\npp$8.parseClassElementName = function(element) {\n  if (this.type === types$1.privateId) {\n    if (this.value === \"constructor\") {\n      this.raise(this.start, \"Classes can't have an element named '#constructor'\");\n    }\n    element.computed = false;\n    element.key = this.parsePrivateIdent();\n  } else {\n    this.parsePropertyName(element);\n  }\n};\n\npp$8.parseClassMethod = function(method, isGenerator, isAsync, allowsDirectSuper) {\n  // Check key and flags\n  var key = method.key;\n  if (method.kind === \"constructor\") {\n    if (isGenerator) { this.raise(key.start, \"Constructor can't be a generator\"); }\n    if (isAsync) { this.raise(key.start, \"Constructor can't be an async method\"); }\n  } else if (method.static && checkKeyName(method, \"prototype\")) {\n    this.raise(key.start, \"Classes may not have a static property named prototype\");\n  }\n\n  // Parse value\n  var value = method.value = this.parseMethod(isGenerator, isAsync, allowsDirectSuper);\n\n  // Check value\n  if (method.kind === \"get\" && value.params.length !== 0)\n    { this.raiseRecoverable(value.start, \"getter should have no params\"); }\n  if (method.kind === \"set\" && value.params.length !== 1)\n    { this.raiseRecoverable(value.start, \"setter should have exactly one param\"); }\n  if (method.kind === \"set\" && value.params[0].type === \"RestElement\")\n    { this.raiseRecoverable(value.params[0].start, \"Setter cannot use rest params\"); }\n\n  return this.finishNode(method, \"MethodDefinition\")\n};\n\npp$8.parseClassField = function(field) {\n  if (checkKeyName(field, \"constructor\")) {\n    this.raise(field.key.start, \"Classes can't have a field named 'constructor'\");\n  } else if (field.static && checkKeyName(field, \"prototype\")) {\n    this.raise(field.key.start, \"Classes can't have a static field named 'prototype'\");\n  }\n\n  if (this.eat(types$1.eq)) {\n    // To raise SyntaxError if 'arguments' exists in the initializer.\n    var scope = this.currentThisScope();\n    var inClassFieldInit = scope.inClassFieldInit;\n    scope.inClassFieldInit = true;\n    field.value = this.parseMaybeAssign();\n    scope.inClassFieldInit = inClassFieldInit;\n  } else {\n    field.value = null;\n  }\n  this.semicolon();\n\n  return this.finishNode(field, \"PropertyDefinition\")\n};\n\npp$8.parseClassStaticBlock = function(node) {\n  node.body = [];\n\n  var oldLabels = this.labels;\n  this.labels = [];\n  this.enterScope(SCOPE_CLASS_STATIC_BLOCK | SCOPE_SUPER);\n  while (this.type !== types$1.braceR) {\n    var stmt = this.parseStatement(null);\n    node.body.push(stmt);\n  }\n  this.next();\n  this.exitScope();\n  this.labels = oldLabels;\n\n  return this.finishNode(node, \"StaticBlock\")\n};\n\npp$8.parseClassId = function(node, isStatement) {\n  if (this.type === types$1.name) {\n    node.id = this.parseIdent();\n    if (isStatement)\n      { this.checkLValSimple(node.id, BIND_LEXICAL, false); }\n  } else {\n    if (isStatement === true)\n      { this.unexpected(); }\n    node.id = null;\n  }\n};\n\npp$8.parseClassSuper = function(node) {\n  node.superClass = this.eat(types$1._extends) ? this.parseExprSubscripts(false) : null;\n};\n\npp$8.enterClassBody = function() {\n  var element = {declared: Object.create(null), used: []};\n  this.privateNameStack.push(element);\n  return element.declared\n};\n\npp$8.exitClassBody = function() {\n  var ref = this.privateNameStack.pop();\n  var declared = ref.declared;\n  var used = ref.used;\n  var len = this.privateNameStack.length;\n  var parent = len === 0 ? null : this.privateNameStack[len - 1];\n  for (var i = 0; i < used.length; ++i) {\n    var id = used[i];\n    if (!hasOwn(declared, id.name)) {\n      if (parent) {\n        parent.used.push(id);\n      } else {\n        this.raiseRecoverable(id.start, (\"Private field '#\" + (id.name) + \"' must be declared in an enclosing class\"));\n      }\n    }\n  }\n};\n\nfunction isPrivateNameConflicted(privateNameMap, element) {\n  var name = element.key.name;\n  var curr = privateNameMap[name];\n\n  var next = \"true\";\n  if (element.type === \"MethodDefinition\" && (element.kind === \"get\" || element.kind === \"set\")) {\n    next = (element.static ? \"s\" : \"i\") + element.kind;\n  }\n\n  // `class { get #a(){}; static set #a(_){} }` is also conflict.\n  if (\n    curr === \"iget\" && next === \"iset\" ||\n    curr === \"iset\" && next === \"iget\" ||\n    curr === \"sget\" && next === \"sset\" ||\n    curr === \"sset\" && next === \"sget\"\n  ) {\n    privateNameMap[name] = \"true\";\n    return false\n  } else if (!curr) {\n    privateNameMap[name] = next;\n    return false\n  } else {\n    return true\n  }\n}\n\nfunction checkKeyName(node, name) {\n  var computed = node.computed;\n  var key = node.key;\n  return !computed && (\n    key.type === \"Identifier\" && key.name === name ||\n    key.type === \"Literal\" && key.value === name\n  )\n}\n\n// Parses module export declaration.\n\npp$8.parseExport = function(node, exports) {\n  this.next();\n  // export * from '...'\n  if (this.eat(types$1.star)) {\n    if (this.options.ecmaVersion >= 11) {\n      if (this.eatContextual(\"as\")) {\n        node.exported = this.parseModuleExportName();\n        this.checkExport(exports, node.exported, this.lastTokStart);\n      } else {\n        node.exported = null;\n      }\n    }\n    this.expectContextual(\"from\");\n    if (this.type !== types$1.string) { this.unexpected(); }\n    node.source = this.parseExprAtom();\n    this.semicolon();\n    return this.finishNode(node, \"ExportAllDeclaration\")\n  }\n  if (this.eat(types$1._default)) { // export default ...\n    this.checkExport(exports, \"default\", this.lastTokStart);\n    var isAsync;\n    if (this.type === types$1._function || (isAsync = this.isAsyncFunction())) {\n      var fNode = this.startNode();\n      this.next();\n      if (isAsync) { this.next(); }\n      node.declaration = this.parseFunction(fNode, FUNC_STATEMENT | FUNC_NULLABLE_ID, false, isAsync);\n    } else if (this.type === types$1._class) {\n      var cNode = this.startNode();\n      node.declaration = this.parseClass(cNode, \"nullableID\");\n    } else {\n      node.declaration = this.parseMaybeAssign();\n      this.semicolon();\n    }\n    return this.finishNode(node, \"ExportDefaultDeclaration\")\n  }\n  // export var|const|let|function|class ...\n  if (this.shouldParseExportStatement()) {\n    node.declaration = this.parseStatement(null);\n    if (node.declaration.type === \"VariableDeclaration\")\n      { this.checkVariableExport(exports, node.declaration.declarations); }\n    else\n      { this.checkExport(exports, node.declaration.id, node.declaration.id.start); }\n    node.specifiers = [];\n    node.source = null;\n  } else { // export { x, y as z } [from '...']\n    node.declaration = null;\n    node.specifiers = this.parseExportSpecifiers(exports);\n    if (this.eatContextual(\"from\")) {\n      if (this.type !== types$1.string) { this.unexpected(); }\n      node.source = this.parseExprAtom();\n    } else {\n      for (var i = 0, list = node.specifiers; i < list.length; i += 1) {\n        // check for keywords used as local names\n        var spec = list[i];\n\n        this.checkUnreserved(spec.local);\n        // check if export is defined\n        this.checkLocalExport(spec.local);\n\n        if (spec.local.type === \"Literal\") {\n          this.raise(spec.local.start, \"A string literal cannot be used as an exported binding without `from`.\");\n        }\n      }\n\n      node.source = null;\n    }\n    this.semicolon();\n  }\n  return this.finishNode(node, \"ExportNamedDeclaration\")\n};\n\npp$8.checkExport = function(exports, name, pos) {\n  if (!exports) { return }\n  if (typeof name !== \"string\")\n    { name = name.type === \"Identifier\" ? name.name : name.value; }\n  if (hasOwn(exports, name))\n    { this.raiseRecoverable(pos, \"Duplicate export '\" + name + \"'\"); }\n  exports[name] = true;\n};\n\npp$8.checkPatternExport = function(exports, pat) {\n  var type = pat.type;\n  if (type === \"Identifier\")\n    { this.checkExport(exports, pat, pat.start); }\n  else if (type === \"ObjectPattern\")\n    { for (var i = 0, list = pat.properties; i < list.length; i += 1)\n      {\n        var prop = list[i];\n\n        this.checkPatternExport(exports, prop);\n      } }\n  else if (type === \"ArrayPattern\")\n    { for (var i$1 = 0, list$1 = pat.elements; i$1 < list$1.length; i$1 += 1) {\n      var elt = list$1[i$1];\n\n        if (elt) { this.checkPatternExport(exports, elt); }\n    } }\n  else if (type === \"Property\")\n    { this.checkPatternExport(exports, pat.value); }\n  else if (type === \"AssignmentPattern\")\n    { this.checkPatternExport(exports, pat.left); }\n  else if (type === \"RestElement\")\n    { this.checkPatternExport(exports, pat.argument); }\n  else if (type === \"ParenthesizedExpression\")\n    { this.checkPatternExport(exports, pat.expression); }\n};\n\npp$8.checkVariableExport = function(exports, decls) {\n  if (!exports) { return }\n  for (var i = 0, list = decls; i < list.length; i += 1)\n    {\n    var decl = list[i];\n\n    this.checkPatternExport(exports, decl.id);\n  }\n};\n\npp$8.shouldParseExportStatement = function() {\n  return this.type.keyword === \"var\" ||\n    this.type.keyword === \"const\" ||\n    this.type.keyword === \"class\" ||\n    this.type.keyword === \"function\" ||\n    this.isLet() ||\n    this.isAsyncFunction()\n};\n\n// Parses a comma-separated list of module exports.\n\npp$8.parseExportSpecifiers = function(exports) {\n  var nodes = [], first = true;\n  // export { x, y as z } [from '...']\n  this.expect(types$1.braceL);\n  while (!this.eat(types$1.braceR)) {\n    if (!first) {\n      this.expect(types$1.comma);\n      if (this.afterTrailingComma(types$1.braceR)) { break }\n    } else { first = false; }\n\n    var node = this.startNode();\n    node.local = this.parseModuleExportName();\n    node.exported = this.eatContextual(\"as\") ? this.parseModuleExportName() : node.local;\n    this.checkExport(\n      exports,\n      node.exported,\n      node.exported.start\n    );\n    nodes.push(this.finishNode(node, \"ExportSpecifier\"));\n  }\n  return nodes\n};\n\n// Parses import declaration.\n\npp$8.parseImport = function(node) {\n  this.next();\n  // import '...'\n  if (this.type === types$1.string) {\n    node.specifiers = empty$1;\n    node.source = this.parseExprAtom();\n  } else {\n    node.specifiers = this.parseImportSpecifiers();\n    this.expectContextual(\"from\");\n    node.source = this.type === types$1.string ? this.parseExprAtom() : this.unexpected();\n  }\n  this.semicolon();\n  return this.finishNode(node, \"ImportDeclaration\")\n};\n\n// Parses a comma-separated list of module imports.\n\npp$8.parseImportSpecifiers = function() {\n  var nodes = [], first = true;\n  if (this.type === types$1.name) {\n    // import defaultObj, { x, y as z } from '...'\n    var node = this.startNode();\n    node.local = this.parseIdent();\n    this.checkLValSimple(node.local, BIND_LEXICAL);\n    nodes.push(this.finishNode(node, \"ImportDefaultSpecifier\"));\n    if (!this.eat(types$1.comma)) { return nodes }\n  }\n  if (this.type === types$1.star) {\n    var node$1 = this.startNode();\n    this.next();\n    this.expectContextual(\"as\");\n    node$1.local = this.parseIdent();\n    this.checkLValSimple(node$1.local, BIND_LEXICAL);\n    nodes.push(this.finishNode(node$1, \"ImportNamespaceSpecifier\"));\n    return nodes\n  }\n  this.expect(types$1.braceL);\n  while (!this.eat(types$1.braceR)) {\n    if (!first) {\n      this.expect(types$1.comma);\n      if (this.afterTrailingComma(types$1.braceR)) { break }\n    } else { first = false; }\n\n    var node$2 = this.startNode();\n    node$2.imported = this.parseModuleExportName();\n    if (this.eatContextual(\"as\")) {\n      node$2.local = this.parseIdent();\n    } else {\n      this.checkUnreserved(node$2.imported);\n      node$2.local = node$2.imported;\n    }\n    this.checkLValSimple(node$2.local, BIND_LEXICAL);\n    nodes.push(this.finishNode(node$2, \"ImportSpecifier\"));\n  }\n  return nodes\n};\n\npp$8.parseModuleExportName = function() {\n  if (this.options.ecmaVersion >= 13 && this.type === types$1.string) {\n    var stringLiteral = this.parseLiteral(this.value);\n    if (loneSurrogate.test(stringLiteral.value)) {\n      this.raise(stringLiteral.start, \"An export name cannot include a lone surrogate.\");\n    }\n    return stringLiteral\n  }\n  return this.parseIdent(true)\n};\n\n// Set `ExpressionStatement#directive` property for directive prologues.\npp$8.adaptDirectivePrologue = function(statements) {\n  for (var i = 0; i < statements.length && this.isDirectiveCandidate(statements[i]); ++i) {\n    statements[i].directive = statements[i].expression.raw.slice(1, -1);\n  }\n};\npp$8.isDirectiveCandidate = function(statement) {\n  return (\n    this.options.ecmaVersion >= 5 &&\n    statement.type === \"ExpressionStatement\" &&\n    statement.expression.type === \"Literal\" &&\n    typeof statement.expression.value === \"string\" &&\n    // Reject parenthesized strings.\n    (this.input[statement.start] === \"\\\"\" || this.input[statement.start] === \"'\")\n  )\n};\n\nvar pp$7 = Parser.prototype;\n\n// Convert existing expression atom to assignable pattern\n// if possible.\n\npp$7.toAssignable = function(node, isBinding, refDestructuringErrors) {\n  if (this.options.ecmaVersion >= 6 && node) {\n    switch (node.type) {\n    case \"Identifier\":\n      if (this.inAsync && node.name === \"await\")\n        { this.raise(node.start, \"Cannot use 'await' as identifier inside an async function\"); }\n      break\n\n    case \"ObjectPattern\":\n    case \"ArrayPattern\":\n    case \"AssignmentPattern\":\n    case \"RestElement\":\n      break\n\n    case \"ObjectExpression\":\n      node.type = \"ObjectPattern\";\n      if (refDestructuringErrors) { this.checkPatternErrors(refDestructuringErrors, true); }\n      for (var i = 0, list = node.properties; i < list.length; i += 1) {\n        var prop = list[i];\n\n      this.toAssignable(prop, isBinding);\n        // Early error:\n        //   AssignmentRestProperty[Yield, Await] :\n        //     `...` DestructuringAssignmentTarget[Yield, Await]\n        //\n        //   It is a Syntax Error if |DestructuringAssignmentTarget| is an |ArrayLiteral| or an |ObjectLiteral|.\n        if (\n          prop.type === \"RestElement\" &&\n          (prop.argument.type === \"ArrayPattern\" || prop.argument.type === \"ObjectPattern\")\n        ) {\n          this.raise(prop.argument.start, \"Unexpected token\");\n        }\n      }\n      break\n\n    case \"Property\":\n      // AssignmentProperty has type === \"Property\"\n      if (node.kind !== \"init\") { this.raise(node.key.start, \"Object pattern can't contain getter or setter\"); }\n      this.toAssignable(node.value, isBinding);\n      break\n\n    case \"ArrayExpression\":\n      node.type = \"ArrayPattern\";\n      if (refDestructuringErrors) { this.checkPatternErrors(refDestructuringErrors, true); }\n      this.toAssignableList(node.elements, isBinding);\n      break\n\n    case \"SpreadElement\":\n      node.type = \"RestElement\";\n      this.toAssignable(node.argument, isBinding);\n      if (node.argument.type === \"AssignmentPattern\")\n        { this.raise(node.argument.start, \"Rest elements cannot have a default value\"); }\n      break\n\n    case \"AssignmentExpression\":\n      if (node.operator !== \"=\") { this.raise(node.left.end, \"Only '=' operator can be used for specifying default value.\"); }\n      node.type = \"AssignmentPattern\";\n      delete node.operator;\n      this.toAssignable(node.left, isBinding);\n      break\n\n    case \"ParenthesizedExpression\":\n      this.toAssignable(node.expression, isBinding, refDestructuringErrors);\n      break\n\n    case \"ChainExpression\":\n      this.raiseRecoverable(node.start, \"Optional chaining cannot appear in left-hand side\");\n      break\n\n    case \"MemberExpression\":\n      if (!isBinding) { break }\n\n    default:\n      this.raise(node.start, \"Assigning to rvalue\");\n    }\n  } else if (refDestructuringErrors) { this.checkPatternErrors(refDestructuringErrors, true); }\n  return node\n};\n\n// Convert list of expression atoms to binding list.\n\npp$7.toAssignableList = function(exprList, isBinding) {\n  var end = exprList.length;\n  for (var i = 0; i < end; i++) {\n    var elt = exprList[i];\n    if (elt) { this.toAssignable(elt, isBinding); }\n  }\n  if (end) {\n    var last = exprList[end - 1];\n    if (this.options.ecmaVersion === 6 && isBinding && last && last.type === \"RestElement\" && last.argument.type !== \"Identifier\")\n      { this.unexpected(last.argument.start); }\n  }\n  return exprList\n};\n\n// Parses spread element.\n\npp$7.parseSpread = function(refDestructuringErrors) {\n  var node = this.startNode();\n  this.next();\n  node.argument = this.parseMaybeAssign(false, refDestructuringErrors);\n  return this.finishNode(node, \"SpreadElement\")\n};\n\npp$7.parseRestBinding = function() {\n  var node = this.startNode();\n  this.next();\n\n  // RestElement inside of a function parameter must be an identifier\n  if (this.options.ecmaVersion === 6 && this.type !== types$1.name)\n    { this.unexpected(); }\n\n  node.argument = this.parseBindingAtom();\n\n  return this.finishNode(node, \"RestElement\")\n};\n\n// Parses lvalue (assignable) atom.\n\npp$7.parseBindingAtom = function() {\n  if (this.options.ecmaVersion >= 6) {\n    switch (this.type) {\n    case types$1.bracketL:\n      var node = this.startNode();\n      this.next();\n      node.elements = this.parseBindingList(types$1.bracketR, true, true);\n      return this.finishNode(node, \"ArrayPattern\")\n\n    case types$1.braceL:\n      return this.parseObj(true)\n    }\n  }\n  return this.parseIdent()\n};\n\npp$7.parseBindingList = function(close, allowEmpty, allowTrailingComma) {\n  var elts = [], first = true;\n  while (!this.eat(close)) {\n    if (first) { first = false; }\n    else { this.expect(types$1.comma); }\n    if (allowEmpty && this.type === types$1.comma) {\n      elts.push(null);\n    } else if (allowTrailingComma && this.afterTrailingComma(close)) {\n      break\n    } else if (this.type === types$1.ellipsis) {\n      var rest = this.parseRestBinding();\n      this.parseBindingListItem(rest);\n      elts.push(rest);\n      if (this.type === types$1.comma) { this.raise(this.start, \"Comma is not permitted after the rest element\"); }\n      this.expect(close);\n      break\n    } else {\n      var elem = this.parseMaybeDefault(this.start, this.startLoc);\n      this.parseBindingListItem(elem);\n      elts.push(elem);\n    }\n  }\n  return elts\n};\n\npp$7.parseBindingListItem = function(param) {\n  return param\n};\n\n// Parses assignment pattern around given atom if possible.\n\npp$7.parseMaybeDefault = function(startPos, startLoc, left) {\n  left = left || this.parseBindingAtom();\n  if (this.options.ecmaVersion < 6 || !this.eat(types$1.eq)) { return left }\n  var node = this.startNodeAt(startPos, startLoc);\n  node.left = left;\n  node.right = this.parseMaybeAssign();\n  return this.finishNode(node, \"AssignmentPattern\")\n};\n\n// The following three functions all verify that a node is an lvalue \u2014\n// something that can be bound, or assigned to. In order to do so, they perform\n// a variety of checks:\n//\n// - Check that none of the bound/assigned-to identifiers are reserved words.\n// - Record name declarations for bindings in the appropriate scope.\n// - Check duplicate argument names, if checkClashes is set.\n//\n// If a complex binding pattern is encountered (e.g., object and array\n// destructuring), the entire pattern is recursively checked.\n//\n// There are three versions of checkLVal*() appropriate for different\n// circumstances:\n//\n// - checkLValSimple() shall be used if the syntactic construct supports\n//   nothing other than identifiers and member expressions. Parenthesized\n//   expressions are also correctly handled. This is generally appropriate for\n//   constructs for which the spec says\n//\n//   > It is a Syntax Error if AssignmentTargetType of [the production] is not\n//   > simple.\n//\n//   It is also appropriate for checking if an identifier is valid and not\n//   defined elsewhere, like import declarations or function/class identifiers.\n//\n//   Examples where this is used include:\n//     a += \u2026;\n//     import a from '\u2026';\n//   where a is the node to be checked.\n//\n// - checkLValPattern() shall be used if the syntactic construct supports\n//   anything checkLValSimple() supports, as well as object and array\n//   destructuring patterns. This is generally appropriate for constructs for\n//   which the spec says\n//\n//   > It is a Syntax Error if [the production] is neither an ObjectLiteral nor\n//   > an ArrayLiteral and AssignmentTargetType of [the production] is not\n//   > simple.\n//\n//   Examples where this is used include:\n//     (a = \u2026);\n//     const a = \u2026;\n//     try { \u2026 } catch (a) { \u2026 }\n//   where a is the node to be checked.\n//\n// - checkLValInnerPattern() shall be used if the syntactic construct supports\n//   anything checkLValPattern() supports, as well as default assignment\n//   patterns, rest elements, and other constructs that may appear within an\n//   object or array destructuring pattern.\n//\n//   As a special case, function parameters also use checkLValInnerPattern(),\n//   as they also support defaults and rest constructs.\n//\n// These functions deliberately support both assignment and binding constructs,\n// as the logic for both is exceedingly similar. If the node is the target of\n// an assignment, then bindingType should be set to BIND_NONE. Otherwise, it\n// should be set to the appropriate BIND_* constant, like BIND_VAR or\n// BIND_LEXICAL.\n//\n// If the function is called with a non-BIND_NONE bindingType, then\n// additionally a checkClashes object may be specified to allow checking for\n// duplicate argument names. checkClashes is ignored if the provided construct\n// is an assignment (i.e., bindingType is BIND_NONE).\n\npp$7.checkLValSimple = function(expr, bindingType, checkClashes) {\n  if ( bindingType === void 0 ) bindingType = BIND_NONE;\n\n  var isBind = bindingType !== BIND_NONE;\n\n  switch (expr.type) {\n  case \"Identifier\":\n    if (this.strict && this.reservedWordsStrictBind.test(expr.name))\n      { this.raiseRecoverable(expr.start, (isBind ? \"Binding \" : \"Assigning to \") + expr.name + \" in strict mode\"); }\n    if (isBind) {\n      if (bindingType === BIND_LEXICAL && expr.name === \"let\")\n        { this.raiseRecoverable(expr.start, \"let is disallowed as a lexically bound name\"); }\n      if (checkClashes) {\n        if (hasOwn(checkClashes, expr.name))\n          { this.raiseRecoverable(expr.start, \"Argument name clash\"); }\n        checkClashes[expr.name] = true;\n      }\n      if (bindingType !== BIND_OUTSIDE) { this.declareName(expr.name, bindingType, expr.start); }\n    }\n    break\n\n  case \"ChainExpression\":\n    this.raiseRecoverable(expr.start, \"Optional chaining cannot appear in left-hand side\");\n    break\n\n  case \"MemberExpression\":\n    if (isBind) { this.raiseRecoverable(expr.start, \"Binding member expression\"); }\n    break\n\n  case \"ParenthesizedExpression\":\n    if (isBind) { this.raiseRecoverable(expr.start, \"Binding parenthesized expression\"); }\n    return this.checkLValSimple(expr.expression, bindingType, checkClashes)\n\n  default:\n    this.raise(expr.start, (isBind ? \"Binding\" : \"Assigning to\") + \" rvalue\");\n  }\n};\n\npp$7.checkLValPattern = function(expr, bindingType, checkClashes) {\n  if ( bindingType === void 0 ) bindingType = BIND_NONE;\n\n  switch (expr.type) {\n  case \"ObjectPattern\":\n    for (var i = 0, list = expr.properties; i < list.length; i += 1) {\n      var prop = list[i];\n\n    this.checkLValInnerPattern(prop, bindingType, checkClashes);\n    }\n    break\n\n  case \"ArrayPattern\":\n    for (var i$1 = 0, list$1 = expr.elements; i$1 < list$1.length; i$1 += 1) {\n      var elem = list$1[i$1];\n\n    if (elem) { this.checkLValInnerPattern(elem, bindingType, checkClashes); }\n    }\n    break\n\n  default:\n    this.checkLValSimple(expr, bindingType, checkClashes);\n  }\n};\n\npp$7.checkLValInnerPattern = function(expr, bindingType, checkClashes) {\n  if ( bindingType === void 0 ) bindingType = BIND_NONE;\n\n  switch (expr.type) {\n  case \"Property\":\n    // AssignmentProperty has type === \"Property\"\n    this.checkLValInnerPattern(expr.value, bindingType, checkClashes);\n    break\n\n  case \"AssignmentPattern\":\n    this.checkLValPattern(expr.left, bindingType, checkClashes);\n    break\n\n  case \"RestElement\":\n    this.checkLValPattern(expr.argument, bindingType, checkClashes);\n    break\n\n  default:\n    this.checkLValPattern(expr, bindingType, checkClashes);\n  }\n};\n\n// The algorithm used to determine whether a regexp can appear at a\n\nvar TokContext = function TokContext(token, isExpr, preserveSpace, override, generator) {\n  this.token = token;\n  this.isExpr = !!isExpr;\n  this.preserveSpace = !!preserveSpace;\n  this.override = override;\n  this.generator = !!generator;\n};\n\nvar types = {\n  b_stat: new TokContext(\"{\", false),\n  b_expr: new TokContext(\"{\", true),\n  b_tmpl: new TokContext(\"${\", false),\n  p_stat: new TokContext(\"(\", false),\n  p_expr: new TokContext(\"(\", true),\n  q_tmpl: new TokContext(\"`\", true, true, function (p) { return p.tryReadTemplateToken(); }),\n  f_stat: new TokContext(\"function\", false),\n  f_expr: new TokContext(\"function\", true),\n  f_expr_gen: new TokContext(\"function\", true, false, null, true),\n  f_gen: new TokContext(\"function\", false, false, null, true)\n};\n\nvar pp$6 = Parser.prototype;\n\npp$6.initialContext = function() {\n  return [types.b_stat]\n};\n\npp$6.curContext = function() {\n  return this.context[this.context.length - 1]\n};\n\npp$6.braceIsBlock = function(prevType) {\n  var parent = this.curContext();\n  if (parent === types.f_expr || parent === types.f_stat)\n    { return true }\n  if (prevType === types$1.colon && (parent === types.b_stat || parent === types.b_expr))\n    { return !parent.isExpr }\n\n  // The check for `tt.name && exprAllowed` detects whether we are\n  // after a `yield` or `of` construct. See the `updateContext` for\n  // `tt.name`.\n  if (prevType === types$1._return || prevType === types$1.name && this.exprAllowed)\n    { return lineBreak.test(this.input.slice(this.lastTokEnd, this.start)) }\n  if (prevType === types$1._else || prevType === types$1.semi || prevType === types$1.eof || prevType === types$1.parenR || prevType === types$1.arrow)\n    { return true }\n  if (prevType === types$1.braceL)\n    { return parent === types.b_stat }\n  if (prevType === types$1._var || prevType === types$1._const || prevType === types$1.name)\n    { return false }\n  return !this.exprAllowed\n};\n\npp$6.inGeneratorContext = function() {\n  for (var i = this.context.length - 1; i >= 1; i--) {\n    var context = this.context[i];\n    if (context.token === \"function\")\n      { return context.generator }\n  }\n  return false\n};\n\npp$6.updateContext = function(prevType) {\n  var update, type = this.type;\n  if (type.keyword && prevType === types$1.dot)\n    { this.exprAllowed = false; }\n  else if (update = type.updateContext)\n    { update.call(this, prevType); }\n  else\n    { this.exprAllowed = type.beforeExpr; }\n};\n\n// Used to handle egde cases when token context could not be inferred correctly during tokenization phase\n\npp$6.overrideContext = function(tokenCtx) {\n  if (this.curContext() !== tokenCtx) {\n    this.context[this.context.length - 1] = tokenCtx;\n  }\n};\n\n// Token-specific context update code\n\ntypes$1.parenR.updateContext = types$1.braceR.updateContext = function() {\n  if (this.context.length === 1) {\n    this.exprAllowed = true;\n    return\n  }\n  var out = this.context.pop();\n  if (out === types.b_stat && this.curContext().token === \"function\") {\n    out = this.context.pop();\n  }\n  this.exprAllowed = !out.isExpr;\n};\n\ntypes$1.braceL.updateContext = function(prevType) {\n  this.context.push(this.braceIsBlock(prevType) ? types.b_stat : types.b_expr);\n  this.exprAllowed = true;\n};\n\ntypes$1.dollarBraceL.updateContext = function() {\n  this.context.push(types.b_tmpl);\n  this.exprAllowed = true;\n};\n\ntypes$1.parenL.updateContext = function(prevType) {\n  var statementParens = prevType === types$1._if || prevType === types$1._for || prevType === types$1._with || prevType === types$1._while;\n  this.context.push(statementParens ? types.p_stat : types.p_expr);\n  this.exprAllowed = true;\n};\n\ntypes$1.incDec.updateContext = function() {\n  // tokExprAllowed stays unchanged\n};\n\ntypes$1._function.updateContext = types$1._class.updateContext = function(prevType) {\n  if (prevType.beforeExpr && prevType !== types$1._else &&\n      !(prevType === types$1.semi && this.curContext() !== types.p_stat) &&\n      !(prevType === types$1._return && lineBreak.test(this.input.slice(this.lastTokEnd, this.start))) &&\n      !((prevType === types$1.colon || prevType === types$1.braceL) && this.curContext() === types.b_stat))\n    { this.context.push(types.f_expr); }\n  else\n    { this.context.push(types.f_stat); }\n  this.exprAllowed = false;\n};\n\ntypes$1.backQuote.updateContext = function() {\n  if (this.curContext() === types.q_tmpl)\n    { this.context.pop(); }\n  else\n    { this.context.push(types.q_tmpl); }\n  this.exprAllowed = false;\n};\n\ntypes$1.star.updateContext = function(prevType) {\n  if (prevType === types$1._function) {\n    var index = this.context.length - 1;\n    if (this.context[index] === types.f_expr)\n      { this.context[index] = types.f_expr_gen; }\n    else\n      { this.context[index] = types.f_gen; }\n  }\n  this.exprAllowed = true;\n};\n\ntypes$1.name.updateContext = function(prevType) {\n  var allowed = false;\n  if (this.options.ecmaVersion >= 6 && prevType !== types$1.dot) {\n    if (this.value === \"of\" && !this.exprAllowed ||\n        this.value === \"yield\" && this.inGeneratorContext())\n      { allowed = true; }\n  }\n  this.exprAllowed = allowed;\n};\n\n// A recursive descent parser operates by defining functions for all\n\nvar pp$5 = Parser.prototype;\n\n// Check if property name clashes with already added.\n// Object/class getters and setters are not allowed to clash \u2014\n// either with each other or with an init property \u2014 and in\n// strict mode, init properties are also not allowed to be repeated.\n\npp$5.checkPropClash = function(prop, propHash, refDestructuringErrors) {\n  if (this.options.ecmaVersion >= 9 && prop.type === \"SpreadElement\")\n    { return }\n  if (this.options.ecmaVersion >= 6 && (prop.computed || prop.method || prop.shorthand))\n    { return }\n  var key = prop.key;\n  var name;\n  switch (key.type) {\n  case \"Identifier\": name = key.name; break\n  case \"Literal\": name = String(key.value); break\n  default: return\n  }\n  var kind = prop.kind;\n  if (this.options.ecmaVersion >= 6) {\n    if (name === \"__proto__\" && kind === \"init\") {\n      if (propHash.proto) {\n        if (refDestructuringErrors) {\n          if (refDestructuringErrors.doubleProto < 0) {\n            refDestructuringErrors.doubleProto = key.start;\n          }\n        } else {\n          this.raiseRecoverable(key.start, \"Redefinition of __proto__ property\");\n        }\n      }\n      propHash.proto = true;\n    }\n    return\n  }\n  name = \"$\" + name;\n  var other = propHash[name];\n  if (other) {\n    var redefinition;\n    if (kind === \"init\") {\n      redefinition = this.strict && other.init || other.get || other.set;\n    } else {\n      redefinition = other.init || other[kind];\n    }\n    if (redefinition)\n      { this.raiseRecoverable(key.start, \"Redefinition of property\"); }\n  } else {\n    other = propHash[name] = {\n      init: false,\n      get: false,\n      set: false\n    };\n  }\n  other[kind] = true;\n};\n\n// ### Expression parsing\n\n// These nest, from the most general expression type at the top to\n// 'atomic', nondivisible expression types at the bottom. Most of\n// the functions will simply let the function(s) below them parse,\n// and, *if* the syntactic construct they handle is present, wrap\n// the AST node that the inner parser gave them in another node.\n\n// Parse a full expression. The optional arguments are used to\n// forbid the `in` operator (in for loops initalization expressions)\n// and provide reference for storing '=' operator inside shorthand\n// property assignment in contexts where both object expression\n// and object pattern might appear (so it's possible to raise\n// delayed syntax error at correct position).\n\npp$5.parseExpression = function(forInit, refDestructuringErrors) {\n  var startPos = this.start, startLoc = this.startLoc;\n  var expr = this.parseMaybeAssign(forInit, refDestructuringErrors);\n  if (this.type === types$1.comma) {\n    var node = this.startNodeAt(startPos, startLoc);\n    node.expressions = [expr];\n    while (this.eat(types$1.comma)) { node.expressions.push(this.parseMaybeAssign(forInit, refDestructuringErrors)); }\n    return this.finishNode(node, \"SequenceExpression\")\n  }\n  return expr\n};\n\n// Parse an assignment expression. This includes applications of\n// operators like `+=`.\n\npp$5.parseMaybeAssign = function(forInit, refDestructuringErrors, afterLeftParse) {\n  if (this.isContextual(\"yield\")) {\n    if (this.inGenerator) { return this.parseYield(forInit) }\n    // The tokenizer will assume an expression is allowed after\n    // `yield`, but this isn't that kind of yield\n    else { this.exprAllowed = false; }\n  }\n\n  var ownDestructuringErrors = false, oldParenAssign = -1, oldTrailingComma = -1, oldDoubleProto = -1;\n  if (refDestructuringErrors) {\n    oldParenAssign = refDestructuringErrors.parenthesizedAssign;\n    oldTrailingComma = refDestructuringErrors.trailingComma;\n    oldDoubleProto = refDestructuringErrors.doubleProto;\n    refDestructuringErrors.parenthesizedAssign = refDestructuringErrors.trailingComma = -1;\n  } else {\n    refDestructuringErrors = new DestructuringErrors;\n    ownDestructuringErrors = true;\n  }\n\n  var startPos = this.start, startLoc = this.startLoc;\n  if (this.type === types$1.parenL || this.type === types$1.name) {\n    this.potentialArrowAt = this.start;\n    this.potentialArrowInForAwait = forInit === \"await\";\n  }\n  var left = this.parseMaybeConditional(forInit, refDestructuringErrors);\n  if (afterLeftParse) { left = afterLeftParse.call(this, left, startPos, startLoc); }\n  if (this.type.isAssign) {\n    var node = this.startNodeAt(startPos, startLoc);\n    node.operator = this.value;\n    if (this.type === types$1.eq)\n      { left = this.toAssignable(left, false, refDestructuringErrors); }\n    if (!ownDestructuringErrors) {\n      refDestructuringErrors.parenthesizedAssign = refDestructuringErrors.trailingComma = refDestructuringErrors.doubleProto = -1;\n    }\n    if (refDestructuringErrors.shorthandAssign >= left.start)\n      { refDestructuringErrors.shorthandAssign = -1; } // reset because shorthand default was used correctly\n    if (this.type === types$1.eq)\n      { this.checkLValPattern(left); }\n    else\n      { this.checkLValSimple(left); }\n    node.left = left;\n    this.next();\n    node.right = this.parseMaybeAssign(forInit);\n    if (oldDoubleProto > -1) { refDestructuringErrors.doubleProto = oldDoubleProto; }\n    return this.finishNode(node, \"AssignmentExpression\")\n  } else {\n    if (ownDestructuringErrors) { this.checkExpressionErrors(refDestructuringErrors, true); }\n  }\n  if (oldParenAssign > -1) { refDestructuringErrors.parenthesizedAssign = oldParenAssign; }\n  if (oldTrailingComma > -1) { refDestructuringErrors.trailingComma = oldTrailingComma; }\n  return left\n};\n\n// Parse a ternary conditional (`?:`) operator.\n\npp$5.parseMaybeConditional = function(forInit, refDestructuringErrors) {\n  var startPos = this.start, startLoc = this.startLoc;\n  var expr = this.parseExprOps(forInit, refDestructuringErrors);\n  if (this.checkExpressionErrors(refDestructuringErrors)) { return expr }\n  if (this.eat(types$1.question)) {\n    var node = this.startNodeAt(startPos, startLoc);\n    node.test = expr;\n    node.consequent = this.parseMaybeAssign();\n    this.expect(types$1.colon);\n    node.alternate = this.parseMaybeAssign(forInit);\n    return this.finishNode(node, \"ConditionalExpression\")\n  }\n  return expr\n};\n\n// Start the precedence parser.\n\npp$5.parseExprOps = function(forInit, refDestructuringErrors) {\n  var startPos = this.start, startLoc = this.startLoc;\n  var expr = this.parseMaybeUnary(refDestructuringErrors, false, false, forInit);\n  if (this.checkExpressionErrors(refDestructuringErrors)) { return expr }\n  return expr.start === startPos && expr.type === \"ArrowFunctionExpression\" ? expr : this.parseExprOp(expr, startPos, startLoc, -1, forInit)\n};\n\n// Parse binary operators with the operator precedence parsing\n// algorithm. `left` is the left-hand side of the operator.\n// `minPrec` provides context that allows the function to stop and\n// defer further parser to one of its callers when it encounters an\n// operator that has a lower precedence than the set it is parsing.\n\npp$5.parseExprOp = function(left, leftStartPos, leftStartLoc, minPrec, forInit) {\n  var prec = this.type.binop;\n  if (prec != null && (!forInit || this.type !== types$1._in)) {\n    if (prec > minPrec) {\n      var logical = this.type === types$1.logicalOR || this.type === types$1.logicalAND;\n      var coalesce = this.type === types$1.coalesce;\n      if (coalesce) {\n        // Handle the precedence of `tt.coalesce` as equal to the range of logical expressions.\n        // In other words, `node.right` shouldn't contain logical expressions in order to check the mixed error.\n        prec = types$1.logicalAND.binop;\n      }\n      var op = this.value;\n      this.next();\n      var startPos = this.start, startLoc = this.startLoc;\n      var right = this.parseExprOp(this.parseMaybeUnary(null, false, false, forInit), startPos, startLoc, prec, forInit);\n      var node = this.buildBinary(leftStartPos, leftStartLoc, left, right, op, logical || coalesce);\n      if ((logical && this.type === types$1.coalesce) || (coalesce && (this.type === types$1.logicalOR || this.type === types$1.logicalAND))) {\n        this.raiseRecoverable(this.start, \"Logical expressions and coalesce expressions cannot be mixed. Wrap either by parentheses\");\n      }\n      return this.parseExprOp(node, leftStartPos, leftStartLoc, minPrec, forInit)\n    }\n  }\n  return left\n};\n\npp$5.buildBinary = function(startPos, startLoc, left, right, op, logical) {\n  if (right.type === \"PrivateIdentifier\") { this.raise(right.start, \"Private identifier can only be left side of binary expression\"); }\n  var node = this.startNodeAt(startPos, startLoc);\n  node.left = left;\n  node.operator = op;\n  node.right = right;\n  return this.finishNode(node, logical ? \"LogicalExpression\" : \"BinaryExpression\")\n};\n\n// Parse unary operators, both prefix and postfix.\n\npp$5.parseMaybeUnary = function(refDestructuringErrors, sawUnary, incDec, forInit) {\n  var startPos = this.start, startLoc = this.startLoc, expr;\n  if (this.isContextual(\"await\") && this.canAwait) {\n    expr = this.parseAwait(forInit);\n    sawUnary = true;\n  } else if (this.type.prefix) {\n    var node = this.startNode(), update = this.type === types$1.incDec;\n    node.operator = this.value;\n    node.prefix = true;\n    this.next();\n    node.argument = this.parseMaybeUnary(null, true, update, forInit);\n    this.checkExpressionErrors(refDestructuringErrors, true);\n    if (update) { this.checkLValSimple(node.argument); }\n    else if (this.strict && node.operator === \"delete\" &&\n             node.argument.type === \"Identifier\")\n      { this.raiseRecoverable(node.start, \"Deleting local variable in strict mode\"); }\n    else if (node.operator === \"delete\" && isPrivateFieldAccess(node.argument))\n      { this.raiseRecoverable(node.start, \"Private fields can not be deleted\"); }\n    else { sawUnary = true; }\n    expr = this.finishNode(node, update ? \"UpdateExpression\" : \"UnaryExpression\");\n  } else if (!sawUnary && this.type === types$1.privateId) {\n    if (forInit || this.privateNameStack.length === 0) { this.unexpected(); }\n    expr = this.parsePrivateIdent();\n    // only could be private fields in 'in', such as #x in obj\n    if (this.type !== types$1._in) { this.unexpected(); }\n  } else {\n    expr = this.parseExprSubscripts(refDestructuringErrors, forInit);\n    if (this.checkExpressionErrors(refDestructuringErrors)) { return expr }\n    while (this.type.postfix && !this.canInsertSemicolon()) {\n      var node$1 = this.startNodeAt(startPos, startLoc);\n      node$1.operator = this.value;\n      node$1.prefix = false;\n      node$1.argument = expr;\n      this.checkLValSimple(expr);\n      this.next();\n      expr = this.finishNode(node$1, \"UpdateExpression\");\n    }\n  }\n\n  if (!incDec && this.eat(types$1.starstar)) {\n    if (sawUnary)\n      { this.unexpected(this.lastTokStart); }\n    else\n      { return this.buildBinary(startPos, startLoc, expr, this.parseMaybeUnary(null, false, false, forInit), \"**\", false) }\n  } else {\n    return expr\n  }\n};\n\nfunction isPrivateFieldAccess(node) {\n  return (\n    node.type === \"MemberExpression\" && node.property.type === \"PrivateIdentifier\" ||\n    node.type === \"ChainExpression\" && isPrivateFieldAccess(node.expression)\n  )\n}\n\n// Parse call, dot, and `[]`-subscript expressions.\n\npp$5.parseExprSubscripts = function(refDestructuringErrors, forInit) {\n  var startPos = this.start, startLoc = this.startLoc;\n  var expr = this.parseExprAtom(refDestructuringErrors, forInit);\n  if (expr.type === \"ArrowFunctionExpression\" && this.input.slice(this.lastTokStart, this.lastTokEnd) !== \")\")\n    { return expr }\n  var result = this.parseSubscripts(expr, startPos, startLoc, false, forInit);\n  if (refDestructuringErrors && result.type === \"MemberExpression\") {\n    if (refDestructuringErrors.parenthesizedAssign >= result.start) { refDestructuringErrors.parenthesizedAssign = -1; }\n    if (refDestructuringErrors.parenthesizedBind >= result.start) { refDestructuringErrors.parenthesizedBind = -1; }\n    if (refDestructuringErrors.trailingComma >= result.start) { refDestructuringErrors.trailingComma = -1; }\n  }\n  return result\n};\n\npp$5.parseSubscripts = function(base, startPos, startLoc, noCalls, forInit) {\n  var maybeAsyncArrow = this.options.ecmaVersion >= 8 && base.type === \"Identifier\" && base.name === \"async\" &&\n      this.lastTokEnd === base.end && !this.canInsertSemicolon() && base.end - base.start === 5 &&\n      this.potentialArrowAt === base.start;\n  var optionalChained = false;\n\n  while (true) {\n    var element = this.parseSubscript(base, startPos, startLoc, noCalls, maybeAsyncArrow, optionalChained, forInit);\n\n    if (element.optional) { optionalChained = true; }\n    if (element === base || element.type === \"ArrowFunctionExpression\") {\n      if (optionalChained) {\n        var chainNode = this.startNodeAt(startPos, startLoc);\n        chainNode.expression = element;\n        element = this.finishNode(chainNode, \"ChainExpression\");\n      }\n      return element\n    }\n\n    base = element;\n  }\n};\n\npp$5.parseSubscript = function(base, startPos, startLoc, noCalls, maybeAsyncArrow, optionalChained, forInit) {\n  var optionalSupported = this.options.ecmaVersion >= 11;\n  var optional = optionalSupported && this.eat(types$1.questionDot);\n  if (noCalls && optional) { this.raise(this.lastTokStart, \"Optional chaining cannot appear in the callee of new expressions\"); }\n\n  var computed = this.eat(types$1.bracketL);\n  if (computed || (optional && this.type !== types$1.parenL && this.type !== types$1.backQuote) || this.eat(types$1.dot)) {\n    var node = this.startNodeAt(startPos, startLoc);\n    node.object = base;\n    if (computed) {\n      node.property = this.parseExpression();\n      this.expect(types$1.bracketR);\n    } else if (this.type === types$1.privateId && base.type !== \"Super\") {\n      node.property = this.parsePrivateIdent();\n    } else {\n      node.property = this.parseIdent(this.options.allowReserved !== \"never\");\n    }\n    node.computed = !!computed;\n    if (optionalSupported) {\n      node.optional = optional;\n    }\n    base = this.finishNode(node, \"MemberExpression\");\n  } else if (!noCalls && this.eat(types$1.parenL)) {\n    var refDestructuringErrors = new DestructuringErrors, oldYieldPos = this.yieldPos, oldAwaitPos = this.awaitPos, oldAwaitIdentPos = this.awaitIdentPos;\n    this.yieldPos = 0;\n    this.awaitPos = 0;\n    this.awaitIdentPos = 0;\n    var exprList = this.parseExprList(types$1.parenR, this.options.ecmaVersion >= 8, false, refDestructuringErrors);\n    if (maybeAsyncArrow && !optional && !this.canInsertSemicolon() && this.eat(types$1.arrow)) {\n      this.checkPatternErrors(refDestructuringErrors, false);\n      this.checkYieldAwaitInDefaultParams();\n      if (this.awaitIdentPos > 0)\n        { this.raise(this.awaitIdentPos, \"Cannot use 'await' as identifier inside an async function\"); }\n      this.yieldPos = oldYieldPos;\n      this.awaitPos = oldAwaitPos;\n      this.awaitIdentPos = oldAwaitIdentPos;\n      return this.parseArrowExpression(this.startNodeAt(startPos, startLoc), exprList, true, forInit)\n    }\n    this.checkExpressionErrors(refDestructuringErrors, true);\n    this.yieldPos = oldYieldPos || this.yieldPos;\n    this.awaitPos = oldAwaitPos || this.awaitPos;\n    this.awaitIdentPos = oldAwaitIdentPos || this.awaitIdentPos;\n    var node$1 = this.startNodeAt(startPos, startLoc);\n    node$1.callee = base;\n    node$1.arguments = exprList;\n    if (optionalSupported) {\n      node$1.optional = optional;\n    }\n    base = this.finishNode(node$1, \"CallExpression\");\n  } else if (this.type === types$1.backQuote) {\n    if (optional || optionalChained) {\n      this.raise(this.start, \"Optional chaining cannot appear in the tag of tagged template expressions\");\n    }\n    var node$2 = this.startNodeAt(startPos, startLoc);\n    node$2.tag = base;\n    node$2.quasi = this.parseTemplate({isTagged: true});\n    base = this.finishNode(node$2, \"TaggedTemplateExpression\");\n  }\n  return base\n};\n\n// Parse an atomic expression \u2014 either a single token that is an\n// expression, an expression started by a keyword like `function` or\n// `new`, or an expression wrapped in punctuation like `()`, `[]`,\n// or `{}`.\n\npp$5.parseExprAtom = function(refDestructuringErrors, forInit) {\n  // If a division operator appears in an expression position, the\n  // tokenizer got confused, and we force it to read a regexp instead.\n  if (this.type === types$1.slash) { this.readRegexp(); }\n\n  var node, canBeArrow = this.potentialArrowAt === this.start;\n  switch (this.type) {\n  case types$1._super:\n    if (!this.allowSuper)\n      { this.raise(this.start, \"'super' keyword outside a method\"); }\n    node = this.startNode();\n    this.next();\n    if (this.type === types$1.parenL && !this.allowDirectSuper)\n      { this.raise(node.start, \"super() call outside constructor of a subclass\"); }\n    // The `super` keyword can appear at below:\n    // SuperProperty:\n    //     super [ Expression ]\n    //     super . IdentifierName\n    // SuperCall:\n    //     super ( Arguments )\n    if (this.type !== types$1.dot && this.type !== types$1.bracketL && this.type !== types$1.parenL)\n      { this.unexpected(); }\n    return this.finishNode(node, \"Super\")\n\n  case types$1._this:\n    node = this.startNode();\n    this.next();\n    return this.finishNode(node, \"ThisExpression\")\n\n  case types$1.name:\n    var startPos = this.start, startLoc = this.startLoc, containsEsc = this.containsEsc;\n    var id = this.parseIdent(false);\n    if (this.options.ecmaVersion >= 8 && !containsEsc && id.name === \"async\" && !this.canInsertSemicolon() && this.eat(types$1._function)) {\n      this.overrideContext(types.f_expr);\n      return this.parseFunction(this.startNodeAt(startPos, startLoc), 0, false, true, forInit)\n    }\n    if (canBeArrow && !this.canInsertSemicolon()) {\n      if (this.eat(types$1.arrow))\n        { return this.parseArrowExpression(this.startNodeAt(startPos, startLoc), [id], false, forInit) }\n      if (this.options.ecmaVersion >= 8 && id.name === \"async\" && this.type === types$1.name && !containsEsc &&\n          (!this.potentialArrowInForAwait || this.value !== \"of\" || this.containsEsc)) {\n        id = this.parseIdent(false);\n        if (this.canInsertSemicolon() || !this.eat(types$1.arrow))\n          { this.unexpected(); }\n        return this.parseArrowExpression(this.startNodeAt(startPos, startLoc), [id], true, forInit)\n      }\n    }\n    return id\n\n  case types$1.regexp:\n    var value = this.value;\n    node = this.parseLiteral(value.value);\n    node.regex = {pattern: value.pattern, flags: value.flags};\n    return node\n\n  case types$1.num: case types$1.string:\n    return this.parseLiteral(this.value)\n\n  case types$1._null: case types$1._true: case types$1._false:\n    node = this.startNode();\n    node.value = this.type === types$1._null ? null : this.type === types$1._true;\n    node.raw = this.type.keyword;\n    this.next();\n    return this.finishNode(node, \"Literal\")\n\n  case types$1.parenL:\n    var start = this.start, expr = this.parseParenAndDistinguishExpression(canBeArrow, forInit);\n    if (refDestructuringErrors) {\n      if (refDestructuringErrors.parenthesizedAssign < 0 && !this.isSimpleAssignTarget(expr))\n        { refDestructuringErrors.parenthesizedAssign = start; }\n      if (refDestructuringErrors.parenthesizedBind < 0)\n        { refDestructuringErrors.parenthesizedBind = start; }\n    }\n    return expr\n\n  case types$1.bracketL:\n    node = this.startNode();\n    this.next();\n    node.elements = this.parseExprList(types$1.bracketR, true, true, refDestructuringErrors);\n    return this.finishNode(node, \"ArrayExpression\")\n\n  case types$1.braceL:\n    this.overrideContext(types.b_expr);\n    return this.parseObj(false, refDestructuringErrors)\n\n  case types$1._function:\n    node = this.startNode();\n    this.next();\n    return this.parseFunction(node, 0)\n\n  case types$1._class:\n    return this.parseClass(this.startNode(), false)\n\n  case types$1._new:\n    return this.parseNew()\n\n  case types$1.backQuote:\n    return this.parseTemplate()\n\n  case types$1._import:\n    if (this.options.ecmaVersion >= 11) {\n      return this.parseExprImport()\n    } else {\n      return this.unexpected()\n    }\n\n  default:\n    this.unexpected();\n  }\n};\n\npp$5.parseExprImport = function() {\n  var node = this.startNode();\n\n  // Consume `import` as an identifier for `import.meta`.\n  // Because `this.parseIdent(true)` doesn't check escape sequences, it needs the check of `this.containsEsc`.\n  if (this.containsEsc) { this.raiseRecoverable(this.start, \"Escape sequence in keyword import\"); }\n  var meta = this.parseIdent(true);\n\n  switch (this.type) {\n  case types$1.parenL:\n    return this.parseDynamicImport(node)\n  case types$1.dot:\n    node.meta = meta;\n    return this.parseImportMeta(node)\n  default:\n    this.unexpected();\n  }\n};\n\npp$5.parseDynamicImport = function(node) {\n  this.next(); // skip `(`\n\n  // Parse node.source.\n  node.source = this.parseMaybeAssign();\n\n  // Verify ending.\n  if (!this.eat(types$1.parenR)) {\n    var errorPos = this.start;\n    if (this.eat(types$1.comma) && this.eat(types$1.parenR)) {\n      this.raiseRecoverable(errorPos, \"Trailing comma is not allowed in import()\");\n    } else {\n      this.unexpected(errorPos);\n    }\n  }\n\n  return this.finishNode(node, \"ImportExpression\")\n};\n\npp$5.parseImportMeta = function(node) {\n  this.next(); // skip `.`\n\n  var containsEsc = this.containsEsc;\n  node.property = this.parseIdent(true);\n\n  if (node.property.name !== \"meta\")\n    { this.raiseRecoverable(node.property.start, \"The only valid meta property for import is 'import.meta'\"); }\n  if (containsEsc)\n    { this.raiseRecoverable(node.start, \"'import.meta' must not contain escaped characters\"); }\n  if (this.options.sourceType !== \"module\" && !this.options.allowImportExportEverywhere)\n    { this.raiseRecoverable(node.start, \"Cannot use 'import.meta' outside a module\"); }\n\n  return this.finishNode(node, \"MetaProperty\")\n};\n\npp$5.parseLiteral = function(value) {\n  var node = this.startNode();\n  node.value = value;\n  node.raw = this.input.slice(this.start, this.end);\n  if (node.raw.charCodeAt(node.raw.length - 1) === 110) { node.bigint = node.raw.slice(0, -1).replace(/_/g, \"\"); }\n  this.next();\n  return this.finishNode(node, \"Literal\")\n};\n\npp$5.parseParenExpression = function() {\n  this.expect(types$1.parenL);\n  var val = this.parseExpression();\n  this.expect(types$1.parenR);\n  return val\n};\n\npp$5.parseParenAndDistinguishExpression = function(canBeArrow, forInit) {\n  var startPos = this.start, startLoc = this.startLoc, val, allowTrailingComma = this.options.ecmaVersion >= 8;\n  if (this.options.ecmaVersion >= 6) {\n    this.next();\n\n    var innerStartPos = this.start, innerStartLoc = this.startLoc;\n    var exprList = [], first = true, lastIsComma = false;\n    var refDestructuringErrors = new DestructuringErrors, oldYieldPos = this.yieldPos, oldAwaitPos = this.awaitPos, spreadStart;\n    this.yieldPos = 0;\n    this.awaitPos = 0;\n    // Do not save awaitIdentPos to allow checking awaits nested in parameters\n    while (this.type !== types$1.parenR) {\n      first ? first = false : this.expect(types$1.comma);\n      if (allowTrailingComma && this.afterTrailingComma(types$1.parenR, true)) {\n        lastIsComma = true;\n        break\n      } else if (this.type === types$1.ellipsis) {\n        spreadStart = this.start;\n        exprList.push(this.parseParenItem(this.parseRestBinding()));\n        if (this.type === types$1.comma) { this.raise(this.start, \"Comma is not permitted after the rest element\"); }\n        break\n      } else {\n        exprList.push(this.parseMaybeAssign(false, refDestructuringErrors, this.parseParenItem));\n      }\n    }\n    var innerEndPos = this.lastTokEnd, innerEndLoc = this.lastTokEndLoc;\n    this.expect(types$1.parenR);\n\n    if (canBeArrow && !this.canInsertSemicolon() && this.eat(types$1.arrow)) {\n      this.checkPatternErrors(refDestructuringErrors, false);\n      this.checkYieldAwaitInDefaultParams();\n      this.yieldPos = oldYieldPos;\n      this.awaitPos = oldAwaitPos;\n      return this.parseParenArrowList(startPos, startLoc, exprList, forInit)\n    }\n\n    if (!exprList.length || lastIsComma) { this.unexpected(this.lastTokStart); }\n    if (spreadStart) { this.unexpected(spreadStart); }\n    this.checkExpressionErrors(refDestructuringErrors, true);\n    this.yieldPos = oldYieldPos || this.yieldPos;\n    this.awaitPos = oldAwaitPos || this.awaitPos;\n\n    if (exprList.length > 1) {\n      val = this.startNodeAt(innerStartPos, innerStartLoc);\n      val.expressions = exprList;\n      this.finishNodeAt(val, \"SequenceExpression\", innerEndPos, innerEndLoc);\n    } else {\n      val = exprList[0];\n    }\n  } else {\n    val = this.parseParenExpression();\n  }\n\n  if (this.options.preserveParens) {\n    var par = this.startNodeAt(startPos, startLoc);\n    par.expression = val;\n    return this.finishNode(par, \"ParenthesizedExpression\")\n  } else {\n    return val\n  }\n};\n\npp$5.parseParenItem = function(item) {\n  return item\n};\n\npp$5.parseParenArrowList = function(startPos, startLoc, exprList, forInit) {\n  return this.parseArrowExpression(this.startNodeAt(startPos, startLoc), exprList, false, forInit)\n};\n\n// New's precedence is slightly tricky. It must allow its argument to\n// be a `[]` or dot subscript expression, but not a call \u2014 at least,\n// not without wrapping it in parentheses. Thus, it uses the noCalls\n// argument to parseSubscripts to prevent it from consuming the\n// argument list.\n\nvar empty = [];\n\npp$5.parseNew = function() {\n  if (this.containsEsc) { this.raiseRecoverable(this.start, \"Escape sequence in keyword new\"); }\n  var node = this.startNode();\n  var meta = this.parseIdent(true);\n  if (this.options.ecmaVersion >= 6 && this.eat(types$1.dot)) {\n    node.meta = meta;\n    var containsEsc = this.containsEsc;\n    node.property = this.parseIdent(true);\n    if (node.property.name !== \"target\")\n      { this.raiseRecoverable(node.property.start, \"The only valid meta property for new is 'new.target'\"); }\n    if (containsEsc)\n      { this.raiseRecoverable(node.start, \"'new.target' must not contain escaped characters\"); }\n    if (!this.allowNewDotTarget)\n      { this.raiseRecoverable(node.start, \"'new.target' can only be used in functions and class static block\"); }\n    return this.finishNode(node, \"MetaProperty\")\n  }\n  var startPos = this.start, startLoc = this.startLoc, isImport = this.type === types$1._import;\n  node.callee = this.parseSubscripts(this.parseExprAtom(), startPos, startLoc, true, false);\n  if (isImport && node.callee.type === \"ImportExpression\") {\n    this.raise(startPos, \"Cannot use new with import()\");\n  }\n  if (this.eat(types$1.parenL)) { node.arguments = this.parseExprList(types$1.parenR, this.options.ecmaVersion >= 8, false); }\n  else { node.arguments = empty; }\n  return this.finishNode(node, \"NewExpression\")\n};\n\n// Parse template expression.\n\npp$5.parseTemplateElement = function(ref) {\n  var isTagged = ref.isTagged;\n\n  var elem = this.startNode();\n  if (this.type === types$1.invalidTemplate) {\n    if (!isTagged) {\n      this.raiseRecoverable(this.start, \"Bad escape sequence in untagged template literal\");\n    }\n    elem.value = {\n      raw: this.value,\n      cooked: null\n    };\n  } else {\n    elem.value = {\n      raw: this.input.slice(this.start, this.end).replace(/\\r\\n?/g, \"\\n\"),\n      cooked: this.value\n    };\n  }\n  this.next();\n  elem.tail = this.type === types$1.backQuote;\n  return this.finishNode(elem, \"TemplateElement\")\n};\n\npp$5.parseTemplate = function(ref) {\n  if ( ref === void 0 ) ref = {};\n  var isTagged = ref.isTagged; if ( isTagged === void 0 ) isTagged = false;\n\n  var node = this.startNode();\n  this.next();\n  node.expressions = [];\n  var curElt = this.parseTemplateElement({isTagged: isTagged});\n  node.quasis = [curElt];\n  while (!curElt.tail) {\n    if (this.type === types$1.eof) { this.raise(this.pos, \"Unterminated template literal\"); }\n    this.expect(types$1.dollarBraceL);\n    node.expressions.push(this.parseExpression());\n    this.expect(types$1.braceR);\n    node.quasis.push(curElt = this.parseTemplateElement({isTagged: isTagged}));\n  }\n  this.next();\n  return this.finishNode(node, \"TemplateLiteral\")\n};\n\npp$5.isAsyncProp = function(prop) {\n  return !prop.computed && prop.key.type === \"Identifier\" && prop.key.name === \"async\" &&\n    (this.type === types$1.name || this.type === types$1.num || this.type === types$1.string || this.type === types$1.bracketL || this.type.keyword || (this.options.ecmaVersion >= 9 && this.type === types$1.star)) &&\n    !lineBreak.test(this.input.slice(this.lastTokEnd, this.start))\n};\n\n// Parse an object literal or binding pattern.\n\npp$5.parseObj = function(isPattern, refDestructuringErrors) {\n  var node = this.startNode(), first = true, propHash = {};\n  node.properties = [];\n  this.next();\n  while (!this.eat(types$1.braceR)) {\n    if (!first) {\n      this.expect(types$1.comma);\n      if (this.options.ecmaVersion >= 5 && this.afterTrailingComma(types$1.braceR)) { break }\n    } else { first = false; }\n\n    var prop = this.parseProperty(isPattern, refDestructuringErrors);\n    if (!isPattern) { this.checkPropClash(prop, propHash, refDestructuringErrors); }\n    node.properties.push(prop);\n  }\n  return this.finishNode(node, isPattern ? \"ObjectPattern\" : \"ObjectExpression\")\n};\n\npp$5.parseProperty = function(isPattern, refDestructuringErrors) {\n  var prop = this.startNode(), isGenerator, isAsync, startPos, startLoc;\n  if (this.options.ecmaVersion >= 9 && this.eat(types$1.ellipsis)) {\n    if (isPattern) {\n      prop.argument = this.parseIdent(false);\n      if (this.type === types$1.comma) {\n        this.raise(this.start, \"Comma is not permitted after the rest element\");\n      }\n      return this.finishNode(prop, \"RestElement\")\n    }\n    // Parse argument.\n    prop.argument = this.parseMaybeAssign(false, refDestructuringErrors);\n    // To disallow trailing comma via `this.toAssignable()`.\n    if (this.type === types$1.comma && refDestructuringErrors && refDestructuringErrors.trailingComma < 0) {\n      refDestructuringErrors.trailingComma = this.start;\n    }\n    // Finish\n    return this.finishNode(prop, \"SpreadElement\")\n  }\n  if (this.options.ecmaVersion >= 6) {\n    prop.method = false;\n    prop.shorthand = false;\n    if (isPattern || refDestructuringErrors) {\n      startPos = this.start;\n      startLoc = this.startLoc;\n    }\n    if (!isPattern)\n      { isGenerator = this.eat(types$1.star); }\n  }\n  var containsEsc = this.containsEsc;\n  this.parsePropertyName(prop);\n  if (!isPattern && !containsEsc && this.options.ecmaVersion >= 8 && !isGenerator && this.isAsyncProp(prop)) {\n    isAsync = true;\n    isGenerator = this.options.ecmaVersion >= 9 && this.eat(types$1.star);\n    this.parsePropertyName(prop, refDestructuringErrors);\n  } else {\n    isAsync = false;\n  }\n  this.parsePropertyValue(prop, isPattern, isGenerator, isAsync, startPos, startLoc, refDestructuringErrors, containsEsc);\n  return this.finishNode(prop, \"Property\")\n};\n\npp$5.parsePropertyValue = function(prop, isPattern, isGenerator, isAsync, startPos, startLoc, refDestructuringErrors, containsEsc) {\n  if ((isGenerator || isAsync) && this.type === types$1.colon)\n    { this.unexpected(); }\n\n  if (this.eat(types$1.colon)) {\n    prop.value = isPattern ? this.parseMaybeDefault(this.start, this.startLoc) : this.parseMaybeAssign(false, refDestructuringErrors);\n    prop.kind = \"init\";\n  } else if (this.options.ecmaVersion >= 6 && this.type === types$1.parenL) {\n    if (isPattern) { this.unexpected(); }\n    prop.kind = \"init\";\n    prop.method = true;\n    prop.value = this.parseMethod(isGenerator, isAsync);\n  } else if (!isPattern && !containsEsc &&\n             this.options.ecmaVersion >= 5 && !prop.computed && prop.key.type === \"Identifier\" &&\n             (prop.key.name === \"get\" || prop.key.name === \"set\") &&\n             (this.type !== types$1.comma && this.type !== types$1.braceR && this.type !== types$1.eq)) {\n    if (isGenerator || isAsync) { this.unexpected(); }\n    prop.kind = prop.key.name;\n    this.parsePropertyName(prop);\n    prop.value = this.parseMethod(false);\n    var paramCount = prop.kind === \"get\" ? 0 : 1;\n    if (prop.value.params.length !== paramCount) {\n      var start = prop.value.start;\n      if (prop.kind === \"get\")\n        { this.raiseRecoverable(start, \"getter should have no params\"); }\n      else\n        { this.raiseRecoverable(start, \"setter should have exactly one param\"); }\n    } else {\n      if (prop.kind === \"set\" && prop.value.params[0].type === \"RestElement\")\n        { this.raiseRecoverable(prop.value.params[0].start, \"Setter cannot use rest params\"); }\n    }\n  } else if (this.options.ecmaVersion >= 6 && !prop.computed && prop.key.type === \"Identifier\") {\n    if (isGenerator || isAsync) { this.unexpected(); }\n    this.checkUnreserved(prop.key);\n    if (prop.key.name === \"await\" && !this.awaitIdentPos)\n      { this.awaitIdentPos = startPos; }\n    prop.kind = \"init\";\n    if (isPattern) {\n      prop.value = this.parseMaybeDefault(startPos, startLoc, this.copyNode(prop.key));\n    } else if (this.type === types$1.eq && refDestructuringErrors) {\n      if (refDestructuringErrors.shorthandAssign < 0)\n        { refDestructuringErrors.shorthandAssign = this.start; }\n      prop.value = this.parseMaybeDefault(startPos, startLoc, this.copyNode(prop.key));\n    } else {\n      prop.value = this.copyNode(prop.key);\n    }\n    prop.shorthand = true;\n  } else { this.unexpected(); }\n};\n\npp$5.parsePropertyName = function(prop) {\n  if (this.options.ecmaVersion >= 6) {\n    if (this.eat(types$1.bracketL)) {\n      prop.computed = true;\n      prop.key = this.parseMaybeAssign();\n      this.expect(types$1.bracketR);\n      return prop.key\n    } else {\n      prop.computed = false;\n    }\n  }\n  return prop.key = this.type === types$1.num || this.type === types$1.string ? this.parseExprAtom() : this.parseIdent(this.options.allowReserved !== \"never\")\n};\n\n// Initialize empty function node.\n\npp$5.initFunction = function(node) {\n  node.id = null;\n  if (this.options.ecmaVersion >= 6) { node.generator = node.expression = false; }\n  if (this.options.ecmaVersion >= 8) { node.async = false; }\n};\n\n// Parse object or class method.\n\npp$5.parseMethod = function(isGenerator, isAsync, allowDirectSuper) {\n  var node = this.startNode(), oldYieldPos = this.yieldPos, oldAwaitPos = this.awaitPos, oldAwaitIdentPos = this.awaitIdentPos;\n\n  this.initFunction(node);\n  if (this.options.ecmaVersion >= 6)\n    { node.generator = isGenerator; }\n  if (this.options.ecmaVersion >= 8)\n    { node.async = !!isAsync; }\n\n  this.yieldPos = 0;\n  this.awaitPos = 0;\n  this.awaitIdentPos = 0;\n  this.enterScope(functionFlags(isAsync, node.generator) | SCOPE_SUPER | (allowDirectSuper ? SCOPE_DIRECT_SUPER : 0));\n\n  this.expect(types$1.parenL);\n  node.params = this.parseBindingList(types$1.parenR, false, this.options.ecmaVersion >= 8);\n  this.checkYieldAwaitInDefaultParams();\n  this.parseFunctionBody(node, false, true, false);\n\n  this.yieldPos = oldYieldPos;\n  this.awaitPos = oldAwaitPos;\n  this.awaitIdentPos = oldAwaitIdentPos;\n  return this.finishNode(node, \"FunctionExpression\")\n};\n\n// Parse arrow function expression with given parameters.\n\npp$5.parseArrowExpression = function(node, params, isAsync, forInit) {\n  var oldYieldPos = this.yieldPos, oldAwaitPos = this.awaitPos, oldAwaitIdentPos = this.awaitIdentPos;\n\n  this.enterScope(functionFlags(isAsync, false) | SCOPE_ARROW);\n  this.initFunction(node);\n  if (this.options.ecmaVersion >= 8) { node.async = !!isAsync; }\n\n  this.yieldPos = 0;\n  this.awaitPos = 0;\n  this.awaitIdentPos = 0;\n\n  node.params = this.toAssignableList(params, true);\n  this.parseFunctionBody(node, true, false, forInit);\n\n  this.yieldPos = oldYieldPos;\n  this.awaitPos = oldAwaitPos;\n  this.awaitIdentPos = oldAwaitIdentPos;\n  return this.finishNode(node, \"ArrowFunctionExpression\")\n};\n\n// Parse function body and check parameters.\n\npp$5.parseFunctionBody = function(node, isArrowFunction, isMethod, forInit) {\n  var isExpression = isArrowFunction && this.type !== types$1.braceL;\n  var oldStrict = this.strict, useStrict = false;\n\n  if (isExpression) {\n    node.body = this.parseMaybeAssign(forInit);\n    node.expression = true;\n    this.checkParams(node, false);\n  } else {\n    var nonSimple = this.options.ecmaVersion >= 7 && !this.isSimpleParamList(node.params);\n    if (!oldStrict || nonSimple) {\n      useStrict = this.strictDirective(this.end);\n      // If this is a strict mode function, verify that argument names\n      // are not repeated, and it does not try to bind the words `eval`\n      // or `arguments`.\n      if (useStrict && nonSimple)\n        { this.raiseRecoverable(node.start, \"Illegal 'use strict' directive in function with non-simple parameter list\"); }\n    }\n    // Start a new scope with regard to labels and the `inFunction`\n    // flag (restore them to their old value afterwards).\n    var oldLabels = this.labels;\n    this.labels = [];\n    if (useStrict) { this.strict = true; }\n\n    // Add the params to varDeclaredNames to ensure that an error is thrown\n    // if a let/const declaration in the function clashes with one of the params.\n    this.checkParams(node, !oldStrict && !useStrict && !isArrowFunction && !isMethod && this.isSimpleParamList(node.params));\n    // Ensure the function name isn't a forbidden identifier in strict mode, e.g. 'eval'\n    if (this.strict && node.id) { this.checkLValSimple(node.id, BIND_OUTSIDE); }\n    node.body = this.parseBlock(false, undefined, useStrict && !oldStrict);\n    node.expression = false;\n    this.adaptDirectivePrologue(node.body.body);\n    this.labels = oldLabels;\n  }\n  this.exitScope();\n};\n\npp$5.isSimpleParamList = function(params) {\n  for (var i = 0, list = params; i < list.length; i += 1)\n    {\n    var param = list[i];\n\n    if (param.type !== \"Identifier\") { return false\n  } }\n  return true\n};\n\n// Checks function params for various disallowed patterns such as using \"eval\"\n// or \"arguments\" and duplicate parameters.\n\npp$5.checkParams = function(node, allowDuplicates) {\n  var nameHash = Object.create(null);\n  for (var i = 0, list = node.params; i < list.length; i += 1)\n    {\n    var param = list[i];\n\n    this.checkLValInnerPattern(param, BIND_VAR, allowDuplicates ? null : nameHash);\n  }\n};\n\n// Parses a comma-separated list of expressions, and returns them as\n// an array. `close` is the token type that ends the list, and\n// `allowEmpty` can be turned on to allow subsequent commas with\n// nothing in between them to be parsed as `null` (which is needed\n// for array literals).\n\npp$5.parseExprList = function(close, allowTrailingComma, allowEmpty, refDestructuringErrors) {\n  var elts = [], first = true;\n  while (!this.eat(close)) {\n    if (!first) {\n      this.expect(types$1.comma);\n      if (allowTrailingComma && this.afterTrailingComma(close)) { break }\n    } else { first = false; }\n\n    var elt = (void 0);\n    if (allowEmpty && this.type === types$1.comma)\n      { elt = null; }\n    else if (this.type === types$1.ellipsis) {\n      elt = this.parseSpread(refDestructuringErrors);\n      if (refDestructuringErrors && this.type === types$1.comma && refDestructuringErrors.trailingComma < 0)\n        { refDestructuringErrors.trailingComma = this.start; }\n    } else {\n      elt = this.parseMaybeAssign(false, refDestructuringErrors);\n    }\n    elts.push(elt);\n  }\n  return elts\n};\n\npp$5.checkUnreserved = function(ref) {\n  var start = ref.start;\n  var end = ref.end;\n  var name = ref.name;\n\n  if (this.inGenerator && name === \"yield\")\n    { this.raiseRecoverable(start, \"Cannot use 'yield' as identifier inside a generator\"); }\n  if (this.inAsync && name === \"await\")\n    { this.raiseRecoverable(start, \"Cannot use 'await' as identifier inside an async function\"); }\n  if (this.currentThisScope().inClassFieldInit && name === \"arguments\")\n    { this.raiseRecoverable(start, \"Cannot use 'arguments' in class field initializer\"); }\n  if (this.inClassStaticBlock && (name === \"arguments\" || name === \"await\"))\n    { this.raise(start, (\"Cannot use \" + name + \" in class static initialization block\")); }\n  if (this.keywords.test(name))\n    { this.raise(start, (\"Unexpected keyword '\" + name + \"'\")); }\n  if (this.options.ecmaVersion < 6 &&\n    this.input.slice(start, end).indexOf(\"\\\\\") !== -1) { return }\n  var re = this.strict ? this.reservedWordsStrict : this.reservedWords;\n  if (re.test(name)) {\n    if (!this.inAsync && name === \"await\")\n      { this.raiseRecoverable(start, \"Cannot use keyword 'await' outside an async function\"); }\n    this.raiseRecoverable(start, (\"The keyword '\" + name + \"' is reserved\"));\n  }\n};\n\n// Parse the next token as an identifier. If `liberal` is true (used\n// when parsing properties), it will also convert keywords into\n// identifiers.\n\npp$5.parseIdent = function(liberal, isBinding) {\n  var node = this.startNode();\n  if (this.type === types$1.name) {\n    node.name = this.value;\n  } else if (this.type.keyword) {\n    node.name = this.type.keyword;\n\n    // To fix https://github.com/acornjs/acorn/issues/575\n    // `class` and `function` keywords push new context into this.context.\n    // But there is no chance to pop the context if the keyword is consumed as an identifier such as a property name.\n    // If the previous token is a dot, this does not apply because the context-managing code already ignored the keyword\n    if ((node.name === \"class\" || node.name === \"function\") &&\n        (this.lastTokEnd !== this.lastTokStart + 1 || this.input.charCodeAt(this.lastTokStart) !== 46)) {\n      this.context.pop();\n    }\n  } else {\n    this.unexpected();\n  }\n  this.next(!!liberal);\n  this.finishNode(node, \"Identifier\");\n  if (!liberal) {\n    this.checkUnreserved(node);\n    if (node.name === \"await\" && !this.awaitIdentPos)\n      { this.awaitIdentPos = node.start; }\n  }\n  return node\n};\n\npp$5.parsePrivateIdent = function() {\n  var node = this.startNode();\n  if (this.type === types$1.privateId) {\n    node.name = this.value;\n  } else {\n    this.unexpected();\n  }\n  this.next();\n  this.finishNode(node, \"PrivateIdentifier\");\n\n  // For validating existence\n  if (this.privateNameStack.length === 0) {\n    this.raise(node.start, (\"Private field '#\" + (node.name) + \"' must be declared in an enclosing class\"));\n  } else {\n    this.privateNameStack[this.privateNameStack.length - 1].used.push(node);\n  }\n\n  return node\n};\n\n// Parses yield expression inside generator.\n\npp$5.parseYield = function(forInit) {\n  if (!this.yieldPos) { this.yieldPos = this.start; }\n\n  var node = this.startNode();\n  this.next();\n  if (this.type === types$1.semi || this.canInsertSemicolon() || (this.type !== types$1.star && !this.type.startsExpr)) {\n    node.delegate = false;\n    node.argument = null;\n  } else {\n    node.delegate = this.eat(types$1.star);\n    node.argument = this.parseMaybeAssign(forInit);\n  }\n  return this.finishNode(node, \"YieldExpression\")\n};\n\npp$5.parseAwait = function(forInit) {\n  if (!this.awaitPos) { this.awaitPos = this.start; }\n\n  var node = this.startNode();\n  this.next();\n  node.argument = this.parseMaybeUnary(null, true, false, forInit);\n  return this.finishNode(node, \"AwaitExpression\")\n};\n\nvar pp$4 = Parser.prototype;\n\n// This function is used to raise exceptions on parse errors. It\n// takes an offset integer (into the current `input`) to indicate\n// the location of the error, attaches the position to the end\n// of the error message, and then raises a `SyntaxError` with that\n// message.\n\npp$4.raise = function(pos, message) {\n  var loc = getLineInfo(this.input, pos);\n  message += \" (\" + loc.line + \":\" + loc.column + \")\";\n  var err = new SyntaxError(message);\n  err.pos = pos; err.loc = loc; err.raisedAt = this.pos;\n  throw err\n};\n\npp$4.raiseRecoverable = pp$4.raise;\n\npp$4.curPosition = function() {\n  if (this.options.locations) {\n    return new Position(this.curLine, this.pos - this.lineStart)\n  }\n};\n\nvar pp$3 = Parser.prototype;\n\nvar Scope = function Scope(flags) {\n  this.flags = flags;\n  // A list of var-declared names in the current lexical scope\n  this.var = [];\n  // A list of lexically-declared names in the current lexical scope\n  this.lexical = [];\n  // A list of lexically-declared FunctionDeclaration names in the current lexical scope\n  this.functions = [];\n  // A switch to disallow the identifier reference 'arguments'\n  this.inClassFieldInit = false;\n};\n\n// The functions in this module keep track of declared variables in the current scope in order to detect duplicate variable names.\n\npp$3.enterScope = function(flags) {\n  this.scopeStack.push(new Scope(flags));\n};\n\npp$3.exitScope = function() {\n  this.scopeStack.pop();\n};\n\n// The spec says:\n// > At the top level of a function, or script, function declarations are\n// > treated like var declarations rather than like lexical declarations.\npp$3.treatFunctionsAsVarInScope = function(scope) {\n  return (scope.flags & SCOPE_FUNCTION) || !this.inModule && (scope.flags & SCOPE_TOP)\n};\n\npp$3.declareName = function(name, bindingType, pos) {\n  var redeclared = false;\n  if (bindingType === BIND_LEXICAL) {\n    var scope = this.currentScope();\n    redeclared = scope.lexical.indexOf(name) > -1 || scope.functions.indexOf(name) > -1 || scope.var.indexOf(name) > -1;\n    scope.lexical.push(name);\n    if (this.inModule && (scope.flags & SCOPE_TOP))\n      { delete this.undefinedExports[name]; }\n  } else if (bindingType === BIND_SIMPLE_CATCH) {\n    var scope$1 = this.currentScope();\n    scope$1.lexical.push(name);\n  } else if (bindingType === BIND_FUNCTION) {\n    var scope$2 = this.currentScope();\n    if (this.treatFunctionsAsVar)\n      { redeclared = scope$2.lexical.indexOf(name) > -1; }\n    else\n      { redeclared = scope$2.lexical.indexOf(name) > -1 || scope$2.var.indexOf(name) > -1; }\n    scope$2.functions.push(name);\n  } else {\n    for (var i = this.scopeStack.length - 1; i >= 0; --i) {\n      var scope$3 = this.scopeStack[i];\n      if (scope$3.lexical.indexOf(name) > -1 && !((scope$3.flags & SCOPE_SIMPLE_CATCH) && scope$3.lexical[0] === name) ||\n          !this.treatFunctionsAsVarInScope(scope$3) && scope$3.functions.indexOf(name) > -1) {\n        redeclared = true;\n        break\n      }\n      scope$3.var.push(name);\n      if (this.inModule && (scope$3.flags & SCOPE_TOP))\n        { delete this.undefinedExports[name]; }\n      if (scope$3.flags & SCOPE_VAR) { break }\n    }\n  }\n  if (redeclared) { this.raiseRecoverable(pos, (\"Identifier '\" + name + \"' has already been declared\")); }\n};\n\npp$3.checkLocalExport = function(id) {\n  // scope.functions must be empty as Module code is always strict.\n  if (this.scopeStack[0].lexical.indexOf(id.name) === -1 &&\n      this.scopeStack[0].var.indexOf(id.name) === -1) {\n    this.undefinedExports[id.name] = id;\n  }\n};\n\npp$3.currentScope = function() {\n  return this.scopeStack[this.scopeStack.length - 1]\n};\n\npp$3.currentVarScope = function() {\n  for (var i = this.scopeStack.length - 1;; i--) {\n    var scope = this.scopeStack[i];\n    if (scope.flags & SCOPE_VAR) { return scope }\n  }\n};\n\n// Could be useful for `this`, `new.target`, `super()`, `super.property`, and `super[property]`.\npp$3.currentThisScope = function() {\n  for (var i = this.scopeStack.length - 1;; i--) {\n    var scope = this.scopeStack[i];\n    if (scope.flags & SCOPE_VAR && !(scope.flags & SCOPE_ARROW)) { return scope }\n  }\n};\n\nvar Node = function Node(parser, pos, loc) {\n  this.type = \"\";\n  this.start = pos;\n  this.end = 0;\n  if (parser.options.locations)\n    { this.loc = new SourceLocation(parser, loc); }\n  if (parser.options.directSourceFile)\n    { this.sourceFile = parser.options.directSourceFile; }\n  if (parser.options.ranges)\n    { this.range = [pos, 0]; }\n};\n\n// Start an AST node, attaching a start offset.\n\nvar pp$2 = Parser.prototype;\n\npp$2.startNode = function() {\n  return new Node(this, this.start, this.startLoc)\n};\n\npp$2.startNodeAt = function(pos, loc) {\n  return new Node(this, pos, loc)\n};\n\n// Finish an AST node, adding `type` and `end` properties.\n\nfunction finishNodeAt(node, type, pos, loc) {\n  node.type = type;\n  node.end = pos;\n  if (this.options.locations)\n    { node.loc.end = loc; }\n  if (this.options.ranges)\n    { node.range[1] = pos; }\n  return node\n}\n\npp$2.finishNode = function(node, type) {\n  return finishNodeAt.call(this, node, type, this.lastTokEnd, this.lastTokEndLoc)\n};\n\n// Finish node at given position\n\npp$2.finishNodeAt = function(node, type, pos, loc) {\n  return finishNodeAt.call(this, node, type, pos, loc)\n};\n\npp$2.copyNode = function(node) {\n  var newNode = new Node(this, node.start, this.startLoc);\n  for (var prop in node) { newNode[prop] = node[prop]; }\n  return newNode\n};\n\n// This file contains Unicode properties extracted from the ECMAScript\n// specification. The lists are extracted like so:\n// $$('#table-binary-unicode-properties > figure > table > tbody > tr > td:nth-child(1) code').map(el => el.innerText)\n\n// #table-binary-unicode-properties\nvar ecma9BinaryProperties = \"ASCII ASCII_Hex_Digit AHex Alphabetic Alpha Any Assigned Bidi_Control Bidi_C Bidi_Mirrored Bidi_M Case_Ignorable CI Cased Changes_When_Casefolded CWCF Changes_When_Casemapped CWCM Changes_When_Lowercased CWL Changes_When_NFKC_Casefolded CWKCF Changes_When_Titlecased CWT Changes_When_Uppercased CWU Dash Default_Ignorable_Code_Point DI Deprecated Dep Diacritic Dia Emoji Emoji_Component Emoji_Modifier Emoji_Modifier_Base Emoji_Presentation Extender Ext Grapheme_Base Gr_Base Grapheme_Extend Gr_Ext Hex_Digit Hex IDS_Binary_Operator IDSB IDS_Trinary_Operator IDST ID_Continue IDC ID_Start IDS Ideographic Ideo Join_Control Join_C Logical_Order_Exception LOE Lowercase Lower Math Noncharacter_Code_Point NChar Pattern_Syntax Pat_Syn Pattern_White_Space Pat_WS Quotation_Mark QMark Radical Regional_Indicator RI Sentence_Terminal STerm Soft_Dotted SD Terminal_Punctuation Term Unified_Ideograph UIdeo Uppercase Upper Variation_Selector VS White_Space space XID_Continue XIDC XID_Start XIDS\";\nvar ecma10BinaryProperties = ecma9BinaryProperties + \" Extended_Pictographic\";\nvar ecma11BinaryProperties = ecma10BinaryProperties;\nvar ecma12BinaryProperties = ecma11BinaryProperties + \" EBase EComp EMod EPres ExtPict\";\nvar ecma13BinaryProperties = ecma12BinaryProperties;\nvar unicodeBinaryProperties = {\n  9: ecma9BinaryProperties,\n  10: ecma10BinaryProperties,\n  11: ecma11BinaryProperties,\n  12: ecma12BinaryProperties,\n  13: ecma13BinaryProperties\n};\n\n// #table-unicode-general-category-values\nvar unicodeGeneralCategoryValues = \"Cased_Letter LC Close_Punctuation Pe Connector_Punctuation Pc Control Cc cntrl Currency_Symbol Sc Dash_Punctuation Pd Decimal_Number Nd digit Enclosing_Mark Me Final_Punctuation Pf Format Cf Initial_Punctuation Pi Letter L Letter_Number Nl Line_Separator Zl Lowercase_Letter Ll Mark M Combining_Mark Math_Symbol Sm Modifier_Letter Lm Modifier_Symbol Sk Nonspacing_Mark Mn Number N Open_Punctuation Ps Other C Other_Letter Lo Other_Number No Other_Punctuation Po Other_Symbol So Paragraph_Separator Zp Private_Use Co Punctuation P punct Separator Z Space_Separator Zs Spacing_Mark Mc Surrogate Cs Symbol S Titlecase_Letter Lt Unassigned Cn Uppercase_Letter Lu\";\n\n// #table-unicode-script-values\nvar ecma9ScriptValues = \"Adlam Adlm Ahom Anatolian_Hieroglyphs Hluw Arabic Arab Armenian Armn Avestan Avst Balinese Bali Bamum Bamu Bassa_Vah Bass Batak Batk Bengali Beng Bhaiksuki Bhks Bopomofo Bopo Brahmi Brah Braille Brai Buginese Bugi Buhid Buhd Canadian_Aboriginal Cans Carian Cari Caucasian_Albanian Aghb Chakma Cakm Cham Cham Cherokee Cher Common Zyyy Coptic Copt Qaac Cuneiform Xsux Cypriot Cprt Cyrillic Cyrl Deseret Dsrt Devanagari Deva Duployan Dupl Egyptian_Hieroglyphs Egyp Elbasan Elba Ethiopic Ethi Georgian Geor Glagolitic Glag Gothic Goth Grantha Gran Greek Grek Gujarati Gujr Gurmukhi Guru Han Hani Hangul Hang Hanunoo Hano Hatran Hatr Hebrew Hebr Hiragana Hira Imperial_Aramaic Armi Inherited Zinh Qaai Inscriptional_Pahlavi Phli Inscriptional_Parthian Prti Javanese Java Kaithi Kthi Kannada Knda Katakana Kana Kayah_Li Kali Kharoshthi Khar Khmer Khmr Khojki Khoj Khudawadi Sind Lao Laoo Latin Latn Lepcha Lepc Limbu Limb Linear_A Lina Linear_B Linb Lisu Lisu Lycian Lyci Lydian Lydi Mahajani Mahj Malayalam Mlym Mandaic Mand Manichaean Mani Marchen Marc Masaram_Gondi Gonm Meetei_Mayek Mtei Mende_Kikakui Mend Meroitic_Cursive Merc Meroitic_Hieroglyphs Mero Miao Plrd Modi Mongolian Mong Mro Mroo Multani Mult Myanmar Mymr Nabataean Nbat New_Tai_Lue Talu Newa Newa Nko Nkoo Nushu Nshu Ogham Ogam Ol_Chiki Olck Old_Hungarian Hung Old_Italic Ital Old_North_Arabian Narb Old_Permic Perm Old_Persian Xpeo Old_South_Arabian Sarb Old_Turkic Orkh Oriya Orya Osage Osge Osmanya Osma Pahawh_Hmong Hmng Palmyrene Palm Pau_Cin_Hau Pauc Phags_Pa Phag Phoenician Phnx Psalter_Pahlavi Phlp Rejang Rjng Runic Runr Samaritan Samr Saurashtra Saur Sharada Shrd Shavian Shaw Siddham Sidd SignWriting Sgnw Sinhala Sinh Sora_Sompeng Sora Soyombo Soyo Sundanese Sund Syloti_Nagri Sylo Syriac Syrc Tagalog Tglg Tagbanwa Tagb Tai_Le Tale Tai_Tham Lana Tai_Viet Tavt Takri Takr Tamil Taml Tangut Tang Telugu Telu Thaana Thaa Thai Thai Tibetan Tibt Tifinagh Tfng Tirhuta Tirh Ugaritic Ugar Vai Vaii Warang_Citi Wara Yi Yiii Zanabazar_Square Zanb\";\nvar ecma10ScriptValues = ecma9ScriptValues + \" Dogra Dogr Gunjala_Gondi Gong Hanifi_Rohingya Rohg Makasar Maka Medefaidrin Medf Old_Sogdian Sogo Sogdian Sogd\";\nvar ecma11ScriptValues = ecma10ScriptValues + \" Elymaic Elym Nandinagari Nand Nyiakeng_Puachue_Hmong Hmnp Wancho Wcho\";\nvar ecma12ScriptValues = ecma11ScriptValues + \" Chorasmian Chrs Diak Dives_Akuru Khitan_Small_Script Kits Yezi Yezidi\";\nvar ecma13ScriptValues = ecma12ScriptValues + \" Cypro_Minoan Cpmn Old_Uyghur Ougr Tangsa Tnsa Toto Vithkuqi Vith\";\nvar unicodeScriptValues = {\n  9: ecma9ScriptValues,\n  10: ecma10ScriptValues,\n  11: ecma11ScriptValues,\n  12: ecma12ScriptValues,\n  13: ecma13ScriptValues\n};\n\nvar data = {};\nfunction buildUnicodeData(ecmaVersion) {\n  var d = data[ecmaVersion] = {\n    binary: wordsRegexp(unicodeBinaryProperties[ecmaVersion] + \" \" + unicodeGeneralCategoryValues),\n    nonBinary: {\n      General_Category: wordsRegexp(unicodeGeneralCategoryValues),\n      Script: wordsRegexp(unicodeScriptValues[ecmaVersion])\n    }\n  };\n  d.nonBinary.Script_Extensions = d.nonBinary.Script;\n\n  d.nonBinary.gc = d.nonBinary.General_Category;\n  d.nonBinary.sc = d.nonBinary.Script;\n  d.nonBinary.scx = d.nonBinary.Script_Extensions;\n}\n\nfor (var i$1 = 0, list = [9, 10, 11, 12, 13]; i$1 < list.length; i$1 += 1) {\n  var ecmaVersion = list[i$1];\n\n  buildUnicodeData(ecmaVersion);\n}\n\nvar pp$1 = Parser.prototype;\n\nvar RegExpValidationState = function RegExpValidationState(parser) {\n  this.parser = parser;\n  this.validFlags = \"gim\" + (parser.options.ecmaVersion >= 6 ? \"uy\" : \"\") + (parser.options.ecmaVersion >= 9 ? \"s\" : \"\") + (parser.options.ecmaVersion >= 13 ? \"d\" : \"\");\n  this.unicodeProperties = data[parser.options.ecmaVersion >= 13 ? 13 : parser.options.ecmaVersion];\n  this.source = \"\";\n  this.flags = \"\";\n  this.start = 0;\n  this.switchU = false;\n  this.switchN = false;\n  this.pos = 0;\n  this.lastIntValue = 0;\n  this.lastStringValue = \"\";\n  this.lastAssertionIsQuantifiable = false;\n  this.numCapturingParens = 0;\n  this.maxBackReference = 0;\n  this.groupNames = [];\n  this.backReferenceNames = [];\n};\n\nRegExpValidationState.prototype.reset = function reset (start, pattern, flags) {\n  var unicode = flags.indexOf(\"u\") !== -1;\n  this.start = start | 0;\n  this.source = pattern + \"\";\n  this.flags = flags;\n  this.switchU = unicode && this.parser.options.ecmaVersion >= 6;\n  this.switchN = unicode && this.parser.options.ecmaVersion >= 9;\n};\n\nRegExpValidationState.prototype.raise = function raise (message) {\n  this.parser.raiseRecoverable(this.start, (\"Invalid regular expression: /\" + (this.source) + \"/: \" + message));\n};\n\n// If u flag is given, this returns the code point at the index (it combines a surrogate pair).\n// Otherwise, this returns the code unit of the index (can be a part of a surrogate pair).\nRegExpValidationState.prototype.at = function at (i, forceU) {\n    if ( forceU === void 0 ) forceU = false;\n\n  var s = this.source;\n  var l = s.length;\n  if (i >= l) {\n    return -1\n  }\n  var c = s.charCodeAt(i);\n  if (!(forceU || this.switchU) || c <= 0xD7FF || c >= 0xE000 || i + 1 >= l) {\n    return c\n  }\n  var next = s.charCodeAt(i + 1);\n  return next >= 0xDC00 && next <= 0xDFFF ? (c << 10) + next - 0x35FDC00 : c\n};\n\nRegExpValidationState.prototype.nextIndex = function nextIndex (i, forceU) {\n    if ( forceU === void 0 ) forceU = false;\n\n  var s = this.source;\n  var l = s.length;\n  if (i >= l) {\n    return l\n  }\n  var c = s.charCodeAt(i), next;\n  if (!(forceU || this.switchU) || c <= 0xD7FF || c >= 0xE000 || i + 1 >= l ||\n      (next = s.charCodeAt(i + 1)) < 0xDC00 || next > 0xDFFF) {\n    return i + 1\n  }\n  return i + 2\n};\n\nRegExpValidationState.prototype.current = function current (forceU) {\n    if ( forceU === void 0 ) forceU = false;\n\n  return this.at(this.pos, forceU)\n};\n\nRegExpValidationState.prototype.lookahead = function lookahead (forceU) {\n    if ( forceU === void 0 ) forceU = false;\n\n  return this.at(this.nextIndex(this.pos, forceU), forceU)\n};\n\nRegExpValidationState.prototype.advance = function advance (forceU) {\n    if ( forceU === void 0 ) forceU = false;\n\n  this.pos = this.nextIndex(this.pos, forceU);\n};\n\nRegExpValidationState.prototype.eat = function eat (ch, forceU) {\n    if ( forceU === void 0 ) forceU = false;\n\n  if (this.current(forceU) === ch) {\n    this.advance(forceU);\n    return true\n  }\n  return false\n};\n\n/**\n * Validate the flags part of a given RegExpLiteral.\n *\n * @param {RegExpValidationState} state The state to validate RegExp.\n * @returns {void}\n */\npp$1.validateRegExpFlags = function(state) {\n  var validFlags = state.validFlags;\n  var flags = state.flags;\n\n  for (var i = 0; i < flags.length; i++) {\n    var flag = flags.charAt(i);\n    if (validFlags.indexOf(flag) === -1) {\n      this.raise(state.start, \"Invalid regular expression flag\");\n    }\n    if (flags.indexOf(flag, i + 1) > -1) {\n      this.raise(state.start, \"Duplicate regular expression flag\");\n    }\n  }\n};\n\n/**\n * Validate the pattern part of a given RegExpLiteral.\n *\n * @param {RegExpValidationState} state The state to validate RegExp.\n * @returns {void}\n */\npp$1.validateRegExpPattern = function(state) {\n  this.regexp_pattern(state);\n\n  // The goal symbol for the parse is |Pattern[~U, ~N]|. If the result of\n  // parsing contains a |GroupName|, reparse with the goal symbol\n  // |Pattern[~U, +N]| and use this result instead. Throw a *SyntaxError*\n  // exception if _P_ did not conform to the grammar, if any elements of _P_\n  // were not matched by the parse, or if any Early Error conditions exist.\n  if (!state.switchN && this.options.ecmaVersion >= 9 && state.groupNames.length > 0) {\n    state.switchN = true;\n    this.regexp_pattern(state);\n  }\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-Pattern\npp$1.regexp_pattern = function(state) {\n  state.pos = 0;\n  state.lastIntValue = 0;\n  state.lastStringValue = \"\";\n  state.lastAssertionIsQuantifiable = false;\n  state.numCapturingParens = 0;\n  state.maxBackReference = 0;\n  state.groupNames.length = 0;\n  state.backReferenceNames.length = 0;\n\n  this.regexp_disjunction(state);\n\n  if (state.pos !== state.source.length) {\n    // Make the same messages as V8.\n    if (state.eat(0x29 /* ) */)) {\n      state.raise(\"Unmatched ')'\");\n    }\n    if (state.eat(0x5D /* ] */) || state.eat(0x7D /* } */)) {\n      state.raise(\"Lone quantifier brackets\");\n    }\n  }\n  if (state.maxBackReference > state.numCapturingParens) {\n    state.raise(\"Invalid escape\");\n  }\n  for (var i = 0, list = state.backReferenceNames; i < list.length; i += 1) {\n    var name = list[i];\n\n    if (state.groupNames.indexOf(name) === -1) {\n      state.raise(\"Invalid named capture referenced\");\n    }\n  }\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-Disjunction\npp$1.regexp_disjunction = function(state) {\n  this.regexp_alternative(state);\n  while (state.eat(0x7C /* | */)) {\n    this.regexp_alternative(state);\n  }\n\n  // Make the same message as V8.\n  if (this.regexp_eatQuantifier(state, true)) {\n    state.raise(\"Nothing to repeat\");\n  }\n  if (state.eat(0x7B /* { */)) {\n    state.raise(\"Lone quantifier brackets\");\n  }\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-Alternative\npp$1.regexp_alternative = function(state) {\n  while (state.pos < state.source.length && this.regexp_eatTerm(state))\n    { }\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-Term\npp$1.regexp_eatTerm = function(state) {\n  if (this.regexp_eatAssertion(state)) {\n    // Handle `QuantifiableAssertion Quantifier` alternative.\n    // `state.lastAssertionIsQuantifiable` is true if the last eaten Assertion\n    // is a QuantifiableAssertion.\n    if (state.lastAssertionIsQuantifiable && this.regexp_eatQuantifier(state)) {\n      // Make the same message as V8.\n      if (state.switchU) {\n        state.raise(\"Invalid quantifier\");\n      }\n    }\n    return true\n  }\n\n  if (state.switchU ? this.regexp_eatAtom(state) : this.regexp_eatExtendedAtom(state)) {\n    this.regexp_eatQuantifier(state);\n    return true\n  }\n\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-Assertion\npp$1.regexp_eatAssertion = function(state) {\n  var start = state.pos;\n  state.lastAssertionIsQuantifiable = false;\n\n  // ^, $\n  if (state.eat(0x5E /* ^ */) || state.eat(0x24 /* $ */)) {\n    return true\n  }\n\n  // \\b \\B\n  if (state.eat(0x5C /* \\ */)) {\n    if (state.eat(0x42 /* B */) || state.eat(0x62 /* b */)) {\n      return true\n    }\n    state.pos = start;\n  }\n\n  // Lookahead / Lookbehind\n  if (state.eat(0x28 /* ( */) && state.eat(0x3F /* ? */)) {\n    var lookbehind = false;\n    if (this.options.ecmaVersion >= 9) {\n      lookbehind = state.eat(0x3C /* < */);\n    }\n    if (state.eat(0x3D /* = */) || state.eat(0x21 /* ! */)) {\n      this.regexp_disjunction(state);\n      if (!state.eat(0x29 /* ) */)) {\n        state.raise(\"Unterminated group\");\n      }\n      state.lastAssertionIsQuantifiable = !lookbehind;\n      return true\n    }\n  }\n\n  state.pos = start;\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-Quantifier\npp$1.regexp_eatQuantifier = function(state, noError) {\n  if ( noError === void 0 ) noError = false;\n\n  if (this.regexp_eatQuantifierPrefix(state, noError)) {\n    state.eat(0x3F /* ? */);\n    return true\n  }\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-QuantifierPrefix\npp$1.regexp_eatQuantifierPrefix = function(state, noError) {\n  return (\n    state.eat(0x2A /* * */) ||\n    state.eat(0x2B /* + */) ||\n    state.eat(0x3F /* ? */) ||\n    this.regexp_eatBracedQuantifier(state, noError)\n  )\n};\npp$1.regexp_eatBracedQuantifier = function(state, noError) {\n  var start = state.pos;\n  if (state.eat(0x7B /* { */)) {\n    var min = 0, max = -1;\n    if (this.regexp_eatDecimalDigits(state)) {\n      min = state.lastIntValue;\n      if (state.eat(0x2C /* , */) && this.regexp_eatDecimalDigits(state)) {\n        max = state.lastIntValue;\n      }\n      if (state.eat(0x7D /* } */)) {\n        // SyntaxError in https://www.ecma-international.org/ecma-262/8.0/#sec-term\n        if (max !== -1 && max < min && !noError) {\n          state.raise(\"numbers out of order in {} quantifier\");\n        }\n        return true\n      }\n    }\n    if (state.switchU && !noError) {\n      state.raise(\"Incomplete quantifier\");\n    }\n    state.pos = start;\n  }\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-Atom\npp$1.regexp_eatAtom = function(state) {\n  return (\n    this.regexp_eatPatternCharacters(state) ||\n    state.eat(0x2E /* . */) ||\n    this.regexp_eatReverseSolidusAtomEscape(state) ||\n    this.regexp_eatCharacterClass(state) ||\n    this.regexp_eatUncapturingGroup(state) ||\n    this.regexp_eatCapturingGroup(state)\n  )\n};\npp$1.regexp_eatReverseSolidusAtomEscape = function(state) {\n  var start = state.pos;\n  if (state.eat(0x5C /* \\ */)) {\n    if (this.regexp_eatAtomEscape(state)) {\n      return true\n    }\n    state.pos = start;\n  }\n  return false\n};\npp$1.regexp_eatUncapturingGroup = function(state) {\n  var start = state.pos;\n  if (state.eat(0x28 /* ( */)) {\n    if (state.eat(0x3F /* ? */) && state.eat(0x3A /* : */)) {\n      this.regexp_disjunction(state);\n      if (state.eat(0x29 /* ) */)) {\n        return true\n      }\n      state.raise(\"Unterminated group\");\n    }\n    state.pos = start;\n  }\n  return false\n};\npp$1.regexp_eatCapturingGroup = function(state) {\n  if (state.eat(0x28 /* ( */)) {\n    if (this.options.ecmaVersion >= 9) {\n      this.regexp_groupSpecifier(state);\n    } else if (state.current() === 0x3F /* ? */) {\n      state.raise(\"Invalid group\");\n    }\n    this.regexp_disjunction(state);\n    if (state.eat(0x29 /* ) */)) {\n      state.numCapturingParens += 1;\n      return true\n    }\n    state.raise(\"Unterminated group\");\n  }\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-ExtendedAtom\npp$1.regexp_eatExtendedAtom = function(state) {\n  return (\n    state.eat(0x2E /* . */) ||\n    this.regexp_eatReverseSolidusAtomEscape(state) ||\n    this.regexp_eatCharacterClass(state) ||\n    this.regexp_eatUncapturingGroup(state) ||\n    this.regexp_eatCapturingGroup(state) ||\n    this.regexp_eatInvalidBracedQuantifier(state) ||\n    this.regexp_eatExtendedPatternCharacter(state)\n  )\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-InvalidBracedQuantifier\npp$1.regexp_eatInvalidBracedQuantifier = function(state) {\n  if (this.regexp_eatBracedQuantifier(state, true)) {\n    state.raise(\"Nothing to repeat\");\n  }\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-SyntaxCharacter\npp$1.regexp_eatSyntaxCharacter = function(state) {\n  var ch = state.current();\n  if (isSyntaxCharacter(ch)) {\n    state.lastIntValue = ch;\n    state.advance();\n    return true\n  }\n  return false\n};\nfunction isSyntaxCharacter(ch) {\n  return (\n    ch === 0x24 /* $ */ ||\n    ch >= 0x28 /* ( */ && ch <= 0x2B /* + */ ||\n    ch === 0x2E /* . */ ||\n    ch === 0x3F /* ? */ ||\n    ch >= 0x5B /* [ */ && ch <= 0x5E /* ^ */ ||\n    ch >= 0x7B /* { */ && ch <= 0x7D /* } */\n  )\n}\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-PatternCharacter\n// But eat eager.\npp$1.regexp_eatPatternCharacters = function(state) {\n  var start = state.pos;\n  var ch = 0;\n  while ((ch = state.current()) !== -1 && !isSyntaxCharacter(ch)) {\n    state.advance();\n  }\n  return state.pos !== start\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-ExtendedPatternCharacter\npp$1.regexp_eatExtendedPatternCharacter = function(state) {\n  var ch = state.current();\n  if (\n    ch !== -1 &&\n    ch !== 0x24 /* $ */ &&\n    !(ch >= 0x28 /* ( */ && ch <= 0x2B /* + */) &&\n    ch !== 0x2E /* . */ &&\n    ch !== 0x3F /* ? */ &&\n    ch !== 0x5B /* [ */ &&\n    ch !== 0x5E /* ^ */ &&\n    ch !== 0x7C /* | */\n  ) {\n    state.advance();\n    return true\n  }\n  return false\n};\n\n// GroupSpecifier ::\n//   [empty]\n//   `?` GroupName\npp$1.regexp_groupSpecifier = function(state) {\n  if (state.eat(0x3F /* ? */)) {\n    if (this.regexp_eatGroupName(state)) {\n      if (state.groupNames.indexOf(state.lastStringValue) !== -1) {\n        state.raise(\"Duplicate capture group name\");\n      }\n      state.groupNames.push(state.lastStringValue);\n      return\n    }\n    state.raise(\"Invalid group\");\n  }\n};\n\n// GroupName ::\n//   `<` RegExpIdentifierName `>`\n// Note: this updates `state.lastStringValue` property with the eaten name.\npp$1.regexp_eatGroupName = function(state) {\n  state.lastStringValue = \"\";\n  if (state.eat(0x3C /* < */)) {\n    if (this.regexp_eatRegExpIdentifierName(state) && state.eat(0x3E /* > */)) {\n      return true\n    }\n    state.raise(\"Invalid capture group name\");\n  }\n  return false\n};\n\n// RegExpIdentifierName ::\n//   RegExpIdentifierStart\n//   RegExpIdentifierName RegExpIdentifierPart\n// Note: this updates `state.lastStringValue` property with the eaten name.\npp$1.regexp_eatRegExpIdentifierName = function(state) {\n  state.lastStringValue = \"\";\n  if (this.regexp_eatRegExpIdentifierStart(state)) {\n    state.lastStringValue += codePointToString(state.lastIntValue);\n    while (this.regexp_eatRegExpIdentifierPart(state)) {\n      state.lastStringValue += codePointToString(state.lastIntValue);\n    }\n    return true\n  }\n  return false\n};\n\n// RegExpIdentifierStart ::\n//   UnicodeIDStart\n//   `$`\n//   `_`\n//   `\\` RegExpUnicodeEscapeSequence[+U]\npp$1.regexp_eatRegExpIdentifierStart = function(state) {\n  var start = state.pos;\n  var forceU = this.options.ecmaVersion >= 11;\n  var ch = state.current(forceU);\n  state.advance(forceU);\n\n  if (ch === 0x5C /* \\ */ && this.regexp_eatRegExpUnicodeEscapeSequence(state, forceU)) {\n    ch = state.lastIntValue;\n  }\n  if (isRegExpIdentifierStart(ch)) {\n    state.lastIntValue = ch;\n    return true\n  }\n\n  state.pos = start;\n  return false\n};\nfunction isRegExpIdentifierStart(ch) {\n  return isIdentifierStart(ch, true) || ch === 0x24 /* $ */ || ch === 0x5F /* _ */\n}\n\n// RegExpIdentifierPart ::\n//   UnicodeIDContinue\n//   `$`\n//   `_`\n//   `\\` RegExpUnicodeEscapeSequence[+U]\n//   <ZWNJ>\n//   <ZWJ>\npp$1.regexp_eatRegExpIdentifierPart = function(state) {\n  var start = state.pos;\n  var forceU = this.options.ecmaVersion >= 11;\n  var ch = state.current(forceU);\n  state.advance(forceU);\n\n  if (ch === 0x5C /* \\ */ && this.regexp_eatRegExpUnicodeEscapeSequence(state, forceU)) {\n    ch = state.lastIntValue;\n  }\n  if (isRegExpIdentifierPart(ch)) {\n    state.lastIntValue = ch;\n    return true\n  }\n\n  state.pos = start;\n  return false\n};\nfunction isRegExpIdentifierPart(ch) {\n  return isIdentifierChar(ch, true) || ch === 0x24 /* $ */ || ch === 0x5F /* _ */ || ch === 0x200C /* <ZWNJ> */ || ch === 0x200D /* <ZWJ> */\n}\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-AtomEscape\npp$1.regexp_eatAtomEscape = function(state) {\n  if (\n    this.regexp_eatBackReference(state) ||\n    this.regexp_eatCharacterClassEscape(state) ||\n    this.regexp_eatCharacterEscape(state) ||\n    (state.switchN && this.regexp_eatKGroupName(state))\n  ) {\n    return true\n  }\n  if (state.switchU) {\n    // Make the same message as V8.\n    if (state.current() === 0x63 /* c */) {\n      state.raise(\"Invalid unicode escape\");\n    }\n    state.raise(\"Invalid escape\");\n  }\n  return false\n};\npp$1.regexp_eatBackReference = function(state) {\n  var start = state.pos;\n  if (this.regexp_eatDecimalEscape(state)) {\n    var n = state.lastIntValue;\n    if (state.switchU) {\n      // For SyntaxError in https://www.ecma-international.org/ecma-262/8.0/#sec-atomescape\n      if (n > state.maxBackReference) {\n        state.maxBackReference = n;\n      }\n      return true\n    }\n    if (n <= state.numCapturingParens) {\n      return true\n    }\n    state.pos = start;\n  }\n  return false\n};\npp$1.regexp_eatKGroupName = function(state) {\n  if (state.eat(0x6B /* k */)) {\n    if (this.regexp_eatGroupName(state)) {\n      state.backReferenceNames.push(state.lastStringValue);\n      return true\n    }\n    state.raise(\"Invalid named reference\");\n  }\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-CharacterEscape\npp$1.regexp_eatCharacterEscape = function(state) {\n  return (\n    this.regexp_eatControlEscape(state) ||\n    this.regexp_eatCControlLetter(state) ||\n    this.regexp_eatZero(state) ||\n    this.regexp_eatHexEscapeSequence(state) ||\n    this.regexp_eatRegExpUnicodeEscapeSequence(state, false) ||\n    (!state.switchU && this.regexp_eatLegacyOctalEscapeSequence(state)) ||\n    this.regexp_eatIdentityEscape(state)\n  )\n};\npp$1.regexp_eatCControlLetter = function(state) {\n  var start = state.pos;\n  if (state.eat(0x63 /* c */)) {\n    if (this.regexp_eatControlLetter(state)) {\n      return true\n    }\n    state.pos = start;\n  }\n  return false\n};\npp$1.regexp_eatZero = function(state) {\n  if (state.current() === 0x30 /* 0 */ && !isDecimalDigit(state.lookahead())) {\n    state.lastIntValue = 0;\n    state.advance();\n    return true\n  }\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-ControlEscape\npp$1.regexp_eatControlEscape = function(state) {\n  var ch = state.current();\n  if (ch === 0x74 /* t */) {\n    state.lastIntValue = 0x09; /* \\t */\n    state.advance();\n    return true\n  }\n  if (ch === 0x6E /* n */) {\n    state.lastIntValue = 0x0A; /* \\n */\n    state.advance();\n    return true\n  }\n  if (ch === 0x76 /* v */) {\n    state.lastIntValue = 0x0B; /* \\v */\n    state.advance();\n    return true\n  }\n  if (ch === 0x66 /* f */) {\n    state.lastIntValue = 0x0C; /* \\f */\n    state.advance();\n    return true\n  }\n  if (ch === 0x72 /* r */) {\n    state.lastIntValue = 0x0D; /* \\r */\n    state.advance();\n    return true\n  }\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-ControlLetter\npp$1.regexp_eatControlLetter = function(state) {\n  var ch = state.current();\n  if (isControlLetter(ch)) {\n    state.lastIntValue = ch % 0x20;\n    state.advance();\n    return true\n  }\n  return false\n};\nfunction isControlLetter(ch) {\n  return (\n    (ch >= 0x41 /* A */ && ch <= 0x5A /* Z */) ||\n    (ch >= 0x61 /* a */ && ch <= 0x7A /* z */)\n  )\n}\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-RegExpUnicodeEscapeSequence\npp$1.regexp_eatRegExpUnicodeEscapeSequence = function(state, forceU) {\n  if ( forceU === void 0 ) forceU = false;\n\n  var start = state.pos;\n  var switchU = forceU || state.switchU;\n\n  if (state.eat(0x75 /* u */)) {\n    if (this.regexp_eatFixedHexDigits(state, 4)) {\n      var lead = state.lastIntValue;\n      if (switchU && lead >= 0xD800 && lead <= 0xDBFF) {\n        var leadSurrogateEnd = state.pos;\n        if (state.eat(0x5C /* \\ */) && state.eat(0x75 /* u */) && this.regexp_eatFixedHexDigits(state, 4)) {\n          var trail = state.lastIntValue;\n          if (trail >= 0xDC00 && trail <= 0xDFFF) {\n            state.lastIntValue = (lead - 0xD800) * 0x400 + (trail - 0xDC00) + 0x10000;\n            return true\n          }\n        }\n        state.pos = leadSurrogateEnd;\n        state.lastIntValue = lead;\n      }\n      return true\n    }\n    if (\n      switchU &&\n      state.eat(0x7B /* { */) &&\n      this.regexp_eatHexDigits(state) &&\n      state.eat(0x7D /* } */) &&\n      isValidUnicode(state.lastIntValue)\n    ) {\n      return true\n    }\n    if (switchU) {\n      state.raise(\"Invalid unicode escape\");\n    }\n    state.pos = start;\n  }\n\n  return false\n};\nfunction isValidUnicode(ch) {\n  return ch >= 0 && ch <= 0x10FFFF\n}\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-IdentityEscape\npp$1.regexp_eatIdentityEscape = function(state) {\n  if (state.switchU) {\n    if (this.regexp_eatSyntaxCharacter(state)) {\n      return true\n    }\n    if (state.eat(0x2F /* / */)) {\n      state.lastIntValue = 0x2F; /* / */\n      return true\n    }\n    return false\n  }\n\n  var ch = state.current();\n  if (ch !== 0x63 /* c */ && (!state.switchN || ch !== 0x6B /* k */)) {\n    state.lastIntValue = ch;\n    state.advance();\n    return true\n  }\n\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-DecimalEscape\npp$1.regexp_eatDecimalEscape = function(state) {\n  state.lastIntValue = 0;\n  var ch = state.current();\n  if (ch >= 0x31 /* 1 */ && ch <= 0x39 /* 9 */) {\n    do {\n      state.lastIntValue = 10 * state.lastIntValue + (ch - 0x30 /* 0 */);\n      state.advance();\n    } while ((ch = state.current()) >= 0x30 /* 0 */ && ch <= 0x39 /* 9 */)\n    return true\n  }\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-CharacterClassEscape\npp$1.regexp_eatCharacterClassEscape = function(state) {\n  var ch = state.current();\n\n  if (isCharacterClassEscape(ch)) {\n    state.lastIntValue = -1;\n    state.advance();\n    return true\n  }\n\n  if (\n    state.switchU &&\n    this.options.ecmaVersion >= 9 &&\n    (ch === 0x50 /* P */ || ch === 0x70 /* p */)\n  ) {\n    state.lastIntValue = -1;\n    state.advance();\n    if (\n      state.eat(0x7B /* { */) &&\n      this.regexp_eatUnicodePropertyValueExpression(state) &&\n      state.eat(0x7D /* } */)\n    ) {\n      return true\n    }\n    state.raise(\"Invalid property name\");\n  }\n\n  return false\n};\nfunction isCharacterClassEscape(ch) {\n  return (\n    ch === 0x64 /* d */ ||\n    ch === 0x44 /* D */ ||\n    ch === 0x73 /* s */ ||\n    ch === 0x53 /* S */ ||\n    ch === 0x77 /* w */ ||\n    ch === 0x57 /* W */\n  )\n}\n\n// UnicodePropertyValueExpression ::\n//   UnicodePropertyName `=` UnicodePropertyValue\n//   LoneUnicodePropertyNameOrValue\npp$1.regexp_eatUnicodePropertyValueExpression = function(state) {\n  var start = state.pos;\n\n  // UnicodePropertyName `=` UnicodePropertyValue\n  if (this.regexp_eatUnicodePropertyName(state) && state.eat(0x3D /* = */)) {\n    var name = state.lastStringValue;\n    if (this.regexp_eatUnicodePropertyValue(state)) {\n      var value = state.lastStringValue;\n      this.regexp_validateUnicodePropertyNameAndValue(state, name, value);\n      return true\n    }\n  }\n  state.pos = start;\n\n  // LoneUnicodePropertyNameOrValue\n  if (this.regexp_eatLoneUnicodePropertyNameOrValue(state)) {\n    var nameOrValue = state.lastStringValue;\n    this.regexp_validateUnicodePropertyNameOrValue(state, nameOrValue);\n    return true\n  }\n  return false\n};\npp$1.regexp_validateUnicodePropertyNameAndValue = function(state, name, value) {\n  if (!hasOwn(state.unicodeProperties.nonBinary, name))\n    { state.raise(\"Invalid property name\"); }\n  if (!state.unicodeProperties.nonBinary[name].test(value))\n    { state.raise(\"Invalid property value\"); }\n};\npp$1.regexp_validateUnicodePropertyNameOrValue = function(state, nameOrValue) {\n  if (!state.unicodeProperties.binary.test(nameOrValue))\n    { state.raise(\"Invalid property name\"); }\n};\n\n// UnicodePropertyName ::\n//   UnicodePropertyNameCharacters\npp$1.regexp_eatUnicodePropertyName = function(state) {\n  var ch = 0;\n  state.lastStringValue = \"\";\n  while (isUnicodePropertyNameCharacter(ch = state.current())) {\n    state.lastStringValue += codePointToString(ch);\n    state.advance();\n  }\n  return state.lastStringValue !== \"\"\n};\nfunction isUnicodePropertyNameCharacter(ch) {\n  return isControlLetter(ch) || ch === 0x5F /* _ */\n}\n\n// UnicodePropertyValue ::\n//   UnicodePropertyValueCharacters\npp$1.regexp_eatUnicodePropertyValue = function(state) {\n  var ch = 0;\n  state.lastStringValue = \"\";\n  while (isUnicodePropertyValueCharacter(ch = state.current())) {\n    state.lastStringValue += codePointToString(ch);\n    state.advance();\n  }\n  return state.lastStringValue !== \"\"\n};\nfunction isUnicodePropertyValueCharacter(ch) {\n  return isUnicodePropertyNameCharacter(ch) || isDecimalDigit(ch)\n}\n\n// LoneUnicodePropertyNameOrValue ::\n//   UnicodePropertyValueCharacters\npp$1.regexp_eatLoneUnicodePropertyNameOrValue = function(state) {\n  return this.regexp_eatUnicodePropertyValue(state)\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-CharacterClass\npp$1.regexp_eatCharacterClass = function(state) {\n  if (state.eat(0x5B /* [ */)) {\n    state.eat(0x5E /* ^ */);\n    this.regexp_classRanges(state);\n    if (state.eat(0x5D /* ] */)) {\n      return true\n    }\n    // Unreachable since it threw \"unterminated regular expression\" error before.\n    state.raise(\"Unterminated character class\");\n  }\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-ClassRanges\n// https://www.ecma-international.org/ecma-262/8.0/#prod-NonemptyClassRanges\n// https://www.ecma-international.org/ecma-262/8.0/#prod-NonemptyClassRangesNoDash\npp$1.regexp_classRanges = function(state) {\n  while (this.regexp_eatClassAtom(state)) {\n    var left = state.lastIntValue;\n    if (state.eat(0x2D /* - */) && this.regexp_eatClassAtom(state)) {\n      var right = state.lastIntValue;\n      if (state.switchU && (left === -1 || right === -1)) {\n        state.raise(\"Invalid character class\");\n      }\n      if (left !== -1 && right !== -1 && left > right) {\n        state.raise(\"Range out of order in character class\");\n      }\n    }\n  }\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-ClassAtom\n// https://www.ecma-international.org/ecma-262/8.0/#prod-ClassAtomNoDash\npp$1.regexp_eatClassAtom = function(state) {\n  var start = state.pos;\n\n  if (state.eat(0x5C /* \\ */)) {\n    if (this.regexp_eatClassEscape(state)) {\n      return true\n    }\n    if (state.switchU) {\n      // Make the same message as V8.\n      var ch$1 = state.current();\n      if (ch$1 === 0x63 /* c */ || isOctalDigit(ch$1)) {\n        state.raise(\"Invalid class escape\");\n      }\n      state.raise(\"Invalid escape\");\n    }\n    state.pos = start;\n  }\n\n  var ch = state.current();\n  if (ch !== 0x5D /* ] */) {\n    state.lastIntValue = ch;\n    state.advance();\n    return true\n  }\n\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-ClassEscape\npp$1.regexp_eatClassEscape = function(state) {\n  var start = state.pos;\n\n  if (state.eat(0x62 /* b */)) {\n    state.lastIntValue = 0x08; /* <BS> */\n    return true\n  }\n\n  if (state.switchU && state.eat(0x2D /* - */)) {\n    state.lastIntValue = 0x2D; /* - */\n    return true\n  }\n\n  if (!state.switchU && state.eat(0x63 /* c */)) {\n    if (this.regexp_eatClassControlLetter(state)) {\n      return true\n    }\n    state.pos = start;\n  }\n\n  return (\n    this.regexp_eatCharacterClassEscape(state) ||\n    this.regexp_eatCharacterEscape(state)\n  )\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-ClassControlLetter\npp$1.regexp_eatClassControlLetter = function(state) {\n  var ch = state.current();\n  if (isDecimalDigit(ch) || ch === 0x5F /* _ */) {\n    state.lastIntValue = ch % 0x20;\n    state.advance();\n    return true\n  }\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-HexEscapeSequence\npp$1.regexp_eatHexEscapeSequence = function(state) {\n  var start = state.pos;\n  if (state.eat(0x78 /* x */)) {\n    if (this.regexp_eatFixedHexDigits(state, 2)) {\n      return true\n    }\n    if (state.switchU) {\n      state.raise(\"Invalid escape\");\n    }\n    state.pos = start;\n  }\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-DecimalDigits\npp$1.regexp_eatDecimalDigits = function(state) {\n  var start = state.pos;\n  var ch = 0;\n  state.lastIntValue = 0;\n  while (isDecimalDigit(ch = state.current())) {\n    state.lastIntValue = 10 * state.lastIntValue + (ch - 0x30 /* 0 */);\n    state.advance();\n  }\n  return state.pos !== start\n};\nfunction isDecimalDigit(ch) {\n  return ch >= 0x30 /* 0 */ && ch <= 0x39 /* 9 */\n}\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-HexDigits\npp$1.regexp_eatHexDigits = function(state) {\n  var start = state.pos;\n  var ch = 0;\n  state.lastIntValue = 0;\n  while (isHexDigit(ch = state.current())) {\n    state.lastIntValue = 16 * state.lastIntValue + hexToInt(ch);\n    state.advance();\n  }\n  return state.pos !== start\n};\nfunction isHexDigit(ch) {\n  return (\n    (ch >= 0x30 /* 0 */ && ch <= 0x39 /* 9 */) ||\n    (ch >= 0x41 /* A */ && ch <= 0x46 /* F */) ||\n    (ch >= 0x61 /* a */ && ch <= 0x66 /* f */)\n  )\n}\nfunction hexToInt(ch) {\n  if (ch >= 0x41 /* A */ && ch <= 0x46 /* F */) {\n    return 10 + (ch - 0x41 /* A */)\n  }\n  if (ch >= 0x61 /* a */ && ch <= 0x66 /* f */) {\n    return 10 + (ch - 0x61 /* a */)\n  }\n  return ch - 0x30 /* 0 */\n}\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-LegacyOctalEscapeSequence\n// Allows only 0-377(octal) i.e. 0-255(decimal).\npp$1.regexp_eatLegacyOctalEscapeSequence = function(state) {\n  if (this.regexp_eatOctalDigit(state)) {\n    var n1 = state.lastIntValue;\n    if (this.regexp_eatOctalDigit(state)) {\n      var n2 = state.lastIntValue;\n      if (n1 <= 3 && this.regexp_eatOctalDigit(state)) {\n        state.lastIntValue = n1 * 64 + n2 * 8 + state.lastIntValue;\n      } else {\n        state.lastIntValue = n1 * 8 + n2;\n      }\n    } else {\n      state.lastIntValue = n1;\n    }\n    return true\n  }\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-OctalDigit\npp$1.regexp_eatOctalDigit = function(state) {\n  var ch = state.current();\n  if (isOctalDigit(ch)) {\n    state.lastIntValue = ch - 0x30; /* 0 */\n    state.advance();\n    return true\n  }\n  state.lastIntValue = 0;\n  return false\n};\nfunction isOctalDigit(ch) {\n  return ch >= 0x30 /* 0 */ && ch <= 0x37 /* 7 */\n}\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-Hex4Digits\n// https://www.ecma-international.org/ecma-262/8.0/#prod-HexDigit\n// And HexDigit HexDigit in https://www.ecma-international.org/ecma-262/8.0/#prod-HexEscapeSequence\npp$1.regexp_eatFixedHexDigits = function(state, length) {\n  var start = state.pos;\n  state.lastIntValue = 0;\n  for (var i = 0; i < length; ++i) {\n    var ch = state.current();\n    if (!isHexDigit(ch)) {\n      state.pos = start;\n      return false\n    }\n    state.lastIntValue = 16 * state.lastIntValue + hexToInt(ch);\n    state.advance();\n  }\n  return true\n};\n\n// Object type used to represent tokens. Note that normally, tokens\n// simply exist as properties on the parser object. This is only\n// used for the onToken callback and the external tokenizer.\n\nvar Token = function Token(p) {\n  this.type = p.type;\n  this.value = p.value;\n  this.start = p.start;\n  this.end = p.end;\n  if (p.options.locations)\n    { this.loc = new SourceLocation(p, p.startLoc, p.endLoc); }\n  if (p.options.ranges)\n    { this.range = [p.start, p.end]; }\n};\n\n// ## Tokenizer\n\nvar pp = Parser.prototype;\n\n// Move to the next token\n\npp.next = function(ignoreEscapeSequenceInKeyword) {\n  if (!ignoreEscapeSequenceInKeyword && this.type.keyword && this.containsEsc)\n    { this.raiseRecoverable(this.start, \"Escape sequence in keyword \" + this.type.keyword); }\n  if (this.options.onToken)\n    { this.options.onToken(new Token(this)); }\n\n  this.lastTokEnd = this.end;\n  this.lastTokStart = this.start;\n  this.lastTokEndLoc = this.endLoc;\n  this.lastTokStartLoc = this.startLoc;\n  this.nextToken();\n};\n\npp.getToken = function() {\n  this.next();\n  return new Token(this)\n};\n\n// If we're in an ES6 environment, make parsers iterable\nif (typeof Symbol !== \"undefined\")\n  { pp[Symbol.iterator] = function() {\n    var this$1$1 = this;\n\n    return {\n      next: function () {\n        var token = this$1$1.getToken();\n        return {\n          done: token.type === types$1.eof,\n          value: token\n        }\n      }\n    }\n  }; }\n\n// Toggle strict mode. Re-reads the next number or string to please\n// pedantic tests (`\"use strict\"; 010;` should fail).\n\n// Read a single token, updating the parser object's token-related\n// properties.\n\npp.nextToken = function() {\n  var curContext = this.curContext();\n  if (!curContext || !curContext.preserveSpace) { this.skipSpace(); }\n\n  this.start = this.pos;\n  if (this.options.locations) { this.startLoc = this.curPosition(); }\n  if (this.pos >= this.input.length) { return this.finishToken(types$1.eof) }\n\n  if (curContext.override) { return curContext.override(this) }\n  else { this.readToken(this.fullCharCodeAtPos()); }\n};\n\npp.readToken = function(code) {\n  // Identifier or keyword. '\\uXXXX' sequences are allowed in\n  // identifiers, so '\\' also dispatches to that.\n  if (isIdentifierStart(code, this.options.ecmaVersion >= 6) || code === 92 /* '\\' */)\n    { return this.readWord() }\n\n  return this.getTokenFromCode(code)\n};\n\npp.fullCharCodeAtPos = function() {\n  var code = this.input.charCodeAt(this.pos);\n  if (code <= 0xd7ff || code >= 0xdc00) { return code }\n  var next = this.input.charCodeAt(this.pos + 1);\n  return next <= 0xdbff || next >= 0xe000 ? code : (code << 10) + next - 0x35fdc00\n};\n\npp.skipBlockComment = function() {\n  var startLoc = this.options.onComment && this.curPosition();\n  var start = this.pos, end = this.input.indexOf(\"*/\", this.pos += 2);\n  if (end === -1) { this.raise(this.pos - 2, \"Unterminated comment\"); }\n  this.pos = end + 2;\n  if (this.options.locations) {\n    for (var nextBreak = (void 0), pos = start; (nextBreak = nextLineBreak(this.input, pos, this.pos)) > -1;) {\n      ++this.curLine;\n      pos = this.lineStart = nextBreak;\n    }\n  }\n  if (this.options.onComment)\n    { this.options.onComment(true, this.input.slice(start + 2, end), start, this.pos,\n                           startLoc, this.curPosition()); }\n};\n\npp.skipLineComment = function(startSkip) {\n  var start = this.pos;\n  var startLoc = this.options.onComment && this.curPosition();\n  var ch = this.input.charCodeAt(this.pos += startSkip);\n  while (this.pos < this.input.length && !isNewLine(ch)) {\n    ch = this.input.charCodeAt(++this.pos);\n  }\n  if (this.options.onComment)\n    { this.options.onComment(false, this.input.slice(start + startSkip, this.pos), start, this.pos,\n                           startLoc, this.curPosition()); }\n};\n\n// Called at the start of the parse and after every token. Skips\n// whitespace and comments, and.\n\npp.skipSpace = function() {\n  loop: while (this.pos < this.input.length) {\n    var ch = this.input.charCodeAt(this.pos);\n    switch (ch) {\n    case 32: case 160: // ' '\n      ++this.pos;\n      break\n    case 13:\n      if (this.input.charCodeAt(this.pos + 1) === 10) {\n        ++this.pos;\n      }\n    case 10: case 8232: case 8233:\n      ++this.pos;\n      if (this.options.locations) {\n        ++this.curLine;\n        this.lineStart = this.pos;\n      }\n      break\n    case 47: // '/'\n      switch (this.input.charCodeAt(this.pos + 1)) {\n      case 42: // '*'\n        this.skipBlockComment();\n        break\n      case 47:\n        this.skipLineComment(2);\n        break\n      default:\n        break loop\n      }\n      break\n    default:\n      if (ch > 8 && ch < 14 || ch >= 5760 && nonASCIIwhitespace.test(String.fromCharCode(ch))) {\n        ++this.pos;\n      } else {\n        break loop\n      }\n    }\n  }\n};\n\n// Called at the end of every token. Sets `end`, `val`, and\n// maintains `context` and `exprAllowed`, and skips the space after\n// the token, so that the next one's `start` will point at the\n// right position.\n\npp.finishToken = function(type, val) {\n  this.end = this.pos;\n  if (this.options.locations) { this.endLoc = this.curPosition(); }\n  var prevType = this.type;\n  this.type = type;\n  this.value = val;\n\n  this.updateContext(prevType);\n};\n\n// ### Token reading\n\n// This is the function that is called to fetch the next token. It\n// is somewhat obscure, because it works in character codes rather\n// than characters, and because operator parsing has been inlined\n// into it.\n//\n// All in the name of speed.\n//\npp.readToken_dot = function() {\n  var next = this.input.charCodeAt(this.pos + 1);\n  if (next >= 48 && next <= 57) { return this.readNumber(true) }\n  var next2 = this.input.charCodeAt(this.pos + 2);\n  if (this.options.ecmaVersion >= 6 && next === 46 && next2 === 46) { // 46 = dot '.'\n    this.pos += 3;\n    return this.finishToken(types$1.ellipsis)\n  } else {\n    ++this.pos;\n    return this.finishToken(types$1.dot)\n  }\n};\n\npp.readToken_slash = function() { // '/'\n  var next = this.input.charCodeAt(this.pos + 1);\n  if (this.exprAllowed) { ++this.pos; return this.readRegexp() }\n  if (next === 61) { return this.finishOp(types$1.assign, 2) }\n  return this.finishOp(types$1.slash, 1)\n};\n\npp.readToken_mult_modulo_exp = function(code) { // '%*'\n  var next = this.input.charCodeAt(this.pos + 1);\n  var size = 1;\n  var tokentype = code === 42 ? types$1.star : types$1.modulo;\n\n  // exponentiation operator ** and **=\n  if (this.options.ecmaVersion >= 7 && code === 42 && next === 42) {\n    ++size;\n    tokentype = types$1.starstar;\n    next = this.input.charCodeAt(this.pos + 2);\n  }\n\n  if (next === 61) { return this.finishOp(types$1.assign, size + 1) }\n  return this.finishOp(tokentype, size)\n};\n\npp.readToken_pipe_amp = function(code) { // '|&'\n  var next = this.input.charCodeAt(this.pos + 1);\n  if (next === code) {\n    if (this.options.ecmaVersion >= 12) {\n      var next2 = this.input.charCodeAt(this.pos + 2);\n      if (next2 === 61) { return this.finishOp(types$1.assign, 3) }\n    }\n    return this.finishOp(code === 124 ? types$1.logicalOR : types$1.logicalAND, 2)\n  }\n  if (next === 61) { return this.finishOp(types$1.assign, 2) }\n  return this.finishOp(code === 124 ? types$1.bitwiseOR : types$1.bitwiseAND, 1)\n};\n\npp.readToken_caret = function() { // '^'\n  var next = this.input.charCodeAt(this.pos + 1);\n  if (next === 61) { return this.finishOp(types$1.assign, 2) }\n  return this.finishOp(types$1.bitwiseXOR, 1)\n};\n\npp.readToken_plus_min = function(code) { // '+-'\n  var next = this.input.charCodeAt(this.pos + 1);\n  if (next === code) {\n    if (next === 45 && !this.inModule && this.input.charCodeAt(this.pos + 2) === 62 &&\n        (this.lastTokEnd === 0 || lineBreak.test(this.input.slice(this.lastTokEnd, this.pos)))) {\n      // A `-->` line comment\n      this.skipLineComment(3);\n      this.skipSpace();\n      return this.nextToken()\n    }\n    return this.finishOp(types$1.incDec, 2)\n  }\n  if (next === 61) { return this.finishOp(types$1.assign, 2) }\n  return this.finishOp(types$1.plusMin, 1)\n};\n\npp.readToken_lt_gt = function(code) { // '<>'\n  var next = this.input.charCodeAt(this.pos + 1);\n  var size = 1;\n  if (next === code) {\n    size = code === 62 && this.input.charCodeAt(this.pos + 2) === 62 ? 3 : 2;\n    if (this.input.charCodeAt(this.pos + size) === 61) { return this.finishOp(types$1.assign, size + 1) }\n    return this.finishOp(types$1.bitShift, size)\n  }\n  if (next === 33 && code === 60 && !this.inModule && this.input.charCodeAt(this.pos + 2) === 45 &&\n      this.input.charCodeAt(this.pos + 3) === 45) {\n    // `<!--`, an XML-style comment that should be interpreted as a line comment\n    this.skipLineComment(4);\n    this.skipSpace();\n    return this.nextToken()\n  }\n  if (next === 61) { size = 2; }\n  return this.finishOp(types$1.relational, size)\n};\n\npp.readToken_eq_excl = function(code) { // '=!'\n  var next = this.input.charCodeAt(this.pos + 1);\n  if (next === 61) { return this.finishOp(types$1.equality, this.input.charCodeAt(this.pos + 2) === 61 ? 3 : 2) }\n  if (code === 61 && next === 62 && this.options.ecmaVersion >= 6) { // '=>'\n    this.pos += 2;\n    return this.finishToken(types$1.arrow)\n  }\n  return this.finishOp(code === 61 ? types$1.eq : types$1.prefix, 1)\n};\n\npp.readToken_question = function() { // '?'\n  var ecmaVersion = this.options.ecmaVersion;\n  if (ecmaVersion >= 11) {\n    var next = this.input.charCodeAt(this.pos + 1);\n    if (next === 46) {\n      var next2 = this.input.charCodeAt(this.pos + 2);\n      if (next2 < 48 || next2 > 57) { return this.finishOp(types$1.questionDot, 2) }\n    }\n    if (next === 63) {\n      if (ecmaVersion >= 12) {\n        var next2$1 = this.input.charCodeAt(this.pos + 2);\n        if (next2$1 === 61) { return this.finishOp(types$1.assign, 3) }\n      }\n      return this.finishOp(types$1.coalesce, 2)\n    }\n  }\n  return this.finishOp(types$1.question, 1)\n};\n\npp.readToken_numberSign = function() { // '#'\n  var ecmaVersion = this.options.ecmaVersion;\n  var code = 35; // '#'\n  if (ecmaVersion >= 13) {\n    ++this.pos;\n    code = this.fullCharCodeAtPos();\n    if (isIdentifierStart(code, true) || code === 92 /* '\\' */) {\n      return this.finishToken(types$1.privateId, this.readWord1())\n    }\n  }\n\n  this.raise(this.pos, \"Unexpected character '\" + codePointToString(code) + \"'\");\n};\n\npp.getTokenFromCode = function(code) {\n  switch (code) {\n  // The interpretation of a dot depends on whether it is followed\n  // by a digit or another two dots.\n  case 46: // '.'\n    return this.readToken_dot()\n\n  // Punctuation tokens.\n  case 40: ++this.pos; return this.finishToken(types$1.parenL)\n  case 41: ++this.pos; return this.finishToken(types$1.parenR)\n  case 59: ++this.pos; return this.finishToken(types$1.semi)\n  case 44: ++this.pos; return this.finishToken(types$1.comma)\n  case 91: ++this.pos; return this.finishToken(types$1.bracketL)\n  case 93: ++this.pos; return this.finishToken(types$1.bracketR)\n  case 123: ++this.pos; return this.finishToken(types$1.braceL)\n  case 125: ++this.pos; return this.finishToken(types$1.braceR)\n  case 58: ++this.pos; return this.finishToken(types$1.colon)\n\n  case 96: // '`'\n    if (this.options.ecmaVersion < 6) { break }\n    ++this.pos;\n    return this.finishToken(types$1.backQuote)\n\n  case 48: // '0'\n    var next = this.input.charCodeAt(this.pos + 1);\n    if (next === 120 || next === 88) { return this.readRadixNumber(16) } // '0x', '0X' - hex number\n    if (this.options.ecmaVersion >= 6) {\n      if (next === 111 || next === 79) { return this.readRadixNumber(8) } // '0o', '0O' - octal number\n      if (next === 98 || next === 66) { return this.readRadixNumber(2) } // '0b', '0B' - binary number\n    }\n\n  // Anything else beginning with a digit is an integer, octal\n  // number, or float.\n  case 49: case 50: case 51: case 52: case 53: case 54: case 55: case 56: case 57: // 1-9\n    return this.readNumber(false)\n\n  // Quotes produce strings.\n  case 34: case 39: // '\"', \"'\"\n    return this.readString(code)\n\n  // Operators are parsed inline in tiny state machines. '=' (61) is\n  // often referred to. `finishOp` simply skips the amount of\n  // characters it is given as second argument, and returns a token\n  // of the type given by its first argument.\n  case 47: // '/'\n    return this.readToken_slash()\n\n  case 37: case 42: // '%*'\n    return this.readToken_mult_modulo_exp(code)\n\n  case 124: case 38: // '|&'\n    return this.readToken_pipe_amp(code)\n\n  case 94: // '^'\n    return this.readToken_caret()\n\n  case 43: case 45: // '+-'\n    return this.readToken_plus_min(code)\n\n  case 60: case 62: // '<>'\n    return this.readToken_lt_gt(code)\n\n  case 61: case 33: // '=!'\n    return this.readToken_eq_excl(code)\n\n  case 63: // '?'\n    return this.readToken_question()\n\n  case 126: // '~'\n    return this.finishOp(types$1.prefix, 1)\n\n  case 35: // '#'\n    return this.readToken_numberSign()\n  }\n\n  this.raise(this.pos, \"Unexpected character '\" + codePointToString(code) + \"'\");\n};\n\npp.finishOp = function(type, size) {\n  var str = this.input.slice(this.pos, this.pos + size);\n  this.pos += size;\n  return this.finishToken(type, str)\n};\n\npp.readRegexp = function() {\n  var escaped, inClass, start = this.pos;\n  for (;;) {\n    if (this.pos >= this.input.length) { this.raise(start, \"Unterminated regular expression\"); }\n    var ch = this.input.charAt(this.pos);\n    if (lineBreak.test(ch)) { this.raise(start, \"Unterminated regular expression\"); }\n    if (!escaped) {\n      if (ch === \"[\") { inClass = true; }\n      else if (ch === \"]\" && inClass) { inClass = false; }\n      else if (ch === \"/\" && !inClass) { break }\n      escaped = ch === \"\\\\\";\n    } else { escaped = false; }\n    ++this.pos;\n  }\n  var pattern = this.input.slice(start, this.pos);\n  ++this.pos;\n  var flagsStart = this.pos;\n  var flags = this.readWord1();\n  if (this.containsEsc) { this.unexpected(flagsStart); }\n\n  // Validate pattern\n  var state = this.regexpState || (this.regexpState = new RegExpValidationState(this));\n  state.reset(start, pattern, flags);\n  this.validateRegExpFlags(state);\n  this.validateRegExpPattern(state);\n\n  // Create Literal#value property value.\n  var value = null;\n  try {\n    value = new RegExp(pattern, flags);\n  } catch (e) {\n    // ESTree requires null if it failed to instantiate RegExp object.\n    // https://github.com/estree/estree/blob/a27003adf4fd7bfad44de9cef372a2eacd527b1c/es5.md#regexpliteral\n  }\n\n  return this.finishToken(types$1.regexp, {pattern: pattern, flags: flags, value: value})\n};\n\n// Read an integer in the given radix. Return null if zero digits\n// were read, the integer value otherwise. When `len` is given, this\n// will return `null` unless the integer has exactly `len` digits.\n\npp.readInt = function(radix, len, maybeLegacyOctalNumericLiteral) {\n  // `len` is used for character escape sequences. In that case, disallow separators.\n  var allowSeparators = this.options.ecmaVersion >= 12 && len === undefined;\n\n  // `maybeLegacyOctalNumericLiteral` is true if it doesn't have prefix (0x,0o,0b)\n  // and isn't fraction part nor exponent part. In that case, if the first digit\n  // is zero then disallow separators.\n  var isLegacyOctalNumericLiteral = maybeLegacyOctalNumericLiteral && this.input.charCodeAt(this.pos) === 48;\n\n  var start = this.pos, total = 0, lastCode = 0;\n  for (var i = 0, e = len == null ? Infinity : len; i < e; ++i, ++this.pos) {\n    var code = this.input.charCodeAt(this.pos), val = (void 0);\n\n    if (allowSeparators && code === 95) {\n      if (isLegacyOctalNumericLiteral) { this.raiseRecoverable(this.pos, \"Numeric separator is not allowed in legacy octal numeric literals\"); }\n      if (lastCode === 95) { this.raiseRecoverable(this.pos, \"Numeric separator must be exactly one underscore\"); }\n      if (i === 0) { this.raiseRecoverable(this.pos, \"Numeric separator is not allowed at the first of digits\"); }\n      lastCode = code;\n      continue\n    }\n\n    if (code >= 97) { val = code - 97 + 10; } // a\n    else if (code >= 65) { val = code - 65 + 10; } // A\n    else if (code >= 48 && code <= 57) { val = code - 48; } // 0-9\n    else { val = Infinity; }\n    if (val >= radix) { break }\n    lastCode = code;\n    total = total * radix + val;\n  }\n\n  if (allowSeparators && lastCode === 95) { this.raiseRecoverable(this.pos - 1, \"Numeric separator is not allowed at the last of digits\"); }\n  if (this.pos === start || len != null && this.pos - start !== len) { return null }\n\n  return total\n};\n\nfunction stringToNumber(str, isLegacyOctalNumericLiteral) {\n  if (isLegacyOctalNumericLiteral) {\n    return parseInt(str, 8)\n  }\n\n  // `parseFloat(value)` stops parsing at the first numeric separator then returns a wrong value.\n  return parseFloat(str.replace(/_/g, \"\"))\n}\n\nfunction stringToBigInt(str) {\n  if (typeof BigInt !== \"function\") {\n    return null\n  }\n\n  // `BigInt(value)` throws syntax error if the string contains numeric separators.\n  return BigInt(str.replace(/_/g, \"\"))\n}\n\npp.readRadixNumber = function(radix) {\n  var start = this.pos;\n  this.pos += 2; // 0x\n  var val = this.readInt(radix);\n  if (val == null) { this.raise(this.start + 2, \"Expected number in radix \" + radix); }\n  if (this.options.ecmaVersion >= 11 && this.input.charCodeAt(this.pos) === 110) {\n    val = stringToBigInt(this.input.slice(start, this.pos));\n    ++this.pos;\n  } else if (isIdentifierStart(this.fullCharCodeAtPos())) { this.raise(this.pos, \"Identifier directly after number\"); }\n  return this.finishToken(types$1.num, val)\n};\n\n// Read an integer, octal integer, or floating-point number.\n\npp.readNumber = function(startsWithDot) {\n  var start = this.pos;\n  if (!startsWithDot && this.readInt(10, undefined, true) === null) { this.raise(start, \"Invalid number\"); }\n  var octal = this.pos - start >= 2 && this.input.charCodeAt(start) === 48;\n  if (octal && this.strict) { this.raise(start, \"Invalid number\"); }\n  var next = this.input.charCodeAt(this.pos);\n  if (!octal && !startsWithDot && this.options.ecmaVersion >= 11 && next === 110) {\n    var val$1 = stringToBigInt(this.input.slice(start, this.pos));\n    ++this.pos;\n    if (isIdentifierStart(this.fullCharCodeAtPos())) { this.raise(this.pos, \"Identifier directly after number\"); }\n    return this.finishToken(types$1.num, val$1)\n  }\n  if (octal && /[89]/.test(this.input.slice(start, this.pos))) { octal = false; }\n  if (next === 46 && !octal) { // '.'\n    ++this.pos;\n    this.readInt(10);\n    next = this.input.charCodeAt(this.pos);\n  }\n  if ((next === 69 || next === 101) && !octal) { // 'eE'\n    next = this.input.charCodeAt(++this.pos);\n    if (next === 43 || next === 45) { ++this.pos; } // '+-'\n    if (this.readInt(10) === null) { this.raise(start, \"Invalid number\"); }\n  }\n  if (isIdentifierStart(this.fullCharCodeAtPos())) { this.raise(this.pos, \"Identifier directly after number\"); }\n\n  var val = stringToNumber(this.input.slice(start, this.pos), octal);\n  return this.finishToken(types$1.num, val)\n};\n\n// Read a string value, interpreting backslash-escapes.\n\npp.readCodePoint = function() {\n  var ch = this.input.charCodeAt(this.pos), code;\n\n  if (ch === 123) { // '{'\n    if (this.options.ecmaVersion < 6) { this.unexpected(); }\n    var codePos = ++this.pos;\n    code = this.readHexChar(this.input.indexOf(\"}\", this.pos) - this.pos);\n    ++this.pos;\n    if (code > 0x10FFFF) { this.invalidStringToken(codePos, \"Code point out of bounds\"); }\n  } else {\n    code = this.readHexChar(4);\n  }\n  return code\n};\n\npp.readString = function(quote) {\n  var out = \"\", chunkStart = ++this.pos;\n  for (;;) {\n    if (this.pos >= this.input.length) { this.raise(this.start, \"Unterminated string constant\"); }\n    var ch = this.input.charCodeAt(this.pos);\n    if (ch === quote) { break }\n    if (ch === 92) { // '\\'\n      out += this.input.slice(chunkStart, this.pos);\n      out += this.readEscapedChar(false);\n      chunkStart = this.pos;\n    } else if (ch === 0x2028 || ch === 0x2029) {\n      if (this.options.ecmaVersion < 10) { this.raise(this.start, \"Unterminated string constant\"); }\n      ++this.pos;\n      if (this.options.locations) {\n        this.curLine++;\n        this.lineStart = this.pos;\n      }\n    } else {\n      if (isNewLine(ch)) { this.raise(this.start, \"Unterminated string constant\"); }\n      ++this.pos;\n    }\n  }\n  out += this.input.slice(chunkStart, this.pos++);\n  return this.finishToken(types$1.string, out)\n};\n\n// Reads template string tokens.\n\nvar INVALID_TEMPLATE_ESCAPE_ERROR = {};\n\npp.tryReadTemplateToken = function() {\n  this.inTemplateElement = true;\n  try {\n    this.readTmplToken();\n  } catch (err) {\n    if (err === INVALID_TEMPLATE_ESCAPE_ERROR) {\n      this.readInvalidTemplateToken();\n    } else {\n      throw err\n    }\n  }\n\n  this.inTemplateElement = false;\n};\n\npp.invalidStringToken = function(position, message) {\n  if (this.inTemplateElement && this.options.ecmaVersion >= 9) {\n    throw INVALID_TEMPLATE_ESCAPE_ERROR\n  } else {\n    this.raise(position, message);\n  }\n};\n\npp.readTmplToken = function() {\n  var out = \"\", chunkStart = this.pos;\n  for (;;) {\n    if (this.pos >= this.input.length) { this.raise(this.start, \"Unterminated template\"); }\n    var ch = this.input.charCodeAt(this.pos);\n    if (ch === 96 || ch === 36 && this.input.charCodeAt(this.pos + 1) === 123) { // '`', '${'\n      if (this.pos === this.start && (this.type === types$1.template || this.type === types$1.invalidTemplate)) {\n        if (ch === 36) {\n          this.pos += 2;\n          return this.finishToken(types$1.dollarBraceL)\n        } else {\n          ++this.pos;\n          return this.finishToken(types$1.backQuote)\n        }\n      }\n      out += this.input.slice(chunkStart, this.pos);\n      return this.finishToken(types$1.template, out)\n    }\n    if (ch === 92) { // '\\'\n      out += this.input.slice(chunkStart, this.pos);\n      out += this.readEscapedChar(true);\n      chunkStart = this.pos;\n    } else if (isNewLine(ch)) {\n      out += this.input.slice(chunkStart, this.pos);\n      ++this.pos;\n      switch (ch) {\n      case 13:\n        if (this.input.charCodeAt(this.pos) === 10) { ++this.pos; }\n      case 10:\n        out += \"\\n\";\n        break\n      default:\n        out += String.fromCharCode(ch);\n        break\n      }\n      if (this.options.locations) {\n        ++this.curLine;\n        this.lineStart = this.pos;\n      }\n      chunkStart = this.pos;\n    } else {\n      ++this.pos;\n    }\n  }\n};\n\n// Reads a template token to search for the end, without validating any escape sequences\npp.readInvalidTemplateToken = function() {\n  for (; this.pos < this.input.length; this.pos++) {\n    switch (this.input[this.pos]) {\n    case \"\\\\\":\n      ++this.pos;\n      break\n\n    case \"$\":\n      if (this.input[this.pos + 1] !== \"{\") {\n        break\n      }\n\n    // falls through\n    case \"`\":\n      return this.finishToken(types$1.invalidTemplate, this.input.slice(this.start, this.pos))\n\n    // no default\n    }\n  }\n  this.raise(this.start, \"Unterminated template\");\n};\n\n// Used to read escaped characters\n\npp.readEscapedChar = function(inTemplate) {\n  var ch = this.input.charCodeAt(++this.pos);\n  ++this.pos;\n  switch (ch) {\n  case 110: return \"\\n\" // 'n' -> '\\n'\n  case 114: return \"\\r\" // 'r' -> '\\r'\n  case 120: return String.fromCharCode(this.readHexChar(2)) // 'x'\n  case 117: return codePointToString(this.readCodePoint()) // 'u'\n  case 116: return \"\\t\" // 't' -> '\\t'\n  case 98: return \"\\b\" // 'b' -> '\\b'\n  case 118: return \"\\u000b\" // 'v' -> '\\u000b'\n  case 102: return \"\\f\" // 'f' -> '\\f'\n  case 13: if (this.input.charCodeAt(this.pos) === 10) { ++this.pos; } // '\\r\\n'\n  case 10: // ' \\n'\n    if (this.options.locations) { this.lineStart = this.pos; ++this.curLine; }\n    return \"\"\n  case 56:\n  case 57:\n    if (this.strict) {\n      this.invalidStringToken(\n        this.pos - 1,\n        \"Invalid escape sequence\"\n      );\n    }\n    if (inTemplate) {\n      var codePos = this.pos - 1;\n\n      this.invalidStringToken(\n        codePos,\n        \"Invalid escape sequence in template string\"\n      );\n\n      return null\n    }\n  default:\n    if (ch >= 48 && ch <= 55) {\n      var octalStr = this.input.substr(this.pos - 1, 3).match(/^[0-7]+/)[0];\n      var octal = parseInt(octalStr, 8);\n      if (octal > 255) {\n        octalStr = octalStr.slice(0, -1);\n        octal = parseInt(octalStr, 8);\n      }\n      this.pos += octalStr.length - 1;\n      ch = this.input.charCodeAt(this.pos);\n      if ((octalStr !== \"0\" || ch === 56 || ch === 57) && (this.strict || inTemplate)) {\n        this.invalidStringToken(\n          this.pos - 1 - octalStr.length,\n          inTemplate\n            ? \"Octal literal in template string\"\n            : \"Octal literal in strict mode\"\n        );\n      }\n      return String.fromCharCode(octal)\n    }\n    if (isNewLine(ch)) {\n      // Unicode new line characters after \\ get removed from output in both\n      // template literals and strings\n      return \"\"\n    }\n    return String.fromCharCode(ch)\n  }\n};\n\n// Used to read character escape sequences ('\\x', '\\u', '\\U').\n\npp.readHexChar = function(len) {\n  var codePos = this.pos;\n  var n = this.readInt(16, len);\n  if (n === null) { this.invalidStringToken(codePos, \"Bad character escape sequence\"); }\n  return n\n};\n\n// Read an identifier, and return it as a string. Sets `this.containsEsc`\n// to whether the word contained a '\\u' escape.\n//\n// Incrementally adds only escaped chars, adding other chunks as-is\n// as a micro-optimization.\n\npp.readWord1 = function() {\n  this.containsEsc = false;\n  var word = \"\", first = true, chunkStart = this.pos;\n  var astral = this.options.ecmaVersion >= 6;\n  while (this.pos < this.input.length) {\n    var ch = this.fullCharCodeAtPos();\n    if (isIdentifierChar(ch, astral)) {\n      this.pos += ch <= 0xffff ? 1 : 2;\n    } else if (ch === 92) { // \"\\\"\n      this.containsEsc = true;\n      word += this.input.slice(chunkStart, this.pos);\n      var escStart = this.pos;\n      if (this.input.charCodeAt(++this.pos) !== 117) // \"u\"\n        { this.invalidStringToken(this.pos, \"Expecting Unicode escape sequence \\\\uXXXX\"); }\n      ++this.pos;\n      var esc = this.readCodePoint();\n      if (!(first ? isIdentifierStart : isIdentifierChar)(esc, astral))\n        { this.invalidStringToken(escStart, \"Invalid Unicode escape\"); }\n      word += codePointToString(esc);\n      chunkStart = this.pos;\n    } else {\n      break\n    }\n    first = false;\n  }\n  return word + this.input.slice(chunkStart, this.pos)\n};\n\n// Read an identifier or keyword token. Will check for reserved\n// words when necessary.\n\npp.readWord = function() {\n  var word = this.readWord1();\n  var type = types$1.name;\n  if (this.keywords.test(word)) {\n    type = keywords[word];\n  }\n  return this.finishToken(type, word)\n};\n\n// Acorn is a tiny, fast JavaScript parser written in JavaScript.\n\nvar version = \"8.8.0\";\n\nParser.acorn = {\n  Parser: Parser,\n  version: version,\n  defaultOptions: defaultOptions,\n  Position: Position,\n  SourceLocation: SourceLocation,\n  getLineInfo: getLineInfo,\n  Node: Node,\n  TokenType: TokenType,\n  tokTypes: types$1,\n  keywordTypes: keywords,\n  TokContext: TokContext,\n  tokContexts: types,\n  isIdentifierChar: isIdentifierChar,\n  isIdentifierStart: isIdentifierStart,\n  Token: Token,\n  isNewLine: isNewLine,\n  lineBreak: lineBreak,\n  lineBreakG: lineBreakG,\n  nonASCIIwhitespace: nonASCIIwhitespace\n};\n\n// The main exported interface (under `self.acorn` when in the\n// browser) is a `parse` function that takes a code string and\n// returns an abstract syntax tree as specified by [Mozilla parser\n// API][api].\n//\n// [api]: https://developer.mozilla.org/en-US/docs/SpiderMonkey/Parser_API\n\nfunction parse$c(input, options) {\n  return Parser.parse(input, options)\n}\n\n// This function tries to parse a single expression at a given\n// offset in a string. Useful for parsing mixed-language formats\n// that embed JavaScript expressions.\n\nfunction parseExpressionAt(input, pos, options) {\n  return Parser.parseExpressionAt(input, pos, options)\n}\n\n// Acorn is organized as a tokenizer and a recursive-descent parser.\n// The `tokenizer` export provides an interface to the tokenizer.\n\nfunction tokenizer(input, options) {\n  return Parser.tokenizer(input, options)\n}\n\nvar acorn = {\n\t__proto__: null,\n\tNode: Node,\n\tParser: Parser,\n\tPosition: Position,\n\tSourceLocation: SourceLocation,\n\tTokContext: TokContext,\n\tToken: Token,\n\tTokenType: TokenType,\n\tdefaultOptions: defaultOptions,\n\tgetLineInfo: getLineInfo,\n\tisIdentifierChar: isIdentifierChar,\n\tisIdentifierStart: isIdentifierStart,\n\tisNewLine: isNewLine,\n\tkeywordTypes: keywords,\n\tlineBreak: lineBreak,\n\tlineBreakG: lineBreakG,\n\tnonASCIIwhitespace: nonASCIIwhitespace,\n\tparse: parse$c,\n\tparseExpressionAt: parseExpressionAt,\n\ttokContexts: types,\n\ttokTypes: types$1,\n\ttokenizer: tokenizer,\n\tversion: version\n};\n\nfunction stripLiteralAcorn(code) {\n  const FILL = \" \";\n  let result = \"\";\n  function fulfill(index) {\n    if (index > result.length)\n      result += code.slice(result.length, index).replace(/[^\\n]/g, FILL);\n  }\n  const tokens = tokenizer(code, {\n    ecmaVersion: \"latest\",\n    sourceType: \"module\",\n    allowHashBang: true,\n    allowAwaitOutsideFunction: true,\n    allowImportExportEverywhere: true\n  });\n  const inter = tokens[Symbol.iterator]();\n  while (true) {\n    const { done, value: token } = inter.next();\n    if (done)\n      break;\n    fulfill(token.start);\n    if (token.type.label === \"string\")\n      result += code[token.start] + FILL.repeat(token.end - token.start - 2) + code[token.end - 1];\n    else if (token.type.label === \"template\")\n      result += FILL.repeat(token.end - token.start);\n    else\n      result += code.slice(token.start, token.end);\n  }\n  fulfill(code.length);\n  return result;\n}\n\nconst multilineCommentsRE = /\\/\\*.*?\\*\\//gms;\nconst singlelineCommentsRE = /\\/\\/.*$/gm;\nconst templateLiteralRE = /\\$\\{(\\s*(?:(?!\\$\\{).|\\n|\\r)*?\\s*)\\}/g;\nconst quotesRE = [\n  /([\"'`])((?:\\\\\\1|(?!\\1)|.|\\r)*?)\\1/gm,\n  /([`])((?:\\\\\\1|(?!\\1)|.|\\n|\\r)*?)\\1/gm\n];\nfunction stripLiteralRegex(code) {\n  code = code.replace(multilineCommentsRE, (s) => \" \".repeat(s.length)).replace(singlelineCommentsRE, (s) => \" \".repeat(s.length));\n  let expanded = code;\n  for (let i = 0; i < 16; i++) {\n    const before = expanded;\n    expanded = expanded.replace(templateLiteralRE, \"` $1`\");\n    if (expanded === before)\n      break;\n  }\n  quotesRE.forEach((re) => {\n    expanded = expanded.replace(re, (s, quote, body, index) => {\n      code = code.slice(0, index + 1) + \" \".repeat(s.length - 2) + code.slice(index + s.length - 1);\n      return quote + \" \".repeat(s.length - 2) + quote;\n    });\n  });\n  return code;\n}\n\nfunction stripLiteral(code) {\n  try {\n    return stripLiteralAcorn(code);\n  } catch (e) {\n    return stripLiteralRegex(code);\n  }\n}\n\nconst mimes$1 = {\n  \"ez\": \"application/andrew-inset\",\n  \"aw\": \"application/applixware\",\n  \"atom\": \"application/atom+xml\",\n  \"atomcat\": \"application/atomcat+xml\",\n  \"atomdeleted\": \"application/atomdeleted+xml\",\n  \"atomsvc\": \"application/atomsvc+xml\",\n  \"dwd\": \"application/atsc-dwd+xml\",\n  \"held\": \"application/atsc-held+xml\",\n  \"rsat\": \"application/atsc-rsat+xml\",\n  \"bdoc\": \"application/bdoc\",\n  \"xcs\": \"application/calendar+xml\",\n  \"ccxml\": \"application/ccxml+xml\",\n  \"cdfx\": \"application/cdfx+xml\",\n  \"cdmia\": \"application/cdmi-capability\",\n  \"cdmic\": \"application/cdmi-container\",\n  \"cdmid\": \"application/cdmi-domain\",\n  \"cdmio\": \"application/cdmi-object\",\n  \"cdmiq\": \"application/cdmi-queue\",\n  \"cu\": \"application/cu-seeme\",\n  \"mpd\": \"application/dash+xml\",\n  \"davmount\": \"application/davmount+xml\",\n  \"dbk\": \"application/docbook+xml\",\n  \"dssc\": \"application/dssc+der\",\n  \"xdssc\": \"application/dssc+xml\",\n  \"es\": \"application/ecmascript\",\n  \"ecma\": \"application/ecmascript\",\n  \"emma\": \"application/emma+xml\",\n  \"emotionml\": \"application/emotionml+xml\",\n  \"epub\": \"application/epub+zip\",\n  \"exi\": \"application/exi\",\n  \"fdt\": \"application/fdt+xml\",\n  \"pfr\": \"application/font-tdpfr\",\n  \"geojson\": \"application/geo+json\",\n  \"gml\": \"application/gml+xml\",\n  \"gpx\": \"application/gpx+xml\",\n  \"gxf\": \"application/gxf\",\n  \"gz\": \"application/gzip\",\n  \"hjson\": \"application/hjson\",\n  \"stk\": \"application/hyperstudio\",\n  \"ink\": \"application/inkml+xml\",\n  \"inkml\": \"application/inkml+xml\",\n  \"ipfix\": \"application/ipfix\",\n  \"its\": \"application/its+xml\",\n  \"jar\": \"application/java-archive\",\n  \"war\": \"application/java-archive\",\n  \"ear\": \"application/java-archive\",\n  \"ser\": \"application/java-serialized-object\",\n  \"class\": \"application/java-vm\",\n  \"js\": \"application/javascript\",\n  \"mjs\": \"application/javascript\",\n  \"json\": \"application/json\",\n  \"map\": \"application/json\",\n  \"json5\": \"application/json5\",\n  \"jsonml\": \"application/jsonml+json\",\n  \"jsonld\": \"application/ld+json\",\n  \"lgr\": \"application/lgr+xml\",\n  \"lostxml\": \"application/lost+xml\",\n  \"hqx\": \"application/mac-binhex40\",\n  \"cpt\": \"application/mac-compactpro\",\n  \"mads\": \"application/mads+xml\",\n  \"webmanifest\": \"application/manifest+json\",\n  \"mrc\": \"application/marc\",\n  \"mrcx\": \"application/marcxml+xml\",\n  \"ma\": \"application/mathematica\",\n  \"nb\": \"application/mathematica\",\n  \"mb\": \"application/mathematica\",\n  \"mathml\": \"application/mathml+xml\",\n  \"mbox\": \"application/mbox\",\n  \"mscml\": \"application/mediaservercontrol+xml\",\n  \"metalink\": \"application/metalink+xml\",\n  \"meta4\": \"application/metalink4+xml\",\n  \"mets\": \"application/mets+xml\",\n  \"maei\": \"application/mmt-aei+xml\",\n  \"musd\": \"application/mmt-usd+xml\",\n  \"mods\": \"application/mods+xml\",\n  \"m21\": \"application/mp21\",\n  \"mp21\": \"application/mp21\",\n  \"mp4s\": \"application/mp4\",\n  \"m4p\": \"application/mp4\",\n  \"doc\": \"application/msword\",\n  \"dot\": \"application/msword\",\n  \"mxf\": \"application/mxf\",\n  \"nq\": \"application/n-quads\",\n  \"nt\": \"application/n-triples\",\n  \"cjs\": \"application/node\",\n  \"bin\": \"application/octet-stream\",\n  \"dms\": \"application/octet-stream\",\n  \"lrf\": \"application/octet-stream\",\n  \"mar\": \"application/octet-stream\",\n  \"so\": \"application/octet-stream\",\n  \"dist\": \"application/octet-stream\",\n  \"distz\": \"application/octet-stream\",\n  \"pkg\": \"application/octet-stream\",\n  \"bpk\": \"application/octet-stream\",\n  \"dump\": \"application/octet-stream\",\n  \"elc\": \"application/octet-stream\",\n  \"deploy\": \"application/octet-stream\",\n  \"exe\": \"application/octet-stream\",\n  \"dll\": \"application/octet-stream\",\n  \"deb\": \"application/octet-stream\",\n  \"dmg\": \"application/octet-stream\",\n  \"iso\": \"application/octet-stream\",\n  \"img\": \"application/octet-stream\",\n  \"msi\": \"application/octet-stream\",\n  \"msp\": \"application/octet-stream\",\n  \"msm\": \"application/octet-stream\",\n  \"buffer\": \"application/octet-stream\",\n  \"oda\": \"application/oda\",\n  \"opf\": \"application/oebps-package+xml\",\n  \"ogx\": \"application/ogg\",\n  \"omdoc\": \"application/omdoc+xml\",\n  \"onetoc\": \"application/onenote\",\n  \"onetoc2\": \"application/onenote\",\n  \"onetmp\": \"application/onenote\",\n  \"onepkg\": \"application/onenote\",\n  \"oxps\": \"application/oxps\",\n  \"relo\": \"application/p2p-overlay+xml\",\n  \"xer\": \"application/patch-ops-error+xml\",\n  \"pdf\": \"application/pdf\",\n  \"pgp\": \"application/pgp-encrypted\",\n  \"asc\": \"application/pgp-signature\",\n  \"sig\": \"application/pgp-signature\",\n  \"prf\": \"application/pics-rules\",\n  \"p10\": \"application/pkcs10\",\n  \"p7m\": \"application/pkcs7-mime\",\n  \"p7c\": \"application/pkcs7-mime\",\n  \"p7s\": \"application/pkcs7-signature\",\n  \"p8\": \"application/pkcs8\",\n  \"ac\": \"application/pkix-attr-cert\",\n  \"cer\": \"application/pkix-cert\",\n  \"crl\": \"application/pkix-crl\",\n  \"pkipath\": \"application/pkix-pkipath\",\n  \"pki\": \"application/pkixcmp\",\n  \"pls\": \"application/pls+xml\",\n  \"ai\": \"application/postscript\",\n  \"eps\": \"application/postscript\",\n  \"ps\": \"application/postscript\",\n  \"provx\": \"application/provenance+xml\",\n  \"cww\": \"application/prs.cww\",\n  \"pskcxml\": \"application/pskc+xml\",\n  \"raml\": \"application/raml+yaml\",\n  \"rdf\": \"application/rdf+xml\",\n  \"owl\": \"application/rdf+xml\",\n  \"rif\": \"application/reginfo+xml\",\n  \"rnc\": \"application/relax-ng-compact-syntax\",\n  \"rl\": \"application/resource-lists+xml\",\n  \"rld\": \"application/resource-lists-diff+xml\",\n  \"rs\": \"application/rls-services+xml\",\n  \"rapd\": \"application/route-apd+xml\",\n  \"sls\": \"application/route-s-tsid+xml\",\n  \"rusd\": \"application/route-usd+xml\",\n  \"gbr\": \"application/rpki-ghostbusters\",\n  \"mft\": \"application/rpki-manifest\",\n  \"roa\": \"application/rpki-roa\",\n  \"rsd\": \"application/rsd+xml\",\n  \"rss\": \"application/rss+xml\",\n  \"rtf\": \"application/rtf\",\n  \"sbml\": \"application/sbml+xml\",\n  \"scq\": \"application/scvp-cv-request\",\n  \"scs\": \"application/scvp-cv-response\",\n  \"spq\": \"application/scvp-vp-request\",\n  \"spp\": \"application/scvp-vp-response\",\n  \"sdp\": \"application/sdp\",\n  \"senmlx\": \"application/senml+xml\",\n  \"sensmlx\": \"application/sensml+xml\",\n  \"setpay\": \"application/set-payment-initiation\",\n  \"setreg\": \"application/set-registration-initiation\",\n  \"shf\": \"application/shf+xml\",\n  \"siv\": \"application/sieve\",\n  \"sieve\": \"application/sieve\",\n  \"smi\": \"application/smil+xml\",\n  \"smil\": \"application/smil+xml\",\n  \"rq\": \"application/sparql-query\",\n  \"srx\": \"application/sparql-results+xml\",\n  \"gram\": \"application/srgs\",\n  \"grxml\": \"application/srgs+xml\",\n  \"sru\": \"application/sru+xml\",\n  \"ssdl\": \"application/ssdl+xml\",\n  \"ssml\": \"application/ssml+xml\",\n  \"swidtag\": \"application/swid+xml\",\n  \"tei\": \"application/tei+xml\",\n  \"teicorpus\": \"application/tei+xml\",\n  \"tfi\": \"application/thraud+xml\",\n  \"tsd\": \"application/timestamped-data\",\n  \"toml\": \"application/toml\",\n  \"trig\": \"application/trig\",\n  \"ttml\": \"application/ttml+xml\",\n  \"ubj\": \"application/ubjson\",\n  \"rsheet\": \"application/urc-ressheet+xml\",\n  \"td\": \"application/urc-targetdesc+xml\",\n  \"vxml\": \"application/voicexml+xml\",\n  \"wasm\": \"application/wasm\",\n  \"wgt\": \"application/widget\",\n  \"hlp\": \"application/winhlp\",\n  \"wsdl\": \"application/wsdl+xml\",\n  \"wspolicy\": \"application/wspolicy+xml\",\n  \"xaml\": \"application/xaml+xml\",\n  \"xav\": \"application/xcap-att+xml\",\n  \"xca\": \"application/xcap-caps+xml\",\n  \"xdf\": \"application/xcap-diff+xml\",\n  \"xel\": \"application/xcap-el+xml\",\n  \"xns\": \"application/xcap-ns+xml\",\n  \"xenc\": \"application/xenc+xml\",\n  \"xhtml\": \"application/xhtml+xml\",\n  \"xht\": \"application/xhtml+xml\",\n  \"xlf\": \"application/xliff+xml\",\n  \"xml\": \"application/xml\",\n  \"xsl\": \"application/xml\",\n  \"xsd\": \"application/xml\",\n  \"rng\": \"application/xml\",\n  \"dtd\": \"application/xml-dtd\",\n  \"xop\": \"application/xop+xml\",\n  \"xpl\": \"application/xproc+xml\",\n  \"xslt\": \"application/xml\",\n  \"xspf\": \"application/xspf+xml\",\n  \"mxml\": \"application/xv+xml\",\n  \"xhvml\": \"application/xv+xml\",\n  \"xvml\": \"application/xv+xml\",\n  \"xvm\": \"application/xv+xml\",\n  \"yang\": \"application/yang\",\n  \"yin\": \"application/yin+xml\",\n  \"zip\": \"application/zip\",\n  \"3gpp\": \"video/3gpp\",\n  \"adp\": \"audio/adpcm\",\n  \"amr\": \"audio/amr\",\n  \"au\": \"audio/basic\",\n  \"snd\": \"audio/basic\",\n  \"mid\": \"audio/midi\",\n  \"midi\": \"audio/midi\",\n  \"kar\": \"audio/midi\",\n  \"rmi\": \"audio/midi\",\n  \"mxmf\": \"audio/mobile-xmf\",\n  \"mp3\": \"audio/mpeg\",\n  \"m4a\": \"audio/mp4\",\n  \"mp4a\": \"audio/mp4\",\n  \"mpga\": \"audio/mpeg\",\n  \"mp2\": \"audio/mpeg\",\n  \"mp2a\": \"audio/mpeg\",\n  \"m2a\": \"audio/mpeg\",\n  \"m3a\": \"audio/mpeg\",\n  \"oga\": \"audio/ogg\",\n  \"ogg\": \"audio/ogg\",\n  \"spx\": \"audio/ogg\",\n  \"opus\": \"audio/ogg\",\n  \"s3m\": \"audio/s3m\",\n  \"sil\": \"audio/silk\",\n  \"wav\": \"audio/wav\",\n  \"weba\": \"audio/webm\",\n  \"xm\": \"audio/xm\",\n  \"ttc\": \"font/collection\",\n  \"otf\": \"font/otf\",\n  \"ttf\": \"font/ttf\",\n  \"woff\": \"font/woff\",\n  \"woff2\": \"font/woff2\",\n  \"exr\": \"image/aces\",\n  \"apng\": \"image/apng\",\n  \"avif\": \"image/avif\",\n  \"bmp\": \"image/bmp\",\n  \"cgm\": \"image/cgm\",\n  \"drle\": \"image/dicom-rle\",\n  \"emf\": \"image/emf\",\n  \"fits\": \"image/fits\",\n  \"g3\": \"image/g3fax\",\n  \"gif\": \"image/gif\",\n  \"heic\": \"image/heic\",\n  \"heics\": \"image/heic-sequence\",\n  \"heif\": \"image/heif\",\n  \"heifs\": \"image/heif-sequence\",\n  \"hej2\": \"image/hej2k\",\n  \"hsj2\": \"image/hsj2\",\n  \"ief\": \"image/ief\",\n  \"jls\": \"image/jls\",\n  \"jp2\": \"image/jp2\",\n  \"jpg2\": \"image/jp2\",\n  \"jpeg\": \"image/jpeg\",\n  \"jpg\": \"image/jpeg\",\n  \"jpe\": \"image/jpeg\",\n  \"jph\": \"image/jph\",\n  \"jhc\": \"image/jphc\",\n  \"jpm\": \"image/jpm\",\n  \"jpx\": \"image/jpx\",\n  \"jpf\": \"image/jpx\",\n  \"jxr\": \"image/jxr\",\n  \"jxra\": \"image/jxra\",\n  \"jxrs\": \"image/jxrs\",\n  \"jxs\": \"image/jxs\",\n  \"jxsc\": \"image/jxsc\",\n  \"jxsi\": \"image/jxsi\",\n  \"jxss\": \"image/jxss\",\n  \"ktx\": \"image/ktx\",\n  \"ktx2\": \"image/ktx2\",\n  \"png\": \"image/png\",\n  \"btif\": \"image/prs.btif\",\n  \"pti\": \"image/prs.pti\",\n  \"sgi\": \"image/sgi\",\n  \"svg\": \"image/svg+xml\",\n  \"svgz\": \"image/svg+xml\",\n  \"t38\": \"image/t38\",\n  \"tif\": \"image/tiff\",\n  \"tiff\": \"image/tiff\",\n  \"tfx\": \"image/tiff-fx\",\n  \"webp\": \"image/webp\",\n  \"wmf\": \"image/wmf\",\n  \"disposition-notification\": \"message/disposition-notification\",\n  \"u8msg\": \"message/global\",\n  \"u8dsn\": \"message/global-delivery-status\",\n  \"u8mdn\": \"message/global-disposition-notification\",\n  \"u8hdr\": \"message/global-headers\",\n  \"eml\": \"message/rfc822\",\n  \"mime\": \"message/rfc822\",\n  \"3mf\": \"model/3mf\",\n  \"gltf\": \"model/gltf+json\",\n  \"glb\": \"model/gltf-binary\",\n  \"igs\": \"model/iges\",\n  \"iges\": \"model/iges\",\n  \"msh\": \"model/mesh\",\n  \"mesh\": \"model/mesh\",\n  \"silo\": \"model/mesh\",\n  \"mtl\": \"model/mtl\",\n  \"obj\": \"model/obj\",\n  \"stpz\": \"model/step+zip\",\n  \"stpxz\": \"model/step-xml+zip\",\n  \"stl\": \"model/stl\",\n  \"wrl\": \"model/vrml\",\n  \"vrml\": \"model/vrml\",\n  \"x3db\": \"model/x3d+fastinfoset\",\n  \"x3dbz\": \"model/x3d+binary\",\n  \"x3dv\": \"model/x3d-vrml\",\n  \"x3dvz\": \"model/x3d+vrml\",\n  \"x3d\": \"model/x3d+xml\",\n  \"x3dz\": \"model/x3d+xml\",\n  \"appcache\": \"text/cache-manifest\",\n  \"manifest\": \"text/cache-manifest\",\n  \"ics\": \"text/calendar\",\n  \"ifb\": \"text/calendar\",\n  \"coffee\": \"text/coffeescript\",\n  \"litcoffee\": \"text/coffeescript\",\n  \"css\": \"text/css\",\n  \"csv\": \"text/csv\",\n  \"html\": \"text/html\",\n  \"htm\": \"text/html\",\n  \"shtml\": \"text/html\",\n  \"jade\": \"text/jade\",\n  \"jsx\": \"text/jsx\",\n  \"less\": \"text/less\",\n  \"markdown\": \"text/markdown\",\n  \"md\": \"text/markdown\",\n  \"mml\": \"text/mathml\",\n  \"mdx\": \"text/mdx\",\n  \"n3\": \"text/n3\",\n  \"txt\": \"text/plain\",\n  \"text\": \"text/plain\",\n  \"conf\": \"text/plain\",\n  \"def\": \"text/plain\",\n  \"list\": \"text/plain\",\n  \"log\": \"text/plain\",\n  \"in\": \"text/plain\",\n  \"ini\": \"text/plain\",\n  \"dsc\": \"text/prs.lines.tag\",\n  \"rtx\": \"text/richtext\",\n  \"sgml\": \"text/sgml\",\n  \"sgm\": \"text/sgml\",\n  \"shex\": \"text/shex\",\n  \"slim\": \"text/slim\",\n  \"slm\": \"text/slim\",\n  \"spdx\": \"text/spdx\",\n  \"stylus\": \"text/stylus\",\n  \"styl\": \"text/stylus\",\n  \"tsv\": \"text/tab-separated-values\",\n  \"t\": \"text/troff\",\n  \"tr\": \"text/troff\",\n  \"roff\": \"text/troff\",\n  \"man\": \"text/troff\",\n  \"me\": \"text/troff\",\n  \"ms\": \"text/troff\",\n  \"ttl\": \"text/turtle\",\n  \"uri\": \"text/uri-list\",\n  \"uris\": \"text/uri-list\",\n  \"urls\": \"text/uri-list\",\n  \"vcard\": \"text/vcard\",\n  \"vtt\": \"text/vtt\",\n  \"yaml\": \"text/yaml\",\n  \"yml\": \"text/yaml\",\n  \"3gp\": \"video/3gpp\",\n  \"3g2\": \"video/3gpp2\",\n  \"h261\": \"video/h261\",\n  \"h263\": \"video/h263\",\n  \"h264\": \"video/h264\",\n  \"m4s\": \"video/iso.segment\",\n  \"jpgv\": \"video/jpeg\",\n  \"jpgm\": \"image/jpm\",\n  \"mj2\": \"video/mj2\",\n  \"mjp2\": \"video/mj2\",\n  \"ts\": \"video/mp2t\",\n  \"mp4\": \"video/mp4\",\n  \"mp4v\": \"video/mp4\",\n  \"mpg4\": \"video/mp4\",\n  \"mpeg\": \"video/mpeg\",\n  \"mpg\": \"video/mpeg\",\n  \"mpe\": \"video/mpeg\",\n  \"m1v\": \"video/mpeg\",\n  \"m2v\": \"video/mpeg\",\n  \"ogv\": \"video/ogg\",\n  \"qt\": \"video/quicktime\",\n  \"mov\": \"video/quicktime\",\n  \"webm\": \"video/webm\"\n};\n\nfunction lookup(extn) {\n\tlet tmp = ('' + extn).trim().toLowerCase();\n\tlet idx = tmp.lastIndexOf('.');\n\treturn mimes$1[!~idx ? tmp : tmp.substring(++idx)];\n}\n\nconst assetUrlRE = /__VITE_ASSET__([a-z\\d]{8})__(?:\\$_(.*?)__)?/g;\nconst rawRE = /(\\?|&)raw(?:&|$)/;\nconst urlRE = /(\\?|&)url(?:&|$)/;\nconst assetCache = new WeakMap();\nconst assetHashToFilenameMap = new WeakMap();\n// save hashes of the files that has been emitted in build watch\nconst emittedHashMap = new WeakMap();\n// add own dictionary entry by directly assigning mrmime\nfunction registerCustomMime() {\n    // https://github.com/lukeed/mrmime/issues/3\n    mimes$1['ico'] = 'image/x-icon';\n    // https://developer.mozilla.org/en-US/docs/Web/Media/Formats/Containers#flac\n    mimes$1['flac'] = 'audio/flac';\n    // mrmime and mime-db is not released yet: https://github.com/jshttp/mime-db/commit/c9242a9b7d4bb25d7a0c9244adec74aeef08d8a1\n    mimes$1['aac'] = 'audio/aac';\n    // https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types/Common_types\n    mimes$1['eot'] = 'application/vnd.ms-fontobject';\n}\nfunction renderAssetUrlInJS(ctx, config, chunk, opts, code) {\n    let match;\n    let s;\n    // Urls added with JS using e.g.\n    // imgElement.src = \"__VITE_ASSET__5aa0ddc0__\" are using quotes\n    // Urls added in CSS that is imported in JS end up like\n    // var inlined = \".inlined{color:green;background:url(__VITE_ASSET__5aa0ddc0__)}\\n\";\n    // In both cases, the wrapping should already be fine\n    while ((match = assetUrlRE.exec(code))) {\n        s || (s = new MagicString(code));\n        const [full, hash, postfix = ''] = match;\n        // some internal plugins may still need to emit chunks (e.g. worker) so\n        // fallback to this.getFileName for that. TODO: remove, not needed\n        const file = getAssetFilename(hash, config) || ctx.getFileName(hash);\n        chunk.viteMetadata.importedAssets.add(cleanUrl(file));\n        const filename = file + postfix;\n        const replacement = toOutputFilePathInString(filename, 'asset', chunk.fileName, 'js', config, opts.format);\n        const replacementString = typeof replacement === 'string'\n            ? JSON.stringify(replacement).slice(1, -1)\n            : `\"+${replacement.runtime}+\"`;\n        s.overwrite(match.index, match.index + full.length, replacementString, {\n            contentOnly: true\n        });\n    }\n    // Replace __VITE_PUBLIC_ASSET__5aa0ddc0__ with absolute paths\n    const publicAssetUrlMap = publicAssetUrlCache.get(config);\n    while ((match = publicAssetUrlRE.exec(code))) {\n        s || (s = new MagicString(code));\n        const [full, hash] = match;\n        const publicUrl = publicAssetUrlMap.get(hash).slice(1);\n        const replacement = toOutputFilePathInString(publicUrl, 'public', chunk.fileName, 'js', config, opts.format);\n        const replacementString = typeof replacement === 'string'\n            ? JSON.stringify(replacement).slice(1, -1)\n            : `\"+${replacement.runtime}+\"`;\n        s.overwrite(match.index, match.index + full.length, replacementString, {\n            contentOnly: true\n        });\n    }\n    return s;\n}\n/**\n * Also supports loading plain strings with import text from './foo.txt?raw'\n */\nfunction assetPlugin(config) {\n    // assetHashToFilenameMap initialization in buildStart causes getAssetFilename to return undefined\n    assetHashToFilenameMap.set(config, new Map());\n    registerCustomMime();\n    return {\n        name: 'vite:asset',\n        buildStart() {\n            assetCache.set(config, new Map());\n            emittedHashMap.set(config, new Set());\n        },\n        resolveId(id) {\n            if (!config.assetsInclude(cleanUrl(id))) {\n                return;\n            }\n            // imports to absolute urls pointing to files in /public\n            // will fail to resolve in the main resolver. handle them here.\n            const publicFile = checkPublicFile(id, config);\n            if (publicFile) {\n                return id;\n            }\n        },\n        async load(id) {\n            if (id.startsWith('\\0')) {\n                // Rollup convention, this id should be handled by the\n                // plugin that marked it with \\0\n                return;\n            }\n            // raw requests, read from disk\n            if (rawRE.test(id)) {\n                const file = checkPublicFile(id, config) || cleanUrl(id);\n                // raw query, read file and return as string\n                return `export default ${JSON.stringify(await promises$2.readFile(file, 'utf-8'))}`;\n            }\n            if (!config.assetsInclude(cleanUrl(id)) && !urlRE.test(id)) {\n                return;\n            }\n            id = id.replace(urlRE, '$1').replace(/[\\?&]$/, '');\n            const url = await fileToUrl(id, config, this);\n            return `export default ${JSON.stringify(url)}`;\n        },\n        renderChunk(code, chunk, opts) {\n            const s = renderAssetUrlInJS(this, config, chunk, opts, code);\n            if (s) {\n                return {\n                    code: s.toString(),\n                    map: config.build.sourcemap ? s.generateMap({ hires: true }) : null\n                };\n            }\n            else {\n                return null;\n            }\n        },\n        generateBundle(_, bundle) {\n            // do not emit assets for SSR build\n            if (config.command === 'build' && config.build.ssr) {\n                for (const file in bundle) {\n                    if (bundle[file].type === 'asset' &&\n                        !file.includes('ssr-manifest.json')) {\n                        delete bundle[file];\n                    }\n                }\n            }\n        }\n    };\n}\nfunction checkPublicFile(url, { publicDir }) {\n    // note if the file is in /public, the resolver would have returned it\n    // as-is so it's not going to be a fully resolved path.\n    if (!publicDir || !url.startsWith('/')) {\n        return;\n    }\n    const publicFile = path$n.join(publicDir, cleanUrl(url));\n    if (fs$l.existsSync(publicFile)) {\n        return publicFile;\n    }\n    else {\n        return;\n    }\n}\nasync function fileToUrl(id, config, ctx) {\n    if (config.command === 'serve') {\n        return fileToDevUrl(id, config);\n    }\n    else {\n        return fileToBuiltUrl(id, config, ctx);\n    }\n}\nfunction fileToDevUrl(id, config) {\n    let rtn;\n    if (checkPublicFile(id, config)) {\n        // in public dir, keep the url as-is\n        rtn = id;\n    }\n    else if (id.startsWith(config.root)) {\n        // in project root, infer short public path\n        rtn = '/' + path$n.posix.relative(config.root, id);\n    }\n    else {\n        // outside of project root, use absolute fs path\n        // (this is special handled by the serve static middleware\n        rtn = path$n.posix.join(FS_PREFIX + id);\n    }\n    const origin = config.server?.origin ?? '';\n    const devBase = config.base;\n    return origin + devBase + rtn.replace(/^\\//, '');\n}\nfunction getAssetFilename(hash, config) {\n    return assetHashToFilenameMap.get(config)?.get(hash);\n}\nfunction getPublicAssetFilename(hash, config) {\n    return publicAssetUrlCache.get(config)?.get(hash);\n}\nfunction resolveAssetFileNames(config) {\n    const output = config.build?.rollupOptions?.output;\n    const defaultAssetFileNames = path$n.posix.join(config.build.assetsDir, '[name].[hash][extname]');\n    // Steps to determine which assetFileNames will be actually used.\n    // First, if output is an object or string, use assetFileNames in it.\n    // And a default assetFileNames as fallback.\n    let assetFileNames = (output && !Array.isArray(output) ? output.assetFileNames : undefined) ??\n        defaultAssetFileNames;\n    if (output && Array.isArray(output)) {\n        // Second, if output is an array, adopt assetFileNames in the first object.\n        assetFileNames = output[0].assetFileNames ?? assetFileNames;\n    }\n    return assetFileNames;\n}\n/**\n * converts the source filepath of the asset to the output filename based on the assetFileNames option. \\\n * this function imitates the behavior of rollup.js. \\\n * https://rollupjs.org/guide/en/#outputassetfilenames\n *\n * @example\n * ```ts\n * const content = Buffer.from('text');\n * const fileName = assetFileNamesToFileName(\n *   'assets/[name].[hash][extname]',\n *   '/path/to/file.txt',\n *   getHash(content),\n *   content\n * )\n * // fileName: 'assets/file.982d9e3e.txt'\n * ```\n *\n * @param assetFileNames filename pattern. e.g. `'assets/[name].[hash][extname]'`\n * @param file filepath of the asset\n * @param contentHash hash of the asset. used for `'[hash]'` placeholder\n * @param content content of the asset. passed to `assetFileNames` if `assetFileNames` is a function\n * @returns output filename\n */\nfunction assetFileNamesToFileName(assetFileNames, file, contentHash, content) {\n    const basename = path$n.basename(file);\n    // placeholders for `assetFileNames`\n    // `hash` is slightly different from the rollup's one\n    const extname = path$n.extname(basename);\n    const ext = extname.substring(1);\n    const name = basename.slice(0, -extname.length);\n    const hash = contentHash;\n    if (typeof assetFileNames === 'function') {\n        assetFileNames = assetFileNames({\n            name: file,\n            source: content,\n            type: 'asset'\n        });\n        if (typeof assetFileNames !== 'string') {\n            throw new TypeError('assetFileNames must return a string');\n        }\n    }\n    else if (typeof assetFileNames !== 'string') {\n        throw new TypeError('assetFileNames must be a string or a function');\n    }\n    const fileName = assetFileNames.replace(/\\[\\w+\\]/g, (placeholder) => {\n        switch (placeholder) {\n            case '[ext]':\n                return ext;\n            case '[extname]':\n                return extname;\n            case '[hash]':\n                return hash;\n            case '[name]':\n                return name;\n        }\n        throw new Error(`invalid placeholder ${placeholder} in assetFileNames \"${assetFileNames}\"`);\n    });\n    return fileName;\n}\nconst publicAssetUrlCache = new WeakMap();\nconst publicAssetUrlRE = /__VITE_PUBLIC_ASSET__([a-z\\d]{8})__/g;\nfunction publicFileToBuiltUrl(url, config) {\n    if (config.command !== 'build') {\n        // We don't need relative base or renderBuiltUrl support during dev\n        return config.base + url.slice(1);\n    }\n    const hash = getHash(url);\n    let cache = publicAssetUrlCache.get(config);\n    if (!cache) {\n        cache = new Map();\n        publicAssetUrlCache.set(config, cache);\n    }\n    if (!cache.get(hash)) {\n        cache.set(hash, url);\n    }\n    return `__VITE_PUBLIC_ASSET__${hash}__`;\n}\n/**\n * Register an asset to be emitted as part of the bundle (if necessary)\n * and returns the resolved public URL\n */\nasync function fileToBuiltUrl(id, config, pluginContext, skipPublicCheck = false) {\n    if (!skipPublicCheck && checkPublicFile(id, config)) {\n        return publicFileToBuiltUrl(id, config);\n    }\n    const cache = assetCache.get(config);\n    const cached = cache.get(id);\n    if (cached) {\n        return cached;\n    }\n    const file = cleanUrl(id);\n    const content = await promises$2.readFile(file);\n    let url;\n    if (config.build.lib ||\n        (!file.endsWith('.svg') &&\n            !file.endsWith('.html') &&\n            content.length < Number(config.build.assetsInlineLimit))) {\n        const mimeType = lookup(file) ?? 'application/octet-stream';\n        // base64 inlined as a string\n        url = `data:${mimeType};base64,${content.toString('base64')}`;\n    }\n    else {\n        // emit as asset\n        // rollup supports `import.meta.ROLLUP_FILE_URL_*`, but it generates code\n        // that uses runtime url sniffing and it can be verbose when targeting\n        // non-module format. It also fails to cascade the asset content change\n        // into the chunk's hash, so we have to do our own content hashing here.\n        // https://bundlers.tooling.report/hashing/asset-cascade/\n        // https://github.com/rollup/rollup/issues/3415\n        const map = assetHashToFilenameMap.get(config);\n        const contentHash = getHash(content);\n        const { search, hash } = parse$k(id);\n        const postfix = (search || '') + (hash || '');\n        const fileName = assetFileNamesToFileName(resolveAssetFileNames(config), file, contentHash, content);\n        if (!map.has(contentHash)) {\n            map.set(contentHash, fileName);\n        }\n        const emittedSet = emittedHashMap.get(config);\n        if (!emittedSet.has(contentHash)) {\n            const name = normalizePath$3(path$n.relative(config.root, file));\n            pluginContext.emitFile({\n                name,\n                fileName,\n                type: 'asset',\n                source: content\n            });\n            emittedSet.add(contentHash);\n        }\n        url = `__VITE_ASSET__${contentHash}__${postfix ? `$_${postfix}__` : ``}`; // TODO_BASE\n    }\n    cache.set(id, url);\n    return url;\n}\nasync function urlToBuiltUrl(url, importer, config, pluginContext) {\n    if (checkPublicFile(url, config)) {\n        return publicFileToBuiltUrl(url, config);\n    }\n    const file = url.startsWith('/')\n        ? path$n.join(config.root, url)\n        : path$n.join(path$n.dirname(importer), url);\n    return fileToBuiltUrl(file, config, pluginContext, \n    // skip public check since we just did it above\n    true);\n}\n\n/* es-module-lexer 1.0.3 */\nconst A=1===new Uint8Array(new Uint16Array([1]).buffer)[0];function parse$b(E,g=\"@\"){if(!C)return init.then((()=>parse$b(E)));const I=E.length+1,o=(C.__heap_base.value||C.__heap_base)+4*I-C.memory.buffer.byteLength;o>0&&C.memory.grow(Math.ceil(o/65536));const D=C.sa(I-1);if((A?B:Q)(E,new Uint16Array(C.memory.buffer,D,I)),!C.parse())throw Object.assign(new Error(`Parse error ${g}:${E.slice(0,C.e()).split(\"\\n\").length}:${C.e()-E.lastIndexOf(\"\\n\",C.e()-1)}`),{idx:C.e()});const J=[],K=[];for(;C.ri();){const A=C.is(),Q=C.ie(),B=C.ai(),g=C.id(),I=C.ss(),o=C.se();let D;C.ip()&&(D=w(E.slice(-1===g?A-1:A,-1===g?Q+1:Q))),J.push({n:D,s:A,e:Q,ss:I,se:o,d:g,a:B});}for(;C.re();){const A=C.es(),Q=C.ee(),B=C.els(),g=C.ele(),I=E.slice(A,Q),o=I[0],D=B<0?void 0:E.slice(B,g),J=D?D[0]:\"\";K.push({s:A,e:Q,ls:B,le:g,n:'\"'===o||\"'\"===o?w(I):I,ln:'\"'===J||\"'\"===J?w(D):D});}function w(A){try{return (0, eval)(A)}catch(A){}}return [J,K,!!C.f()]}function Q(A,Q){const B=A.length;let C=0;for(;C<B;){const B=A.charCodeAt(C);Q[C++]=(255&B)<<8|B>>>8;}}function B(A,Q){const B=A.length;let C=0;for(;C<B;)Q[C]=A.charCodeAt(C++);}let C;const init=WebAssembly.compile((E=\"\",\"undefined\"!=typeof Buffer?Buffer.from(E,\"base64\"):Uint8Array.from(atob(E),(A=>A.charCodeAt(0))))).then(WebAssembly.instantiate).then((({exports:A})=>{C=A;}));var E;\n\n/**\n * @param {object} exports\n * @param {Set<string>} keys\n */\nfunction loop(exports, keys) {\n\tif (typeof exports === 'string') {\n\t\treturn exports;\n\t}\n\n\tif (exports) {\n\t\tlet idx, tmp;\n\t\tif (Array.isArray(exports)) {\n\t\t\tfor (idx=0; idx < exports.length; idx++) {\n\t\t\t\tif (tmp = loop(exports[idx], keys)) return tmp;\n\t\t\t}\n\t\t} else {\n\t\t\tfor (idx in exports) {\n\t\t\t\tif (keys.has(idx)) {\n\t\t\t\t\treturn loop(exports[idx], keys);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n\n/**\n * @param {string} name The package name\n * @param {string} entry The target entry, eg \".\"\n * @param {number} [condition] Unmatched condition?\n */\nfunction bail(name, entry, condition) {\n\tthrow new Error(\n\t\tcondition\n\t\t? `No known conditions for \"${entry}\" entry in \"${name}\" package`\n\t\t: `Missing \"${entry}\" export in \"${name}\" package`\n\t);\n}\n\n/**\n * @param {string} name the package name\n * @param {string} entry the target path/import\n */\nfunction toName(name, entry) {\n\treturn entry === name ? '.'\n\t\t: entry[0] === '.' ? entry\n\t\t: entry.replace(new RegExp('^' + name + '\\/'), './');\n}\n\n/**\n * @param {object} pkg package.json contents\n * @param {string} [entry] entry name or import path\n * @param {object} [options]\n * @param {boolean} [options.browser]\n * @param {boolean} [options.require]\n * @param {string[]} [options.conditions]\n * @param {boolean} [options.unsafe]\n */\nfunction resolve(pkg, entry='.', options={}) {\n\tlet { name, exports } = pkg;\n\n\tif (exports) {\n\t\tlet { browser, require, unsafe, conditions=[] } = options;\n\n\t\tlet target = toName(name, entry);\n\t\tif (target[0] !== '.') target = './' + target;\n\n\t\tif (typeof exports === 'string') {\n\t\t\treturn target === '.' ? exports : bail(name, target);\n\t\t}\n\n\t\tlet allows = new Set(['default', ...conditions]);\n\t\tunsafe || allows.add(require ? 'require' : 'import');\n\t\tunsafe || allows.add(browser ? 'browser' : 'node');\n\n\t\tlet key, tmp, isSingle=false;\n\n\t\tfor (key in exports) {\n\t\t\tisSingle = key[0] !== '.';\n\t\t\tbreak;\n\t\t}\n\n\t\tif (isSingle) {\n\t\t\treturn target === '.'\n\t\t\t\t? loop(exports, allows) || bail(name, target, 1)\n\t\t\t\t: bail(name, target);\n\t\t}\n\n\t\tif (tmp = exports[target]) {\n\t\t\treturn loop(tmp, allows) || bail(name, target, 1);\n\t\t}\n\n\t\tfor (key in exports) {\n\t\t\ttmp = key[key.length - 1];\n\t\t\tif (tmp === '/' && target.startsWith(key)) {\n\t\t\t\treturn (tmp = loop(exports[key], allows))\n\t\t\t\t\t? (tmp + target.substring(key.length))\n\t\t\t\t\t: bail(name, target, 1);\n\t\t\t}\n\t\t\tif (tmp === '*' && target.startsWith(key.slice(0, -1))) {\n\t\t\t\t// do not trigger if no *content* to inject\n\t\t\t\tif (target.substring(key.length - 1).length > 0) {\n\t\t\t\t\treturn (tmp = loop(exports[key], allows))\n\t\t\t\t\t\t? tmp.replace('*', target.substring(key.length - 1))\n\t\t\t\t\t\t: bail(name, target, 1);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn bail(name, target);\n\t}\n}\n\nconst HASH_RE = /#/g;\nconst AMPERSAND_RE = /&/g;\nconst EQUAL_RE = /=/g;\nconst PLUS_RE = /\\+/g;\nconst ENC_BRACKET_OPEN_RE = /%5B/gi;\nconst ENC_BRACKET_CLOSE_RE = /%5D/gi;\nconst ENC_CARET_RE = /%5E/gi;\nconst ENC_BACKTICK_RE = /%60/gi;\nconst ENC_CURLY_OPEN_RE = /%7B/gi;\nconst ENC_PIPE_RE = /%7C/gi;\nconst ENC_CURLY_CLOSE_RE = /%7D/gi;\nconst ENC_SPACE_RE = /%20/gi;\nfunction encode(text) {\n  return encodeURI(\"\" + text).replace(ENC_PIPE_RE, \"|\").replace(ENC_BRACKET_OPEN_RE, \"[\").replace(ENC_BRACKET_CLOSE_RE, \"]\");\n}\nfunction encodeQueryValue(text) {\n  return encode(text).replace(PLUS_RE, \"%2B\").replace(ENC_SPACE_RE, \"+\").replace(HASH_RE, \"%23\").replace(AMPERSAND_RE, \"%26\").replace(ENC_BACKTICK_RE, \"`\").replace(ENC_CURLY_OPEN_RE, \"{\").replace(ENC_CURLY_CLOSE_RE, \"}\").replace(ENC_CARET_RE, \"^\");\n}\nfunction encodeQueryKey(text) {\n  return encodeQueryValue(text).replace(EQUAL_RE, \"%3D\");\n}\nfunction encodeQueryItem(key, val) {\n  if (typeof val === \"number\" || typeof val === \"boolean\") {\n    val = String(val);\n  }\n  if (!val) {\n    return encodeQueryKey(key);\n  }\n  if (Array.isArray(val)) {\n    return val.map((_val) => `${encodeQueryKey(key)}=${encodeQueryValue(_val)}`).join(\"&\");\n  }\n  return `${encodeQueryKey(key)}=${encodeQueryValue(val)}`;\n}\nfunction stringifyQuery(query) {\n  return Object.keys(query).map((k) => encodeQueryItem(k, query[k])).join(\"&\");\n}\n\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar ParseOptions;\n(function (ParseOptions) {\n    ParseOptions.DEFAULT = {\n        allowTrailingComma: false\n    };\n})(ParseOptions || (ParseOptions = {}));\n\nfunction matchAll(regex, string, addition) {\n  const matches = [];\n  for (const match of string.matchAll(regex)) {\n    matches.push({\n      ...addition,\n      ...match.groups,\n      code: match[0],\n      start: match.index,\n      end: match.index + match[0].length\n    });\n  }\n  return matches;\n}\n\nconst isWindows$3 = process.platform === \"win32\";\nconst own$1 = {}.hasOwnProperty;\nconst messages = /* @__PURE__ */ new Map();\nconst nodeInternalPrefix = \"__node_internal_\";\nlet userStackTraceLimit;\ncreateError(\n  \"ERR_INVALID_MODULE_SPECIFIER\",\n  (request, reason, base = void 0) => {\n    return `Invalid module \"${request}\" ${reason}${base ? ` imported from ${base}` : \"\"}`;\n  },\n  TypeError\n);\ncreateError(\n  \"ERR_INVALID_PACKAGE_CONFIG\",\n  (path, base, message) => {\n    return `Invalid package config ${path}${base ? ` while importing ${base}` : \"\"}${message ? `. ${message}` : \"\"}`;\n  },\n  Error\n);\ncreateError(\n  \"ERR_INVALID_PACKAGE_TARGET\",\n  (pkgPath, key, target, isImport = false, base = void 0) => {\n    const relError = typeof target === \"string\" && !isImport && target.length > 0 && !target.startsWith(\"./\");\n    if (key === \".\") {\n      assert$1(isImport === false);\n      return `Invalid \"exports\" main target ${JSON.stringify(target)} defined in the package config ${pkgPath}package.json${base ? ` imported from ${base}` : \"\"}${relError ? '; targets must start with \"./\"' : \"\"}`;\n    }\n    return `Invalid \"${isImport ? \"imports\" : \"exports\"}\" target ${JSON.stringify(\n      target\n    )} defined for '${key}' in the package config ${pkgPath}package.json${base ? ` imported from ${base}` : \"\"}${relError ? '; targets must start with \"./\"' : \"\"}`;\n  },\n  Error\n);\ncreateError(\n  \"ERR_MODULE_NOT_FOUND\",\n  (path, base, type = \"package\") => {\n    return `Cannot find ${type} '${path}' imported from ${base}`;\n  },\n  Error\n);\ncreateError(\n  \"ERR_PACKAGE_IMPORT_NOT_DEFINED\",\n  (specifier, packagePath, base) => {\n    return `Package import specifier \"${specifier}\" is not defined${packagePath ? ` in package ${packagePath}package.json` : \"\"} imported from ${base}`;\n  },\n  TypeError\n);\ncreateError(\n  \"ERR_PACKAGE_PATH_NOT_EXPORTED\",\n  (pkgPath, subpath, base = void 0) => {\n    if (subpath === \".\") {\n      return `No \"exports\" main defined in ${pkgPath}package.json${base ? ` imported from ${base}` : \"\"}`;\n    }\n    return `Package subpath '${subpath}' is not defined by \"exports\" in ${pkgPath}package.json${base ? ` imported from ${base}` : \"\"}`;\n  },\n  Error\n);\ncreateError(\n  \"ERR_UNSUPPORTED_DIR_IMPORT\",\n  \"Directory import '%s' is not supported resolving ES modules imported from %s\",\n  Error\n);\ncreateError(\n  \"ERR_UNKNOWN_FILE_EXTENSION\",\n  'Unknown file extension \"%s\" for %s',\n  TypeError\n);\ncreateError(\n  \"ERR_INVALID_ARG_VALUE\",\n  (name, value, reason = \"is invalid\") => {\n    let inspected = inspect(value);\n    if (inspected.length > 128) {\n      inspected = `${inspected.slice(0, 128)}...`;\n    }\n    const type = name.includes(\".\") ? \"property\" : \"argument\";\n    return `The ${type} '${name}' ${reason}. Received ${inspected}`;\n  },\n  TypeError\n);\ncreateError(\n  \"ERR_UNSUPPORTED_ESM_URL_SCHEME\",\n  (url) => {\n    let message = \"Only file and data URLs are supported by the default ESM loader\";\n    if (isWindows$3 && url.protocol.length === 2) {\n      message += \". On Windows, absolute paths must be valid file:// URLs\";\n    }\n    message += `. Received protocol '${url.protocol}'`;\n    return message;\n  },\n  Error\n);\nfunction createError(sym, value, def) {\n  messages.set(sym, value);\n  return makeNodeErrorWithCode(def, sym);\n}\nfunction makeNodeErrorWithCode(Base, key) {\n  return NodeError;\n  function NodeError(...args) {\n    const limit = Error.stackTraceLimit;\n    if (isErrorStackTraceLimitWritable()) {\n      Error.stackTraceLimit = 0;\n    }\n    const error = new Base();\n    if (isErrorStackTraceLimitWritable()) {\n      Error.stackTraceLimit = limit;\n    }\n    const message = getMessage(key, args, error);\n    Object.defineProperty(error, \"message\", {\n      value: message,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    });\n    Object.defineProperty(error, \"toString\", {\n      value() {\n        return `${this.name} [${key}]: ${this.message}`;\n      },\n      enumerable: false,\n      writable: true,\n      configurable: true\n    });\n    addCodeToName(error, Base.name, key);\n    error.code = key;\n    return error;\n  }\n}\nconst addCodeToName = hideStackFrames(\n  function(error, name, code) {\n    error = captureLargerStackTrace(error);\n    error.name = `${name} [${code}]`;\n    if (name === \"SystemError\") {\n      Object.defineProperty(error, \"name\", {\n        value: name,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      });\n    } else {\n      delete error.name;\n    }\n  }\n);\nfunction isErrorStackTraceLimitWritable() {\n  const desc = Object.getOwnPropertyDescriptor(Error, \"stackTraceLimit\");\n  if (desc === void 0) {\n    return Object.isExtensible(Error);\n  }\n  return own$1.call(desc, \"writable\") ? desc.writable : desc.set !== void 0;\n}\nfunction hideStackFrames(fn) {\n  const hidden = nodeInternalPrefix + fn.name;\n  Object.defineProperty(fn, \"name\", { value: hidden });\n  return fn;\n}\nconst captureLargerStackTrace = hideStackFrames(\n  function(error) {\n    const stackTraceLimitIsWritable = isErrorStackTraceLimitWritable();\n    if (stackTraceLimitIsWritable) {\n      userStackTraceLimit = Error.stackTraceLimit;\n      Error.stackTraceLimit = Number.POSITIVE_INFINITY;\n    }\n    Error.captureStackTrace(error);\n    if (stackTraceLimitIsWritable) {\n      Error.stackTraceLimit = userStackTraceLimit;\n    }\n    return error;\n  }\n);\nfunction getMessage(key, args, self) {\n  const message = messages.get(key);\n  if (typeof message === \"function\") {\n    assert$1(\n      message.length <= args.length,\n      `Code: ${key}; The provided arguments length (${args.length}) does not match the required ones (${message.length}).`\n    );\n    return Reflect.apply(message, self, args);\n  }\n  const expectedLength = (message.match(/%[dfijoOs]/g) || []).length;\n  assert$1(\n    expectedLength === args.length,\n    `Code: ${key}; The provided arguments length (${args.length}) does not match the required ones (${expectedLength}).`\n  );\n  if (args.length === 0) {\n    return message;\n  }\n  args.unshift(message);\n  return Reflect.apply(format$2, null, args);\n}\nObject.freeze([\"node\", \"import\"]);\npathToFileURL$1(process.cwd());\n\nconst ESM_STATIC_IMPORT_RE = /(?<=\\s|^|;)import\\s*([\"'\\s]*(?<imports>[\\w*${}\\n\\r\\t, /]+)from\\s*)?[\"']\\s*(?<specifier>(?<=\"\\s*)[^\"]*[^\"\\s](?=\\s*\")|(?<='\\s*)[^']*[^'\\s](?=\\s*'))\\s*[\"'][\\s;]*/gm;\nfunction findStaticImports(code) {\n  return matchAll(ESM_STATIC_IMPORT_RE, code, { type: \"static\" });\n}\nfunction parseStaticImport(matched) {\n  const cleanedImports = (matched.imports || \"\").replace(/(\\/\\/[^\\n]*\\n|\\/\\*.*\\*\\/)/g, \"\").replace(/\\s+/g, \" \");\n  const namedImports = {};\n  for (const namedImport of cleanedImports.match(/\\{([^}]*)\\}/)?.[1]?.split(\",\") || []) {\n    const [, source = namedImport.trim(), importName = source] = namedImport.match(/^\\s*([^\\s]*) as ([^\\s]*)\\s*$/) || [];\n    if (source) {\n      namedImports[source] = importName;\n    }\n  }\n  const topLevelImports = cleanedImports.replace(/\\{([^}]*)\\}/, \"\");\n  const namespacedImport = topLevelImports.match(/\\* as \\s*([^\\s]*)/)?.[1];\n  const defaultImport = topLevelImports.split(\",\").find((i) => !i.match(/[*{}]/))?.trim() || void 0;\n  return {\n    ...matched,\n    defaultImport,\n    namespacedImport,\n    namedImports\n  };\n}\n\nconst ESM_RE = /([\\s;]|^)(import[\\w,{}\\s*]*from|import\\s*['\"*{]|export\\b\\s*(?:[*{]|default|class|type|function|const|var|let|async function)|import\\.meta\\b)/m;\nfunction hasESMSyntax(code) {\n  return ESM_RE.test(code);\n}\n\nconst isDebug$5 = process.env.DEBUG;\nconst debug$d = createDebugger('vite:resolve-details', {\n    onlyWhenFocused: true\n});\nfunction invalidatePackageData(packageCache, pkgPath) {\n    packageCache.delete(pkgPath);\n    const pkgDir = path$n.dirname(pkgPath);\n    packageCache.forEach((pkg, cacheKey) => {\n        if (pkg.dir === pkgDir) {\n            packageCache.delete(cacheKey);\n        }\n    });\n}\nfunction resolvePackageData(id, basedir, preserveSymlinks = false, packageCache) {\n    let pkg;\n    let cacheKey;\n    if (packageCache) {\n        cacheKey = `${id}&${basedir}&${preserveSymlinks}`;\n        if ((pkg = packageCache.get(cacheKey))) {\n            return pkg;\n        }\n    }\n    let pkgPath;\n    try {\n        pkgPath = resolveFrom(`${id}/package.json`, basedir, preserveSymlinks);\n        pkg = loadPackageData(pkgPath, true, packageCache);\n        if (packageCache) {\n            packageCache.set(cacheKey, pkg);\n        }\n        return pkg;\n    }\n    catch (e) {\n        if (e instanceof SyntaxError) {\n            isDebug$5 && debug$d(`Parsing failed: ${pkgPath}`);\n        }\n        // Ignore error for missing package.json\n        else if (e.code !== 'MODULE_NOT_FOUND') {\n            throw e;\n        }\n    }\n    return null;\n}\nfunction loadPackageData(pkgPath, preserveSymlinks, packageCache) {\n    if (!preserveSymlinks) {\n        pkgPath = fs$l.realpathSync.native(pkgPath);\n    }\n    let cached;\n    if ((cached = packageCache?.get(pkgPath))) {\n        return cached;\n    }\n    const data = JSON.parse(fs$l.readFileSync(pkgPath, 'utf-8'));\n    const pkgDir = path$n.dirname(pkgPath);\n    const { sideEffects } = data;\n    let hasSideEffects;\n    if (typeof sideEffects === 'boolean') {\n        hasSideEffects = () => sideEffects;\n    }\n    else if (Array.isArray(sideEffects)) {\n        hasSideEffects = createFilter(sideEffects, null, { resolve: pkgDir });\n    }\n    else {\n        hasSideEffects = () => true;\n    }\n    const pkg = {\n        dir: pkgDir,\n        data,\n        hasSideEffects,\n        webResolvedImports: {},\n        nodeResolvedImports: {},\n        setResolvedCache(key, entry, targetWeb) {\n            if (targetWeb) {\n                pkg.webResolvedImports[key] = entry;\n            }\n            else {\n                pkg.nodeResolvedImports[key] = entry;\n            }\n        },\n        getResolvedCache(key, targetWeb) {\n            if (targetWeb) {\n                return pkg.webResolvedImports[key];\n            }\n            else {\n                return pkg.nodeResolvedImports[key];\n            }\n        }\n    };\n    packageCache?.set(pkgPath, pkg);\n    return pkg;\n}\nfunction watchPackageDataPlugin(config) {\n    const watchQueue = new Set();\n    let watchFile = (id) => {\n        watchQueue.add(id);\n    };\n    const { packageCache } = config;\n    const setPackageData = packageCache.set.bind(packageCache);\n    packageCache.set = (id, pkg) => {\n        if (id.endsWith('.json')) {\n            watchFile(id);\n        }\n        return setPackageData(id, pkg);\n    };\n    return {\n        name: 'vite:watch-package-data',\n        buildStart() {\n            watchFile = this.addWatchFile;\n            watchQueue.forEach(watchFile);\n            watchQueue.clear();\n        },\n        buildEnd() {\n            watchFile = (id) => watchQueue.add(id);\n        },\n        watchChange(id) {\n            if (id.endsWith('/package.json')) {\n                invalidatePackageData(packageCache, id);\n            }\n        }\n    };\n}\n\n// special id for paths marked with browser: false\n// https://github.com/defunctzombie/package-browser-field-spec#ignore-a-module\nconst browserExternalId = '__vite-browser-external';\nconst isDebug$4 = process.env.DEBUG;\nconst debug$c = createDebugger('vite:resolve-details', {\n    onlyWhenFocused: true\n});\nfunction resolvePlugin(resolveOptions) {\n    const { root, isProduction, asSrc, ssrConfig, preferRelative = false } = resolveOptions;\n    const { target: ssrTarget, noExternal: ssrNoExternal } = ssrConfig ?? {};\n    return {\n        name: 'vite:resolve',\n        async resolveId(id, importer, resolveOpts) {\n            const ssr = resolveOpts?.ssr === true;\n            // We need to delay depsOptimizer until here instead of passing it as an option\n            // the resolvePlugin because the optimizer is created on server listen during dev\n            const depsOptimizer = resolveOptions.getDepsOptimizer?.(ssr);\n            if (id.startsWith(browserExternalId)) {\n                return id;\n            }\n            const targetWeb = !ssr || ssrTarget === 'webworker';\n            // this is passed by @rollup/plugin-commonjs\n            const isRequire = resolveOpts?.custom?.['node-resolve']?.isRequire ?? false;\n            const options = {\n                isRequire,\n                ...resolveOptions,\n                scan: resolveOpts?.scan ?? resolveOptions.scan\n            };\n            if (importer) {\n                if (isTsRequest(importer) ||\n                    resolveOpts.custom?.depScan?.loader?.startsWith('ts')) {\n                    options.isFromTsImporter = true;\n                }\n                else {\n                    const moduleLang = this.getModuleInfo(importer)?.meta?.vite?.lang;\n                    options.isFromTsImporter = moduleLang && isTsRequest(`.${moduleLang}`);\n                }\n            }\n            let res;\n            // resolve pre-bundled deps requests, these could be resolved by\n            // tryFileResolve or /fs/ resolution but these files may not yet\n            // exists if we are in the middle of a deps re-processing\n            if (asSrc && depsOptimizer?.isOptimizedDepUrl(id)) {\n                const optimizedPath = id.startsWith(FS_PREFIX)\n                    ? fsPathFromId(id)\n                    : normalizePath$3(ensureVolumeInPath(path$n.resolve(root, id.slice(1))));\n                return optimizedPath;\n            }\n            // explicit fs paths that starts with /@fs/*\n            if (asSrc && id.startsWith(FS_PREFIX)) {\n                const fsPath = fsPathFromId(id);\n                res = tryFsResolve(fsPath, options);\n                isDebug$4 && debug$c(`[@fs] ${picocolors.exports.cyan(id)} -> ${picocolors.exports.dim(res)}`);\n                // always return here even if res doesn't exist since /@fs/ is explicit\n                // if the file doesn't exist it should be a 404\n                return res || fsPath;\n            }\n            // URL\n            // /foo -> /fs-root/foo\n            if (asSrc && id.startsWith('/')) {\n                const fsPath = path$n.resolve(root, id.slice(1));\n                if ((res = tryFsResolve(fsPath, options))) {\n                    isDebug$4 && debug$c(`[url] ${picocolors.exports.cyan(id)} -> ${picocolors.exports.dim(res)}`);\n                    return res;\n                }\n            }\n            // relative\n            if (id.startsWith('.') ||\n                ((preferRelative || importer?.endsWith('.html')) && /^\\w/.test(id))) {\n                const basedir = importer ? path$n.dirname(importer) : process.cwd();\n                const fsPath = path$n.resolve(basedir, id);\n                // handle browser field mapping for relative imports\n                const normalizedFsPath = normalizePath$3(fsPath);\n                if (depsOptimizer?.isOptimizedDepFile(normalizedFsPath)) {\n                    // Optimized files could not yet exist in disk, resolve to the full path\n                    // Inject the current browserHash version if the path doesn't have one\n                    if (!normalizedFsPath.match(DEP_VERSION_RE)) {\n                        const browserHash = optimizedDepInfoFromFile(depsOptimizer.metadata, normalizedFsPath)?.browserHash;\n                        if (browserHash) {\n                            return injectQuery(normalizedFsPath, `v=${browserHash}`);\n                        }\n                    }\n                    return normalizedFsPath;\n                }\n                const pathFromBasedir = normalizedFsPath.slice(basedir.length);\n                if (pathFromBasedir.startsWith('/node_modules/')) {\n                    // normalize direct imports from node_modules to bare imports, so the\n                    // hashing logic is shared and we avoid duplicated modules #2503\n                    const bareImport = pathFromBasedir.slice('/node_modules/'.length);\n                    if ((res = tryNodeResolve(bareImport, importer, options, targetWeb, depsOptimizer, ssr)) &&\n                        res.id.startsWith(normalizedFsPath)) {\n                        return res;\n                    }\n                }\n                if (targetWeb &&\n                    (res = tryResolveBrowserMapping(fsPath, importer, options, true))) {\n                    return res;\n                }\n                if ((res = tryFsResolve(fsPath, options))) {\n                    isDebug$4 &&\n                        debug$c(`[relative] ${picocolors.exports.cyan(id)} -> ${picocolors.exports.dim(res)}`);\n                    const pkg = importer != null && idToPkgMap.get(importer);\n                    if (pkg) {\n                        idToPkgMap.set(res, pkg);\n                        return {\n                            id: res,\n                            moduleSideEffects: pkg.hasSideEffects(res)\n                        };\n                    }\n                    return res;\n                }\n            }\n            // drive relative fs paths (only windows)\n            if (isWindows$4 && id.startsWith('/')) {\n                const basedir = importer ? path$n.dirname(importer) : process.cwd();\n                const fsPath = path$n.resolve(basedir, id);\n                if ((res = tryFsResolve(fsPath, options))) {\n                    isDebug$4 &&\n                        debug$c(`[drive-relative] ${picocolors.exports.cyan(id)} -> ${picocolors.exports.dim(res)}`);\n                    return res;\n                }\n            }\n            // absolute fs paths\n            if (isNonDriveRelativeAbsolutePath(id) &&\n                (res = tryFsResolve(id, options))) {\n                isDebug$4 && debug$c(`[fs] ${picocolors.exports.cyan(id)} -> ${picocolors.exports.dim(res)}`);\n                return res;\n            }\n            // external\n            if (isExternalUrl(id)) {\n                return {\n                    id,\n                    external: true\n                };\n            }\n            // data uri: pass through (this only happens during build and will be\n            // handled by dedicated plugin)\n            if (isDataUrl(id)) {\n                return null;\n            }\n            // bare package imports, perform node resolve\n            if (bareImportRE.test(id)) {\n                const external = options.shouldExternalize?.(id);\n                if (!external &&\n                    asSrc &&\n                    depsOptimizer &&\n                    !options.scan &&\n                    (res = await tryOptimizedResolve(depsOptimizer, id, importer))) {\n                    return res;\n                }\n                if (targetWeb &&\n                    (res = tryResolveBrowserMapping(id, importer, options, false, external))) {\n                    return res;\n                }\n                if ((res = tryNodeResolve(id, importer, options, targetWeb, depsOptimizer, ssr, external))) {\n                    return res;\n                }\n                // node built-ins.\n                // externalize if building for SSR, otherwise redirect to empty module\n                if (isBuiltin(id)) {\n                    if (ssr) {\n                        if (ssrNoExternal === true) {\n                            let message = `Cannot bundle Node.js built-in \"${id}\"`;\n                            if (importer) {\n                                message += ` imported from \"${path$n.relative(process.cwd(), importer)}\"`;\n                            }\n                            message += `. Consider disabling ssr.noExternal or remove the built-in dependency.`;\n                            this.error(message);\n                        }\n                        return {\n                            id,\n                            external: true\n                        };\n                    }\n                    else {\n                        if (!asSrc) {\n                            debug$c(`externalized node built-in \"${id}\" to empty module. ` +\n                                `(imported by: ${picocolors.exports.white(picocolors.exports.dim(importer))})`);\n                        }\n                        return isProduction\n                            ? browserExternalId\n                            : `${browserExternalId}:${id}`;\n                    }\n                }\n            }\n            isDebug$4 && debug$c(`[fallthrough] ${picocolors.exports.dim(id)}`);\n        },\n        load(id) {\n            if (id.startsWith(browserExternalId)) {\n                if (isProduction) {\n                    return `export default {}`;\n                }\n                else {\n                    id = id.slice(browserExternalId.length + 1);\n                    return `\\\nexport default new Proxy({}, {\n  get(_, key) {\n    throw new Error(\\`Module \"${id}\" has been externalized for browser compatibility. Cannot access \"${id}.\\${key}\" in client code.\\`)\n  }\n})`;\n                }\n            }\n        }\n    };\n}\nfunction splitFileAndPostfix(path) {\n    let file = path;\n    let postfix = '';\n    let postfixIndex = path.indexOf('?');\n    if (postfixIndex < 0) {\n        postfixIndex = path.indexOf('#');\n    }\n    if (postfixIndex > 0) {\n        file = path.slice(0, postfixIndex);\n        postfix = path.slice(postfixIndex);\n    }\n    return { file, postfix };\n}\nfunction tryFsResolve(fsPath, options, tryIndex = true, targetWeb = true) {\n    const { file, postfix } = splitFileAndPostfix(fsPath);\n    let res;\n    // if we fould postfix exist, we should first try resolving file with postfix. details see #4703.\n    if (postfix &&\n        (res = tryResolveFile(fsPath, '', options, false, targetWeb, options.tryPrefix, options.skipPackageJson))) {\n        return res;\n    }\n    if ((res = tryResolveFile(file, postfix, options, false, targetWeb, options.tryPrefix, options.skipPackageJson))) {\n        return res;\n    }\n    for (const ext of options.extensions || DEFAULT_EXTENSIONS$1) {\n        if (postfix &&\n            (res = tryResolveFile(fsPath + ext, '', options, false, targetWeb, options.tryPrefix, options.skipPackageJson))) {\n            return res;\n        }\n        if ((res = tryResolveFile(file + ext, postfix, options, false, targetWeb, options.tryPrefix, options.skipPackageJson))) {\n            return res;\n        }\n    }\n    if (postfix &&\n        (res = tryResolveFile(fsPath, '', options, tryIndex, targetWeb, options.tryPrefix, options.skipPackageJson))) {\n        return res;\n    }\n    if ((res = tryResolveFile(file, postfix, options, tryIndex, targetWeb, options.tryPrefix, options.skipPackageJson))) {\n        return res;\n    }\n}\nfunction tryResolveFile(file, postfix, options, tryIndex, targetWeb, tryPrefix, skipPackageJson) {\n    // #2051 if we don't have read permission on a directory, existsSync() still\n    // works and will result in massively slow subsequent checks (which are\n    // unnecessary in the first place)\n    if (isFileReadable(file)) {\n        if (!fs$l.statSync(file).isDirectory()) {\n            return getRealPath(file, options.preserveSymlinks) + postfix;\n        }\n        else if (tryIndex) {\n            if (!skipPackageJson) {\n                const pkgPath = file + '/package.json';\n                try {\n                    // path points to a node package\n                    const pkg = loadPackageData(pkgPath, options.preserveSymlinks);\n                    const resolved = resolvePackageEntry(file, pkg, targetWeb, options);\n                    return resolved;\n                }\n                catch (e) {\n                    if (e.code !== 'ENOENT') {\n                        throw e;\n                    }\n                }\n            }\n            const index = tryFsResolve(file + '/index', options);\n            if (index)\n                return index + postfix;\n        }\n    }\n    const tryTsExtension = options.isFromTsImporter && isPossibleTsOutput(file);\n    if (tryTsExtension) {\n        const tsSrcPaths = getPotentialTsSrcPaths(file);\n        for (const srcPath of tsSrcPaths) {\n            const res = tryResolveFile(srcPath, postfix, options, tryIndex, targetWeb, tryPrefix, skipPackageJson);\n            if (res)\n                return res;\n        }\n        return;\n    }\n    if (tryPrefix) {\n        const prefixed = `${path$n.dirname(file)}/${tryPrefix}${path$n.basename(file)}`;\n        return tryResolveFile(prefixed, postfix, options, tryIndex, targetWeb);\n    }\n}\nconst idToPkgMap = new Map();\nfunction tryNodeResolve(id, importer, options, targetWeb, depsOptimizer, ssr, externalize, allowLinkedExternal = true) {\n    const { root, dedupe, isBuild, preserveSymlinks, packageCache } = options;\n    ssr ?? (ssr = false);\n    // split id by last '>' for nested selected packages, for example:\n    // 'foo > bar > baz' => 'foo > bar' & 'baz'\n    // 'foo'             => ''          & 'foo'\n    const lastArrowIndex = id.lastIndexOf('>');\n    const nestedRoot = id.substring(0, lastArrowIndex).trim();\n    const nestedPath = id.substring(lastArrowIndex + 1).trim();\n    const possiblePkgIds = [];\n    for (let prevSlashIndex = -1;;) {\n        let slashIndex = nestedPath.indexOf('/', prevSlashIndex + 1);\n        if (slashIndex < 0) {\n            slashIndex = nestedPath.length;\n        }\n        const part = nestedPath.slice(prevSlashIndex + 1, (prevSlashIndex = slashIndex));\n        if (!part) {\n            break;\n        }\n        // Assume path parts with an extension are not package roots, except for the\n        // first path part (since periods are sadly allowed in package names).\n        // At the same time, skip the first path part if it begins with \"@\"\n        // (since \"@foo/bar\" should be treated as the top-level path).\n        if (possiblePkgIds.length ? path$n.extname(part) : part[0] === '@') {\n            continue;\n        }\n        const possiblePkgId = nestedPath.slice(0, slashIndex);\n        possiblePkgIds.push(possiblePkgId);\n    }\n    let basedir;\n    if (dedupe?.some((id) => possiblePkgIds.includes(id))) {\n        basedir = root;\n    }\n    else if (importer &&\n        path$n.isAbsolute(importer) &&\n        fs$l.existsSync(cleanUrl(importer))) {\n        basedir = path$n.dirname(importer);\n    }\n    else {\n        basedir = root;\n    }\n    // nested node module, step-by-step resolve to the basedir of the nestedPath\n    if (nestedRoot) {\n        basedir = nestedResolveFrom(nestedRoot, basedir, preserveSymlinks);\n    }\n    let pkg;\n    const pkgId = possiblePkgIds.reverse().find((pkgId) => {\n        pkg = resolvePackageData(pkgId, basedir, preserveSymlinks, packageCache);\n        return pkg;\n    });\n    if (!pkg) {\n        return;\n    }\n    let resolveId = resolvePackageEntry;\n    let unresolvedId = pkgId;\n    const isDeepImport = unresolvedId !== nestedPath;\n    if (isDeepImport) {\n        resolveId = resolveDeepImport;\n        unresolvedId = '.' + nestedPath.slice(pkgId.length);\n    }\n    let resolved;\n    try {\n        resolved = resolveId(unresolvedId, pkg, targetWeb, options);\n    }\n    catch (err) {\n        if (!options.tryEsmOnly) {\n            throw err;\n        }\n    }\n    if (!resolved && options.tryEsmOnly) {\n        resolved = resolveId(unresolvedId, pkg, targetWeb, {\n            ...options,\n            isRequire: false,\n            mainFields: DEFAULT_MAIN_FIELDS,\n            extensions: DEFAULT_EXTENSIONS$1\n        });\n    }\n    if (!resolved) {\n        return;\n    }\n    const processResult = (resolved) => {\n        if (!externalize) {\n            return resolved;\n        }\n        // don't external symlink packages\n        if (!allowLinkedExternal && !resolved.id.includes('node_modules')) {\n            return resolved;\n        }\n        const resolvedExt = path$n.extname(resolved.id);\n        // don't external non-js imports\n        if (resolvedExt &&\n            resolvedExt !== '.js' &&\n            resolvedExt !== '.mjs' &&\n            resolvedExt !== '.cjs') {\n            return resolved;\n        }\n        let resolvedId = id;\n        if (isDeepImport) {\n            if (!pkg?.data.exports && path$n.extname(id) !== resolvedExt) {\n                resolvedId += resolvedExt;\n            }\n        }\n        return { ...resolved, id: resolvedId, external: true };\n    };\n    // link id to pkg for browser field mapping check\n    idToPkgMap.set(resolved, pkg);\n    if ((isBuild && !depsOptimizer) || externalize) {\n        // Resolve package side effects for build so that rollup can better\n        // perform tree-shaking\n        return processResult({\n            id: resolved,\n            moduleSideEffects: pkg.hasSideEffects(resolved)\n        });\n    }\n    const ext = path$n.extname(resolved);\n    const isCJS = ext === '.cjs' || (ext === '.js' && pkg.data.type !== 'module');\n    if (!options.ssrOptimizeCheck &&\n        (!resolved.includes('node_modules') || // linked\n            !depsOptimizer || // resolving before listening to the server\n            options.scan) // initial esbuild scan phase\n    ) {\n        return { id: resolved };\n    }\n    // if we reach here, it's a valid dep import that hasn't been optimized.\n    const isJsType = OPTIMIZABLE_ENTRY_RE.test(resolved);\n    let exclude = depsOptimizer?.options.exclude;\n    let include = depsOptimizer?.options.exclude;\n    if (options.ssrOptimizeCheck) {\n        // we don't have the depsOptimizer\n        exclude = options.ssrConfig?.optimizeDeps?.exclude;\n        include = options.ssrConfig?.optimizeDeps?.exclude;\n    }\n    const skipOptimization = !isJsType ||\n        importer?.includes('node_modules') ||\n        exclude?.includes(pkgId) ||\n        exclude?.includes(nestedPath) ||\n        SPECIAL_QUERY_RE.test(resolved) ||\n        (!isBuild && ssr) ||\n        // Only optimize non-external CJS deps during SSR by default\n        (ssr &&\n            !isCJS &&\n            !(include?.includes(pkgId) || include?.includes(nestedPath)));\n    if (options.ssrOptimizeCheck) {\n        return {\n            id: skipOptimization\n                ? injectQuery(resolved, `__vite_skip_optimization`)\n                : resolved\n        };\n    }\n    if (skipOptimization) {\n        // excluded from optimization\n        // Inject a version query to npm deps so that the browser\n        // can cache it without re-validation, but only do so for known js types.\n        // otherwise we may introduce duplicated modules for externalized files\n        // from pre-bundled deps.\n        if (!isBuild) {\n            const versionHash = depsOptimizer.metadata.browserHash;\n            if (versionHash && isJsType) {\n                resolved = injectQuery(resolved, `v=${versionHash}`);\n            }\n        }\n    }\n    else {\n        // this is a missing import, queue optimize-deps re-run and\n        // get a resolved its optimized info\n        const optimizedInfo = depsOptimizer.registerMissingImport(id, resolved);\n        resolved = depsOptimizer.getOptimizedDepId(optimizedInfo);\n    }\n    if (isBuild) {\n        // Resolve package side effects for build so that rollup can better\n        // perform tree-shaking\n        return {\n            id: resolved,\n            moduleSideEffects: pkg.hasSideEffects(resolved)\n        };\n    }\n    else {\n        return { id: resolved };\n    }\n}\nasync function tryOptimizedResolve(depsOptimizer, id, importer) {\n    // TODO: we need to wait until scanning is done here as this function\n    // is used in the preAliasPlugin to decide if an aliased dep is optimized,\n    // and avoid replacing the bare import with the resolved path.\n    // We should be able to remove this in the future\n    await depsOptimizer.scanProcessing;\n    const metadata = depsOptimizer.metadata;\n    const depInfo = optimizedDepInfoFromId(metadata, id);\n    if (depInfo) {\n        return depsOptimizer.getOptimizedDepId(depInfo);\n    }\n    if (!importer)\n        return;\n    // further check if id is imported by nested dependency\n    let resolvedSrc;\n    for (const optimizedData of metadata.depInfoList) {\n        if (!optimizedData.src)\n            continue; // Ignore chunks\n        const pkgPath = optimizedData.id;\n        // check for scenarios, e.g.\n        //   pkgPath  => \"my-lib > foo\"\n        //   id       => \"foo\"\n        // this narrows the need to do a full resolve\n        if (!pkgPath.endsWith(id))\n            continue;\n        // lazily initialize resolvedSrc\n        if (resolvedSrc == null) {\n            try {\n                // this may throw errors if unable to resolve, e.g. aliased id\n                resolvedSrc = normalizePath$3(resolveFrom(id, path$n.dirname(importer)));\n            }\n            catch {\n                // this is best-effort only so swallow errors\n                break;\n            }\n        }\n        // match by src to correctly identify if id belongs to nested dependency\n        if (optimizedData.src === resolvedSrc) {\n            return depsOptimizer.getOptimizedDepId(optimizedData);\n        }\n    }\n}\nfunction resolvePackageEntry(id, { dir, data, setResolvedCache, getResolvedCache }, targetWeb, options) {\n    const cached = getResolvedCache('.', targetWeb);\n    if (cached) {\n        return cached;\n    }\n    try {\n        let entryPoint;\n        // resolve exports field with highest priority\n        // using https://github.com/lukeed/resolve.exports\n        if (data.exports) {\n            entryPoint = resolveExports(data, '.', options, targetWeb);\n        }\n        // if exports resolved to .mjs, still resolve other fields.\n        // This is because .mjs files can technically import .cjs files which would\n        // make them invalid for pure ESM environments - so if other module/browser\n        // fields are present, prioritize those instead.\n        if (targetWeb && (!entryPoint || entryPoint.endsWith('.mjs'))) {\n            // check browser field\n            // https://github.com/defunctzombie/package-browser-field-spec\n            const browserEntry = typeof data.browser === 'string'\n                ? data.browser\n                : isObject$2(data.browser) && data.browser['.'];\n            if (browserEntry) {\n                // check if the package also has a \"module\" field.\n                if (!options.isRequire &&\n                    typeof data.module === 'string' &&\n                    data.module !== browserEntry) {\n                    // if both are present, we may have a problem: some package points both\n                    // to ESM, with \"module\" targeting Node.js, while some packages points\n                    // \"module\" to browser ESM and \"browser\" to UMD/IIFE.\n                    // the heuristics here is to actually read the browser entry when\n                    // possible and check for hints of ESM. If it is not ESM, prefer \"module\"\n                    // instead; Otherwise, assume it's ESM and use it.\n                    const resolvedBrowserEntry = tryFsResolve(path$n.join(dir, browserEntry), options);\n                    if (resolvedBrowserEntry) {\n                        const content = fs$l.readFileSync(resolvedBrowserEntry, 'utf-8');\n                        if (hasESMSyntax(content)) {\n                            // likely ESM, prefer browser\n                            entryPoint = browserEntry;\n                        }\n                        else {\n                            // non-ESM, UMD or IIFE or CJS(!!! e.g. firebase 7.x), prefer module\n                            entryPoint = data.module;\n                        }\n                    }\n                }\n                else {\n                    entryPoint = browserEntry;\n                }\n            }\n        }\n        if (!entryPoint || entryPoint.endsWith('.mjs')) {\n            for (const field of options.mainFields || DEFAULT_MAIN_FIELDS) {\n                if (typeof data[field] === 'string') {\n                    entryPoint = data[field];\n                    break;\n                }\n            }\n        }\n        entryPoint || (entryPoint = data.main);\n        // try default entry when entry is not define\n        // https://nodejs.org/api/modules.html#all-together\n        const entryPoints = entryPoint\n            ? [entryPoint]\n            : ['index.js', 'index.json', 'index.node'];\n        for (let entry of entryPoints) {\n            // make sure we don't get scripts when looking for sass\n            if (options.mainFields?.[0] === 'sass' &&\n                !options.extensions?.includes(path$n.extname(entry))) {\n                entry = '';\n                options.skipPackageJson = true;\n            }\n            // resolve object browser field in package.json\n            const { browser: browserField } = data;\n            if (targetWeb && isObject$2(browserField)) {\n                entry = mapWithBrowserField(entry, browserField) || entry;\n            }\n            const entryPointPath = path$n.join(dir, entry);\n            const resolvedEntryPoint = tryFsResolve(entryPointPath, options);\n            if (resolvedEntryPoint) {\n                isDebug$4 &&\n                    debug$c(`[package entry] ${picocolors.exports.cyan(id)} -> ${picocolors.exports.dim(resolvedEntryPoint)}`);\n                setResolvedCache('.', resolvedEntryPoint, targetWeb);\n                return resolvedEntryPoint;\n            }\n        }\n    }\n    catch (e) {\n        packageEntryFailure(id, e.message);\n    }\n    packageEntryFailure(id);\n}\nfunction packageEntryFailure(id, details) {\n    throw new Error(`Failed to resolve entry for package \"${id}\". ` +\n        `The package may have incorrect main/module/exports specified in its package.json` +\n        (details ? ': ' + details : '.'));\n}\nfunction resolveExports(pkg, key, options, targetWeb) {\n    const conditions = [options.isProduction ? 'production' : 'development'];\n    if (!options.isRequire) {\n        conditions.push('module');\n    }\n    if (options.conditions) {\n        conditions.push(...options.conditions);\n    }\n    return resolve(pkg, key, {\n        browser: targetWeb,\n        require: options.isRequire,\n        conditions\n    });\n}\nfunction resolveDeepImport(id, { webResolvedImports, setResolvedCache, getResolvedCache, dir, data }, targetWeb, options) {\n    const cache = getResolvedCache(id, targetWeb);\n    if (cache) {\n        return cache;\n    }\n    let relativeId = id;\n    const { exports: exportsField, browser: browserField } = data;\n    // map relative based on exports data\n    if (exportsField) {\n        if (isObject$2(exportsField) && !Array.isArray(exportsField)) {\n            // resolve without postfix (see #7098)\n            const { file, postfix } = splitFileAndPostfix(relativeId);\n            const exportsId = resolveExports(data, file, options, targetWeb);\n            if (exportsId !== undefined) {\n                relativeId = exportsId + postfix;\n            }\n            else {\n                relativeId = undefined;\n            }\n        }\n        else {\n            // not exposed\n            relativeId = undefined;\n        }\n        if (!relativeId) {\n            throw new Error(`Package subpath '${relativeId}' is not defined by \"exports\" in ` +\n                `${path$n.join(dir, 'package.json')}.`);\n        }\n    }\n    else if (targetWeb && isObject$2(browserField)) {\n        // resolve without postfix (see #7098)\n        const { file, postfix } = splitFileAndPostfix(relativeId);\n        const mapped = mapWithBrowserField(file, browserField);\n        if (mapped) {\n            relativeId = mapped + postfix;\n        }\n        else if (mapped === false) {\n            return (webResolvedImports[id] = browserExternalId);\n        }\n    }\n    if (relativeId) {\n        const resolved = tryFsResolve(path$n.join(dir, relativeId), options, !exportsField, // try index only if no exports field\n        targetWeb);\n        if (resolved) {\n            isDebug$4 &&\n                debug$c(`[node/deep-import] ${picocolors.exports.cyan(id)} -> ${picocolors.exports.dim(resolved)}`);\n            setResolvedCache(id, resolved, targetWeb);\n            return resolved;\n        }\n    }\n}\nfunction tryResolveBrowserMapping(id, importer, options, isFilePath, externalize) {\n    let res;\n    const pkg = importer && idToPkgMap.get(importer);\n    if (pkg && isObject$2(pkg.data.browser)) {\n        const mapId = isFilePath ? './' + slash$1(path$n.relative(pkg.dir, id)) : id;\n        const browserMappedPath = mapWithBrowserField(mapId, pkg.data.browser);\n        if (browserMappedPath) {\n            const fsPath = path$n.join(pkg.dir, browserMappedPath);\n            if ((res = tryFsResolve(fsPath, options))) {\n                isDebug$4 &&\n                    debug$c(`[browser mapped] ${picocolors.exports.cyan(id)} -> ${picocolors.exports.dim(res)}`);\n                idToPkgMap.set(res, pkg);\n                const result = {\n                    id: res,\n                    moduleSideEffects: pkg.hasSideEffects(res)\n                };\n                return externalize ? { ...result, external: true } : result;\n            }\n        }\n        else if (browserMappedPath === false) {\n            return browserExternalId;\n        }\n    }\n}\n/**\n * given a relative path in pkg dir,\n * return a relative path in pkg dir,\n * mapped with the \"map\" object\n *\n * - Returning `undefined` means there is no browser mapping for this id\n * - Returning `false` means this id is explicitly externalized for browser\n */\nfunction mapWithBrowserField(relativePathInPkgDir, map) {\n    const normalizedPath = path$n.posix.normalize(relativePathInPkgDir);\n    for (const key in map) {\n        const normalizedKey = path$n.posix.normalize(key);\n        if (normalizedPath === normalizedKey ||\n            equalWithoutSuffix(normalizedPath, normalizedKey, '.js') ||\n            equalWithoutSuffix(normalizedPath, normalizedKey, '/index.js')) {\n            return map[key];\n        }\n    }\n}\nfunction equalWithoutSuffix(path, key, suffix) {\n    return key.endsWith(suffix) && key.slice(0, -suffix.length) === path;\n}\nfunction getRealPath(resolved, preserveSymlinks) {\n    resolved = ensureVolumeInPath(resolved);\n    if (!preserveSymlinks && browserExternalId !== resolved) {\n        resolved = fs$l.realpathSync(resolved);\n    }\n    return normalizePath$3(resolved);\n}\n\nconst externalWithConversionNamespace = 'vite:dep-pre-bundle:external-conversion';\nconst convertedExternalPrefix = 'vite-dep-pre-bundle-external:';\nconst externalTypes = [\n    'css',\n    // supported pre-processor types\n    'less',\n    'sass',\n    'scss',\n    'styl',\n    'stylus',\n    'pcss',\n    'postcss',\n    // wasm\n    'wasm',\n    // known SFC types\n    'vue',\n    'svelte',\n    'marko',\n    'astro',\n    // JSX/TSX may be configured to be compiled differently from how esbuild\n    // handles it by default, so exclude them as well\n    'jsx',\n    'tsx',\n    ...KNOWN_ASSET_TYPES\n];\nfunction esbuildDepPlugin(qualified, exportsData, external, config, ssr) {\n    const { extensions } = getDepOptimizationConfig(config, ssr);\n    // remove optimizable extensions from `externalTypes` list\n    const allExternalTypes = extensions\n        ? externalTypes.filter((type) => !extensions?.includes('.' + type))\n        : externalTypes;\n    // default resolver which prefers ESM\n    const _resolve = config.createResolver({ asSrc: false, scan: true });\n    // cjs resolver that prefers Node\n    const _resolveRequire = config.createResolver({\n        asSrc: false,\n        isRequire: true,\n        scan: true\n    });\n    const resolve = (id, importer, kind, resolveDir) => {\n        let _importer;\n        // explicit resolveDir - this is passed only during yarn pnp resolve for\n        // entries\n        if (resolveDir) {\n            _importer = normalizePath$3(path$n.join(resolveDir, '*'));\n        }\n        else {\n            // map importer ids to file paths for correct resolution\n            _importer = importer in qualified ? qualified[importer] : importer;\n        }\n        const resolver = kind.startsWith('require') ? _resolveRequire : _resolve;\n        return resolver(id, _importer, undefined, ssr);\n    };\n    const resolveResult = (id, resolved) => {\n        if (resolved.startsWith(browserExternalId)) {\n            return {\n                path: id,\n                namespace: 'browser-external'\n            };\n        }\n        if (ssr && isBuiltin(resolved)) {\n            return;\n        }\n        if (isExternalUrl(resolved)) {\n            return {\n                path: resolved,\n                external: true\n            };\n        }\n        return {\n            path: path$n.resolve(resolved)\n        };\n    };\n    return {\n        name: 'vite:dep-pre-bundle',\n        setup(build) {\n            // externalize assets and commonly known non-js file types\n            // See #8459 for more details about this require-import conversion\n            build.onResolve({\n                filter: new RegExp(`\\\\.(` + allExternalTypes.join('|') + `)(\\\\?.*)?$`)\n            }, async ({ path: id, importer, kind }) => {\n                // if the prefix exist, it is already converted to `import`, so set `external: true`\n                if (id.startsWith(convertedExternalPrefix)) {\n                    return {\n                        path: id.slice(convertedExternalPrefix.length),\n                        external: true\n                    };\n                }\n                const resolved = await resolve(id, importer, kind);\n                if (resolved) {\n                    if (kind === 'require-call') {\n                        // here it is not set to `external: true` to convert `require` to `import`\n                        return {\n                            path: resolved,\n                            namespace: externalWithConversionNamespace\n                        };\n                    }\n                    return {\n                        path: resolved,\n                        external: true\n                    };\n                }\n            });\n            build.onLoad({ filter: /./, namespace: externalWithConversionNamespace }, (args) => {\n                // import itself with prefix (this is the actual part of require-import conversion)\n                return {\n                    contents: `export { default } from \"${convertedExternalPrefix}${args.path}\";` +\n                        `export * from \"${convertedExternalPrefix}${args.path}\";`,\n                    loader: 'js'\n                };\n            });\n            function resolveEntry(id) {\n                const flatId = flattenId(id);\n                if (flatId in qualified) {\n                    return {\n                        path: flatId,\n                        namespace: 'dep'\n                    };\n                }\n            }\n            build.onResolve({ filter: /^[\\w@][^:]/ }, async ({ path: id, importer, kind }) => {\n                if (moduleListContains(external, id)) {\n                    return {\n                        path: id,\n                        external: true\n                    };\n                }\n                // ensure esbuild uses our resolved entries\n                let entry;\n                // if this is an entry, return entry namespace resolve result\n                if (!importer) {\n                    if ((entry = resolveEntry(id)))\n                        return entry;\n                    // check if this is aliased to an entry - also return entry namespace\n                    const aliased = await _resolve(id, undefined, true);\n                    if (aliased && (entry = resolveEntry(aliased))) {\n                        return entry;\n                    }\n                }\n                // use vite's own resolver\n                const resolved = await resolve(id, importer, kind);\n                if (resolved) {\n                    return resolveResult(id, resolved);\n                }\n            });\n            // For entry files, we'll read it ourselves and construct a proxy module\n            // to retain the entry's raw id instead of file path so that esbuild\n            // outputs desired output file structure.\n            // It is necessary to do the re-exporting to separate the virtual proxy\n            // module from the actual module since the actual module may get\n            // referenced via relative imports - if we don't separate the proxy and\n            // the actual module, esbuild will create duplicated copies of the same\n            // module!\n            const root = path$n.resolve(config.root);\n            build.onLoad({ filter: /.*/, namespace: 'dep' }, ({ path: id }) => {\n                const entryFile = qualified[id];\n                let relativePath = normalizePath$3(path$n.relative(root, entryFile));\n                if (!relativePath.startsWith('./') &&\n                    !relativePath.startsWith('../') &&\n                    relativePath !== '.') {\n                    relativePath = `./${relativePath}`;\n                }\n                let contents = '';\n                const { hasImports, exports, hasReExports } = exportsData[id];\n                if (!hasImports && !exports.length) {\n                    // cjs\n                    contents += `export default require(\"${relativePath}\");`;\n                }\n                else {\n                    if (exports.includes('default')) {\n                        contents += `import d from \"${relativePath}\";export default d;`;\n                    }\n                    if (hasReExports || exports.length > 1 || exports[0] !== 'default') {\n                        contents += `\\nexport * from \"${relativePath}\"`;\n                    }\n                }\n                return {\n                    loader: 'js',\n                    contents,\n                    resolveDir: root\n                };\n            });\n            build.onLoad({ filter: /.*/, namespace: 'browser-external' }, ({ path }) => {\n                if (config.isProduction) {\n                    return {\n                        contents: 'module.exports = {}'\n                    };\n                }\n                else {\n                    return {\n                        // Return in CJS to intercept named imports. Use `Object.create` to\n                        // create the Proxy in the prototype to workaround esbuild issue. Why?\n                        //\n                        // In short, esbuild cjs->esm flow:\n                        // 1. Create empty object using `Object.create(Object.getPrototypeOf(module.exports))`.\n                        // 2. Assign props of `module.exports` to the object.\n                        // 3. Return object for ESM use.\n                        //\n                        // If we do `module.exports = new Proxy({}, {})`, step 1 returns empty object,\n                        // step 2 does nothing as there's no props for `module.exports`. The final object\n                        // is just an empty object.\n                        //\n                        // Creating the Proxy in the prototype satisfies step 1 immediately, which means\n                        // the returned object is a Proxy that we can intercept.\n                        //\n                        // Note: Skip keys that are accessed by esbuild and browser devtools.\n                        contents: `\\\nmodule.exports = Object.create(new Proxy({}, {\n  get(_, key) {\n    if (\n      key !== '__esModule' &&\n      key !== '__proto__' &&\n      key !== 'constructor' &&\n      key !== 'splice'\n    ) {\n      throw new Error(\\`Module \"${path}\" has been externalized for browser compatibility. Cannot access \"${path}.\\${key}\" in client code.\\`)\n    }\n  }\n}))`\n                    };\n                }\n            });\n            // yarn 2 pnp compat\n            if (isRunningWithYarnPnp) {\n                build.onResolve({ filter: /.*/ }, async ({ path: id, importer, kind, resolveDir, namespace }) => {\n                    const resolved = await resolve(id, importer, kind, \n                    // pass along resolveDir for entries\n                    namespace === 'dep' ? resolveDir : undefined);\n                    if (resolved) {\n                        return resolveResult(id, resolved);\n                    }\n                });\n                build.onLoad({ filter: /.*/ }, async (args) => ({\n                    contents: await promises$2.readFile(args.path),\n                    loader: 'default'\n                }));\n            }\n        }\n    };\n}\n// esbuild doesn't transpile `require('foo')` into `import` statements if 'foo' is externalized\n// https://github.com/evanw/esbuild/issues/566#issuecomment-735551834\nfunction esbuildCjsExternalPlugin(externals) {\n    return {\n        name: 'cjs-external',\n        setup(build) {\n            const escape = (text) => `^${text.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&')}$`;\n            const filter = new RegExp(externals.map(escape).join('|'));\n            build.onResolve({ filter: /.*/, namespace: 'external' }, (args) => ({\n                path: args.path,\n                external: true\n            }));\n            build.onResolve({ filter }, (args) => ({\n                path: args.path,\n                namespace: 'external'\n            }));\n            build.onLoad({ filter: /.*/, namespace: 'external' }, (args) => ({\n                contents: `export * from ${JSON.stringify(args.path)}`\n            }));\n        }\n    };\n}\n\nfunction ansiRegex({onlyFirst = false} = {}) {\n\tconst pattern = [\n\t    '[\\\\u001B\\\\u009B][[\\\\]()#;?]*(?:(?:(?:(?:;[-a-zA-Z\\\\d\\\\/#&.:=?%@~_]+)*|[a-zA-Z\\\\d]+(?:;[-a-zA-Z\\\\d\\\\/#&.:=?%@~_]*)*)?\\\\u0007)',\n\t\t'(?:(?:\\\\d{1,4}(?:;\\\\d{0,4})*)?[\\\\dA-PR-TZcf-ntqry=><~]))'\n\t].join('|');\n\n\treturn new RegExp(pattern, onlyFirst ? undefined : 'g');\n}\n\nfunction stripAnsi(string) {\n\tif (typeof string !== 'string') {\n\t\tthrow new TypeError(`Expected a \\`string\\`, got \\`${typeof string}\\``);\n\t}\n\n\treturn string.replace(ansiRegex(), '');\n}\n\nfunction prepareError(err) {\n    // only copy the information we need and avoid serializing unnecessary\n    // properties, since some errors may attach full objects (e.g. PostCSS)\n    return {\n        message: stripAnsi(err.message),\n        stack: stripAnsi(cleanStack(err.stack || '')),\n        id: err.id,\n        frame: stripAnsi(err.frame || ''),\n        plugin: err.plugin,\n        pluginCode: err.pluginCode,\n        loc: err.loc\n    };\n}\nfunction buildErrorMessage(err, args = [], includeStack = true) {\n    if (err.plugin)\n        args.push(`  Plugin: ${picocolors.exports.magenta(err.plugin)}`);\n    if (err.id)\n        args.push(`  File: ${picocolors.exports.cyan(err.id)}`);\n    if (err.frame)\n        args.push(picocolors.exports.yellow(pad$1(err.frame)));\n    if (includeStack && err.stack)\n        args.push(pad$1(cleanStack(err.stack)));\n    return args.join('\\n');\n}\nfunction cleanStack(stack) {\n    return stack\n        .split(/\\n/g)\n        .filter((l) => /^\\s*at/.test(l))\n        .join('\\n');\n}\nfunction logError(server, err) {\n    const msg = buildErrorMessage(err, [\n        picocolors.exports.red(`Internal server error: ${err.message}`)\n    ]);\n    server.config.logger.error(msg, {\n        clear: true,\n        timestamp: true,\n        error: err\n    });\n    server.ws.send({\n        type: 'error',\n        err: prepareError(err)\n    });\n}\nfunction errorMiddleware(server, allowNext = false) {\n    // note the 4 args must be kept for connect to treat this as error middleware\n    // Keep the named function. The name is visible in debug logs via `DEBUG=connect:dispatcher ...`\n    return function viteErrorMiddleware(err, _req, res, next) {\n        logError(server, err);\n        if (allowNext) {\n            next();\n        }\n        else {\n            res.statusCode = 500;\n            res.end(`\n        <!DOCTYPE html>\n        <html lang=\"en\">\n          <head>\n            <meta charset=\"UTF-8\" />\n            <title>Error</title>\n            <script type=\"module\">\n              import { ErrorOverlay } from '/@vite/client'\n              document.body.appendChild(new ErrorOverlay(${JSON.stringify(prepareError(err)).replace(/</g, '\\\\u003c')}))\n            </script>\n          </head>\n          <body>\n          </body>\n        </html>\n      `);\n        }\n    };\n}\n\n/**\n * This file is refactored into TypeScript based on\n * https://github.com/preactjs/wmr/blob/main/packages/wmr/src/lib/rollup-plugin-container.js\n */\nlet parser = Parser;\nasync function createPluginContainer({ plugins, logger, root, build: { rollupOptions } }, moduleGraph, watcher) {\n    const isDebug = process.env.DEBUG;\n    const seenResolves = {};\n    const debugResolve = createDebugger('vite:resolve');\n    const debugPluginResolve = createDebugger('vite:plugin-resolve', {\n        onlyWhenFocused: 'vite:plugin'\n    });\n    const debugPluginTransform = createDebugger('vite:plugin-transform', {\n        onlyWhenFocused: 'vite:plugin'\n    });\n    const debugSourcemapCombineFlag = 'vite:sourcemap-combine';\n    const isDebugSourcemapCombineFocused = process.env.DEBUG?.includes(debugSourcemapCombineFlag);\n    const debugSourcemapCombineFilter = process.env.DEBUG_VITE_SOURCEMAP_COMBINE_FILTER;\n    const debugSourcemapCombine = createDebugger('vite:sourcemap-combine', {\n        onlyWhenFocused: true\n    });\n    // ---------------------------------------------------------------------------\n    const watchFiles = new Set();\n    // TODO: use import()\n    const _require = createRequire$1(import.meta.url);\n    // get rollup version\n    const rollupPkgPath = resolve$6(_require.resolve('rollup'), '../../package.json');\n    const minimalContext = {\n        meta: {\n            rollupVersion: JSON.parse(fs$l.readFileSync(rollupPkgPath, 'utf-8'))\n                .version,\n            watchMode: true\n        }\n    };\n    function warnIncompatibleMethod(method, plugin) {\n        logger.warn(picocolors.exports.cyan(`[plugin:${plugin}] `) +\n            picocolors.exports.yellow(`context method ${picocolors.exports.bold(`${method}()`)} is not supported in serve mode. This plugin is likely not vite-compatible.`));\n    }\n    // throw when an unsupported ModuleInfo property is accessed,\n    // so that incompatible plugins fail in a non-cryptic way.\n    const ModuleInfoProxy = {\n        get(info, key) {\n            if (key in info) {\n                return info[key];\n            }\n            throw Error(`[vite] The \"${key}\" property of ModuleInfo is not supported.`);\n        }\n    };\n    // same default value of \"moduleInfo.meta\" as in Rollup\n    const EMPTY_OBJECT = Object.freeze({});\n    function getModuleInfo(id) {\n        const module = moduleGraph?.getModuleById(id);\n        if (!module) {\n            return null;\n        }\n        if (!module.info) {\n            module.info = new Proxy({ id, meta: module.meta || EMPTY_OBJECT }, ModuleInfoProxy);\n        }\n        return module.info;\n    }\n    function updateModuleInfo(id, { meta }) {\n        if (meta) {\n            const moduleInfo = getModuleInfo(id);\n            if (moduleInfo) {\n                moduleInfo.meta = { ...moduleInfo.meta, ...meta };\n            }\n        }\n    }\n    // we should create a new context for each async hook pipeline so that the\n    // active plugin in that pipeline can be tracked in a concurrency-safe manner.\n    // using a class to make creating new contexts more efficient\n    class Context {\n        constructor(initialPlugin) {\n            this.meta = minimalContext.meta;\n            this.ssr = false;\n            this._scan = false;\n            this._activeId = null;\n            this._activeCode = null;\n            this._addedImports = null;\n            this._activePlugin = initialPlugin || null;\n        }\n        parse(code, opts = {}) {\n            return parser.parse(code, {\n                sourceType: 'module',\n                ecmaVersion: 'latest',\n                locations: true,\n                ...opts\n            });\n        }\n        async resolve(id, importer, options) {\n            let skip;\n            if (options?.skipSelf && this._activePlugin) {\n                skip = new Set(this._resolveSkips);\n                skip.add(this._activePlugin);\n            }\n            let out = await container.resolveId(id, importer, {\n                custom: options?.custom,\n                isEntry: !!options?.isEntry,\n                skip,\n                ssr: this.ssr,\n                scan: this._scan\n            });\n            if (typeof out === 'string')\n                out = { id: out };\n            return out;\n        }\n        getModuleInfo(id) {\n            return getModuleInfo(id);\n        }\n        getModuleIds() {\n            return moduleGraph\n                ? moduleGraph.idToModuleMap.keys()\n                : Array.prototype[Symbol.iterator]();\n        }\n        addWatchFile(id) {\n            watchFiles.add(id);\n            (this._addedImports || (this._addedImports = new Set())).add(id);\n            if (watcher)\n                ensureWatchedFile(watcher, id, root);\n        }\n        getWatchFiles() {\n            return [...watchFiles];\n        }\n        emitFile(assetOrFile) {\n            warnIncompatibleMethod(`emitFile`, this._activePlugin.name);\n            return '';\n        }\n        setAssetSource() {\n            warnIncompatibleMethod(`setAssetSource`, this._activePlugin.name);\n        }\n        getFileName() {\n            warnIncompatibleMethod(`getFileName`, this._activePlugin.name);\n            return '';\n        }\n        warn(e, position) {\n            const err = formatError(e, position, this);\n            const msg = buildErrorMessage(err, [picocolors.exports.yellow(`warning: ${err.message}`)], false);\n            logger.warn(msg, {\n                clear: true,\n                timestamp: true\n            });\n        }\n        error(e, position) {\n            // error thrown here is caught by the transform middleware and passed on\n            // the the error middleware.\n            throw formatError(e, position, this);\n        }\n    }\n    function formatError(e, position, ctx) {\n        const err = (typeof e === 'string' ? new Error(e) : e);\n        if (err.pluginCode) {\n            return err; // The plugin likely called `this.error`\n        }\n        if (err.file && err.name === 'CssSyntaxError') {\n            err.id = normalizePath$3(err.file);\n        }\n        if (ctx._activePlugin)\n            err.plugin = ctx._activePlugin.name;\n        if (ctx._activeId && !err.id)\n            err.id = ctx._activeId;\n        if (ctx._activeCode) {\n            err.pluginCode = ctx._activeCode;\n            const pos = position != null\n                ? position\n                : err.pos != null\n                    ? err.pos\n                    : // some rollup plugins, e.g. json, sets position instead of pos\n                        err.position;\n            if (pos != null) {\n                let errLocation;\n                try {\n                    errLocation = numberToPos(ctx._activeCode, pos);\n                }\n                catch (err2) {\n                    logger.error(picocolors.exports.red(`Error in error handler:\\n${err2.stack || err2.message}\\n`), \n                    // print extra newline to separate the two errors\n                    { error: err2 });\n                    throw err;\n                }\n                err.loc = err.loc || {\n                    file: err.id,\n                    ...errLocation\n                };\n                err.frame = err.frame || generateCodeFrame(ctx._activeCode, pos);\n            }\n            else if (err.loc) {\n                // css preprocessors may report errors in an included file\n                if (!err.frame) {\n                    let code = ctx._activeCode;\n                    if (err.loc.file) {\n                        err.id = normalizePath$3(err.loc.file);\n                        try {\n                            code = fs$l.readFileSync(err.loc.file, 'utf-8');\n                        }\n                        catch { }\n                    }\n                    err.frame = generateCodeFrame(code, err.loc);\n                }\n            }\n            else if (err.line && err.column) {\n                err.loc = {\n                    file: err.id,\n                    line: err.line,\n                    column: err.column\n                };\n                err.frame = err.frame || generateCodeFrame(err.id, err.loc);\n            }\n            if (err.loc && ctx instanceof TransformContext) {\n                const rawSourceMap = ctx._getCombinedSourcemap();\n                if (rawSourceMap) {\n                    const traced = new TraceMap(rawSourceMap);\n                    const { source, line, column } = originalPositionFor$1(traced, {\n                        line: Number(err.loc.line),\n                        column: Number(err.loc.column)\n                    });\n                    if (source && line != null && column != null) {\n                        err.loc = { file: source, line, column };\n                    }\n                }\n            }\n        }\n        return err;\n    }\n    class TransformContext extends Context {\n        constructor(filename, code, inMap) {\n            super();\n            this.originalSourcemap = null;\n            this.sourcemapChain = [];\n            this.combinedMap = null;\n            this.filename = filename;\n            this.originalCode = code;\n            if (inMap) {\n                this.sourcemapChain.push(inMap);\n            }\n        }\n        _getCombinedSourcemap(createIfNull = false) {\n            if (debugSourcemapCombineFilter &&\n                this.filename.includes(debugSourcemapCombineFilter)) {\n                debugSourcemapCombine('----------', this.filename);\n                debugSourcemapCombine(this.combinedMap);\n                debugSourcemapCombine(this.sourcemapChain);\n                debugSourcemapCombine('----------');\n            }\n            let combinedMap = this.combinedMap;\n            for (let m of this.sourcemapChain) {\n                if (typeof m === 'string')\n                    m = JSON.parse(m);\n                if (!('version' in m)) {\n                    // empty, nullified source map\n                    combinedMap = this.combinedMap = null;\n                    this.sourcemapChain.length = 0;\n                    break;\n                }\n                if (!combinedMap) {\n                    combinedMap = m;\n                }\n                else {\n                    combinedMap = combineSourcemaps(cleanUrl(this.filename), [\n                        {\n                            ...m,\n                            sourcesContent: combinedMap.sourcesContent\n                        },\n                        combinedMap\n                    ]);\n                }\n            }\n            if (!combinedMap) {\n                return createIfNull\n                    ? new MagicString(this.originalCode).generateMap({\n                        includeContent: true,\n                        hires: true,\n                        source: cleanUrl(this.filename)\n                    })\n                    : null;\n            }\n            if (combinedMap !== this.combinedMap) {\n                this.combinedMap = combinedMap;\n                this.sourcemapChain.length = 0;\n            }\n            return this.combinedMap;\n        }\n        getCombinedSourcemap() {\n            return this._getCombinedSourcemap(true);\n        }\n    }\n    let closed = false;\n    const container = {\n        options: await (async () => {\n            let options = rollupOptions;\n            for (const plugin of plugins) {\n                if (!plugin.options)\n                    continue;\n                options =\n                    (await plugin.options.call(minimalContext, options)) || options;\n            }\n            if (options.acornInjectPlugins) {\n                parser = Parser.extend(...arraify(options.acornInjectPlugins));\n            }\n            return {\n                acorn,\n                acornInjectPlugins: [],\n                ...options\n            };\n        })(),\n        getModuleInfo,\n        async buildStart() {\n            await Promise.all(plugins.map((plugin) => {\n                if (plugin.buildStart) {\n                    return plugin.buildStart.call(new Context(plugin), container.options);\n                }\n            }));\n        },\n        async resolveId(rawId, importer = join$2(root, 'index.html'), options) {\n            const skip = options?.skip;\n            const ssr = options?.ssr;\n            const scan = !!options?.scan;\n            const ctx = new Context();\n            ctx.ssr = !!ssr;\n            ctx._scan = scan;\n            ctx._resolveSkips = skip;\n            const resolveStart = isDebug ? performance.now() : 0;\n            let id = null;\n            const partial = {};\n            for (const plugin of plugins) {\n                if (!plugin.resolveId)\n                    continue;\n                if (skip?.has(plugin))\n                    continue;\n                ctx._activePlugin = plugin;\n                const pluginResolveStart = isDebug ? performance.now() : 0;\n                const result = await plugin.resolveId.call(ctx, rawId, importer, {\n                    custom: options?.custom,\n                    isEntry: !!options?.isEntry,\n                    ssr,\n                    scan\n                });\n                if (!result)\n                    continue;\n                if (typeof result === 'string') {\n                    id = result;\n                }\n                else {\n                    id = result.id;\n                    Object.assign(partial, result);\n                }\n                isDebug &&\n                    debugPluginResolve(timeFrom(pluginResolveStart), plugin.name, prettifyUrl(id, root));\n                // resolveId() is hookFirst - first non-null result is returned.\n                break;\n            }\n            if (isDebug && rawId !== id && !rawId.startsWith(FS_PREFIX)) {\n                const key = rawId + id;\n                // avoid spamming\n                if (!seenResolves[key]) {\n                    seenResolves[key] = true;\n                    debugResolve(`${timeFrom(resolveStart)} ${picocolors.exports.cyan(rawId)} -> ${picocolors.exports.dim(id)}`);\n                }\n            }\n            if (id) {\n                partial.id = isExternalUrl(id) ? id : normalizePath$3(id);\n                return partial;\n            }\n            else {\n                return null;\n            }\n        },\n        async load(id, options) {\n            const ssr = options?.ssr;\n            const ctx = new Context();\n            ctx.ssr = !!ssr;\n            for (const plugin of plugins) {\n                if (!plugin.load)\n                    continue;\n                ctx._activePlugin = plugin;\n                const result = await plugin.load.call(ctx, id, { ssr });\n                if (result != null) {\n                    if (isObject$2(result)) {\n                        updateModuleInfo(id, result);\n                    }\n                    return result;\n                }\n            }\n            return null;\n        },\n        async transform(code, id, options) {\n            const inMap = options?.inMap;\n            const ssr = options?.ssr;\n            const ctx = new TransformContext(id, code, inMap);\n            ctx.ssr = !!ssr;\n            for (const plugin of plugins) {\n                if (!plugin.transform)\n                    continue;\n                ctx._activePlugin = plugin;\n                ctx._activeId = id;\n                ctx._activeCode = code;\n                const start = isDebug ? performance.now() : 0;\n                let result;\n                try {\n                    result = await plugin.transform.call(ctx, code, id, { ssr });\n                }\n                catch (e) {\n                    ctx.error(e);\n                }\n                if (!result)\n                    continue;\n                isDebug &&\n                    debugPluginTransform(timeFrom(start), plugin.name, prettifyUrl(id, root));\n                if (isObject$2(result)) {\n                    if (result.code !== undefined) {\n                        code = result.code;\n                        if (result.map) {\n                            if (isDebugSourcemapCombineFocused) {\n                                // @ts-expect-error inject plugin name for debug purpose\n                                result.map.name = plugin.name;\n                            }\n                            ctx.sourcemapChain.push(result.map);\n                        }\n                    }\n                    updateModuleInfo(id, result);\n                }\n                else {\n                    code = result;\n                }\n            }\n            return {\n                code,\n                map: ctx._getCombinedSourcemap()\n            };\n        },\n        async close() {\n            if (closed)\n                return;\n            const ctx = new Context();\n            await Promise.all(plugins.map((p) => p.buildEnd && p.buildEnd.call(ctx)));\n            await Promise.all(plugins.map((p) => p.closeBundle && p.closeBundle.call(ctx)));\n            closed = true;\n        }\n    };\n    return container;\n}\n\nconst { isMatch: isMatch$2, scan } = micromatch_1;\nfunction getAffectedGlobModules(file, server) {\n    const modules = [];\n    for (const [id, allGlobs] of server._importGlobMap) {\n        if (allGlobs.some((glob) => isMatch$2(file, glob)))\n            modules.push(...(server.moduleGraph.getModulesByFile(id) || []));\n    }\n    modules.forEach((i) => {\n        if (i?.file)\n            server.moduleGraph.onFileChange(i.file);\n    });\n    return modules;\n}\nfunction importGlobPlugin(config) {\n    let server;\n    return {\n        name: 'vite:import-glob',\n        configureServer(_server) {\n            server = _server;\n            server._importGlobMap.clear();\n        },\n        async transform(code, id) {\n            if (!code.includes('import.meta.glob'))\n                return;\n            const result = await transformGlobImport(code, id, config.root, (im) => this.resolve(im, id).then((i) => i?.id || im), config.experimental.importGlobRestoreExtension);\n            if (result) {\n                if (server) {\n                    const allGlobs = result.matches.map((i) => i.globsResolved);\n                    server._importGlobMap.set(id, allGlobs);\n                }\n                return transformStableResult(result.s, id, config);\n            }\n        }\n    };\n}\nconst importGlobRE = /\\bimport\\.meta\\.(glob|globEager|globEagerDefault)(?:<\\w+>)?\\s*\\(/g;\nconst knownOptions = {\n    as: 'string',\n    eager: 'boolean',\n    import: 'string',\n    exhaustive: 'boolean'\n};\nconst forceDefaultAs = ['raw', 'url'];\nasync function parseImportGlob(code, importer, root, resolveId) {\n    let cleanCode;\n    try {\n        cleanCode = stripLiteral(code);\n    }\n    catch (e) {\n        // skip invalid js code\n        return [];\n    }\n    const matches = Array.from(cleanCode.matchAll(importGlobRE));\n    const tasks = matches.map(async (match, index) => {\n        const type = match[1];\n        const start = match.index;\n        const err = (msg) => {\n            const e = new Error(`Invalid glob import syntax: ${msg}`);\n            e.pos = start;\n            return e;\n        };\n        let ast;\n        let lastTokenPos;\n        try {\n            ast = parseExpressionAt(code, start, {\n                ecmaVersion: 'latest',\n                sourceType: 'module',\n                ranges: true,\n                onToken: (token) => {\n                    lastTokenPos = token.end;\n                }\n            });\n        }\n        catch (e) {\n            const _e = e;\n            if (_e.message && _e.message.startsWith('Unterminated string constant'))\n                return undefined;\n            if (lastTokenPos == null || lastTokenPos <= start)\n                throw _e;\n            // tailing comma in object or array will make the parser think it's a comma operation\n            // we try to parse again removing the comma\n            try {\n                const statement = code.slice(start, lastTokenPos).replace(/[,\\s]*$/, '');\n                ast = parseExpressionAt(' '.repeat(start) + statement, // to keep the ast position\n                start, {\n                    ecmaVersion: 'latest',\n                    sourceType: 'module',\n                    ranges: true\n                });\n            }\n            catch {\n                throw _e;\n            }\n        }\n        if (ast.type === 'SequenceExpression')\n            ast = ast.expressions[0];\n        // immediate property access, call expression is nested\n        // import.meta.glob(...)['prop']\n        if (ast.type === 'MemberExpression')\n            ast = ast.object;\n        if (ast.type !== 'CallExpression')\n            throw err(`Expect CallExpression, got ${ast.type}`);\n        if (ast.arguments.length < 1 || ast.arguments.length > 2)\n            throw err(`Expected 1-2 arguments, but got ${ast.arguments.length}`);\n        const arg1 = ast.arguments[0];\n        const arg2 = ast.arguments[1];\n        const globs = [];\n        const validateLiteral = (element) => {\n            if (!element)\n                return;\n            if (element.type === 'Literal') {\n                if (typeof element.value !== 'string')\n                    throw err(`Expected glob to be a string, but got \"${typeof element.value}\"`);\n                globs.push(element.value);\n            }\n            else if (element.type === 'TemplateLiteral') {\n                if (element.expressions.length !== 0) {\n                    throw err(`Expected glob to be a string, but got dynamic template literal`);\n                }\n                globs.push(element.quasis[0].value.raw);\n            }\n            else {\n                throw err('Could only use literals');\n            }\n        };\n        if (arg1.type === 'ArrayExpression') {\n            for (const element of arg1.elements) {\n                validateLiteral(element);\n            }\n        }\n        else {\n            validateLiteral(arg1);\n        }\n        // arg2\n        const options = {};\n        if (arg2) {\n            if (arg2.type !== 'ObjectExpression')\n                throw err(`Expected the second argument o to be a object literal, but got \"${arg2.type}\"`);\n            for (const property of arg2.properties) {\n                if (property.type === 'SpreadElement' ||\n                    (property.key.type !== 'Identifier' &&\n                        property.key.type !== 'Literal'))\n                    throw err('Could only use literals');\n                const name = (property.key.name ||\n                    property.key.value);\n                if (name === 'query') {\n                    if (property.value.type === 'ObjectExpression') {\n                        const data = {};\n                        for (const prop of property.value.properties) {\n                            if (prop.type === 'SpreadElement' ||\n                                prop.key.type !== 'Identifier' ||\n                                prop.value.type !== 'Literal')\n                                throw err('Could only use literals');\n                            data[prop.key.name] = prop.value.value;\n                        }\n                        options.query = data;\n                    }\n                    else if (property.value.type === 'Literal') {\n                        if (typeof property.value.value !== 'string')\n                            throw err(`Expected query to be a string, but got \"${typeof property.value\n                                .value}\"`);\n                        options.query = property.value.value;\n                    }\n                    else {\n                        throw err('Could only use literals');\n                    }\n                    continue;\n                }\n                if (!(name in knownOptions))\n                    throw err(`Unknown options ${name}`);\n                if (property.value.type !== 'Literal')\n                    throw err('Could only use literals');\n                const valueType = typeof property.value.value;\n                if (valueType === 'undefined')\n                    continue;\n                if (valueType !== knownOptions[name])\n                    throw err(`Expected the type of option \"${name}\" to be \"${knownOptions[name]}\", but got \"${valueType}\"`);\n                options[name] = property.value.value;\n            }\n        }\n        if (options.as && forceDefaultAs.includes(options.as)) {\n            if (options.import &&\n                options.import !== 'default' &&\n                options.import !== '*')\n                throw err(`Option \"import\" can only be \"default\" or \"*\" when \"as\" is \"${options.as}\", but got \"${options.import}\"`);\n            options.import = options.import || 'default';\n        }\n        if (options.as && options.query)\n            throw err('Options \"as\" and \"query\" cannot be used together');\n        if (options.as)\n            options.query = options.as;\n        const end = ast.range[1];\n        const globsResolved = await Promise.all(globs.map((glob) => toAbsoluteGlob(glob, root, importer, resolveId)));\n        const isRelative = globs.every((i) => '.!'.includes(i[0]));\n        return {\n            match,\n            index,\n            globs,\n            globsResolved,\n            isRelative,\n            options,\n            type,\n            start,\n            end\n        };\n    });\n    return (await Promise.all(tasks)).filter(Boolean);\n}\nconst importPrefix = '__vite_glob_';\nconst { basename, dirname, relative, join } = posix$2;\n/**\n * @param optimizeExport for dynamicImportVar plugin don't need to optimize export.\n */\nasync function transformGlobImport(code, id, root, resolveId, restoreQueryExtension = false) {\n    id = slash$1(id);\n    root = slash$1(root);\n    const isVirtual = isVirtualModule(id);\n    const dir = isVirtual ? undefined : dirname(id);\n    const matches = await parseImportGlob(code, isVirtual ? undefined : id, root, resolveId);\n    const matchedFiles = new Set();\n    // TODO: backwards compatibility\n    matches.forEach((i) => {\n        if (i.type === 'globEager')\n            i.options.eager = true;\n        if (i.type === 'globEagerDefault') {\n            i.options.eager = true;\n            i.options.import = 'default';\n        }\n    });\n    if (!matches.length)\n        return null;\n    const s = new MagicString(code);\n    const staticImports = (await Promise.all(matches.map(async ({ globsResolved, isRelative, options, index, start, end }) => {\n        const cwd = getCommonBase(globsResolved) ?? root;\n        const files = (await out(globsResolved, {\n            cwd,\n            absolute: true,\n            dot: !!options.exhaustive,\n            ignore: options.exhaustive\n                ? []\n                : [join(cwd, '**/node_modules/**')]\n        }))\n            .filter((file) => file !== id)\n            .sort();\n        const objectProps = [];\n        const staticImports = [];\n        let query = !options.query\n            ? ''\n            : typeof options.query === 'string'\n                ? options.query\n                : stringifyQuery(options.query);\n        if (query && !query.startsWith('?'))\n            query = `?${query}`;\n        const resolvePaths = (file) => {\n            if (!dir) {\n                if (isRelative)\n                    throw new Error(\"In virtual modules, all globs must start with '/'\");\n                const filePath = `/${relative(root, file)}`;\n                return { filePath, importPath: filePath };\n            }\n            let importPath = relative(dir, file);\n            if (!importPath.startsWith('.'))\n                importPath = `./${importPath}`;\n            let filePath;\n            if (isRelative) {\n                filePath = importPath;\n            }\n            else {\n                filePath = relative(root, file);\n                if (!filePath.startsWith('.'))\n                    filePath = `/${filePath}`;\n            }\n            return { filePath, importPath };\n        };\n        files.forEach((file, i) => {\n            const paths = resolvePaths(file);\n            const filePath = paths.filePath;\n            let importPath = paths.importPath;\n            let importQuery = query;\n            if (importQuery && importQuery !== '?raw') {\n                const fileExtension = basename(file).split('.').slice(-1)[0];\n                if (fileExtension && restoreQueryExtension)\n                    importQuery = `${importQuery}&lang.${fileExtension}`;\n            }\n            importPath = `${importPath}${importQuery}`;\n            const importKey = options.import && options.import !== '*'\n                ? options.import\n                : undefined;\n            if (options.eager) {\n                const variableName = `${importPrefix}${index}_${i}`;\n                const expression = importKey\n                    ? `{ ${importKey} as ${variableName} }`\n                    : `* as ${variableName}`;\n                staticImports.push(`import ${expression} from ${JSON.stringify(importPath)}`);\n                objectProps.push(`${JSON.stringify(filePath)}: ${variableName}`);\n            }\n            else {\n                let importStatement = `import(${JSON.stringify(importPath)})`;\n                if (importKey)\n                    importStatement += `.then(m => m[${JSON.stringify(importKey)}])`;\n                objectProps.push(`${JSON.stringify(filePath)}: () => ${importStatement}`);\n            }\n        });\n        files.forEach((i) => matchedFiles.add(i));\n        const replacement = `/* #__PURE__ */ Object.assign({${objectProps.join(',')}})`;\n        s.overwrite(start, end, replacement);\n        return staticImports;\n    }))).flat();\n    if (staticImports.length)\n        s.prepend(`${staticImports.join(';')};`);\n    return {\n        s,\n        matches,\n        files: matchedFiles\n    };\n}\nasync function toAbsoluteGlob(glob, root, importer, resolveId) {\n    let pre = '';\n    if (glob.startsWith('!')) {\n        pre = '!';\n        glob = glob.slice(1);\n    }\n    const dir = importer ? dirname(importer) : root;\n    if (glob.startsWith('/'))\n        return pre + posix$2.join(root, glob.slice(1));\n    if (glob.startsWith('./'))\n        return pre + posix$2.join(dir, glob.slice(2));\n    if (glob.startsWith('../'))\n        return pre + posix$2.join(dir, glob);\n    if (glob.startsWith('**'))\n        return pre + glob;\n    const resolved = normalizePath$3((await resolveId(glob, importer)) || glob);\n    if (isAbsolute$2(resolved))\n        return pre + resolved;\n    throw new Error(`Invalid glob: \"${glob}\" (resolved: \"${resolved}\"). It must start with '/' or './'`);\n}\nfunction getCommonBase(globsResolved) {\n    const bases = globsResolved\n        .filter((g) => !g.startsWith('!'))\n        .map((glob) => {\n        let { base } = scan(glob);\n        // `scan('a/foo.js')` returns `base: 'a/foo.js'`\n        if (posix$2.basename(base).includes('.'))\n            base = posix$2.dirname(base);\n        return base;\n    });\n    if (!bases.length)\n        return null;\n    let commonAncestor = '';\n    const dirS = bases[0].split('/');\n    for (let i = 0; i < dirS.length; i++) {\n        const candidate = dirS.slice(0, i + 1).join('/');\n        if (bases.every((base) => base.startsWith(candidate)))\n            commonAncestor = candidate;\n        else\n            break;\n    }\n    if (!commonAncestor)\n        commonAncestor = '/';\n    return commonAncestor;\n}\nfunction isVirtualModule(id) {\n    // https://vitejs.dev/guide/api-plugin.html#virtual-modules-convention\n    return id.startsWith('virtual:') || id.startsWith('\\0') || !id.includes('/');\n}\n\nconst debug$b = createDebugger('vite:deps');\nconst htmlTypesRE = /\\.(html|vue|svelte|astro)$/;\n// A simple regex to detect import sources. This is only used on\n// <script lang=\"ts\"> blocks in vue (setup only) or svelte files, since\n// seemingly unused imports are dropped by esbuild when transpiling TS which\n// prevents it from crawling further.\n// We can't use es-module-lexer because it can't handle TS, and don't want to\n// use Acorn because it's slow. Luckily this doesn't have to be bullet proof\n// since even missed imports can be caught at runtime, and false positives will\n// simply be ignored.\nconst importsRE = /(?<!\\/\\/.*)(?<=^|;|\\*\\/)\\s*import(?!\\s+type)(?:[\\w*{}\\n\\r\\t, ]+from\\s*)?\\s*(\"[^\"]+\"|'[^']+')\\s*(?=$|;|\\/\\/|\\/\\*)/gm;\nasync function scanImports(config) {\n    // Only used to scan non-ssr code\n    const start = performance.now();\n    let entries = [];\n    const explicitEntryPatterns = config.optimizeDeps.entries;\n    const buildInput = config.build.rollupOptions?.input;\n    if (explicitEntryPatterns) {\n        entries = await globEntries(explicitEntryPatterns, config);\n    }\n    else if (buildInput) {\n        const resolvePath = (p) => path$n.resolve(config.root, p);\n        if (typeof buildInput === 'string') {\n            entries = [resolvePath(buildInput)];\n        }\n        else if (Array.isArray(buildInput)) {\n            entries = buildInput.map(resolvePath);\n        }\n        else if (isObject$2(buildInput)) {\n            entries = Object.values(buildInput).map(resolvePath);\n        }\n        else {\n            throw new Error('invalid rollupOptions.input value.');\n        }\n    }\n    else {\n        entries = await globEntries('**/*.html', config);\n    }\n    // Non-supported entry file types and virtual files should not be scanned for\n    // dependencies.\n    entries = entries.filter((entry) => isScannable(entry) && fs$l.existsSync(entry));\n    if (!entries.length) {\n        if (!explicitEntryPatterns && !config.optimizeDeps.include) {\n            config.logger.warn(picocolors.exports.yellow('(!) Could not auto-determine entry point from rollupOptions or html files ' +\n                'and there are no explicit optimizeDeps.include patterns. ' +\n                'Skipping dependency pre-bundling.'));\n        }\n        return { deps: {}, missing: {} };\n    }\n    else {\n        debug$b(`Crawling dependencies using entries:\\n  ${entries.join('\\n  ')}`);\n    }\n    const deps = {};\n    const missing = {};\n    const container = await createPluginContainer(config);\n    const plugin = esbuildScanPlugin(config, container, deps, missing, entries);\n    const { plugins = [], ...esbuildOptions } = config.optimizeDeps?.esbuildOptions ?? {};\n    await Promise.all(entries.map((entry) => build$3({\n        absWorkingDir: process.cwd(),\n        write: false,\n        entryPoints: [entry],\n        bundle: true,\n        format: 'esm',\n        logLevel: 'error',\n        plugins: [...plugins, plugin],\n        ...esbuildOptions\n    })));\n    debug$b(`Scan completed in ${(performance.now() - start).toFixed(2)}ms:`, deps);\n    return {\n        // Ensure a fixed order so hashes are stable and improve logs\n        deps: orderedDependencies(deps),\n        missing\n    };\n}\nfunction orderedDependencies(deps) {\n    const depsList = Object.entries(deps);\n    // Ensure the same browserHash for the same set of dependencies\n    depsList.sort((a, b) => a[0].localeCompare(b[0]));\n    return Object.fromEntries(depsList);\n}\nfunction globEntries(pattern, config) {\n    return out(pattern, {\n        cwd: config.root,\n        ignore: [\n            '**/node_modules/**',\n            `**/${config.build.outDir}/**`,\n            // if there aren't explicit entries, also ignore other common folders\n            ...(config.optimizeDeps.entries\n                ? []\n                : [`**/__tests__/**`, `**/coverage/**`])\n        ],\n        absolute: true,\n        suppressErrors: true // suppress EACCES errors\n    });\n}\nconst scriptModuleRE = /(<script\\b[^>]*type\\s*=\\s*(?:\"module\"|'module')[^>]*>)(.*?)<\\/script>/gims;\nconst scriptRE = /(<script\\b(?:\\s[^>]*>|>))(.*?)<\\/script>/gims;\nconst commentRE$1 = /<!--.*?-->/gs;\nconst srcRE = /\\bsrc\\s*=\\s*(?:\"([^\"]+)\"|'([^']+)'|([^\\s'\">]+))/im;\nconst typeRE = /\\btype\\s*=\\s*(?:\"([^\"]+)\"|'([^']+)'|([^\\s'\">]+))/im;\nconst langRE = /\\blang\\s*=\\s*(?:\"([^\"]+)\"|'([^']+)'|([^\\s'\">]+))/im;\nconst contextRE = /\\bcontext\\s*=\\s*(?:\"([^\"]+)\"|'([^']+)'|([^\\s'\">]+))/im;\nfunction esbuildScanPlugin(config, container, depImports, missing, entries) {\n    const seen = new Map();\n    const resolve = async (id, importer, options) => {\n        const key = id + (importer && path$n.dirname(importer));\n        if (seen.has(key)) {\n            return seen.get(key);\n        }\n        const resolved = await container.resolveId(id, importer && normalizePath$3(importer), {\n            ...options,\n            scan: true\n        });\n        const res = resolved?.id;\n        seen.set(key, res);\n        return res;\n    };\n    const include = config.optimizeDeps?.include;\n    const exclude = [\n        ...(config.optimizeDeps?.exclude || []),\n        '@vite/client',\n        '@vite/env'\n    ];\n    const externalUnlessEntry = ({ path }) => ({\n        path,\n        external: !entries.includes(path)\n    });\n    return {\n        name: 'vite:dep-scan',\n        setup(build) {\n            const scripts = {};\n            // external urls\n            build.onResolve({ filter: externalRE }, ({ path }) => ({\n                path,\n                external: true\n            }));\n            // data urls\n            build.onResolve({ filter: dataUrlRE }, ({ path }) => ({\n                path,\n                external: true\n            }));\n            // local scripts (`<script>` in Svelte and `<script setup>` in Vue)\n            build.onResolve({ filter: virtualModuleRE }, ({ path }) => {\n                return {\n                    // strip prefix to get valid filesystem path so esbuild can resolve imports in the file\n                    path: path.replace(virtualModulePrefix, ''),\n                    namespace: 'script'\n                };\n            });\n            build.onLoad({ filter: /.*/, namespace: 'script' }, ({ path }) => {\n                return scripts[path];\n            });\n            // html types: extract script contents -----------------------------------\n            build.onResolve({ filter: htmlTypesRE }, async ({ path, importer }) => {\n                const resolved = await resolve(path, importer);\n                if (!resolved)\n                    return;\n                // It is possible for the scanner to scan html types in node_modules.\n                // If we can optimize this html type, skip it so it's handled by the\n                // bare import resolve, and recorded as optimization dep.\n                if (resolved.includes('node_modules') &&\n                    isOptimizable(resolved, config.optimizeDeps))\n                    return;\n                return {\n                    path: resolved,\n                    namespace: 'html'\n                };\n            });\n            // extract scripts inside HTML-like files and treat it as a js module\n            build.onLoad({ filter: htmlTypesRE, namespace: 'html' }, async ({ path }) => {\n                let raw = fs$l.readFileSync(path, 'utf-8');\n                // Avoid matching the content of the comment\n                raw = raw.replace(commentRE$1, '<!---->');\n                const isHtml = path.endsWith('.html');\n                const regex = isHtml ? scriptModuleRE : scriptRE;\n                regex.lastIndex = 0;\n                let js = '';\n                let scriptId = 0;\n                let match;\n                while ((match = regex.exec(raw))) {\n                    const [, openTag, content] = match;\n                    const typeMatch = openTag.match(typeRE);\n                    const type = typeMatch && (typeMatch[1] || typeMatch[2] || typeMatch[3]);\n                    const langMatch = openTag.match(langRE);\n                    const lang = langMatch && (langMatch[1] || langMatch[2] || langMatch[3]);\n                    // skip type=\"application/ld+json\" and other non-JS types\n                    if (type &&\n                        !(type.includes('javascript') ||\n                            type.includes('ecmascript') ||\n                            type === 'module')) {\n                        continue;\n                    }\n                    let loader = 'js';\n                    if (lang === 'ts' || lang === 'tsx' || lang === 'jsx') {\n                        loader = lang;\n                    }\n                    else if (path.endsWith('.astro')) {\n                        loader = 'ts';\n                    }\n                    const srcMatch = openTag.match(srcRE);\n                    if (srcMatch) {\n                        const src = srcMatch[1] || srcMatch[2] || srcMatch[3];\n                        js += `import ${JSON.stringify(src)}\\n`;\n                    }\n                    else if (content.trim()) {\n                        // The reason why virtual modules are needed:\n                        // 1. There can be module scripts (`<script context=\"module\">` in Svelte and `<script>` in Vue)\n                        // or local scripts (`<script>` in Svelte and `<script setup>` in Vue)\n                        // 2. There can be multiple module scripts in html\n                        // We need to handle these separately in case variable names are reused between them\n                        // append imports in TS to prevent esbuild from removing them\n                        // since they may be used in the template\n                        const contents = content +\n                            (loader.startsWith('ts') ? extractImportPaths(content) : '');\n                        const key = `${path}?id=${scriptId++}`;\n                        if (contents.includes('import.meta.glob')) {\n                            let transpiledContents;\n                            // transpile because `transformGlobImport` only expects js\n                            if (loader !== 'js') {\n                                transpiledContents = (await transform$2(contents, { loader }))\n                                    .code;\n                            }\n                            else {\n                                transpiledContents = contents;\n                            }\n                            scripts[key] = {\n                                loader: 'js',\n                                contents: (await transformGlobImport(transpiledContents, path, config.root, resolve))?.s.toString() || transpiledContents,\n                                pluginData: {\n                                    htmlType: { loader }\n                                }\n                            };\n                        }\n                        else {\n                            scripts[key] = {\n                                loader,\n                                contents,\n                                pluginData: {\n                                    htmlType: { loader }\n                                }\n                            };\n                        }\n                        const virtualModulePath = JSON.stringify(virtualModulePrefix + key);\n                        const contextMatch = openTag.match(contextRE);\n                        const context = contextMatch &&\n                            (contextMatch[1] || contextMatch[2] || contextMatch[3]);\n                        // Especially for Svelte files, exports in <script context=\"module\"> means module exports,\n                        // exports in <script> means component props. To avoid having two same export name from the\n                        // star exports, we need to ignore exports in <script>\n                        if (path.endsWith('.svelte') && context !== 'module') {\n                            js += `import ${virtualModulePath}\\n`;\n                        }\n                        else {\n                            js += `export * from ${virtualModulePath}\\n`;\n                        }\n                    }\n                }\n                // This will trigger incorrectly if `export default` is contained\n                // anywhere in a string. Svelte and Astro files can't have\n                // `export default` as code so we know if it's encountered it's a\n                // false positive (e.g. contained in a string)\n                if (!path.endsWith('.vue') || !js.includes('export default')) {\n                    js += '\\nexport default {}';\n                }\n                return {\n                    loader: 'js',\n                    contents: js\n                };\n            });\n            // bare imports: record and externalize ----------------------------------\n            build.onResolve({\n                // avoid matching windows volume\n                filter: /^[\\w@][^:]/\n            }, async ({ path: id, importer, pluginData }) => {\n                if (moduleListContains(exclude, id)) {\n                    return externalUnlessEntry({ path: id });\n                }\n                if (depImports[id]) {\n                    return externalUnlessEntry({ path: id });\n                }\n                const resolved = await resolve(id, importer, {\n                    custom: {\n                        depScan: { loader: pluginData?.htmlType?.loader }\n                    }\n                });\n                if (resolved) {\n                    if (shouldExternalizeDep(resolved, id)) {\n                        return externalUnlessEntry({ path: id });\n                    }\n                    if (resolved.includes('node_modules') || include?.includes(id)) {\n                        // dependency or forced included, externalize and stop crawling\n                        if (isOptimizable(resolved, config.optimizeDeps)) {\n                            depImports[id] = resolved;\n                        }\n                        return externalUnlessEntry({ path: id });\n                    }\n                    else if (isScannable(resolved)) {\n                        const namespace = htmlTypesRE.test(resolved) ? 'html' : undefined;\n                        // linked package, keep crawling\n                        return {\n                            path: path$n.resolve(resolved),\n                            namespace\n                        };\n                    }\n                    else {\n                        return externalUnlessEntry({ path: id });\n                    }\n                }\n                else {\n                    missing[id] = normalizePath$3(importer);\n                }\n            });\n            // Externalized file types -----------------------------------------------\n            // these are done on raw ids using esbuild's native regex filter so it\n            // should be faster than doing it in the catch-all via js\n            // they are done after the bare import resolve because a package name\n            // may end with these extensions\n            // css & json & wasm\n            build.onResolve({\n                filter: /\\.(css|less|sass|scss|styl|stylus|pcss|postcss|json|wasm)$/\n            }, externalUnlessEntry);\n            // known asset types\n            build.onResolve({\n                filter: new RegExp(`\\\\.(${KNOWN_ASSET_TYPES.join('|')})$`)\n            }, externalUnlessEntry);\n            // known vite query types: ?worker, ?raw\n            build.onResolve({ filter: SPECIAL_QUERY_RE }, ({ path }) => ({\n                path,\n                external: true\n            }));\n            // catch all -------------------------------------------------------------\n            build.onResolve({\n                filter: /.*/\n            }, async ({ path: id, importer, pluginData }) => {\n                // use vite resolver to support urls and omitted extensions\n                const resolved = await resolve(id, importer, {\n                    custom: {\n                        depScan: { loader: pluginData?.htmlType?.loader }\n                    }\n                });\n                if (resolved) {\n                    if (shouldExternalizeDep(resolved, id) || !isScannable(resolved)) {\n                        return externalUnlessEntry({ path: id });\n                    }\n                    const namespace = htmlTypesRE.test(resolved) ? 'html' : undefined;\n                    return {\n                        path: path$n.resolve(cleanUrl(resolved)),\n                        namespace\n                    };\n                }\n                else {\n                    // resolve failed... probably unsupported type\n                    return externalUnlessEntry({ path: id });\n                }\n            });\n            // for jsx/tsx, we need to access the content and check for\n            // presence of import.meta.glob, since it results in import relationships\n            // but isn't crawled by esbuild.\n            build.onLoad({ filter: JS_TYPES_RE }, ({ path: id }) => {\n                let ext = path$n.extname(id).slice(1);\n                if (ext === 'mjs')\n                    ext = 'js';\n                let contents = fs$l.readFileSync(id, 'utf-8');\n                if (ext.endsWith('x') && config.esbuild && config.esbuild.jsxInject) {\n                    contents = config.esbuild.jsxInject + `\\n` + contents;\n                }\n                const loader = config.optimizeDeps?.esbuildOptions?.loader?.[`.${ext}`] ||\n                    ext;\n                return {\n                    loader,\n                    contents\n                };\n            });\n        }\n    };\n}\n/**\n * when using TS + (Vue + `<script setup>`) or Svelte, imports may seem\n * unused to esbuild and dropped in the build output, which prevents\n * esbuild from crawling further.\n * the solution is to add `import 'x'` for every source to force\n * esbuild to keep crawling due to potential side effects.\n */\nfunction extractImportPaths(code) {\n    // empty singleline & multiline comments to avoid matching comments\n    code = code\n        .replace(multilineCommentsRE$1, '/* */')\n        .replace(singlelineCommentsRE$1, '');\n    let js = '';\n    let m;\n    while ((m = importsRE.exec(code)) != null) {\n        // This is necessary to avoid infinite loops with zero-width matches\n        if (m.index === importsRE.lastIndex) {\n            importsRE.lastIndex++;\n        }\n        js += `\\nimport ${m[1]}`;\n    }\n    return js;\n}\nfunction shouldExternalizeDep(resolvedId, rawId) {\n    // not a valid file path\n    if (!path$n.isAbsolute(resolvedId)) {\n        return true;\n    }\n    // virtual id\n    if (resolvedId === rawId || resolvedId.includes('\\0')) {\n        return true;\n    }\n    return false;\n}\nfunction isScannable(id) {\n    return JS_TYPES_RE.test(id) || htmlTypesRE.test(id);\n}\n\nconst isDebugEnabled$1 = _debug('vite:deps').enabled;\n/**\n * The amount to wait for requests to register newly found dependencies before triggering\n * a re-bundle + page reload\n */\nconst debounceMs = 100;\nconst depsOptimizerMap = new WeakMap();\nconst devSsrDepsOptimizerMap = new WeakMap();\nfunction getDepsOptimizer(config, ssr) {\n    // Workers compilation shares the DepsOptimizer from the main build\n    const isDevSsr = ssr && config.command !== 'build';\n    return (isDevSsr ? devSsrDepsOptimizerMap : depsOptimizerMap).get(config.mainConfig || config);\n}\nasync function initDepsOptimizer(config, server) {\n    // Non Dev SSR Optimizer\n    const ssr = config.command === 'build' && !!config.build.ssr;\n    if (!getDepsOptimizer(config, ssr)) {\n        await createDepsOptimizer(config, server);\n    }\n}\nlet creatingDevSsrOptimizer;\nasync function initDevSsrDepsOptimizer(config, server) {\n    if (getDepsOptimizer(config, true)) {\n        // ssr\n        return;\n    }\n    if (creatingDevSsrOptimizer) {\n        return creatingDevSsrOptimizer;\n    }\n    creatingDevSsrOptimizer = (async function () {\n        // Important: scanning needs to be done before starting the SSR dev optimizer\n        // If ssrLoadModule is called before server.listen(), the main deps optimizer\n        // will not be yet created\n        const ssr = false;\n        if (!getDepsOptimizer(config, ssr)) {\n            await initDepsOptimizer(config, server);\n        }\n        await getDepsOptimizer(config, ssr).scanProcessing;\n        await createDevSsrDepsOptimizer(config);\n        creatingDevSsrOptimizer = undefined;\n    })();\n    return await creatingDevSsrOptimizer;\n}\nasync function createDepsOptimizer(config, server) {\n    const { logger } = config;\n    const isBuild = config.command === 'build';\n    const ssr = isBuild && !!config.build.ssr; // safe as Dev SSR don't use this optimizer\n    const sessionTimestamp = Date.now().toString();\n    const cachedMetadata = loadCachedDepOptimizationMetadata(config, ssr);\n    let handle;\n    let metadata = cachedMetadata || initDepsOptimizerMetadata(config, ssr, sessionTimestamp);\n    const depsOptimizer = {\n        metadata,\n        registerMissingImport,\n        run: () => debouncedProcessing(0),\n        isOptimizedDepFile: (id) => isOptimizedDepFile(id, config),\n        isOptimizedDepUrl: createIsOptimizedDepUrl(config),\n        getOptimizedDepId: (depInfo) => isBuild ? depInfo.file : `${depInfo.file}?v=${depInfo.browserHash}`,\n        registerWorkersSource,\n        delayDepsOptimizerUntil,\n        resetRegisteredIds,\n        ensureFirstRun,\n        options: getDepOptimizationConfig(config, ssr)\n    };\n    depsOptimizerMap.set(config, depsOptimizer);\n    let newDepsDiscovered = false;\n    let newDepsToLog = [];\n    let newDepsToLogHandle;\n    const logNewlyDiscoveredDeps = () => {\n        if (newDepsToLog.length) {\n            config.logger.info(picocolors.exports.green(`\u2728 new dependencies optimized: ${depsLogString(newDepsToLog)}`), {\n                timestamp: true\n            });\n            newDepsToLog = [];\n        }\n    };\n    let depOptimizationProcessing = newDepOptimizationProcessing();\n    let depOptimizationProcessingQueue = [];\n    const resolveEnqueuedProcessingPromises = () => {\n        // Resolve all the processings (including the ones which were delayed)\n        for (const processing of depOptimizationProcessingQueue) {\n            processing.resolve();\n        }\n        depOptimizationProcessingQueue = [];\n    };\n    let enqueuedRerun;\n    let currentlyProcessing = false;\n    // If there wasn't a cache or it is outdated, we need to prepare a first run\n    let firstRunCalled = !!cachedMetadata;\n    let postScanOptimizationResult;\n    if (!cachedMetadata) {\n        // Enter processing state until crawl of static imports ends\n        currentlyProcessing = true;\n        // Initialize discovered deps with manually added optimizeDeps.include info\n        const deps = {};\n        await addManuallyIncludedOptimizeDeps(deps, config, ssr);\n        const discovered = await toDiscoveredDependencies(config, deps, ssr, sessionTimestamp);\n        for (const depInfo of Object.values(discovered)) {\n            addOptimizedDepInfo(metadata, 'discovered', {\n                ...depInfo,\n                processing: depOptimizationProcessing.promise\n            });\n            newDepsDiscovered = true;\n        }\n        if (!isBuild) {\n            // Important, the scanner is dev only\n            const scanPhaseProcessing = newDepOptimizationProcessing();\n            depsOptimizer.scanProcessing = scanPhaseProcessing.promise;\n            // Ensure server listen is called before the scanner\n            setTimeout(async () => {\n                try {\n                    debuggerViteDeps(picocolors.exports.green(`scanning for dependencies...`));\n                    const deps = await discoverProjectDependencies(config);\n                    debuggerViteDeps(picocolors.exports.green(Object.keys(deps).length > 0\n                        ? `dependencies found by scanner: ${depsLogString(Object.keys(deps))}`\n                        : `no dependencies found by scanner`));\n                    // Add these dependencies to the discovered list, as these are currently\n                    // used by the preAliasPlugin to support aliased and optimized deps.\n                    // This is also used by the CJS externalization heuristics in legacy mode\n                    for (const id of Object.keys(deps)) {\n                        if (!metadata.discovered[id]) {\n                            addMissingDep(id, deps[id]);\n                        }\n                    }\n                    if (!isBuild) {\n                        const knownDeps = prepareKnownDeps();\n                        // For dev, we run the scanner and the first optimization\n                        // run on the background, but we wait until crawling has ended\n                        // to decide if we send this result to the browser or we need to\n                        // do another optimize step\n                        postScanOptimizationResult = runOptimizeDeps(config, knownDeps);\n                    }\n                }\n                catch (e) {\n                    logger.error(e.message);\n                }\n                finally {\n                    scanPhaseProcessing.resolve();\n                    depsOptimizer.scanProcessing = undefined;\n                }\n            }, 0);\n        }\n    }\n    async function startNextDiscoveredBatch() {\n        newDepsDiscovered = false;\n        // Add the current depOptimizationProcessing to the queue, these\n        // promises are going to be resolved once a rerun is committed\n        depOptimizationProcessingQueue.push(depOptimizationProcessing);\n        // Create a new promise for the next rerun, discovered missing\n        // dependencies will be assigned this promise from this point\n        depOptimizationProcessing = newDepOptimizationProcessing();\n    }\n    async function optimizeNewDeps() {\n        // a successful completion of the optimizeDeps rerun will end up\n        // creating new bundled version of all current and discovered deps\n        // in the cache dir and a new metadata info object assigned\n        // to _metadata. A fullReload is only issued if the previous bundled\n        // dependencies have changed.\n        // if the rerun fails, _metadata remains untouched, current discovered\n        // deps are cleaned, and a fullReload is issued\n        // All deps, previous known and newly discovered are rebundled,\n        // respect insertion order to keep the metadata file stable\n        const knownDeps = prepareKnownDeps();\n        startNextDiscoveredBatch();\n        return await runOptimizeDeps(config, knownDeps);\n    }\n    function prepareKnownDeps() {\n        const knownDeps = {};\n        // Clone optimized info objects, fileHash, browserHash may be changed for them\n        for (const dep of Object.keys(metadata.optimized)) {\n            knownDeps[dep] = { ...metadata.optimized[dep] };\n        }\n        for (const dep of Object.keys(metadata.discovered)) {\n            // Clone the discovered info discarding its processing promise\n            const { processing, ...info } = metadata.discovered[dep];\n            knownDeps[dep] = info;\n        }\n        return knownDeps;\n    }\n    async function runOptimizer(preRunResult) {\n        const isRerun = firstRunCalled;\n        firstRunCalled = true;\n        // Ensure that rerun is called sequentially\n        enqueuedRerun = undefined;\n        // Ensure that a rerun will not be issued for current discovered deps\n        if (handle)\n            clearTimeout(handle);\n        if (Object.keys(metadata.discovered).length === 0) {\n            currentlyProcessing = false;\n            return;\n        }\n        currentlyProcessing = true;\n        try {\n            const processingResult = preRunResult ?? (await optimizeNewDeps());\n            const newData = processingResult.metadata;\n            const needsInteropMismatch = findInteropMismatches(metadata.discovered, newData.optimized);\n            // After a re-optimization, if the internal bundled chunks change a full page reload\n            // is required. If the files are stable, we can avoid the reload that is expensive\n            // for large applications. Comparing their fileHash we can find out if it is safe to\n            // keep the current browser state.\n            const needsReload = needsInteropMismatch.length > 0 ||\n                metadata.hash !== newData.hash ||\n                Object.keys(metadata.optimized).some((dep) => {\n                    return (metadata.optimized[dep].fileHash !== newData.optimized[dep].fileHash);\n                });\n            const commitProcessing = async () => {\n                await processingResult.commit();\n                // While optimizeDeps is running, new missing deps may be discovered,\n                // in which case they will keep being added to metadata.discovered\n                for (const id in metadata.discovered) {\n                    if (!newData.optimized[id]) {\n                        addOptimizedDepInfo(newData, 'discovered', metadata.discovered[id]);\n                    }\n                }\n                // If we don't reload the page, we need to keep browserHash stable\n                if (!needsReload) {\n                    newData.browserHash = metadata.browserHash;\n                    for (const dep in newData.chunks) {\n                        newData.chunks[dep].browserHash = metadata.browserHash;\n                    }\n                    for (const dep in newData.optimized) {\n                        newData.optimized[dep].browserHash = (metadata.optimized[dep] || metadata.discovered[dep]).browserHash;\n                    }\n                }\n                // Commit hash and needsInterop changes to the discovered deps info\n                // object. Allow for code to await for the discovered processing promise\n                // and use the information in the same object\n                for (const o in newData.optimized) {\n                    const discovered = metadata.discovered[o];\n                    if (discovered) {\n                        const optimized = newData.optimized[o];\n                        discovered.browserHash = optimized.browserHash;\n                        discovered.fileHash = optimized.fileHash;\n                        discovered.needsInterop = optimized.needsInterop;\n                        discovered.processing = undefined;\n                    }\n                }\n                if (isRerun) {\n                    newDepsToLog.push(...Object.keys(newData.optimized).filter((dep) => !metadata.optimized[dep]));\n                }\n                metadata = depsOptimizer.metadata = newData;\n                resolveEnqueuedProcessingPromises();\n            };\n            if (!needsReload) {\n                await commitProcessing();\n                if (!isDebugEnabled$1) {\n                    if (newDepsToLogHandle)\n                        clearTimeout(newDepsToLogHandle);\n                    newDepsToLogHandle = setTimeout(() => {\n                        newDepsToLogHandle = undefined;\n                        logNewlyDiscoveredDeps();\n                    }, 2 * debounceMs);\n                }\n                else {\n                    debuggerViteDeps(picocolors.exports.green(`\u2728 ${!isRerun\n                        ? `dependencies optimized`\n                        : `optimized dependencies unchanged`}`));\n                }\n            }\n            else {\n                if (newDepsDiscovered) {\n                    // There are newly discovered deps, and another rerun is about to be\n                    // executed. Avoid the current full reload discarding this rerun result\n                    // We don't resolve the processing promise, as they will be resolved\n                    // once a rerun is committed\n                    processingResult.cancel();\n                    debuggerViteDeps(picocolors.exports.green(`\u2728 delaying reload as new dependencies have been found...`));\n                }\n                else {\n                    await commitProcessing();\n                    if (!isDebugEnabled$1) {\n                        if (newDepsToLogHandle)\n                            clearTimeout(newDepsToLogHandle);\n                        newDepsToLogHandle = undefined;\n                        logNewlyDiscoveredDeps();\n                    }\n                    logger.info(picocolors.exports.green(`\u2728 optimized dependencies changed. reloading`), {\n                        timestamp: true\n                    });\n                    if (needsInteropMismatch.length > 0) {\n                        config.logger.warn(`Mixed ESM and CJS detected in ${picocolors.exports.yellow(needsInteropMismatch.join(', '))}, add ${needsInteropMismatch.length === 1 ? 'it' : 'them'} to optimizeDeps.needsInterop to speed up cold start`, {\n                            timestamp: true\n                        });\n                    }\n                    fullReload();\n                }\n            }\n        }\n        catch (e) {\n            logger.error(picocolors.exports.red(`error while updating dependencies:\\n${e.stack}`), { timestamp: true, error: e });\n            resolveEnqueuedProcessingPromises();\n            // Reset missing deps, let the server rediscover the dependencies\n            metadata.discovered = {};\n        }\n        currentlyProcessing = false;\n        // @ts-ignore\n        enqueuedRerun?.();\n    }\n    function fullReload() {\n        if (server) {\n            // Cached transform results have stale imports (resolved to\n            // old locations) so they need to be invalidated before the page is\n            // reloaded.\n            server.moduleGraph.invalidateAll();\n            server.ws.send({\n                type: 'full-reload',\n                path: '*'\n            });\n        }\n    }\n    async function rerun() {\n        // debounce time to wait for new missing deps finished, issue a new\n        // optimization of deps (both old and newly found) once the previous\n        // optimizeDeps processing is finished\n        const deps = Object.keys(metadata.discovered);\n        const depsString = depsLogString(deps);\n        debuggerViteDeps(picocolors.exports.green(`new dependencies found: ${depsString}`));\n        runOptimizer();\n    }\n    function getDiscoveredBrowserHash(hash, deps, missing) {\n        return getHash(hash + JSON.stringify(deps) + JSON.stringify(missing) + sessionTimestamp);\n    }\n    function registerMissingImport(id, resolved) {\n        const optimized = metadata.optimized[id];\n        if (optimized) {\n            return optimized;\n        }\n        const chunk = metadata.chunks[id];\n        if (chunk) {\n            return chunk;\n        }\n        let missing = metadata.discovered[id];\n        if (missing) {\n            // We are already discover this dependency\n            // It will be processed in the next rerun call\n            return missing;\n        }\n        missing = addMissingDep(id, resolved);\n        // Until the first optimize run is called, avoid triggering processing\n        // We'll wait until the user codebase is eagerly processed by Vite so\n        // we can get a list of every missing dependency before giving to the\n        // browser a dependency that may be outdated, thus avoiding full page reloads\n        if (firstRunCalled) {\n            // Debounced rerun, let other missing dependencies be discovered before\n            // the running next optimizeDeps\n            debouncedProcessing();\n        }\n        // Return the path for the optimized bundle, this path is known before\n        // esbuild is run to generate the pre-bundle\n        return missing;\n    }\n    function addMissingDep(id, resolved) {\n        newDepsDiscovered = true;\n        return addOptimizedDepInfo(metadata, 'discovered', {\n            id,\n            file: getOptimizedDepPath(id, config, ssr),\n            src: resolved,\n            // Assing a browserHash to this missing dependency that is unique to\n            // the current state of known + missing deps. If its optimizeDeps run\n            // doesn't alter the bundled files of previous known dependencies,\n            // we don't need a full reload and this browserHash will be kept\n            browserHash: getDiscoveredBrowserHash(metadata.hash, depsFromOptimizedDepInfo(metadata.optimized), depsFromOptimizedDepInfo(metadata.discovered)),\n            // loading of this pre-bundled dep needs to await for its processing\n            // promise to be resolved\n            processing: depOptimizationProcessing.promise,\n            exportsData: extractExportsData(resolved, config, ssr)\n        });\n    }\n    function debouncedProcessing(timeout = debounceMs) {\n        if (!newDepsDiscovered) {\n            return;\n        }\n        // Debounced rerun, let other missing dependencies be discovered before\n        // the running next optimizeDeps\n        enqueuedRerun = undefined;\n        if (handle)\n            clearTimeout(handle);\n        if (newDepsToLogHandle)\n            clearTimeout(newDepsToLogHandle);\n        newDepsToLogHandle = undefined;\n        handle = setTimeout(() => {\n            handle = undefined;\n            enqueuedRerun = rerun;\n            if (!currentlyProcessing) {\n                enqueuedRerun();\n            }\n        }, timeout);\n    }\n    async function onCrawlEnd() {\n        debuggerViteDeps(picocolors.exports.green(`\u2728 static imports crawl ended`));\n        if (firstRunCalled) {\n            return;\n        }\n        currentlyProcessing = false;\n        const crawlDeps = Object.keys(metadata.discovered);\n        // Await for the scan+optimize step running in the background\n        // It normally should be over by the time crawling of user code ended\n        await depsOptimizer.scanProcessing;\n        if (!isBuild && postScanOptimizationResult) {\n            const result = await postScanOptimizationResult;\n            postScanOptimizationResult = undefined;\n            const scanDeps = Object.keys(result.metadata.optimized);\n            if (scanDeps.length === 0 && crawlDeps.length === 0) {\n                debuggerViteDeps(picocolors.exports.green(`\u2728 no dependencies found by the scanner or crawling static imports`));\n                result.cancel();\n                firstRunCalled = true;\n                return;\n            }\n            const needsInteropMismatch = findInteropMismatches(metadata.discovered, result.metadata.optimized);\n            const scannerMissedDeps = crawlDeps.some((dep) => !scanDeps.includes(dep));\n            const outdatedResult = needsInteropMismatch.length > 0 || scannerMissedDeps;\n            if (outdatedResult) {\n                // Drop this scan result, and perform a new optimization to avoid a full reload\n                result.cancel();\n                // Add deps found by the scanner to the discovered deps while crawling\n                for (const dep of scanDeps) {\n                    if (!crawlDeps.includes(dep)) {\n                        addMissingDep(dep, result.metadata.optimized[dep].src);\n                    }\n                }\n                if (scannerMissedDeps) {\n                    debuggerViteDeps(picocolors.exports.yellow(`\u2728 new dependencies were found while crawling that weren't detected by the scanner`));\n                }\n                debuggerViteDeps(picocolors.exports.green(`\u2728 re-running optimizer`));\n                debouncedProcessing(0);\n            }\n            else {\n                debuggerViteDeps(picocolors.exports.green(`\u2728 using post-scan optimizer result, the scanner found every used dependency`));\n                startNextDiscoveredBatch();\n                runOptimizer(result);\n            }\n        }\n        else {\n            if (crawlDeps.length === 0) {\n                debuggerViteDeps(picocolors.exports.green(`\u2728 no dependencies found while crawling the static imports`));\n                firstRunCalled = true;\n            }\n            else {\n                // queue the first optimizer run\n                debouncedProcessing(0);\n            }\n        }\n    }\n    const runOptimizerIfIdleAfterMs = 100;\n    let registeredIds = [];\n    let seenIds = new Set();\n    let workersSources = new Set();\n    let waitingOn;\n    let firstRunEnsured = false;\n    function resetRegisteredIds() {\n        registeredIds = [];\n        seenIds = new Set();\n        workersSources = new Set();\n        waitingOn = undefined;\n        firstRunEnsured = false;\n    }\n    // If all the inputs are dependencies, we aren't going to get any\n    // delayDepsOptimizerUntil(id) calls. We need to guard against this\n    // by forcing a rerun if no deps have been registered\n    function ensureFirstRun() {\n        if (!firstRunEnsured && !firstRunCalled && registeredIds.length === 0) {\n            setTimeout(() => {\n                if (registeredIds.length === 0) {\n                    onCrawlEnd();\n                }\n            }, runOptimizerIfIdleAfterMs);\n        }\n        firstRunEnsured = true;\n    }\n    function registerWorkersSource(id) {\n        workersSources.add(id);\n        // Avoid waiting for this id, as it may be blocked by the rollup\n        // bundling process of the worker that also depends on the optimizer\n        registeredIds = registeredIds.filter((registered) => registered.id !== id);\n        if (waitingOn === id) {\n            waitingOn = undefined;\n            runOptimizerWhenIdle();\n        }\n    }\n    function delayDepsOptimizerUntil(id, done) {\n        if (!depsOptimizer.isOptimizedDepFile(id) && !seenIds.has(id)) {\n            seenIds.add(id);\n            registeredIds.push({ id, done });\n            runOptimizerWhenIdle();\n        }\n    }\n    function runOptimizerWhenIdle() {\n        if (!waitingOn) {\n            const next = registeredIds.pop();\n            if (next) {\n                waitingOn = next.id;\n                const afterLoad = () => {\n                    waitingOn = undefined;\n                    if (!workersSources.has(next.id)) {\n                        if (registeredIds.length > 0) {\n                            runOptimizerWhenIdle();\n                        }\n                        else {\n                            onCrawlEnd();\n                        }\n                    }\n                };\n                next\n                    .done()\n                    .then(() => {\n                    setTimeout(afterLoad, registeredIds.length > 0 ? 0 : runOptimizerIfIdleAfterMs);\n                })\n                    .catch(afterLoad);\n            }\n        }\n    }\n}\nasync function createDevSsrDepsOptimizer(config) {\n    const metadata = await optimizeServerSsrDeps(config);\n    const depsOptimizer = {\n        metadata,\n        isOptimizedDepFile: (id) => isOptimizedDepFile(id, config),\n        isOptimizedDepUrl: createIsOptimizedDepUrl(config),\n        getOptimizedDepId: (depInfo) => `${depInfo.file}?v=${depInfo.browserHash}`,\n        registerMissingImport: () => {\n            throw new Error('Vite Internal Error: registerMissingImport is not supported in dev SSR');\n        },\n        // noop, there is no scanning during dev SSR\n        // the optimizer blocks the server start\n        run: () => { },\n        registerWorkersSource: (id) => { },\n        delayDepsOptimizerUntil: (id, done) => { },\n        resetRegisteredIds: () => { },\n        ensureFirstRun: () => { },\n        options: config.ssr.optimizeDeps\n    };\n    devSsrDepsOptimizerMap.set(config, depsOptimizer);\n}\nfunction findInteropMismatches(discovered, optimized) {\n    const needsInteropMismatch = [];\n    for (const dep in discovered) {\n        const discoveredDepInfo = discovered[dep];\n        const depInfo = optimized[dep];\n        if (depInfo) {\n            if (discoveredDepInfo.needsInterop !== undefined &&\n                depInfo.needsInterop !== discoveredDepInfo.needsInterop) {\n                // This only happens when a discovered dependency has mixed ESM and CJS syntax\n                // and it hasn't been manually added to optimizeDeps.needsInterop\n                needsInteropMismatch.push(dep);\n                debuggerViteDeps(picocolors.exports.cyan(`\u2728 needsInterop mismatch detected for ${dep}`));\n            }\n        }\n    }\n    return needsInteropMismatch;\n}\n\nconst debuggerViteDeps = createDebugger('vite:deps');\nconst debug$a = debuggerViteDeps;\nconst isDebugEnabled = _debug('vite:deps').enabled;\nconst jsExtensionRE = /\\.js$/i;\nconst jsMapExtensionRE = /\\.js\\.map$/i;\n/**\n * Scan and optimize dependencies within a project.\n * Used by Vite CLI when running `vite optimize`.\n */\nasync function optimizeDeps(config, force = config.optimizeDeps.force, asCommand = false) {\n    const log = asCommand ? config.logger.info : debug$a;\n    const ssr = config.command === 'build' && !!config.build.ssr;\n    const cachedMetadata = loadCachedDepOptimizationMetadata(config, ssr, force, asCommand);\n    if (cachedMetadata) {\n        return cachedMetadata;\n    }\n    const deps = await discoverProjectDependencies(config);\n    const depsString = depsLogString(Object.keys(deps));\n    log(picocolors.exports.green(`Optimizing dependencies:\\n  ${depsString}`));\n    await addManuallyIncludedOptimizeDeps(deps, config, ssr);\n    const depsInfo = toDiscoveredDependencies(config, deps, ssr);\n    const result = await runOptimizeDeps(config, depsInfo);\n    await result.commit();\n    return result.metadata;\n}\nasync function optimizeServerSsrDeps(config) {\n    const ssr = true;\n    const cachedMetadata = loadCachedDepOptimizationMetadata(config, ssr, config.optimizeDeps.force, false);\n    if (cachedMetadata) {\n        return cachedMetadata;\n    }\n    let alsoInclude;\n    let noExternalFilter;\n    const { exclude } = getDepOptimizationConfig(config, ssr);\n    const noExternal = config.ssr?.noExternal;\n    if (noExternal) {\n        alsoInclude = arraify(noExternal).filter((ne) => typeof ne === 'string');\n        noExternalFilter =\n            noExternal === true\n                ? (dep) => true\n                : createFilter$1(undefined, exclude, {\n                    resolve: false\n                });\n    }\n    const deps = {};\n    await addManuallyIncludedOptimizeDeps(deps, config, ssr, alsoInclude, noExternalFilter);\n    const depsInfo = toDiscoveredDependencies(config, deps, true);\n    const result = await runOptimizeDeps(config, depsInfo, true);\n    await result.commit();\n    return result.metadata;\n}\nfunction initDepsOptimizerMetadata(config, ssr, timestamp) {\n    const hash = getDepHash(config, ssr);\n    return {\n        hash,\n        browserHash: getOptimizedBrowserHash(hash, {}, timestamp),\n        optimized: {},\n        chunks: {},\n        discovered: {},\n        depInfoList: []\n    };\n}\nfunction addOptimizedDepInfo(metadata, type, depInfo) {\n    metadata[type][depInfo.id] = depInfo;\n    metadata.depInfoList.push(depInfo);\n    return depInfo;\n}\n/**\n * Creates the initial dep optimization metadata, loading it from the deps cache\n * if it exists and pre-bundling isn't forced\n */\nfunction loadCachedDepOptimizationMetadata(config, ssr, force = config.optimizeDeps.force, asCommand = false) {\n    const log = asCommand ? config.logger.info : debug$a;\n    // Before Vite 2.9, dependencies were cached in the root of the cacheDir\n    // For compat, we remove the cache if we find the old structure\n    if (fs$l.existsSync(path$n.join(config.cacheDir, '_metadata.json'))) {\n        emptyDir(config.cacheDir);\n    }\n    const depsCacheDir = getDepsCacheDir(config, ssr);\n    if (!force) {\n        let cachedMetadata;\n        try {\n            const cachedMetadataPath = path$n.join(depsCacheDir, '_metadata.json');\n            cachedMetadata = parseDepsOptimizerMetadata(fs$l.readFileSync(cachedMetadataPath, 'utf-8'), depsCacheDir);\n        }\n        catch (e) { }\n        // hash is consistent, no need to re-bundle\n        if (cachedMetadata && cachedMetadata.hash === getDepHash(config, ssr)) {\n            log('Hash is consistent. Skipping. Use --force to override.');\n            // Nothing to commit or cancel as we are using the cache, we only\n            // need to resolve the processing promise so requests can move on\n            return cachedMetadata;\n        }\n    }\n    else {\n        config.logger.info('Forced re-optimization of dependencies');\n    }\n    // Start with a fresh cache\n    fs$l.rmSync(depsCacheDir, { recursive: true, force: true });\n}\n/**\n * Initial optimizeDeps at server start. Perform a fast scan using esbuild to\n * find deps to pre-bundle and include user hard-coded dependencies\n */\nasync function discoverProjectDependencies(config) {\n    const { deps, missing } = await scanImports(config);\n    const missingIds = Object.keys(missing);\n    if (missingIds.length) {\n        throw new Error(`The following dependencies are imported but could not be resolved:\\n\\n  ${missingIds\n            .map((id) => `${picocolors.exports.cyan(id)} ${picocolors.exports.white(picocolors.exports.dim(`(imported by ${missing[id]})`))}`)\n            .join(`\\n  `)}\\n\\nAre they installed?`);\n    }\n    return deps;\n}\nfunction toDiscoveredDependencies(config, deps, ssr, timestamp) {\n    const browserHash = getOptimizedBrowserHash(getDepHash(config, ssr), deps, timestamp);\n    const discovered = {};\n    for (const id in deps) {\n        const src = deps[id];\n        discovered[id] = {\n            id,\n            file: getOptimizedDepPath(id, config, ssr),\n            src,\n            browserHash: browserHash,\n            exportsData: extractExportsData(src, config, ssr)\n        };\n    }\n    return discovered;\n}\nfunction depsLogString(qualifiedIds) {\n    if (isDebugEnabled) {\n        return picocolors.exports.yellow(qualifiedIds.join(`, `));\n    }\n    else {\n        const total = qualifiedIds.length;\n        const maxListed = 5;\n        const listed = Math.min(total, maxListed);\n        const extra = Math.max(0, total - maxListed);\n        return picocolors.exports.yellow(qualifiedIds.slice(0, listed).join(`, `) +\n            (extra > 0 ? `, ...and ${extra} more` : ``));\n    }\n}\n/**\n * Internally, Vite uses this function to prepare a optimizeDeps run. When Vite starts, we can get\n * the metadata and start the server without waiting for the optimizeDeps processing to be completed\n */\nasync function runOptimizeDeps(resolvedConfig, depsInfo, ssr = resolvedConfig.command === 'build' &&\n    !!resolvedConfig.build.ssr) {\n    const isBuild = resolvedConfig.command === 'build';\n    const config = {\n        ...resolvedConfig,\n        command: 'build'\n    };\n    const depsCacheDir = getDepsCacheDir(resolvedConfig, ssr);\n    const processingCacheDir = getProcessingDepsCacheDir(resolvedConfig, ssr);\n    // Create a temporal directory so we don't need to delete optimized deps\n    // until they have been processed. This also avoids leaving the deps cache\n    // directory in a corrupted state if there is an error\n    if (fs$l.existsSync(processingCacheDir)) {\n        emptyDir(processingCacheDir);\n    }\n    else {\n        fs$l.mkdirSync(processingCacheDir, { recursive: true });\n    }\n    // a hint for Node.js\n    // all files in the cache directory should be recognized as ES modules\n    writeFile(path$n.resolve(processingCacheDir, 'package.json'), JSON.stringify({ type: 'module' }));\n    const metadata = initDepsOptimizerMetadata(config, ssr);\n    metadata.browserHash = getOptimizedBrowserHash(metadata.hash, depsFromOptimizedDepInfo(depsInfo));\n    // We prebundle dependencies with esbuild and cache them, but there is no need\n    // to wait here. Code that needs to access the cached deps needs to await\n    // the optimizedDepInfo.processing promise for each dep\n    const qualifiedIds = Object.keys(depsInfo);\n    const processingResult = {\n        metadata,\n        async commit() {\n            // Write metadata file, delete `deps` folder and rename the `processing` folder to `deps`\n            // Processing is done, we can now replace the depsCacheDir with processingCacheDir\n            // Rewire the file paths from the temporal processing dir to the final deps cache dir\n            await removeDir(depsCacheDir);\n            await renameDir(processingCacheDir, depsCacheDir);\n        },\n        cancel() {\n            fs$l.rmSync(processingCacheDir, { recursive: true, force: true });\n        }\n    };\n    if (!qualifiedIds.length) {\n        return processingResult;\n    }\n    // esbuild generates nested directory output with lowest common ancestor base\n    // this is unpredictable and makes it difficult to analyze entry / output\n    // mapping. So what we do here is:\n    // 1. flatten all ids to eliminate slash\n    // 2. in the plugin, read the entry ourselves as virtual files to retain the\n    //    path.\n    const flatIdDeps = {};\n    const idToExports = {};\n    const flatIdToExports = {};\n    const optimizeDeps = getDepOptimizationConfig(config, ssr);\n    const { plugins: pluginsFromConfig = [], ...esbuildOptions } = optimizeDeps?.esbuildOptions ?? {};\n    for (const id in depsInfo) {\n        const src = depsInfo[id].src;\n        const exportsData = await (depsInfo[id].exportsData ??\n            extractExportsData(src, config, ssr));\n        if (exportsData.jsxLoader) {\n            // Ensure that optimization won't fail by defaulting '.js' to the JSX parser.\n            // This is useful for packages such as Gatsby.\n            esbuildOptions.loader = {\n                '.js': 'jsx',\n                ...esbuildOptions.loader\n            };\n        }\n        const flatId = flattenId(id);\n        flatIdDeps[flatId] = src;\n        idToExports[id] = exportsData;\n        flatIdToExports[flatId] = exportsData;\n    }\n    // esbuild automatically replaces process.env.NODE_ENV for platform 'browser'\n    // In lib mode, we need to keep process.env.NODE_ENV untouched, so to at build\n    // time we replace it by __vite_process_env_NODE_ENV. This placeholder will be\n    // later replaced by the define plugin\n    const define = {\n        'process.env.NODE_ENV': isBuild\n            ? '__vite_process_env_NODE_ENV'\n            : JSON.stringify(process.env.NODE_ENV || config.mode)\n    };\n    const platform = ssr && config.ssr?.target !== 'webworker' ? 'node' : 'browser';\n    const external = [...(optimizeDeps?.exclude ?? [])];\n    if (isBuild) {\n        let rollupOptionsExternal = config?.build?.rollupOptions?.external;\n        if (rollupOptionsExternal) {\n            if (typeof rollupOptionsExternal === 'string') {\n                rollupOptionsExternal = [rollupOptionsExternal];\n            }\n            // TODO: decide whether to support RegExp and function options\n            // They're not supported yet because `optimizeDeps.exclude` currently only accepts strings\n            if (!Array.isArray(rollupOptionsExternal) ||\n                rollupOptionsExternal.some((ext) => typeof ext !== 'string')) {\n                throw new Error(`[vite] 'build.rollupOptions.external' can only be an array of strings or a string when using esbuild optimization at build time.`);\n            }\n            external.push(...rollupOptionsExternal);\n        }\n    }\n    const plugins = [...pluginsFromConfig];\n    if (external.length) {\n        plugins.push(esbuildCjsExternalPlugin(external));\n    }\n    plugins.push(esbuildDepPlugin(flatIdDeps, flatIdToExports, external, config, ssr));\n    const start = performance.now();\n    const result = await build$3({\n        absWorkingDir: process.cwd(),\n        entryPoints: Object.keys(flatIdDeps),\n        bundle: true,\n        // We can't use platform 'neutral', as esbuild has custom handling\n        // when the platform is 'node' or 'browser' that can't be emulated\n        // by using mainFields and conditions\n        platform,\n        define,\n        format: 'esm',\n        // See https://github.com/evanw/esbuild/issues/1921#issuecomment-1152991694\n        banner: platform === 'node'\n            ? {\n                js: `import { createRequire } from 'module';const require = createRequire(import.meta.url);`\n            }\n            : undefined,\n        target: isBuild ? config.build.target || undefined : ESBUILD_MODULES_TARGET,\n        external,\n        logLevel: 'error',\n        splitting: true,\n        sourcemap: true,\n        outdir: processingCacheDir,\n        ignoreAnnotations: !isBuild,\n        metafile: true,\n        plugins,\n        ...esbuildOptions,\n        supported: {\n            'dynamic-import': true,\n            'import-meta': true,\n            ...esbuildOptions.supported\n        }\n    });\n    const meta = result.metafile;\n    // the paths in `meta.outputs` are relative to `process.cwd()`\n    const processingCacheDirOutputPath = path$n.relative(process.cwd(), processingCacheDir);\n    for (const id in depsInfo) {\n        const output = esbuildOutputFromId(meta.outputs, id, processingCacheDir);\n        const { exportsData, ...info } = depsInfo[id];\n        addOptimizedDepInfo(metadata, 'optimized', {\n            ...info,\n            // We only need to hash the output.imports in to check for stability, but adding the hash\n            // and file path gives us a unique hash that may be useful for other things in the future\n            fileHash: getHash(metadata.hash + depsInfo[id].file + JSON.stringify(output.imports)),\n            browserHash: metadata.browserHash,\n            // After bundling we have more information and can warn the user about legacy packages\n            // that require manual configuration\n            needsInterop: needsInterop(config, ssr, id, idToExports[id], output)\n        });\n    }\n    for (const o of Object.keys(meta.outputs)) {\n        if (!o.match(jsMapExtensionRE)) {\n            const id = path$n\n                .relative(processingCacheDirOutputPath, o)\n                .replace(jsExtensionRE, '');\n            const file = getOptimizedDepPath(id, resolvedConfig, ssr);\n            if (!findOptimizedDepInfoInRecord(metadata.optimized, (depInfo) => depInfo.file === file)) {\n                addOptimizedDepInfo(metadata, 'chunks', {\n                    id,\n                    file,\n                    needsInterop: false,\n                    browserHash: metadata.browserHash\n                });\n            }\n        }\n    }\n    const dataPath = path$n.join(processingCacheDir, '_metadata.json');\n    writeFile(dataPath, stringifyDepsOptimizerMetadata(metadata, depsCacheDir));\n    debug$a(`deps bundled in ${(performance.now() - start).toFixed(2)}ms`);\n    return processingResult;\n}\nasync function findKnownImports(config, ssr) {\n    const deps = (await scanImports(config)).deps;\n    await addManuallyIncludedOptimizeDeps(deps, config, ssr);\n    return Object.keys(deps);\n}\nasync function addManuallyIncludedOptimizeDeps(deps, config, ssr, extra = [], filter) {\n    const { logger } = config;\n    const optimizeDeps = getDepOptimizationConfig(config, ssr);\n    const optimizeDepsInclude = optimizeDeps?.include ?? [];\n    if (optimizeDepsInclude.length || extra.length) {\n        const unableToOptimize = (id, msg) => {\n            if (optimizeDepsInclude.includes(id)) {\n                logger.warn(`${msg}: ${picocolors.exports.cyan(id)}, present in '${ssr ? 'ssr.' : ''}optimizeDeps.include'`);\n            }\n        };\n        const resolve = config.createResolver({\n            asSrc: false,\n            scan: true,\n            ssrOptimizeCheck: ssr\n        });\n        for (const id of [...optimizeDepsInclude, ...extra]) {\n            // normalize 'foo   >bar` as 'foo > bar' to prevent same id being added\n            // and for pretty printing\n            const normalizedId = normalizeId(id);\n            if (!deps[normalizedId] && filter?.(normalizedId) !== false) {\n                const entry = await resolve(id, undefined, undefined, ssr);\n                if (entry) {\n                    if (isOptimizable(entry, optimizeDeps)) {\n                        if (!entry.endsWith('?__vite_skip_optimization')) {\n                            deps[normalizedId] = entry;\n                        }\n                    }\n                    else {\n                        unableToOptimize(entry, 'Cannot optimize dependency');\n                    }\n                }\n                else {\n                    unableToOptimize(id, 'Failed to resolve dependency');\n                }\n            }\n        }\n    }\n}\nfunction newDepOptimizationProcessing() {\n    let resolve;\n    const promise = new Promise((_resolve) => {\n        resolve = _resolve;\n    });\n    return { promise, resolve: resolve };\n}\n// Convert to { id: src }\nfunction depsFromOptimizedDepInfo(depsInfo) {\n    return Object.fromEntries(Object.entries(depsInfo).map((d) => [d[0], d[1].src]));\n}\nfunction getOptimizedDepPath(id, config, ssr) {\n    return normalizePath$3(path$n.resolve(getDepsCacheDir(config, ssr), flattenId(id) + '.js'));\n}\nfunction getDepsCacheSuffix(config, ssr) {\n    let suffix = '';\n    if (config.command === 'build') {\n        // Differentiate build caches depending on outDir to allow parallel builds\n        const { outDir } = config.build;\n        const buildId = outDir.length > 8 || outDir.includes('/') ? getHash(outDir) : outDir;\n        suffix += `_build-${buildId}`;\n    }\n    if (ssr) {\n        suffix += '_ssr';\n    }\n    return suffix;\n}\nfunction getDepsCacheDir(config, ssr) {\n    return getDepsCacheDirPrefix(config) + getDepsCacheSuffix(config, ssr);\n}\nfunction getProcessingDepsCacheDir(config, ssr) {\n    return (getDepsCacheDirPrefix(config) + getDepsCacheSuffix(config, ssr) + '_temp');\n}\nfunction getDepsCacheDirPrefix(config) {\n    return normalizePath$3(path$n.resolve(config.cacheDir, 'deps'));\n}\nfunction isOptimizedDepFile(id, config) {\n    return id.startsWith(getDepsCacheDirPrefix(config));\n}\nfunction createIsOptimizedDepUrl(config) {\n    const { root } = config;\n    const depsCacheDir = getDepsCacheDirPrefix(config);\n    // determine the url prefix of files inside cache directory\n    const depsCacheDirRelative = normalizePath$3(path$n.relative(root, depsCacheDir));\n    const depsCacheDirPrefix = depsCacheDirRelative.startsWith('../')\n        ? // if the cache directory is outside root, the url prefix would be something\n            // like '/@fs/absolute/path/to/node_modules/.vite'\n            `/@fs/${normalizePath$3(depsCacheDir).replace(/^\\//, '')}`\n        : // if the cache directory is inside root, the url prefix would be something\n            // like '/node_modules/.vite'\n            `/${depsCacheDirRelative}`;\n    return function isOptimizedDepUrl(url) {\n        return url.startsWith(depsCacheDirPrefix);\n    };\n}\nfunction parseDepsOptimizerMetadata(jsonMetadata, depsCacheDir) {\n    const { hash, browserHash, optimized, chunks } = JSON.parse(jsonMetadata, (key, value) => {\n        // Paths can be absolute or relative to the deps cache dir where\n        // the _metadata.json is located\n        if (key === 'file' || key === 'src') {\n            return normalizePath$3(path$n.resolve(depsCacheDir, value));\n        }\n        return value;\n    });\n    if (!chunks ||\n        Object.values(optimized).some((depInfo) => !depInfo.fileHash)) {\n        // outdated _metadata.json version, ignore\n        return;\n    }\n    const metadata = {\n        hash,\n        browserHash,\n        optimized: {},\n        discovered: {},\n        chunks: {},\n        depInfoList: []\n    };\n    for (const id of Object.keys(optimized)) {\n        addOptimizedDepInfo(metadata, 'optimized', {\n            ...optimized[id],\n            id,\n            browserHash\n        });\n    }\n    for (const id of Object.keys(chunks)) {\n        addOptimizedDepInfo(metadata, 'chunks', {\n            ...chunks[id],\n            id,\n            browserHash,\n            needsInterop: false\n        });\n    }\n    return metadata;\n}\n/**\n * Stringify metadata for deps cache. Remove processing promises\n * and individual dep info browserHash. Once the cache is reload\n * the next time the server start we need to use the global\n * browserHash to allow long term caching\n */\nfunction stringifyDepsOptimizerMetadata(metadata, depsCacheDir) {\n    const { hash, browserHash, optimized, chunks } = metadata;\n    return JSON.stringify({\n        hash,\n        browserHash,\n        optimized: Object.fromEntries(Object.values(optimized).map(({ id, src, file, fileHash, needsInterop }) => [\n            id,\n            {\n                src,\n                file,\n                fileHash,\n                needsInterop\n            }\n        ])),\n        chunks: Object.fromEntries(Object.values(chunks).map(({ id, file }) => [id, { file }]))\n    }, (key, value) => {\n        // Paths can be absolute or relative to the deps cache dir where\n        // the _metadata.json is located\n        if (key === 'file' || key === 'src') {\n            return normalizePath$3(path$n.relative(depsCacheDir, value));\n        }\n        return value;\n    }, 2);\n}\nfunction esbuildOutputFromId(outputs, id, cacheDirOutputPath) {\n    const flatId = flattenId(id) + '.js';\n    return outputs[normalizePath$3(path$n.relative(process.cwd(), path$n.join(cacheDirOutputPath, flatId)))];\n}\nasync function extractExportsData(filePath, config, ssr) {\n    await init;\n    const optimizeDeps = getDepOptimizationConfig(config, ssr);\n    const esbuildOptions = optimizeDeps?.esbuildOptions ?? {};\n    if (optimizeDeps.extensions?.some((ext) => filePath.endsWith(ext))) {\n        // For custom supported extensions, build the entry file to transform it into JS,\n        // and then parse with es-module-lexer. Note that the `bundle` option is not `true`,\n        // so only the entry file is being transformed.\n        const result = await build$3({\n            ...esbuildOptions,\n            entryPoints: [filePath],\n            write: false,\n            format: 'esm'\n        });\n        const [imports, exports, facade] = parse$b(result.outputFiles[0].text);\n        return {\n            hasImports: imports.length > 0,\n            exports: exports.map((e) => e.n),\n            facade\n        };\n    }\n    let parseResult;\n    let usedJsxLoader = false;\n    const entryContent = fs$l.readFileSync(filePath, 'utf-8');\n    try {\n        parseResult = parse$b(entryContent);\n    }\n    catch {\n        const loader = esbuildOptions.loader?.[path$n.extname(filePath)] || 'jsx';\n        debug$a(`Unable to parse: ${filePath}.\\n Trying again with a ${loader} transform.`);\n        const transformed = await transformWithEsbuild(entryContent, filePath, {\n            loader\n        });\n        // Ensure that optimization won't fail by defaulting '.js' to the JSX parser.\n        // This is useful for packages such as Gatsby.\n        esbuildOptions.loader = {\n            '.js': 'jsx',\n            ...esbuildOptions.loader\n        };\n        parseResult = parse$b(transformed.code);\n        usedJsxLoader = true;\n    }\n    const [imports, exports, facade] = parseResult;\n    const exportsData = {\n        hasImports: imports.length > 0,\n        exports: exports.map((e) => e.n),\n        facade,\n        hasReExports: imports.some(({ ss, se }) => {\n            const exp = entryContent.slice(ss, se);\n            return /export\\s+\\*\\s+from/.test(exp);\n        }),\n        jsxLoader: usedJsxLoader\n    };\n    return exportsData;\n}\n// https://github.com/vitejs/vite/issues/1724#issuecomment-767619642\n// a list of modules that pretends to be ESM but still uses `require`.\n// this causes esbuild to wrap them as CJS even when its entry appears to be ESM.\nconst KNOWN_INTEROP_IDS = new Set(['moment']);\nfunction needsInterop(config, ssr, id, exportsData, output) {\n    if (getDepOptimizationConfig(config, ssr)?.needsInterop?.includes(id) ||\n        KNOWN_INTEROP_IDS.has(id)) {\n        return true;\n    }\n    const { hasImports, exports } = exportsData;\n    // entry has no ESM syntax - likely CJS or UMD\n    if (!exports.length && !hasImports) {\n        return true;\n    }\n    if (output) {\n        // if a peer dependency used require() on an ESM dependency, esbuild turns the\n        // ESM dependency's entry chunk into a single default export... detect\n        // such cases by checking exports mismatch, and force interop.\n        const generatedExports = output.exports;\n        if (!generatedExports ||\n            (isSingleDefaultExport(generatedExports) &&\n                !isSingleDefaultExport(exports))) {\n            return true;\n        }\n    }\n    return false;\n}\nfunction isSingleDefaultExport(exports) {\n    return exports.length === 1 && exports[0] === 'default';\n}\nconst lockfileFormats = ['package-lock.json', 'yarn.lock', 'pnpm-lock.yaml'];\nfunction getDepHash(config, ssr) {\n    let content = lookupFile(config.root, lockfileFormats) || '';\n    // also take config into account\n    // only a subset of config options that can affect dep optimization\n    const optimizeDeps = getDepOptimizationConfig(config, ssr);\n    content += JSON.stringify({\n        mode: process.env.NODE_ENV || config.mode,\n        root: config.root,\n        resolve: config.resolve,\n        buildTarget: config.build.target,\n        assetsInclude: config.assetsInclude,\n        plugins: config.plugins.map((p) => p.name),\n        optimizeDeps: {\n            include: optimizeDeps?.include,\n            exclude: optimizeDeps?.exclude,\n            esbuildOptions: {\n                ...optimizeDeps?.esbuildOptions,\n                plugins: optimizeDeps?.esbuildOptions?.plugins?.map((p) => p.name)\n            }\n        }\n    }, (_, value) => {\n        if (typeof value === 'function' || value instanceof RegExp) {\n            return value.toString();\n        }\n        return value;\n    });\n    return getHash(content);\n}\nfunction getOptimizedBrowserHash(hash, deps, timestamp = '') {\n    return getHash(hash + JSON.stringify(deps) + timestamp);\n}\nfunction optimizedDepInfoFromId(metadata, id) {\n    return (metadata.optimized[id] || metadata.discovered[id] || metadata.chunks[id]);\n}\nfunction optimizedDepInfoFromFile(metadata, file) {\n    return metadata.depInfoList.find((depInfo) => depInfo.file === file);\n}\nfunction findOptimizedDepInfoInRecord(dependenciesInfo, callbackFn) {\n    for (const o of Object.keys(dependenciesInfo)) {\n        const info = dependenciesInfo[o];\n        if (callbackFn(info, o)) {\n            return info;\n        }\n    }\n}\nasync function optimizedDepNeedsInterop(metadata, file, config, ssr) {\n    const depInfo = optimizedDepInfoFromFile(metadata, file);\n    if (depInfo?.src && depInfo.needsInterop === undefined) {\n        depInfo.exportsData ?? (depInfo.exportsData = extractExportsData(depInfo.src, config, ssr));\n        depInfo.needsInterop = needsInterop(config, ssr, depInfo.id, await depInfo.exportsData);\n    }\n    return depInfo?.needsInterop;\n}\n\nvar index$1 = {\n\t__proto__: null,\n\tdebuggerViteDeps: debuggerViteDeps,\n\toptimizeDeps: optimizeDeps,\n\toptimizeServerSsrDeps: optimizeServerSsrDeps,\n\tinitDepsOptimizerMetadata: initDepsOptimizerMetadata,\n\taddOptimizedDepInfo: addOptimizedDepInfo,\n\tloadCachedDepOptimizationMetadata: loadCachedDepOptimizationMetadata,\n\tdiscoverProjectDependencies: discoverProjectDependencies,\n\ttoDiscoveredDependencies: toDiscoveredDependencies,\n\tdepsLogString: depsLogString,\n\trunOptimizeDeps: runOptimizeDeps,\n\tfindKnownImports: findKnownImports,\n\taddManuallyIncludedOptimizeDeps: addManuallyIncludedOptimizeDeps,\n\tnewDepOptimizationProcessing: newDepOptimizationProcessing,\n\tdepsFromOptimizedDepInfo: depsFromOptimizedDepInfo,\n\tgetOptimizedDepPath: getOptimizedDepPath,\n\tgetDepsCacheDir: getDepsCacheDir,\n\tgetDepsCacheDirPrefix: getDepsCacheDirPrefix,\n\tisOptimizedDepFile: isOptimizedDepFile,\n\tcreateIsOptimizedDepUrl: createIsOptimizedDepUrl,\n\textractExportsData: extractExportsData,\n\tgetDepHash: getDepHash,\n\toptimizedDepInfoFromId: optimizedDepInfoFromId,\n\toptimizedDepInfoFromFile: optimizedDepInfoFromFile,\n\toptimizedDepNeedsInterop: optimizedDepNeedsInterop,\n\tinitDepsOptimizer: initDepsOptimizer,\n\tinitDevSsrDepsOptimizer: initDevSsrDepsOptimizer,\n\tgetDepsOptimizer: getDepsOptimizer\n};\n\nconst debugHmr = createDebugger('vite:hmr');\nconst normalizedClientDir = normalizePath$3(CLIENT_DIR);\nfunction getShortName(file, root) {\n    return file.startsWith(root + '/') ? path$n.posix.relative(root, file) : file;\n}\nasync function handleHMRUpdate(file, server) {\n    const { ws, config, moduleGraph } = server;\n    const shortFile = getShortName(file, config.root);\n    const fileName = path$n.basename(file);\n    const isConfig = file === config.configFile;\n    const isConfigDependency = config.configFileDependencies.some((name) => file === name);\n    const isEnv = config.inlineConfig.envFile !== false &&\n        (fileName === '.env' || fileName.startsWith('.env.'));\n    if (isConfig || isConfigDependency || isEnv) {\n        // auto restart server\n        debugHmr(`[config change] ${picocolors.exports.dim(shortFile)}`);\n        config.logger.info(picocolors.exports.green(`${path$n.relative(process.cwd(), file)} changed, restarting server...`), { clear: true, timestamp: true });\n        try {\n            await server.restart();\n        }\n        catch (e) {\n            config.logger.error(picocolors.exports.red(e));\n        }\n        return;\n    }\n    debugHmr(`[file change] ${picocolors.exports.dim(shortFile)}`);\n    // (dev only) the client itself cannot be hot updated.\n    if (file.startsWith(normalizedClientDir)) {\n        ws.send({\n            type: 'full-reload',\n            path: '*'\n        });\n        return;\n    }\n    const mods = moduleGraph.getModulesByFile(file);\n    // check if any plugin wants to perform custom HMR handling\n    const timestamp = Date.now();\n    const hmrContext = {\n        file,\n        timestamp,\n        modules: mods ? [...mods] : [],\n        read: () => readModifiedFile(file),\n        server\n    };\n    for (const plugin of config.plugins) {\n        if (plugin.handleHotUpdate) {\n            const filteredModules = await plugin.handleHotUpdate(hmrContext);\n            if (filteredModules) {\n                hmrContext.modules = filteredModules;\n            }\n        }\n    }\n    if (!hmrContext.modules.length) {\n        // html file cannot be hot updated\n        if (file.endsWith('.html')) {\n            config.logger.info(picocolors.exports.green(`page reload `) + picocolors.exports.dim(shortFile), {\n                clear: true,\n                timestamp: true\n            });\n            ws.send({\n                type: 'full-reload',\n                path: config.server.middlewareMode\n                    ? '*'\n                    : '/' + normalizePath$3(path$n.relative(config.root, file))\n            });\n        }\n        else {\n            // loaded but not in the module graph, probably not js\n            debugHmr(`[no modules matched] ${picocolors.exports.dim(shortFile)}`);\n        }\n        return;\n    }\n    updateModules(shortFile, hmrContext.modules, timestamp, server);\n}\nfunction updateModules(file, modules, timestamp, { config, ws }) {\n    const updates = [];\n    const invalidatedModules = new Set();\n    let needFullReload = false;\n    for (const mod of modules) {\n        invalidate(mod, timestamp, invalidatedModules);\n        if (needFullReload) {\n            continue;\n        }\n        const boundaries = new Set();\n        const hasDeadEnd = propagateUpdate(mod, boundaries);\n        if (hasDeadEnd) {\n            needFullReload = true;\n            continue;\n        }\n        updates.push(...[...boundaries].map(({ boundary, acceptedVia }) => ({\n            type: `${boundary.type}-update`,\n            timestamp,\n            path: boundary.url,\n            acceptedPath: acceptedVia.url\n        })));\n    }\n    if (needFullReload) {\n        config.logger.info(picocolors.exports.green(`page reload `) + picocolors.exports.dim(file), {\n            clear: true,\n            timestamp: true\n        });\n        ws.send({\n            type: 'full-reload'\n        });\n        return;\n    }\n    if (updates.length === 0) {\n        debugHmr(picocolors.exports.yellow(`no update happened `) + picocolors.exports.dim(file));\n        return;\n    }\n    config.logger.info(updates\n        .map(({ path }) => picocolors.exports.green(`hmr update `) + picocolors.exports.dim(path))\n        .join('\\n'), { clear: true, timestamp: true });\n    ws.send({\n        type: 'update',\n        updates\n    });\n}\nasync function handleFileAddUnlink(file, server) {\n    const modules = [...(server.moduleGraph.getModulesByFile(file) || [])];\n    modules.push(...getAffectedGlobModules(file, server));\n    if (modules.length > 0) {\n        updateModules(getShortName(file, server.config.root), unique(modules), Date.now(), server);\n    }\n}\nfunction areAllImportsAccepted(importedBindings, acceptedExports) {\n    for (const binding of importedBindings) {\n        if (!acceptedExports.has(binding)) {\n            return false;\n        }\n    }\n    return true;\n}\nfunction propagateUpdate(node, boundaries, currentChain = [node]) {\n    // #7561\n    // if the imports of `node` have not been analyzed, then `node` has not\n    // been loaded in the browser and we should stop propagation.\n    if (node.id && node.isSelfAccepting === undefined) {\n        debugHmr(`[propagate update] stop propagation because not analyzed: ${picocolors.exports.dim(node.id)}`);\n        return false;\n    }\n    if (node.isSelfAccepting) {\n        boundaries.add({\n            boundary: node,\n            acceptedVia: node\n        });\n        // additionally check for CSS importers, since a PostCSS plugin like\n        // Tailwind JIT may register any file as a dependency to a CSS file.\n        for (const importer of node.importers) {\n            if (isCSSRequest(importer.url) && !currentChain.includes(importer)) {\n                propagateUpdate(importer, boundaries, currentChain.concat(importer));\n            }\n        }\n        return false;\n    }\n    // A partially accepted module with no importers is considered self accepting,\n    // because the deal is \"there are parts of myself I can't self accept if they\n    // are used outside of me\".\n    // Also, the imported module (this one) must be updated before the importers,\n    // so that they do get the fresh imported module when/if they are reloaded.\n    if (node.acceptedHmrExports) {\n        boundaries.add({\n            boundary: node,\n            acceptedVia: node\n        });\n    }\n    else {\n        if (!node.importers.size) {\n            return true;\n        }\n        // #3716, #3913\n        // For a non-CSS file, if all of its importers are CSS files (registered via\n        // PostCSS plugins) it should be considered a dead end and force full reload.\n        if (!isCSSRequest(node.url) &&\n            [...node.importers].every((i) => isCSSRequest(i.url))) {\n            return true;\n        }\n    }\n    for (const importer of node.importers) {\n        const subChain = currentChain.concat(importer);\n        if (importer.acceptedHmrDeps.has(node)) {\n            boundaries.add({\n                boundary: importer,\n                acceptedVia: node\n            });\n            continue;\n        }\n        if (node.id && node.acceptedHmrExports && importer.importedBindings) {\n            const importedBindingsFromNode = importer.importedBindings.get(node.id);\n            if (importedBindingsFromNode &&\n                areAllImportsAccepted(importedBindingsFromNode, node.acceptedHmrExports)) {\n                continue;\n            }\n        }\n        if (currentChain.includes(importer)) {\n            // circular deps is considered dead end\n            return true;\n        }\n        if (propagateUpdate(importer, boundaries, subChain)) {\n            return true;\n        }\n    }\n    return false;\n}\nfunction invalidate(mod, timestamp, seen) {\n    if (seen.has(mod)) {\n        return;\n    }\n    seen.add(mod);\n    mod.lastHMRTimestamp = timestamp;\n    mod.transformResult = null;\n    mod.ssrModule = null;\n    mod.ssrError = null;\n    mod.ssrTransformResult = null;\n    mod.importers.forEach((importer) => {\n        if (!importer.acceptedHmrDeps.has(mod)) {\n            invalidate(importer, timestamp, seen);\n        }\n    });\n}\nfunction handlePrunedModules(mods, { ws }) {\n    // update the disposed modules' hmr timestamp\n    // since if it's re-imported, it should re-apply side effects\n    // and without the timestamp the browser will not re-import it!\n    const t = Date.now();\n    mods.forEach((mod) => {\n        mod.lastHMRTimestamp = t;\n        debugHmr(`[dispose] ${picocolors.exports.dim(mod.file)}`);\n    });\n    ws.send({\n        type: 'prune',\n        paths: [...mods].map((m) => m.url)\n    });\n}\n/**\n * Lex import.meta.hot.accept() for accepted deps.\n * Since hot.accept() can only accept string literals or array of string\n * literals, we don't really need a heavy @babel/parse call on the entire source.\n *\n * @returns selfAccepts\n */\nfunction lexAcceptedHmrDeps(code, start, urls) {\n    let state = 0 /* inCall */;\n    // the state can only be 2 levels deep so no need for a stack\n    let prevState = 0 /* inCall */;\n    let currentDep = '';\n    function addDep(index) {\n        urls.add({\n            url: currentDep,\n            start: index - currentDep.length - 1,\n            end: index + 1\n        });\n        currentDep = '';\n    }\n    for (let i = start; i < code.length; i++) {\n        const char = code.charAt(i);\n        switch (state) {\n            case 0 /* inCall */:\n            case 4 /* inArray */:\n                if (char === `'`) {\n                    prevState = state;\n                    state = 1 /* inSingleQuoteString */;\n                }\n                else if (char === `\"`) {\n                    prevState = state;\n                    state = 2 /* inDoubleQuoteString */;\n                }\n                else if (char === '`') {\n                    prevState = state;\n                    state = 3 /* inTemplateString */;\n                }\n                else if (/\\s/.test(char)) {\n                    continue;\n                }\n                else {\n                    if (state === 0 /* inCall */) {\n                        if (char === `[`) {\n                            state = 4 /* inArray */;\n                        }\n                        else {\n                            // reaching here means the first arg is neither a string literal\n                            // nor an Array literal (direct callback) or there is no arg\n                            // in both case this indicates a self-accepting module\n                            return true; // done\n                        }\n                    }\n                    else if (state === 4 /* inArray */) {\n                        if (char === `]`) {\n                            return false; // done\n                        }\n                        else if (char === ',') {\n                            continue;\n                        }\n                        else {\n                            error$1(i);\n                        }\n                    }\n                }\n                break;\n            case 1 /* inSingleQuoteString */:\n                if (char === `'`) {\n                    addDep(i);\n                    if (prevState === 0 /* inCall */) {\n                        // accept('foo', ...)\n                        return false;\n                    }\n                    else {\n                        state = prevState;\n                    }\n                }\n                else {\n                    currentDep += char;\n                }\n                break;\n            case 2 /* inDoubleQuoteString */:\n                if (char === `\"`) {\n                    addDep(i);\n                    if (prevState === 0 /* inCall */) {\n                        // accept('foo', ...)\n                        return false;\n                    }\n                    else {\n                        state = prevState;\n                    }\n                }\n                else {\n                    currentDep += char;\n                }\n                break;\n            case 3 /* inTemplateString */:\n                if (char === '`') {\n                    addDep(i);\n                    if (prevState === 0 /* inCall */) {\n                        // accept('foo', ...)\n                        return false;\n                    }\n                    else {\n                        state = prevState;\n                    }\n                }\n                else if (char === '$' && code.charAt(i + 1) === '{') {\n                    error$1(i);\n                }\n                else {\n                    currentDep += char;\n                }\n                break;\n            default:\n                throw new Error('unknown import.meta.hot lexer state');\n        }\n    }\n    return false;\n}\nfunction lexAcceptedHmrExports(code, start, exportNames) {\n    const urls = new Set();\n    lexAcceptedHmrDeps(code, start, urls);\n    for (const { url } of urls) {\n        exportNames.add(url);\n    }\n    return urls.size > 0;\n}\nfunction error$1(pos) {\n    const err = new Error(`import.meta.hot.accept() can only accept string literals or an ` +\n        `Array of string literals.`);\n    err.pos = pos;\n    throw err;\n}\n// vitejs/vite#610 when hot-reloading Vue files, we read immediately on file\n// change event and sometimes this can be too early and get an empty buffer.\n// Poll until the file's modified time has changed before reading again.\nasync function readModifiedFile(file) {\n    const content = fs$l.readFileSync(file, 'utf-8');\n    if (!content) {\n        const mtime = fs$l.statSync(file).mtimeMs;\n        await new Promise((r) => {\n            let n = 0;\n            const poll = async () => {\n                n++;\n                const newMtime = fs$l.statSync(file).mtimeMs;\n                if (newMtime !== mtime || n > 10) {\n                    r(0);\n                }\n                else {\n                    setTimeout(poll, 10);\n                }\n            };\n            setTimeout(poll, 10);\n        });\n        return fs$l.readFileSync(file, 'utf-8');\n    }\n    else {\n        return content;\n    }\n}\n\nconst debug$9 = createDebugger('vite:ssr-external');\n/**\n * Converts \"parent > child\" syntax to just \"child\"\n */\nfunction stripNesting(packages) {\n    return packages.map((s) => {\n        const arr = s.split('>');\n        return arr[arr.length - 1].trim();\n    });\n}\n/**\n * Heuristics for determining whether a dependency should be externalized for\n * server-side rendering.\n */\nfunction cjsSsrResolveExternals(config, knownImports) {\n    // strip nesting since knownImports may be passed in from optimizeDeps which\n    // supports a \"parent > child\" syntax\n    knownImports = stripNesting(knownImports);\n    const ssrConfig = config.ssr;\n    if (ssrConfig?.noExternal === true) {\n        return [];\n    }\n    const ssrExternals = new Set();\n    const seen = new Set();\n    ssrConfig?.external?.forEach((id) => {\n        ssrExternals.add(id);\n        seen.add(id);\n    });\n    cjsSsrCollectExternals(config.root, config.resolve.preserveSymlinks, ssrExternals, seen, config.logger);\n    const importedDeps = knownImports.map(getNpmPackageName).filter(isDefined);\n    for (const dep of importedDeps) {\n        // Assume external if not yet seen\n        // At this point, the project root and any linked packages have had their dependencies checked,\n        // so we can safely mark any knownImports not yet seen as external. They are guaranteed to be\n        // dependencies of packages in node_modules.\n        if (!seen.has(dep)) {\n            ssrExternals.add(dep);\n        }\n    }\n    // ensure `vite/dynamic-import-polyfill` is bundled (issue #1865)\n    ssrExternals.delete('vite');\n    let externals = [...ssrExternals];\n    if (ssrConfig?.noExternal) {\n        externals = externals.filter(createFilter(undefined, ssrConfig.noExternal, { resolve: false }));\n    }\n    return externals;\n}\nconst CJS_CONTENT_RE = /\\bmodule\\.exports\\b|\\bexports[.\\[]|\\brequire\\s*\\(|\\bObject\\.(defineProperty|defineProperties|assign)\\s*\\(\\s*exports\\b/;\n// TODO: use import()\nconst _require$3 = createRequire$1(import.meta.url);\nconst isSsrExternalCache = new WeakMap();\nfunction shouldExternalizeForSSR(id, config) {\n    let isSsrExternal = isSsrExternalCache.get(config);\n    if (!isSsrExternal) {\n        isSsrExternal = createIsSsrExternal(config);\n        isSsrExternalCache.set(config, isSsrExternal);\n    }\n    return isSsrExternal(id);\n}\nfunction createIsConfiguredAsSsrExternal(config) {\n    const { ssr, root } = config;\n    const noExternal = ssr?.noExternal;\n    const noExternalFilter = noExternal !== 'undefined' &&\n        typeof noExternal !== 'boolean' &&\n        createFilter(undefined, noExternal, { resolve: false });\n    const resolveOptions = {\n        root,\n        preserveSymlinks: config.resolve.preserveSymlinks,\n        isProduction: false,\n        isBuild: true\n    };\n    const isExternalizable = (id, configuredAsExternal) => {\n        if (!bareImportRE.test(id) || id.includes('\\0')) {\n            return false;\n        }\n        try {\n            return !!tryNodeResolve(id, undefined, resolveOptions, ssr?.target === 'webworker', undefined, true, \n            // try to externalize, will return undefined or an object without\n            // a external flag if it isn't externalizable\n            true, \n            // Allow linked packages to be externalized if they are explicitly\n            // configured as external\n            !!configuredAsExternal)?.external;\n        }\n        catch (e) {\n            debug$9(`Failed to node resolve \"${id}\". Skipping externalizing it by default.`);\n            // may be an invalid import that's resolved by a plugin\n            return false;\n        }\n    };\n    // Returns true if it is configured as external, false if it is filtered\n    // by noExternal and undefined if it isn't affected by the explicit config\n    return (id) => {\n        const { ssr } = config;\n        if (ssr) {\n            if (\n            // If this id is defined as external, force it as external\n            // Note that individual package entries are allowed in ssr.external\n            ssr.external?.includes(id)) {\n                return true;\n            }\n            const pkgName = getNpmPackageName(id);\n            if (!pkgName) {\n                return isExternalizable(id);\n            }\n            if (\n            // A package name in ssr.external externalizes every\n            // externalizable package entry\n            ssr.external?.includes(pkgName)) {\n                return isExternalizable(id, true);\n            }\n            if (typeof noExternal === 'boolean') {\n                return !noExternal;\n            }\n            if (noExternalFilter && !noExternalFilter(pkgName)) {\n                return false;\n            }\n        }\n        return isExternalizable(id);\n    };\n}\nfunction createIsSsrExternal(config) {\n    const processedIds = new Map();\n    const isConfiguredAsExternal = createIsConfiguredAsSsrExternal(config);\n    return (id) => {\n        if (processedIds.has(id)) {\n            return processedIds.get(id);\n        }\n        let external = false;\n        if (!id.startsWith('.') && !path$n.isAbsolute(id)) {\n            external = isBuiltin(id) || isConfiguredAsExternal(id);\n        }\n        processedIds.set(id, external);\n        return external;\n    };\n}\n// When config.experimental.buildSsrCjsExternalHeuristics is enabled, this function\n// is used reverting to the Vite 2.9 SSR externalization heuristics\nfunction cjsSsrCollectExternals(root, preserveSymlinks, ssrExternals, seen, logger) {\n    const rootPkgContent = lookupFile(root, ['package.json']);\n    if (!rootPkgContent) {\n        return;\n    }\n    const rootPkg = JSON.parse(rootPkgContent);\n    const deps = {\n        ...rootPkg.devDependencies,\n        ...rootPkg.dependencies\n    };\n    const resolveOptions = {\n        root,\n        preserveSymlinks,\n        isProduction: false,\n        isBuild: true\n    };\n    const depsToTrace = new Set();\n    for (const id in deps) {\n        if (seen.has(id))\n            continue;\n        seen.add(id);\n        let esmEntry;\n        let requireEntry;\n        try {\n            esmEntry = tryNodeResolve(id, undefined, resolveOptions, true, // we set `targetWeb` to `true` to get the ESM entry\n            undefined, true)?.id;\n            // normalizePath required for windows. tryNodeResolve uses normalizePath\n            // which returns with '/', require.resolve returns with '\\\\'\n            requireEntry = normalizePath$3(_require$3.resolve(id, { paths: [root] }));\n        }\n        catch (e) {\n            try {\n                // no main entry, but deep imports may be allowed\n                const pkgPath = resolveFrom(`${id}/package.json`, root);\n                if (pkgPath.includes('node_modules')) {\n                    ssrExternals.add(id);\n                }\n                else {\n                    depsToTrace.add(path$n.dirname(pkgPath));\n                }\n                continue;\n            }\n            catch { }\n            // resolve failed, assume include\n            debug$9(`Failed to resolve entries for package \"${id}\"\\n`, e);\n            continue;\n        }\n        // no esm entry but has require entry\n        if (!esmEntry) {\n            ssrExternals.add(id);\n        }\n        // trace the dependencies of linked packages\n        else if (!esmEntry.includes('node_modules')) {\n            const pkgPath = resolveFrom(`${id}/package.json`, root);\n            depsToTrace.add(path$n.dirname(pkgPath));\n        }\n        // has separate esm/require entry, assume require entry is cjs\n        else if (esmEntry !== requireEntry) {\n            ssrExternals.add(id);\n        }\n        // if we're externalizing ESM and CJS should basically just always do it?\n        // or are there others like SystemJS / AMD that we'd need to handle?\n        // for now, we'll just leave this as is\n        else if (/\\.m?js$/.test(esmEntry)) {\n            const pkgPath = resolveFrom(`${id}/package.json`, root);\n            const pkgContent = fs$l.readFileSync(pkgPath, 'utf-8');\n            if (!pkgContent) {\n                continue;\n            }\n            const pkg = JSON.parse(pkgContent);\n            if (pkg.type === 'module' || esmEntry.endsWith('.mjs')) {\n                ssrExternals.add(id);\n                continue;\n            }\n            // check if the entry is cjs\n            const content = fs$l.readFileSync(esmEntry, 'utf-8');\n            if (CJS_CONTENT_RE.test(content)) {\n                ssrExternals.add(id);\n                continue;\n            }\n            logger.warn(`${id} doesn't appear to be written in CJS, but also doesn't appear to be a valid ES module (i.e. it doesn't have \"type\": \"module\" or an .mjs extension for the entry point). Please contact the package author to fix.`);\n        }\n    }\n    for (const depRoot of depsToTrace) {\n        cjsSsrCollectExternals(depRoot, preserveSymlinks, ssrExternals, seen, logger);\n    }\n}\nfunction cjsShouldExternalizeForSSR(id, externals) {\n    if (!externals) {\n        return false;\n    }\n    const should = externals.some((e) => {\n        if (id === e) {\n            return true;\n        }\n        // deep imports, check ext before externalizing - only externalize\n        // extension-less imports and explicit .js imports\n        if (id.startsWith(e + '/') && (!path$n.extname(id) || id.endsWith('.js'))) {\n            return true;\n        }\n    });\n    return should;\n}\nfunction getNpmPackageName(importPath) {\n    const parts = importPath.split('/');\n    if (parts[0].startsWith('@')) {\n        if (!parts[1])\n            return null;\n        return `${parts[0]}/${parts[1]}`;\n    }\n    else {\n        return parts[0];\n    }\n}\n\n/*!\n * etag\n * Copyright(c) 2014-2016 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n/**\n * Module exports.\n * @public\n */\n\nvar etag_1 = etag;\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar crypto = require$$5;\nvar Stats = require$$0__default.Stats;\n\n/**\n * Module variables.\n * @private\n */\n\nvar toString = Object.prototype.toString;\n\n/**\n * Generate an entity tag.\n *\n * @param {Buffer|string} entity\n * @return {string}\n * @private\n */\n\nfunction entitytag (entity) {\n  if (entity.length === 0) {\n    // fast-path empty\n    return '\"0-2jmj7l5rSw0yVb/vlWAYkK/YBwk\"'\n  }\n\n  // compute hash of entity\n  var hash = crypto\n    .createHash('sha1')\n    .update(entity, 'utf8')\n    .digest('base64')\n    .substring(0, 27);\n\n  // compute length of entity\n  var len = typeof entity === 'string'\n    ? Buffer.byteLength(entity, 'utf8')\n    : entity.length;\n\n  return '\"' + len.toString(16) + '-' + hash + '\"'\n}\n\n/**\n * Create a simple ETag.\n *\n * @param {string|Buffer|Stats} entity\n * @param {object} [options]\n * @param {boolean} [options.weak]\n * @return {String}\n * @public\n */\n\nfunction etag (entity, options) {\n  if (entity == null) {\n    throw new TypeError('argument entity is required')\n  }\n\n  // support fs.Stats object\n  var isStats = isstats(entity);\n  var weak = options && typeof options.weak === 'boolean'\n    ? options.weak\n    : isStats;\n\n  // validate argument\n  if (!isStats && typeof entity !== 'string' && !Buffer.isBuffer(entity)) {\n    throw new TypeError('argument entity must be string, Buffer, or fs.Stats')\n  }\n\n  // generate entity tag\n  var tag = isStats\n    ? stattag(entity)\n    : entitytag(entity);\n\n  return weak\n    ? 'W/' + tag\n    : tag\n}\n\n/**\n * Determine if object is a Stats object.\n *\n * @param {object} obj\n * @return {boolean}\n * @api private\n */\n\nfunction isstats (obj) {\n  // genuine fs.Stats\n  if (typeof Stats === 'function' && obj instanceof Stats) {\n    return true\n  }\n\n  // quack quack\n  return obj && typeof obj === 'object' &&\n    'ctime' in obj && toString.call(obj.ctime) === '[object Date]' &&\n    'mtime' in obj && toString.call(obj.mtime) === '[object Date]' &&\n    'ino' in obj && typeof obj.ino === 'number' &&\n    'size' in obj && typeof obj.size === 'number'\n}\n\n/**\n * Generate a tag for a stat.\n *\n * @param {object} stat\n * @return {string}\n * @private\n */\n\nfunction stattag (stat) {\n  var mtime = stat.mtime.getTime().toString(16);\n  var size = stat.size.toString(16);\n\n  return '\"' + size + '-' + mtime + '\"'\n}\n\nvar convertSourceMap = {};\n\nvar safeBuffer = {exports: {}};\n\n/* eslint-disable node/no-deprecated-api */\n\n(function (module, exports) {\n\tvar buffer = require$$0$a;\n\tvar Buffer = buffer.Buffer;\n\n\t// alternative to using Object.keys for old browsers\n\tfunction copyProps (src, dst) {\n\t  for (var key in src) {\n\t    dst[key] = src[key];\n\t  }\n\t}\n\tif (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {\n\t  module.exports = buffer;\n\t} else {\n\t  // Copy properties from require('buffer')\n\t  copyProps(buffer, exports);\n\t  exports.Buffer = SafeBuffer;\n\t}\n\n\tfunction SafeBuffer (arg, encodingOrOffset, length) {\n\t  return Buffer(arg, encodingOrOffset, length)\n\t}\n\n\t// Copy static methods from Buffer\n\tcopyProps(Buffer, SafeBuffer);\n\n\tSafeBuffer.from = function (arg, encodingOrOffset, length) {\n\t  if (typeof arg === 'number') {\n\t    throw new TypeError('Argument must not be a number')\n\t  }\n\t  return Buffer(arg, encodingOrOffset, length)\n\t};\n\n\tSafeBuffer.alloc = function (size, fill, encoding) {\n\t  if (typeof size !== 'number') {\n\t    throw new TypeError('Argument must be a number')\n\t  }\n\t  var buf = Buffer(size);\n\t  if (fill !== undefined) {\n\t    if (typeof encoding === 'string') {\n\t      buf.fill(fill, encoding);\n\t    } else {\n\t      buf.fill(fill);\n\t    }\n\t  } else {\n\t    buf.fill(0);\n\t  }\n\t  return buf\n\t};\n\n\tSafeBuffer.allocUnsafe = function (size) {\n\t  if (typeof size !== 'number') {\n\t    throw new TypeError('Argument must be a number')\n\t  }\n\t  return Buffer(size)\n\t};\n\n\tSafeBuffer.allocUnsafeSlow = function (size) {\n\t  if (typeof size !== 'number') {\n\t    throw new TypeError('Argument must be a number')\n\t  }\n\t  return buffer.SlowBuffer(size)\n\t};\n} (safeBuffer, safeBuffer.exports));\n\n(function (exports) {\n\tvar fs = require$$0__default;\n\tvar path = require$$0$4;\n\tvar SafeBuffer = safeBuffer.exports;\n\n\tObject.defineProperty(exports, 'commentRegex', {\n\t  get: function getCommentRegex () {\n\t    return /^\\s*\\/(?:\\/|\\*)[@#]\\s+sourceMappingURL=data:(?:application|text)\\/json;(?:charset[:=]\\S+?;)?base64,(?:.*)$/mg;\n\t  }\n\t});\n\n\tObject.defineProperty(exports, 'mapFileCommentRegex', {\n\t  get: function getMapFileCommentRegex () {\n\t    // Matches sourceMappingURL in either // or /* comment styles.\n\t    return /(?:\\/\\/[@#][ \\t]+sourceMappingURL=([^\\s'\"`]+?)[ \\t]*$)|(?:\\/\\*[@#][ \\t]+sourceMappingURL=([^\\*]+?)[ \\t]*(?:\\*\\/){1}[ \\t]*$)/mg;\n\t  }\n\t});\n\n\n\tfunction decodeBase64(base64) {\n\t  return (SafeBuffer.Buffer.from(base64, 'base64') || \"\").toString();\n\t}\n\n\tfunction stripComment(sm) {\n\t  return sm.split(',').pop();\n\t}\n\n\tfunction readFromFileMap(sm, dir) {\n\t  // NOTE: this will only work on the server since it attempts to read the map file\n\n\t  var r = exports.mapFileCommentRegex.exec(sm);\n\n\t  // for some odd reason //# .. captures in 1 and /* .. */ in 2\n\t  var filename = r[1] || r[2];\n\t  var filepath = path.resolve(dir, filename);\n\n\t  try {\n\t    return fs.readFileSync(filepath, 'utf8');\n\t  } catch (e) {\n\t    throw new Error('An error occurred while trying to read the map file at ' + filepath + '\\n' + e);\n\t  }\n\t}\n\n\tfunction Converter (sm, opts) {\n\t  opts = opts || {};\n\n\t  if (opts.isFileComment) sm = readFromFileMap(sm, opts.commentFileDir);\n\t  if (opts.hasComment) sm = stripComment(sm);\n\t  if (opts.isEncoded) sm = decodeBase64(sm);\n\t  if (opts.isJSON || opts.isEncoded) sm = JSON.parse(sm);\n\n\t  this.sourcemap = sm;\n\t}\n\n\tConverter.prototype.toJSON = function (space) {\n\t  return JSON.stringify(this.sourcemap, null, space);\n\t};\n\n\tConverter.prototype.toBase64 = function () {\n\t  var json = this.toJSON();\n\t  return (SafeBuffer.Buffer.from(json, 'utf8') || \"\").toString('base64');\n\t};\n\n\tConverter.prototype.toComment = function (options) {\n\t  var base64 = this.toBase64();\n\t  var data = 'sourceMappingURL=data:application/json;charset=utf-8;base64,' + base64;\n\t  return options && options.multiline ? '/*# ' + data + ' */' : '//# ' + data;\n\t};\n\n\t// returns copy instead of original\n\tConverter.prototype.toObject = function () {\n\t  return JSON.parse(this.toJSON());\n\t};\n\n\tConverter.prototype.addProperty = function (key, value) {\n\t  if (this.sourcemap.hasOwnProperty(key)) throw new Error('property \"' + key + '\" already exists on the sourcemap, use set property instead');\n\t  return this.setProperty(key, value);\n\t};\n\n\tConverter.prototype.setProperty = function (key, value) {\n\t  this.sourcemap[key] = value;\n\t  return this;\n\t};\n\n\tConverter.prototype.getProperty = function (key) {\n\t  return this.sourcemap[key];\n\t};\n\n\texports.fromObject = function (obj) {\n\t  return new Converter(obj);\n\t};\n\n\texports.fromJSON = function (json) {\n\t  return new Converter(json, { isJSON: true });\n\t};\n\n\texports.fromBase64 = function (base64) {\n\t  return new Converter(base64, { isEncoded: true });\n\t};\n\n\texports.fromComment = function (comment) {\n\t  comment = comment\n\t    .replace(/^\\/\\*/g, '//')\n\t    .replace(/\\*\\/$/g, '');\n\n\t  return new Converter(comment, { isEncoded: true, hasComment: true });\n\t};\n\n\texports.fromMapFileComment = function (comment, dir) {\n\t  return new Converter(comment, { commentFileDir: dir, isFileComment: true, isJSON: true });\n\t};\n\n\t// Finds last sourcemap comment in file or returns null if none was found\n\texports.fromSource = function (content) {\n\t  var m = content.match(exports.commentRegex);\n\t  return m ? exports.fromComment(m.pop()) : null;\n\t};\n\n\t// Finds last sourcemap comment in file or returns null if none was found\n\texports.fromMapFileSource = function (content, dir) {\n\t  var m = content.match(exports.mapFileCommentRegex);\n\t  return m ? exports.fromMapFileComment(m.pop(), dir) : null;\n\t};\n\n\texports.removeComments = function (src) {\n\t  return src.replace(exports.commentRegex, '');\n\t};\n\n\texports.removeMapFileComments = function (src) {\n\t  return src.replace(exports.mapFileCommentRegex, '');\n\t};\n\n\texports.generateMapFileComment = function (file, options) {\n\t  var data = 'sourceMappingURL=' + file;\n\t  return options && options.multiline ? '/*# ' + data + ' */' : '//# ' + data;\n\t};\n} (convertSourceMap));\n\n// @ts-check\n/** @typedef { import('estree').BaseNode} BaseNode */\n\n/** @typedef {{\n\tskip: () => void;\n\tremove: () => void;\n\treplace: (node: BaseNode) => void;\n}} WalkerContext */\n\nclass WalkerBase {\n\tconstructor() {\n\t\t/** @type {boolean} */\n\t\tthis.should_skip = false;\n\n\t\t/** @type {boolean} */\n\t\tthis.should_remove = false;\n\n\t\t/** @type {BaseNode | null} */\n\t\tthis.replacement = null;\n\n\t\t/** @type {WalkerContext} */\n\t\tthis.context = {\n\t\t\tskip: () => (this.should_skip = true),\n\t\t\tremove: () => (this.should_remove = true),\n\t\t\treplace: (node) => (this.replacement = node)\n\t\t};\n\t}\n\n\t/**\n\t *\n\t * @param {any} parent\n\t * @param {string} prop\n\t * @param {number} index\n\t * @param {BaseNode} node\n\t */\n\treplace(parent, prop, index, node) {\n\t\tif (parent) {\n\t\t\tif (index !== null) {\n\t\t\t\tparent[prop][index] = node;\n\t\t\t} else {\n\t\t\t\tparent[prop] = node;\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t *\n\t * @param {any} parent\n\t * @param {string} prop\n\t * @param {number} index\n\t */\n\tremove(parent, prop, index) {\n\t\tif (parent) {\n\t\t\tif (index !== null) {\n\t\t\t\tparent[prop].splice(index, 1);\n\t\t\t} else {\n\t\t\t\tdelete parent[prop];\n\t\t\t}\n\t\t}\n\t}\n}\n\n// @ts-check\n\n/** @typedef { import('estree').BaseNode} BaseNode */\n/** @typedef { import('./walker.js').WalkerContext} WalkerContext */\n\n/** @typedef {(\n *    this: WalkerContext,\n *    node: BaseNode,\n *    parent: BaseNode,\n *    key: string,\n *    index: number\n * ) => void} SyncHandler */\n\nclass SyncWalker extends WalkerBase {\n\t/**\n\t *\n\t * @param {SyncHandler} enter\n\t * @param {SyncHandler} leave\n\t */\n\tconstructor(enter, leave) {\n\t\tsuper();\n\n\t\t/** @type {SyncHandler} */\n\t\tthis.enter = enter;\n\n\t\t/** @type {SyncHandler} */\n\t\tthis.leave = leave;\n\t}\n\n\t/**\n\t *\n\t * @param {BaseNode} node\n\t * @param {BaseNode} parent\n\t * @param {string} [prop]\n\t * @param {number} [index]\n\t * @returns {BaseNode}\n\t */\n\tvisit(node, parent, prop, index) {\n\t\tif (node) {\n\t\t\tif (this.enter) {\n\t\t\t\tconst _should_skip = this.should_skip;\n\t\t\t\tconst _should_remove = this.should_remove;\n\t\t\t\tconst _replacement = this.replacement;\n\t\t\t\tthis.should_skip = false;\n\t\t\t\tthis.should_remove = false;\n\t\t\t\tthis.replacement = null;\n\n\t\t\t\tthis.enter.call(this.context, node, parent, prop, index);\n\n\t\t\t\tif (this.replacement) {\n\t\t\t\t\tnode = this.replacement;\n\t\t\t\t\tthis.replace(parent, prop, index, node);\n\t\t\t\t}\n\n\t\t\t\tif (this.should_remove) {\n\t\t\t\t\tthis.remove(parent, prop, index);\n\t\t\t\t}\n\n\t\t\t\tconst skipped = this.should_skip;\n\t\t\t\tconst removed = this.should_remove;\n\n\t\t\t\tthis.should_skip = _should_skip;\n\t\t\t\tthis.should_remove = _should_remove;\n\t\t\t\tthis.replacement = _replacement;\n\n\t\t\t\tif (skipped) return node;\n\t\t\t\tif (removed) return null;\n\t\t\t}\n\n\t\t\tfor (const key in node) {\n\t\t\t\tconst value = node[key];\n\n\t\t\t\tif (typeof value !== \"object\") {\n\t\t\t\t\tcontinue;\n\t\t\t\t} else if (Array.isArray(value)) {\n\t\t\t\t\tfor (let i = 0; i < value.length; i += 1) {\n\t\t\t\t\t\tif (value[i] !== null && typeof value[i].type === 'string') {\n\t\t\t\t\t\t\tif (!this.visit(value[i], node, key, i)) {\n\t\t\t\t\t\t\t\t// removed\n\t\t\t\t\t\t\t\ti--;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else if (value !== null && typeof value.type === \"string\") {\n\t\t\t\t\tthis.visit(value, node, key, null);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (this.leave) {\n\t\t\t\tconst _replacement = this.replacement;\n\t\t\t\tconst _should_remove = this.should_remove;\n\t\t\t\tthis.replacement = null;\n\t\t\t\tthis.should_remove = false;\n\n\t\t\t\tthis.leave.call(this.context, node, parent, prop, index);\n\n\t\t\t\tif (this.replacement) {\n\t\t\t\t\tnode = this.replacement;\n\t\t\t\t\tthis.replace(parent, prop, index, node);\n\t\t\t\t}\n\n\t\t\t\tif (this.should_remove) {\n\t\t\t\t\tthis.remove(parent, prop, index);\n\t\t\t\t}\n\n\t\t\t\tconst removed = this.should_remove;\n\n\t\t\t\tthis.replacement = _replacement;\n\t\t\t\tthis.should_remove = _should_remove;\n\n\t\t\t\tif (removed) return null;\n\t\t\t}\n\t\t}\n\n\t\treturn node;\n\t}\n}\n\n// @ts-check\n\n/** @typedef { import('estree').BaseNode} BaseNode */\n/** @typedef { import('./sync.js').SyncHandler} SyncHandler */\n/** @typedef { import('./async.js').AsyncHandler} AsyncHandler */\n\n/**\n *\n * @param {BaseNode} ast\n * @param {{\n *   enter?: SyncHandler\n *   leave?: SyncHandler\n * }} walker\n * @returns {BaseNode}\n */\nfunction walk$1(ast, { enter, leave }) {\n\tconst instance = new SyncWalker(enter, leave);\n\treturn instance.visit(ast, null);\n}\n\n/**\n * @param {import('estree').Node} param\n * @returns {string[]}\n */\nfunction extract_names(param) {\n\treturn extract_identifiers(param).map(node => node.name);\n}\n\n/**\n * @param {import('estree').Node} param\n * @param {import('estree').Identifier[]} nodes\n * @returns {import('estree').Identifier[]}\n */\nfunction extract_identifiers(param, nodes = []) {\n\tswitch (param.type) {\n\t\tcase 'Identifier':\n\t\t\tnodes.push(param);\n\t\t\tbreak;\n\n\t\tcase 'MemberExpression':\n\t\t\tlet object = param;\n\t\t\twhile (object.type === 'MemberExpression') {\n\t\t\t\tobject = /** @type {any} */ (object.object);\n\t\t\t}\n\t\t\tnodes.push(/** @type {any} */ (object));\n\t\t\tbreak;\n\n\t\tcase 'ObjectPattern':\n\t\t\t/** @param {import('estree').Property | import('estree').RestElement} prop */\n\t\t\tconst handle_prop = (prop) => {\n\t\t\t\tif (prop.type === 'RestElement') {\n\t\t\t\t\textract_identifiers(prop.argument, nodes);\n\t\t\t\t} else {\n\t\t\t\t\textract_identifiers(prop.value, nodes);\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tparam.properties.forEach(handle_prop);\n\t\t\tbreak;\n\n\t\tcase 'ArrayPattern':\n\t\t\t/** @param {import('estree').Node} element */\n\t\t\tconst handle_element = (element) => {\n\t\t\t\tif (element) extract_identifiers(element, nodes);\n\t\t\t};\n\n\t\t\tparam.elements.forEach(handle_element);\n\t\t\tbreak;\n\n\t\tcase 'RestElement':\n\t\t\textract_identifiers(param.argument, nodes);\n\t\t\tbreak;\n\n\t\tcase 'AssignmentPattern':\n\t\t\textract_identifiers(param.left, nodes);\n\t\t\tbreak;\n\t}\n\n\treturn nodes;\n}\n\n/**\n * https://github.com/rollup/plugins/blob/master/packages/json/src/index.js\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file at\n * https://github.com/rollup/plugins/blob/master/LICENSE\n */\n// Custom json filter for vite\nconst jsonExtRE = /\\.json($|\\?)(?!commonjs-(proxy|external))/;\nconst jsonLangs = `\\\\.(json|json5)($|\\\\?)`;\nconst jsonLangRE = new RegExp(jsonLangs);\nconst isJSONRequest = (request) => jsonLangRE.test(request);\nfunction jsonPlugin(options = {}, isBuild) {\n    return {\n        name: 'vite:json',\n        transform(json, id) {\n            if (!jsonExtRE.test(id))\n                return null;\n            if (SPECIAL_QUERY_RE.test(id))\n                return null;\n            json = stripBomTag(json);\n            try {\n                if (options.stringify) {\n                    if (isBuild) {\n                        return {\n                            // during build, parse then double-stringify to remove all\n                            // unnecessary whitespaces to reduce bundle size.\n                            code: `export default JSON.parse(${JSON.stringify(JSON.stringify(JSON.parse(json)))})`,\n                            map: { mappings: '' }\n                        };\n                    }\n                    else {\n                        return `export default JSON.parse(${JSON.stringify(json)})`;\n                    }\n                }\n                const parsed = JSON.parse(json);\n                return {\n                    code: dataToEsm(parsed, {\n                        preferConst: true,\n                        namedExports: options.namedExports\n                    }),\n                    map: { mappings: '' }\n                };\n            }\n            catch (e) {\n                const errorMessageList = /[\\d]+/.exec(e.message);\n                const position = errorMessageList && parseInt(errorMessageList[0], 10);\n                const msg = position\n                    ? `, invalid JSON syntax found at line ${position}`\n                    : `.`;\n                this.error(`Failed to parse JSON file` + msg, e.idx);\n            }\n        }\n    };\n}\n\nconst ssrModuleExportsKey = `__vite_ssr_exports__`;\nconst ssrImportKey = `__vite_ssr_import__`;\nconst ssrDynamicImportKey = `__vite_ssr_dynamic_import__`;\nconst ssrExportAllKey = `__vite_ssr_exportAll__`;\nconst ssrImportMetaKey = `__vite_ssr_import_meta__`;\nasync function ssrTransform(code, inMap, url, originalCode, options) {\n    if (options?.json?.stringify && isJSONRequest(url)) {\n        return ssrTransformJSON(code, inMap);\n    }\n    return ssrTransformScript(code, inMap, url, originalCode);\n}\nasync function ssrTransformJSON(code, inMap) {\n    return {\n        code: code.replace('export default', `${ssrModuleExportsKey}.default =`),\n        map: inMap,\n        deps: [],\n        dynamicDeps: []\n    };\n}\nasync function ssrTransformScript(code, inMap, url, originalCode) {\n    const s = new MagicString(code);\n    let ast;\n    try {\n        ast = parser.parse(code, {\n            sourceType: 'module',\n            ecmaVersion: 'latest',\n            locations: true,\n            allowHashBang: true\n        });\n    }\n    catch (err) {\n        if (!err.loc || !err.loc.line)\n            throw err;\n        const line = err.loc.line;\n        throw new Error(`Parse failure: ${err.message}\\nContents of line ${line}: ${code.split('\\n')[line - 1]}`);\n    }\n    let uid = 0;\n    const deps = new Set();\n    const dynamicDeps = new Set();\n    const idToImportMap = new Map();\n    const declaredConst = new Set();\n    function defineImport(node, source) {\n        deps.add(source);\n        const importId = `__vite_ssr_import_${uid++}__`;\n        s.appendRight(node.start, `const ${importId} = await ${ssrImportKey}(${JSON.stringify(source)});\\n`);\n        return importId;\n    }\n    function defineExport(position, name, local = name) {\n        s.appendLeft(position, `\\nObject.defineProperty(${ssrModuleExportsKey}, \"${name}\", ` +\n            `{ enumerable: true, configurable: true, get(){ return ${local} }});`);\n    }\n    // 1. check all import statements and record id -> importName map\n    for (const node of ast.body) {\n        // import foo from 'foo' --> foo -> __import_foo__.default\n        // import { baz } from 'foo' --> baz -> __import_foo__.baz\n        // import * as ok from 'foo' --> ok -> __import_foo__\n        if (node.type === 'ImportDeclaration') {\n            s.remove(node.start, node.end);\n            const importId = defineImport(node, node.source.value);\n            for (const spec of node.specifiers) {\n                if (spec.type === 'ImportSpecifier') {\n                    idToImportMap.set(spec.local.name, `${importId}.${spec.imported.name}`);\n                }\n                else if (spec.type === 'ImportDefaultSpecifier') {\n                    idToImportMap.set(spec.local.name, `${importId}.default`);\n                }\n                else {\n                    // namespace specifier\n                    idToImportMap.set(spec.local.name, importId);\n                }\n            }\n        }\n    }\n    // 2. check all export statements and define exports\n    for (const node of ast.body) {\n        // named exports\n        if (node.type === 'ExportNamedDeclaration') {\n            if (node.declaration) {\n                if (node.declaration.type === 'FunctionDeclaration' ||\n                    node.declaration.type === 'ClassDeclaration') {\n                    // export function foo() {}\n                    defineExport(node.end, node.declaration.id.name);\n                }\n                else {\n                    // export const foo = 1, bar = 2\n                    for (const declaration of node.declaration.declarations) {\n                        const names = extract_names(declaration.id);\n                        for (const name of names) {\n                            defineExport(node.end, name);\n                        }\n                    }\n                }\n                s.remove(node.start, node.declaration.start);\n            }\n            else {\n                s.remove(node.start, node.end);\n                if (node.source) {\n                    // export { foo, bar } from './foo'\n                    const importId = defineImport(node, node.source.value);\n                    for (const spec of node.specifiers) {\n                        defineExport(node.end, spec.exported.name, `${importId}.${spec.local.name}`);\n                    }\n                }\n                else {\n                    // export { foo, bar }\n                    for (const spec of node.specifiers) {\n                        const local = spec.local.name;\n                        const binding = idToImportMap.get(local);\n                        defineExport(node.end, spec.exported.name, binding || local);\n                    }\n                }\n            }\n        }\n        // default export\n        if (node.type === 'ExportDefaultDeclaration') {\n            const expressionTypes = ['FunctionExpression', 'ClassExpression'];\n            if ('id' in node.declaration &&\n                node.declaration.id &&\n                !expressionTypes.includes(node.declaration.type)) {\n                // named hoistable/class exports\n                // export default function foo() {}\n                // export default class A {}\n                const { name } = node.declaration.id;\n                s.remove(node.start, node.start + 15 /* 'export default '.length */);\n                s.append(`\\nObject.defineProperty(${ssrModuleExportsKey}, \"default\", ` +\n                    `{ enumerable: true, configurable: true, value: ${name} });`);\n            }\n            else {\n                // anonymous default exports\n                s.overwrite(node.start, node.start + 14 /* 'export default'.length */, `${ssrModuleExportsKey}.default =`, { contentOnly: true });\n            }\n        }\n        // export * from './foo'\n        if (node.type === 'ExportAllDeclaration') {\n            s.remove(node.start, node.end);\n            const importId = defineImport(node, node.source.value);\n            if (node.exported) {\n                defineExport(node.end, node.exported.name, `${importId}`);\n            }\n            else {\n                s.appendLeft(node.end, `${ssrExportAllKey}(${importId});`);\n            }\n        }\n    }\n    // 3. convert references to import bindings & import.meta references\n    walk(ast, {\n        onIdentifier(id, parent, parentStack) {\n            const grandparent = parentStack[1];\n            const binding = idToImportMap.get(id.name);\n            if (!binding) {\n                return;\n            }\n            if (isStaticProperty(parent) && parent.shorthand) {\n                // let binding used in a property shorthand\n                // { foo } -> { foo: __import_x__.foo }\n                // skip for destructuring patterns\n                if (!isNodeInPattern(parent) ||\n                    isInDestructuringAssignment(parent, parentStack)) {\n                    s.appendLeft(id.end, `: ${binding}`);\n                }\n            }\n            else if ((parent.type === 'PropertyDefinition' &&\n                grandparent?.type === 'ClassBody') ||\n                (parent.type === 'ClassDeclaration' && id === parent.superClass)) {\n                if (!declaredConst.has(id.name)) {\n                    declaredConst.add(id.name);\n                    // locate the top-most node containing the class declaration\n                    const topNode = parentStack[parentStack.length - 2];\n                    s.prependRight(topNode.start, `const ${id.name} = ${binding};\\n`);\n                }\n            }\n            else {\n                s.overwrite(id.start, id.end, binding, { contentOnly: true });\n            }\n        },\n        onImportMeta(node) {\n            s.overwrite(node.start, node.end, ssrImportMetaKey, { contentOnly: true });\n        },\n        onDynamicImport(node) {\n            s.overwrite(node.start, node.start + 6, ssrDynamicImportKey, {\n                contentOnly: true\n            });\n            if (node.type === 'ImportExpression' && node.source.type === 'Literal') {\n                dynamicDeps.add(node.source.value);\n            }\n        }\n    });\n    let map = s.generateMap({ hires: true });\n    if (inMap && inMap.mappings && inMap.sources.length > 0) {\n        map = combineSourcemaps(url, [\n            {\n                ...map,\n                sources: inMap.sources,\n                sourcesContent: inMap.sourcesContent\n            },\n            inMap\n        ], false);\n    }\n    else {\n        map.sources = [url];\n        // needs to use originalCode instead of code\n        // because code might be already transformed even if map is null\n        map.sourcesContent = [originalCode];\n    }\n    return {\n        code: s.toString(),\n        map,\n        deps: [...deps],\n        dynamicDeps: [...dynamicDeps]\n    };\n}\nconst isNodeInPatternWeakSet = new WeakSet();\nconst setIsNodeInPattern = (node) => isNodeInPatternWeakSet.add(node);\nconst isNodeInPattern = (node) => isNodeInPatternWeakSet.has(node);\n/**\n * Same logic from \\@vue/compiler-core & \\@vue/compiler-sfc\n * Except this is using acorn AST\n */\nfunction walk(root, { onIdentifier, onImportMeta, onDynamicImport }) {\n    const parentStack = [];\n    const scopeMap = new WeakMap();\n    const identifiers = [];\n    const setScope = (node, name) => {\n        let scopeIds = scopeMap.get(node);\n        if (scopeIds && scopeIds.has(name)) {\n            return;\n        }\n        if (!scopeIds) {\n            scopeIds = new Set();\n            scopeMap.set(node, scopeIds);\n        }\n        scopeIds.add(name);\n    };\n    function isInScope(name, parents) {\n        return parents.some((node) => node && scopeMap.get(node)?.has(name));\n    }\n    function handlePattern(p, parentFunction) {\n        if (p.type === 'Identifier') {\n            setScope(parentFunction, p.name);\n        }\n        else if (p.type === 'RestElement') {\n            handlePattern(p.argument, parentFunction);\n        }\n        else if (p.type === 'ObjectPattern') {\n            p.properties.forEach((property) => {\n                if (property.type === 'RestElement') {\n                    setScope(parentFunction, property.argument.name);\n                }\n                else {\n                    handlePattern(property.value, parentFunction);\n                }\n            });\n        }\n        else if (p.type === 'ArrayPattern') {\n            p.elements.forEach((element) => {\n                if (element) {\n                    handlePattern(element, parentFunction);\n                }\n            });\n        }\n        else if (p.type === 'AssignmentPattern') {\n            handlePattern(p.left, parentFunction);\n        }\n        else {\n            setScope(parentFunction, p.name);\n        }\n    }\n    walk$1(root, {\n        enter(node, parent) {\n            if (node.type === 'ImportDeclaration') {\n                return this.skip();\n            }\n            parent && parentStack.unshift(parent);\n            if (node.type === 'MetaProperty' && node.meta.name === 'import') {\n                onImportMeta(node);\n            }\n            else if (node.type === 'ImportExpression') {\n                onDynamicImport(node);\n            }\n            if (node.type === 'Identifier') {\n                if (!isInScope(node.name, parentStack) &&\n                    isRefIdentifier(node, parent, parentStack)) {\n                    // record the identifier, for DFS -> BFS\n                    identifiers.push([node, parentStack.slice(0)]);\n                }\n            }\n            else if (isFunction(node)) {\n                // If it is a function declaration, it could be shadowing an import\n                // Add its name to the scope so it won't get replaced\n                if (node.type === 'FunctionDeclaration') {\n                    const parentFunction = findParentFunction(parentStack);\n                    if (parentFunction) {\n                        setScope(parentFunction, node.id.name);\n                    }\n                }\n                // walk function expressions and add its arguments to known identifiers\n                // so that we don't prefix them\n                node.params.forEach((p) => {\n                    if (p.type === 'ObjectPattern' || p.type === 'ArrayPattern') {\n                        handlePattern(p, node);\n                        return;\n                    }\n                    walk$1(p.type === 'AssignmentPattern' ? p.left : p, {\n                        enter(child, parent) {\n                            // skip params default value of destructure\n                            if (parent?.type === 'AssignmentPattern' &&\n                                parent?.right === child) {\n                                return this.skip();\n                            }\n                            if (child.type !== 'Identifier')\n                                return;\n                            // do not record as scope variable if is a destructuring keyword\n                            if (isStaticPropertyKey(child, parent))\n                                return;\n                            // do not record if this is a default value\n                            // assignment of a destructuring variable\n                            if ((parent?.type === 'TemplateLiteral' &&\n                                parent?.expressions.includes(child)) ||\n                                (parent?.type === 'CallExpression' && parent?.callee === child)) {\n                                return;\n                            }\n                            setScope(node, child.name);\n                        }\n                    });\n                });\n            }\n            else if (node.type === 'Property' && parent.type === 'ObjectPattern') {\n                // mark property in destructuring pattern\n                setIsNodeInPattern(node);\n            }\n            else if (node.type === 'VariableDeclarator') {\n                const parentFunction = findParentFunction(parentStack);\n                if (parentFunction) {\n                    handlePattern(node.id, parentFunction);\n                }\n            }\n        },\n        leave(node, parent) {\n            parent && parentStack.shift();\n        }\n    });\n    // emit the identifier events in BFS so the hoisted declarations\n    // can be captured correctly\n    identifiers.forEach(([node, stack]) => {\n        if (!isInScope(node.name, stack))\n            onIdentifier(node, stack[0], stack);\n    });\n}\nfunction isRefIdentifier(id, parent, parentStack) {\n    // declaration id\n    if (parent.type === 'CatchClause' ||\n        ((parent.type === 'VariableDeclarator' ||\n            parent.type === 'ClassDeclaration') &&\n            parent.id === id)) {\n        return false;\n    }\n    if (isFunction(parent)) {\n        // function declaration/expression id\n        if (parent.id === id) {\n            return false;\n        }\n        // params list\n        if (parent.params.includes(id)) {\n            return false;\n        }\n    }\n    // class method name\n    if (parent.type === 'MethodDefinition' && !parent.computed) {\n        return false;\n    }\n    // property key\n    if (isStaticPropertyKey(id, parent)) {\n        return false;\n    }\n    // object destructuring pattern\n    if (isNodeInPattern(parent) && parent.value === id) {\n        return false;\n    }\n    // non-assignment array destructuring pattern\n    if (parent.type === 'ArrayPattern' &&\n        !isInDestructuringAssignment(parent, parentStack)) {\n        return false;\n    }\n    // member expression property\n    if (parent.type === 'MemberExpression' &&\n        parent.property === id &&\n        !parent.computed) {\n        return false;\n    }\n    if (parent.type === 'ExportSpecifier') {\n        return false;\n    }\n    // is a special keyword but parsed as identifier\n    if (id.name === 'arguments') {\n        return false;\n    }\n    return true;\n}\nconst isStaticProperty = (node) => node && node.type === 'Property' && !node.computed;\nconst isStaticPropertyKey = (node, parent) => isStaticProperty(parent) && parent.key === node;\nfunction isFunction(node) {\n    return /Function(?:Expression|Declaration)$|Method$/.test(node.type);\n}\nfunction findParentFunction(parentStack) {\n    return parentStack.find((i) => isFunction(i));\n}\nfunction isInDestructuringAssignment(parent, parentStack) {\n    if (parent &&\n        (parent.type === 'Property' || parent.type === 'ArrayPattern')) {\n        return parentStack.some((i) => i.type === 'AssignmentExpression');\n    }\n    return false;\n}\n\nfunction totalist(dir, callback, pre='') {\n\tdir = resolve$4('.', dir);\n\tlet arr = readdirSync(dir);\n\tlet i=0, abs, stats;\n\tfor (; i < arr.length; i++) {\n\t\tabs = join$1(dir, arr[i]);\n\t\tstats = statSync$1(abs);\n\t\tstats.isDirectory()\n\t\t\t? totalist(abs, callback, join$1(pre, arr[i]))\n\t\t\t: callback(join$1(pre, arr[i]), abs, stats);\n\t}\n}\n\n/**\n * @typedef ParsedURL\n * @type {import('.').ParsedURL}\n */\n\n/**\n * @typedef Request\n * @property {string} url\n * @property {ParsedURL} _parsedUrl\n */\n\n/**\n * @param {Request} req\n * @returns {ParsedURL|void}\n */\nfunction parse$a(req) {\n\tlet raw = req.url;\n\tif (raw == null) return;\n\n\tlet prev = req._parsedUrl;\n\tif (prev && prev.raw === raw) return prev;\n\n\tlet pathname=raw, search='', query;\n\n\tif (raw.length > 1) {\n\t\tlet idx = raw.indexOf('?', 1);\n\n\t\tif (idx !== -1) {\n\t\t\tsearch = raw.substring(idx);\n\t\t\tpathname = raw.substring(0, idx);\n\t\t\tif (search.length > 1) {\n\t\t\t\tquery = qs.parse(search.substring(1));\n\t\t\t}\n\t\t}\n\t}\n\n\treturn req._parsedUrl = { pathname, search, query, raw };\n}\n\nconst noop$2 = () => {};\n\nfunction isMatch$1(uri, arr) {\n\tfor (let i=0; i < arr.length; i++) {\n\t\tif (arr[i].test(uri)) return true;\n\t}\n}\n\nfunction toAssume(uri, extns) {\n\tlet i=0, x, len=uri.length - 1;\n\tif (uri.charCodeAt(len) === 47) {\n\t\turi = uri.substring(0, len);\n\t}\n\n\tlet arr=[], tmp=`${uri}/index`;\n\tfor (; i < extns.length; i++) {\n\t\tx = extns[i] ? `.${extns[i]}` : '';\n\t\tif (uri) arr.push(uri + x);\n\t\tarr.push(tmp + x);\n\t}\n\n\treturn arr;\n}\n\nfunction viaCache(cache, uri, extns) {\n\tlet i=0, data, arr=toAssume(uri, extns);\n\tfor (; i < arr.length; i++) {\n\t\tif (data = cache[arr[i]]) return data;\n\t}\n}\n\nfunction viaLocal(dir, isEtag, uri, extns) {\n\tlet i=0, arr=toAssume(uri, extns);\n\tlet abs, stats, name, headers;\n\tfor (; i < arr.length; i++) {\n\t\tabs = normalize(join$1(dir, name=arr[i]));\n\t\tif (abs.startsWith(dir) && require$$0$2.existsSync(abs)) {\n\t\t\tstats = require$$0$2.statSync(abs);\n\t\t\tif (stats.isDirectory()) continue;\n\t\t\theaders = toHeaders(name, stats, isEtag);\n\t\t\theaders['Cache-Control'] = isEtag ? 'no-cache' : 'no-store';\n\t\t\treturn { abs, stats, headers };\n\t\t}\n\t}\n}\n\nfunction is404(req, res) {\n\treturn (res.statusCode=404,res.end());\n}\n\nfunction send$2(req, res, file, stats, headers) {\n\tlet code=200, tmp, opts={};\n\theaders = { ...headers };\n\n\tfor (let key in headers) {\n\t\ttmp = res.getHeader(key);\n\t\tif (tmp) headers[key] = tmp;\n\t}\n\n\tif (tmp = res.getHeader('content-type')) {\n\t\theaders['Content-Type'] = tmp;\n\t}\n\n\tif (req.headers.range) {\n\t\tcode = 206;\n\t\tlet [x, y] = req.headers.range.replace('bytes=', '').split('-');\n\t\tlet end = opts.end = parseInt(y, 10) || stats.size - 1;\n\t\tlet start = opts.start = parseInt(x, 10) || 0;\n\n\t\tif (start >= stats.size || end >= stats.size) {\n\t\t\tres.setHeader('Content-Range', `bytes */${stats.size}`);\n\t\t\tres.statusCode = 416;\n\t\t\treturn res.end();\n\t\t}\n\n\t\theaders['Content-Range'] = `bytes ${start}-${end}/${stats.size}`;\n\t\theaders['Content-Length'] = (end - start + 1);\n\t\theaders['Accept-Ranges'] = 'bytes';\n\t}\n\n\tres.writeHead(code, headers);\n\trequire$$0$2.createReadStream(file, opts).pipe(res);\n}\n\nconst ENCODING = {\n\t'.br': 'br',\n\t'.gz': 'gzip',\n};\n\nfunction toHeaders(name, stats, isEtag) {\n\tlet enc = ENCODING[name.slice(-3)];\n\n\tlet ctype = lookup(name.slice(0, enc && -3)) || '';\n\tif (ctype === 'text/html') ctype += ';charset=utf-8';\n\n\tlet headers = {\n\t\t'Content-Length': stats.size,\n\t\t'Content-Type': ctype,\n\t\t'Last-Modified': stats.mtime.toUTCString(),\n\t};\n\n\tif (enc) headers['Content-Encoding'] = enc;\n\tif (isEtag) headers['ETag'] = `W/\"${stats.size}-${stats.mtime.getTime()}\"`;\n\n\treturn headers;\n}\n\nfunction sirv (dir, opts={}) {\n\tdir = resolve$4(dir || '.');\n\n\tlet isNotFound = opts.onNoMatch || is404;\n\tlet setHeaders = opts.setHeaders || noop$2;\n\n\tlet extensions = opts.extensions || ['html', 'htm'];\n\tlet gzips = opts.gzip && extensions.map(x => `${x}.gz`).concat('gz');\n\tlet brots = opts.brotli && extensions.map(x => `${x}.br`).concat('br');\n\n\tconst FILES = {};\n\n\tlet fallback = '/';\n\tlet isEtag = !!opts.etag;\n\tlet isSPA = !!opts.single;\n\tif (typeof opts.single === 'string') {\n\t\tlet idx = opts.single.lastIndexOf('.');\n\t\tfallback += !!~idx ? opts.single.substring(0, idx) : opts.single;\n\t}\n\n\tlet ignores = [];\n\tif (opts.ignores !== false) {\n\t\tignores.push(/[/]([A-Za-z\\s\\d~$._-]+\\.\\w+){1,}$/); // any extn\n\t\tif (opts.dotfiles) ignores.push(/\\/\\.\\w/);\n\t\telse ignores.push(/\\/\\.well-known/);\n\t\t[].concat(opts.ignores || []).forEach(x => {\n\t\t\tignores.push(new RegExp(x, 'i'));\n\t\t});\n\t}\n\n\tlet cc = opts.maxAge != null && `public,max-age=${opts.maxAge}`;\n\tif (cc && opts.immutable) cc += ',immutable';\n\telse if (cc && opts.maxAge === 0) cc += ',must-revalidate';\n\n\tif (!opts.dev) {\n\t\ttotalist(dir, (name, abs, stats) => {\n\t\t\tif (/\\.well-known[\\\\+\\/]/.test(name)) ; // keep\n\t\t\telse if (!opts.dotfiles && /(^\\.|[\\\\+|\\/+]\\.)/.test(name)) return;\n\n\t\t\tlet headers = toHeaders(name, stats, isEtag);\n\t\t\tif (cc) headers['Cache-Control'] = cc;\n\n\t\t\tFILES['/' + name.normalize().replace(/\\\\+/g, '/')] = { abs, stats, headers };\n\t\t});\n\t}\n\n\tlet lookup = opts.dev ? viaLocal.bind(0, dir, isEtag) : viaCache.bind(0, FILES);\n\n\treturn function (req, res, next) {\n\t\tlet extns = [''];\n\t\tlet pathname = parse$a(req).pathname;\n\t\tlet val = req.headers['accept-encoding'] || '';\n\t\tif (gzips && val.includes('gzip')) extns.unshift(...gzips);\n\t\tif (brots && /(br|brotli)/i.test(val)) extns.unshift(...brots);\n\t\textns.push(...extensions); // [...br, ...gz, orig, ...exts]\n\n\t\tif (pathname.indexOf('%') !== -1) {\n\t\t\ttry { pathname = decodeURIComponent(pathname); }\n\t\t\tcatch (err) { /* malform uri */ }\n\t\t}\n\n\t\tlet data = lookup(pathname, extns) || isSPA && !isMatch$1(pathname, ignores) && lookup(fallback, extns);\n\t\tif (!data) return next ? next() : isNotFound(req, res);\n\n\t\tif (isEtag && req.headers['if-none-match'] === data.headers['ETag']) {\n\t\t\tres.writeHead(304);\n\t\t\treturn res.end();\n\t\t}\n\n\t\tif (gzips || brots) {\n\t\t\tres.setHeader('Vary', 'Accept-Encoding');\n\t\t}\n\n\t\tsetHeaders(res, pathname, data.stats);\n\t\tsend$2(req, res, data.abs, data.stats, data.headers);\n\t};\n}\n\nconst { isMatch } = micromatch_1;\nconst sirvOptions = (headers) => {\n    return {\n        dev: true,\n        etag: true,\n        extensions: [],\n        setHeaders(res, pathname) {\n            // Matches js, jsx, ts, tsx.\n            // The reason this is done, is that the .ts file extension is reserved\n            // for the MIME type video/mp2t. In almost all cases, we can expect\n            // these files to be TypeScript files, and for Vite to serve them with\n            // this Content-Type.\n            if (/\\.[tj]sx?$/.test(pathname)) {\n                res.setHeader('Content-Type', 'application/javascript');\n            }\n            if (headers) {\n                for (const name in headers) {\n                    res.setHeader(name, headers[name]);\n                }\n            }\n        }\n    };\n};\nfunction servePublicMiddleware(dir, headers) {\n    const serve = sirv(dir, sirvOptions(headers));\n    // Keep the named function. The name is visible in debug logs via `DEBUG=connect:dispatcher ...`\n    return function viteServePublicMiddleware(req, res, next) {\n        // skip import request and internal requests `/@fs/ /@vite-client` etc...\n        if (isImportRequest(req.url) || isInternalRequest(req.url)) {\n            return next();\n        }\n        serve(req, res, next);\n    };\n}\nfunction serveStaticMiddleware(dir, server) {\n    const serve = sirv(dir, sirvOptions(server.config.server.headers));\n    // Keep the named function. The name is visible in debug logs via `DEBUG=connect:dispatcher ...`\n    return function viteServeStaticMiddleware(req, res, next) {\n        // only serve the file if it's not an html request or ends with `/`\n        // so that html requests can fallthrough to our html middleware for\n        // special processing\n        // also skip internal requests `/@fs/ /@vite-client` etc...\n        const cleanedUrl = cleanUrl(req.url);\n        if (cleanedUrl.endsWith('/') ||\n            path$n.extname(cleanedUrl) === '.html' ||\n            isInternalRequest(req.url)) {\n            return next();\n        }\n        const url = new URL(req.url, 'http://example.com');\n        const pathname = decodeURIComponent(url.pathname);\n        // apply aliases to static requests as well\n        let redirectedPathname;\n        for (const { find, replacement } of server.config.resolve.alias) {\n            const matches = typeof find === 'string'\n                ? pathname.startsWith(find)\n                : find.test(pathname);\n            if (matches) {\n                redirectedPathname = pathname.replace(find, replacement);\n                break;\n            }\n        }\n        if (redirectedPathname) {\n            // dir is pre-normalized to posix style\n            if (redirectedPathname.startsWith(dir)) {\n                redirectedPathname = redirectedPathname.slice(dir.length);\n            }\n        }\n        const resolvedPathname = redirectedPathname || pathname;\n        let fileUrl = path$n.resolve(dir, resolvedPathname.replace(/^\\//, ''));\n        if (resolvedPathname.endsWith('/') && !fileUrl.endsWith('/')) {\n            fileUrl = fileUrl + '/';\n        }\n        if (!ensureServingAccess(fileUrl, server, res, next)) {\n            return;\n        }\n        if (redirectedPathname) {\n            url.pathname = encodeURIComponent(redirectedPathname);\n            req.url = url.href.slice(url.origin.length);\n        }\n        serve(req, res, next);\n    };\n}\nfunction serveRawFsMiddleware(server) {\n    const serveFromRoot = sirv('/', sirvOptions(server.config.server.headers));\n    // Keep the named function. The name is visible in debug logs via `DEBUG=connect:dispatcher ...`\n    return function viteServeRawFsMiddleware(req, res, next) {\n        const url = new URL(req.url, 'http://example.com');\n        // In some cases (e.g. linked monorepos) files outside of root will\n        // reference assets that are also out of served root. In such cases\n        // the paths are rewritten to `/@fs/` prefixed paths and must be served by\n        // searching based from fs root.\n        if (url.pathname.startsWith(FS_PREFIX)) {\n            const pathname = decodeURIComponent(url.pathname);\n            // restrict files outside of `fs.allow`\n            if (!ensureServingAccess(slash$1(path$n.resolve(fsPathFromId(pathname))), server, res, next)) {\n                return;\n            }\n            let newPathname = pathname.slice(FS_PREFIX.length);\n            if (isWindows$4)\n                newPathname = newPathname.replace(/^[A-Z]:/i, '');\n            url.pathname = encodeURIComponent(newPathname);\n            req.url = url.href.slice(url.origin.length);\n            serveFromRoot(req, res, next);\n        }\n        else {\n            next();\n        }\n    };\n}\nconst _matchOptions = { matchBase: true };\nfunction isFileServingAllowed(url, server) {\n    if (!server.config.server.fs.strict)\n        return true;\n    const file = fsPathFromUrl(url);\n    if (server.config.server.fs.deny.some((i) => isMatch(file, i, _matchOptions)))\n        return false;\n    if (server.moduleGraph.safeModulesPath.has(file))\n        return true;\n    if (server.config.server.fs.allow.some((dir) => isParentDirectory(dir, file)))\n        return true;\n    return false;\n}\nfunction ensureServingAccess(url, server, res, next) {\n    if (isFileServingAllowed(url, server)) {\n        return true;\n    }\n    if (isFileReadable(cleanUrl(url))) {\n        const urlMessage = `The request url \"${url}\" is outside of Vite serving allow list.`;\n        const hintMessage = `\n${server.config.server.fs.allow.map((i) => `- ${i}`).join('\\n')}\n\nRefer to docs https://vitejs.dev/config/server-options.html#server-fs-allow for configurations and more details.`;\n        server.config.logger.error(urlMessage);\n        server.config.logger.warnOnce(hintMessage + '\\n');\n        res.statusCode = 403;\n        res.write(renderRestrictedErrorHTML(urlMessage + '\\n' + hintMessage));\n        res.end();\n    }\n    else {\n        // if the file doesn't exist, we shouldn't restrict this path as it can\n        // be an API call. Middlewares would issue a 404 if the file isn't handled\n        next();\n    }\n    return false;\n}\nfunction renderRestrictedErrorHTML(msg) {\n    // to have syntax highlighting and autocompletion in IDE\n    const html = String.raw;\n    return html `\n    <body>\n      <h1>403 Restricted</h1>\n      <p>${msg.replace(/\\n/g, '<br/>')}</p>\n      <style>\n        body {\n          padding: 1em 2em;\n        }\n      </style>\n    </body>\n  `;\n}\n\nconst debugLoad = createDebugger('vite:load');\nconst debugTransform = createDebugger('vite:transform');\nconst debugCache$1 = createDebugger('vite:cache');\nconst isDebug$3 = !!process.env.DEBUG;\nfunction transformRequest(url, server, options = {}) {\n    const cacheKey = (options.ssr ? 'ssr:' : options.html ? 'html:' : '') + url;\n    // This module may get invalidated while we are processing it. For example\n    // when a full page reload is needed after the re-processing of pre-bundled\n    // dependencies when a missing dep is discovered. We save the current time\n    // to compare it to the last invalidation performed to know if we should\n    // cache the result of the transformation or we should discard it as stale.\n    //\n    // A module can be invalidated due to:\n    // 1. A full reload because of pre-bundling newly discovered deps\n    // 2. A full reload after a config change\n    // 3. The file that generated the module changed\n    // 4. Invalidation for a virtual module\n    //\n    // For 1 and 2, a new request for this module will be issued after\n    // the invalidation as part of the browser reloading the page. For 3 and 4\n    // there may not be a new request right away because of HMR handling.\n    // In all cases, the next time this module is requested, it should be\n    // re-processed.\n    //\n    // We save the timestamp when we start processing and compare it with the\n    // last time this module is invalidated\n    const timestamp = Date.now();\n    const pending = server._pendingRequests.get(cacheKey);\n    if (pending) {\n        return server.moduleGraph\n            .getModuleByUrl(removeTimestampQuery(url), options.ssr)\n            .then((module) => {\n            if (!module || pending.timestamp > module.lastInvalidationTimestamp) {\n                // The pending request is still valid, we can safely reuse its result\n                return pending.request;\n            }\n            else {\n                // Request 1 for module A     (pending.timestamp)\n                // Invalidate module A        (module.lastInvalidationTimestamp)\n                // Request 2 for module A     (timestamp)\n                // First request has been invalidated, abort it to clear the cache,\n                // then perform a new doTransform.\n                pending.abort();\n                return transformRequest(url, server, options);\n            }\n        });\n    }\n    const request = doTransform(url, server, options, timestamp);\n    // Avoid clearing the cache of future requests if aborted\n    let cleared = false;\n    const clearCache = () => {\n        if (!cleared) {\n            server._pendingRequests.delete(cacheKey);\n            cleared = true;\n        }\n    };\n    // Cache the request and clear it once processing is done\n    server._pendingRequests.set(cacheKey, {\n        request,\n        timestamp,\n        abort: clearCache\n    });\n    request.then(clearCache, clearCache);\n    return request;\n}\nasync function doTransform(url, server, options, timestamp) {\n    url = removeTimestampQuery(url);\n    const { config, pluginContainer } = server;\n    const prettyUrl = isDebug$3 ? prettifyUrl(url, config.root) : '';\n    const ssr = !!options.ssr;\n    const module = await server.moduleGraph.getModuleByUrl(url, ssr);\n    // check if we have a fresh cache\n    const cached = module && (ssr ? module.ssrTransformResult : module.transformResult);\n    if (cached) {\n        // TODO: check if the module is \"partially invalidated\" - i.e. an import\n        // down the chain has been fully invalidated, but this current module's\n        // content has not changed.\n        // in this case, we can reuse its previous cached result and only update\n        // its import timestamps.\n        isDebug$3 && debugCache$1(`[memory] ${prettyUrl}`);\n        return cached;\n    }\n    // resolve\n    const id = (await pluginContainer.resolveId(url, undefined, { ssr }))?.id || url;\n    const result = loadAndTransform(id, url, server, options, timestamp);\n    getDepsOptimizer(config, ssr)?.delayDepsOptimizerUntil(id, () => result);\n    return result;\n}\nasync function loadAndTransform(id, url, server, options, timestamp) {\n    const { config, pluginContainer, moduleGraph, watcher } = server;\n    const { root, logger } = config;\n    const prettyUrl = isDebug$3 ? prettifyUrl(url, config.root) : '';\n    const ssr = !!options.ssr;\n    const file = cleanUrl(id);\n    let code = null;\n    let map = null;\n    // load\n    const loadStart = isDebug$3 ? performance.now() : 0;\n    const loadResult = await pluginContainer.load(id, { ssr });\n    if (loadResult == null) {\n        // if this is an html request and there is no load result, skip ahead to\n        // SPA fallback.\n        if (options.html && !id.endsWith('.html')) {\n            return null;\n        }\n        // try fallback loading it from fs as string\n        // if the file is a binary, there should be a plugin that already loaded it\n        // as string\n        // only try the fallback if access is allowed, skip for out of root url\n        // like /service-worker.js or /api/users\n        if (options.ssr || isFileServingAllowed(file, server)) {\n            try {\n                code = await promises$2.readFile(file, 'utf-8');\n                isDebug$3 && debugLoad(`${timeFrom(loadStart)} [fs] ${prettyUrl}`);\n            }\n            catch (e) {\n                if (e.code !== 'ENOENT') {\n                    throw e;\n                }\n            }\n        }\n        if (code) {\n            try {\n                map = (convertSourceMap.fromSource(code) ||\n                    convertSourceMap.fromMapFileSource(code, path$n.dirname(file)))?.toObject();\n            }\n            catch (e) {\n                logger.warn(`Failed to load source map for ${url}.`, {\n                    timestamp: true\n                });\n            }\n        }\n    }\n    else {\n        isDebug$3 && debugLoad(`${timeFrom(loadStart)} [plugin] ${prettyUrl}`);\n        if (isObject$2(loadResult)) {\n            code = loadResult.code;\n            map = loadResult.map;\n        }\n        else {\n            code = loadResult;\n        }\n    }\n    if (code == null) {\n        if (checkPublicFile(url, config)) {\n            throw new Error(`Failed to load url ${url} (resolved id: ${id}). ` +\n                `This file is in /public and will be copied as-is during build without ` +\n                `going through the plugin transforms, and therefore should not be ` +\n                `imported from source code. It can only be referenced via HTML tags.`);\n        }\n        else {\n            return null;\n        }\n    }\n    // ensure module in graph after successful load\n    const mod = await moduleGraph.ensureEntryFromUrl(url, ssr);\n    ensureWatchedFile(watcher, mod.file, root);\n    // transform\n    const transformStart = isDebug$3 ? performance.now() : 0;\n    const transformResult = await pluginContainer.transform(code, id, {\n        inMap: map,\n        ssr\n    });\n    const originalCode = code;\n    if (transformResult == null ||\n        (isObject$2(transformResult) && transformResult.code == null)) {\n        // no transform applied, keep code as-is\n        isDebug$3 &&\n            debugTransform(timeFrom(transformStart) + picocolors.exports.dim(` [skipped] ${prettyUrl}`));\n    }\n    else {\n        isDebug$3 && debugTransform(`${timeFrom(transformStart)} ${prettyUrl}`);\n        code = transformResult.code;\n        map = transformResult.map;\n    }\n    if (map && mod.file) {\n        map = (typeof map === 'string' ? JSON.parse(map) : map);\n        if (map.mappings && !map.sourcesContent) {\n            await injectSourcesContent(map, mod.file, logger);\n        }\n    }\n    const result = ssr\n        ? await ssrTransform(code, map, url, originalCode, server.config)\n        : {\n            code,\n            map,\n            etag: etag_1(code, { weak: true })\n        };\n    // Only cache the result if the module wasn't invalidated while it was\n    // being processed, so it is re-processed next time if it is stale\n    if (timestamp > mod.lastInvalidationTimestamp) {\n        if (ssr)\n            mod.ssrTransformResult = result;\n        else\n            mod.transformResult = result;\n    }\n    return result;\n}\n\nconst ERR_OPTIMIZE_DEPS_PROCESSING_ERROR = 'ERR_OPTIMIZE_DEPS_PROCESSING_ERROR';\nconst ERR_OUTDATED_OPTIMIZED_DEP = 'ERR_OUTDATED_OPTIMIZED_DEP';\nconst isDebug$2 = process.env.DEBUG;\nconst debug$8 = createDebugger('vite:optimize-deps');\nfunction optimizedDepsPlugin(config) {\n    return {\n        name: 'vite:optimized-deps',\n        async resolveId(id, source, { ssr }) {\n            if (getDepsOptimizer(config, ssr)?.isOptimizedDepFile(id)) {\n                return id;\n            }\n        },\n        // this.load({ id }) isn't implemented in PluginContainer\n        // The logic to register an id to wait until it is processed\n        // is in importAnalysis, see call to delayDepsOptimizerUntil\n        async load(id, options) {\n            const ssr = options?.ssr === true;\n            const depsOptimizer = getDepsOptimizer(config, ssr);\n            if (depsOptimizer?.isOptimizedDepFile(id)) {\n                const metadata = depsOptimizer.metadata;\n                const file = cleanUrl(id);\n                const versionMatch = id.match(DEP_VERSION_RE);\n                const browserHash = versionMatch\n                    ? versionMatch[1].split('=')[1]\n                    : undefined;\n                // Search in both the currently optimized and newly discovered deps\n                const info = optimizedDepInfoFromFile(metadata, file);\n                if (info) {\n                    if (browserHash && info.browserHash !== browserHash) {\n                        throwOutdatedRequest(id);\n                    }\n                    try {\n                        // This is an entry point, it may still not be bundled\n                        await info.processing;\n                    }\n                    catch {\n                        // If the refresh has not happened after timeout, Vite considers\n                        // something unexpected has happened. In this case, Vite\n                        // returns an empty response that will error.\n                        throwProcessingError(id);\n                        return;\n                    }\n                    const newMetadata = depsOptimizer.metadata;\n                    if (metadata !== newMetadata) {\n                        const currentInfo = optimizedDepInfoFromFile(newMetadata, file);\n                        if (info.browserHash !== currentInfo?.browserHash) {\n                            throwOutdatedRequest(id);\n                        }\n                    }\n                }\n                isDebug$2 && debug$8(`load ${picocolors.exports.cyan(file)}`);\n                // Load the file from the cache instead of waiting for other plugin\n                // load hooks to avoid race conditions, once processing is resolved,\n                // we are sure that the file has been properly save to disk\n                try {\n                    return await promises$2.readFile(file, 'utf-8');\n                }\n                catch (e) {\n                    // Outdated non-entry points (CHUNK), loaded after a rerun\n                    throwOutdatedRequest(id);\n                }\n            }\n        }\n    };\n}\nfunction optimizedDepsBuildPlugin(config) {\n    return {\n        name: 'vite:optimized-deps-build',\n        buildStart() {\n            if (!config.isWorker) {\n                // This will be run for the current active optimizer, during build\n                // it will be the SSR optimizer if config.build.ssr is defined\n                getDepsOptimizer(config)?.resetRegisteredIds();\n            }\n        },\n        async resolveId(id, importer, { ssr }) {\n            if (getDepsOptimizer(config, ssr)?.isOptimizedDepFile(id)) {\n                return id;\n            }\n        },\n        transform(_code, id, options) {\n            const ssr = options?.ssr === true;\n            getDepsOptimizer(config, ssr)?.delayDepsOptimizerUntil(id, async () => {\n                await this.load({ id });\n            });\n        },\n        async load(id, options) {\n            const ssr = options?.ssr === true;\n            const depsOptimizer = getDepsOptimizer(config, ssr);\n            if (!depsOptimizer?.isOptimizedDepFile(id)) {\n                return;\n            }\n            depsOptimizer?.ensureFirstRun();\n            const file = cleanUrl(id);\n            // Search in both the currently optimized and newly discovered deps\n            // If all the inputs are dependencies, we aren't going to get any\n            const info = optimizedDepInfoFromFile(depsOptimizer.metadata, file);\n            if (info) {\n                try {\n                    // This is an entry point, it may still not be bundled\n                    await info.processing;\n                }\n                catch {\n                    // If the refresh has not happened after timeout, Vite considers\n                    // something unexpected has happened. In this case, Vite\n                    // returns an empty response that will error.\n                    // throwProcessingError(id)\n                    return;\n                }\n                isDebug$2 && debug$8(`load ${picocolors.exports.cyan(file)}`);\n            }\n            else {\n                // TODO: error\n                return;\n            }\n            // Load the file from the cache instead of waiting for other plugin\n            // load hooks to avoid race conditions, once processing is resolved,\n            // we are sure that the file has been properly save to disk\n            try {\n                return await promises$2.readFile(file, 'utf-8');\n            }\n            catch (e) {\n                // Outdated non-entry points (CHUNK), loaded after a rerun\n                return '';\n            }\n        }\n    };\n}\nfunction throwProcessingError(id) {\n    const err = new Error(`Something unexpected happened while optimizing \"${id}\". ` +\n        `The current page should have reloaded by now`);\n    err.code = ERR_OPTIMIZE_DEPS_PROCESSING_ERROR;\n    // This error will be caught by the transform middleware that will\n    // send a 504 status code request timeout\n    throw err;\n}\nfunction throwOutdatedRequest(id) {\n    const err = new Error(`There is a new version of the pre-bundle for \"${id}\", ` +\n        `a page reload is going to ask for it.`);\n    err.code = ERR_OUTDATED_OPTIMIZED_DEP;\n    // This error will be caught by the transform middleware that will\n    // send a 504 status code request timeout\n    throw err;\n}\n\nconst isDebug$1 = !!process.env.DEBUG;\nconst debug$7 = createDebugger('vite:import-analysis');\nconst clientDir = normalizePath$3(CLIENT_DIR);\nconst skipRE = /\\.(map|json)($|\\?)/;\nconst canSkipImportAnalysis = (id) => skipRE.test(id) || isDirectCSSRequest(id);\nconst optimizedDepChunkRE$1 = /\\/chunk-[A-Z0-9]{8}\\.js/;\nconst optimizedDepDynamicRE$1 = /-[A-Z0-9]{8}\\.js/;\nfunction isExplicitImportRequired(url) {\n    return !isJSRequest(cleanUrl(url)) && !isCSSRequest(url);\n}\nfunction markExplicitImport(url) {\n    if (isExplicitImportRequired(url)) {\n        return injectQuery(url, 'import');\n    }\n    return url;\n}\nasync function extractImportedBindings(id, source, importSpec, importedBindings) {\n    let bindings = importedBindings.get(id);\n    if (!bindings) {\n        bindings = new Set();\n        importedBindings.set(id, bindings);\n    }\n    const isDynamic = importSpec.d > -1;\n    const isMeta = importSpec.d === -2;\n    if (isDynamic || isMeta) {\n        // this basically means the module will be impacted by any change in its dep\n        bindings.add('*');\n        return;\n    }\n    const exp = source.slice(importSpec.ss, importSpec.se);\n    const [match0] = findStaticImports(exp);\n    if (!match0) {\n        return;\n    }\n    const parsed = parseStaticImport(match0);\n    if (!parsed) {\n        return;\n    }\n    if (parsed.namespacedImport) {\n        bindings.add('*');\n    }\n    if (parsed.defaultImport) {\n        bindings.add('default');\n    }\n    if (parsed.namedImports) {\n        for (const name of Object.keys(parsed.namedImports)) {\n            bindings.add(name);\n        }\n    }\n}\n/**\n * Server-only plugin that lexes, resolves, rewrites and analyzes url imports.\n *\n * - Imports are resolved to ensure they exist on disk\n *\n * - Lexes HMR accept calls and updates import relationships in the module graph\n *\n * - Bare module imports are resolved (by @rollup-plugin/node-resolve) to\n * absolute file paths, e.g.\n *\n *     ```js\n *     import 'foo'\n *     ```\n *     is rewritten to\n *     ```js\n *     import '/@fs//project/node_modules/foo/dist/foo.js'\n *     ```\n *\n * - CSS imports are appended with `.js` since both the js module and the actual\n * css (referenced via <link>) may go through the transform pipeline:\n *\n *     ```js\n *     import './style.css'\n *     ```\n *     is rewritten to\n *     ```js\n *     import './style.css.js'\n *     ```\n */\nfunction importAnalysisPlugin(config) {\n    const { root, base } = config;\n    const clientPublicPath = path$n.posix.join(base, CLIENT_PUBLIC_PATH);\n    const enablePartialAccept = config.experimental?.hmrPartialAccept;\n    let server;\n    return {\n        name: 'vite:import-analysis',\n        configureServer(_server) {\n            server = _server;\n        },\n        async transform(source, importer, options) {\n            // In a real app `server` is always defined, but it is undefined when\n            // running src/node/server/__tests__/pluginContainer.spec.ts\n            if (!server) {\n                return null;\n            }\n            const ssr = options?.ssr === true;\n            const prettyImporter = prettifyUrl(importer, root);\n            if (canSkipImportAnalysis(importer)) {\n                isDebug$1 && debug$7(picocolors.exports.dim(`[skipped] ${prettyImporter}`));\n                return null;\n            }\n            const start = performance.now();\n            await init;\n            let imports = [];\n            let exports = [];\n            source = stripBomTag(source);\n            try {\n                [imports, exports] = parse$b(source);\n            }\n            catch (e) {\n                const isVue = importer.endsWith('.vue');\n                const maybeJSX = !isVue && isJSRequest(importer);\n                const msg = isVue\n                    ? `Install @vitejs/plugin-vue to handle .vue files.`\n                    : maybeJSX\n                        ? `If you are using JSX, make sure to name the file with the .jsx or .tsx extension.`\n                        : `You may need to install appropriate plugins to handle the ${path$n.extname(importer)} file format, or if it's an asset, add \"**/*${path$n.extname(importer)}\" to \\`assetsInclude\\` in your configuration.`;\n                this.error(`Failed to parse source for import analysis because the content ` +\n                    `contains invalid JS syntax. ` +\n                    msg, e.idx);\n            }\n            const depsOptimizer = getDepsOptimizer(config, ssr);\n            const { moduleGraph } = server;\n            // since we are already in the transform phase of the importer, it must\n            // have been loaded so its entry is guaranteed in the module graph.\n            const importerModule = moduleGraph.getModuleById(importer);\n            if (!importerModule && depsOptimizer?.isOptimizedDepFile(importer)) {\n                // Ids of optimized deps could be invalidated and removed from the graph\n                // Return without transforming, this request is no longer valid, a full reload\n                // is going to request this id again. Throwing an outdated error so we\n                // properly finish the request with a 504 sent to the browser.\n                throwOutdatedRequest(importer);\n            }\n            if (!imports.length) {\n                importerModule.isSelfAccepting = false;\n                isDebug$1 &&\n                    debug$7(`${timeFrom(start)} ${picocolors.exports.dim(`[no imports] ${prettyImporter}`)}`);\n                return source;\n            }\n            let hasHMR = false;\n            let isSelfAccepting = false;\n            let hasEnv = false;\n            let needQueryInjectHelper = false;\n            let s;\n            const str = () => s || (s = new MagicString(source));\n            const importedUrls = new Set();\n            const staticImportedUrls = new Set();\n            const acceptedUrls = new Set();\n            let isPartiallySelfAccepting = false;\n            const acceptedExports = new Set();\n            const importedBindings = enablePartialAccept\n                ? new Map()\n                : null;\n            const toAbsoluteUrl = (url) => path$n.posix.resolve(path$n.posix.dirname(importerModule.url), url);\n            const normalizeUrl = async (url, pos) => {\n                if (base !== '/' && url.startsWith(base)) {\n                    url = url.replace(base, '/');\n                }\n                let importerFile = importer;\n                const optimizeDeps = getDepOptimizationConfig(config, ssr);\n                if (moduleListContains(optimizeDeps?.exclude, url)) {\n                    if (depsOptimizer) {\n                        await depsOptimizer.scanProcessing;\n                        // if the dependency encountered in the optimized file was excluded from the optimization\n                        // the dependency needs to be resolved starting from the original source location of the optimized file\n                        // because starting from node_modules/.vite will not find the dependency if it was not hoisted\n                        // (that is, if it is under node_modules directory in the package source of the optimized file)\n                        for (const optimizedModule of depsOptimizer.metadata.depInfoList) {\n                            if (!optimizedModule.src)\n                                continue; // Ignore chunks\n                            if (optimizedModule.file === importerModule.file) {\n                                importerFile = optimizedModule.src;\n                            }\n                        }\n                    }\n                }\n                const resolved = await this.resolve(url, importerFile);\n                if (!resolved) {\n                    // in ssr, we should let node handle the missing modules\n                    if (ssr) {\n                        return [url, url];\n                    }\n                    return this.error(`Failed to resolve import \"${url}\" from \"${path$n.relative(process.cwd(), importerFile)}\". Does the file exist?`, pos);\n                }\n                const isRelative = url.startsWith('.');\n                const isSelfImport = !isRelative && cleanUrl(url) === cleanUrl(importer);\n                // normalize all imports into resolved URLs\n                // e.g. `import 'foo'` -> `import '/@fs/.../node_modules/foo/index.js'`\n                if (resolved.id.startsWith(root + '/')) {\n                    // in root: infer short absolute path from root\n                    url = resolved.id.slice(root.length);\n                }\n                else if (resolved.id.startsWith(getDepsCacheDirPrefix(config)) ||\n                    fs$l.existsSync(cleanUrl(resolved.id))) {\n                    // an optimized deps may not yet exists in the filesystem, or\n                    // a regular file exists but is out of root: rewrite to absolute /@fs/ paths\n                    url = path$n.posix.join(FS_PREFIX + resolved.id);\n                }\n                else {\n                    url = resolved.id;\n                }\n                if (isExternalUrl(url)) {\n                    return [url, url];\n                }\n                // if the resolved id is not a valid browser import specifier,\n                // prefix it to make it valid. We will strip this before feeding it\n                // back into the transform pipeline\n                if (!url.startsWith('.') && !url.startsWith('/')) {\n                    url =\n                        VALID_ID_PREFIX + resolved.id.replace('\\0', NULL_BYTE_PLACEHOLDER);\n                }\n                // make the URL browser-valid if not SSR\n                if (!ssr) {\n                    // mark non-js/css imports with `?import`\n                    url = markExplicitImport(url);\n                    // If the url isn't a request for a pre-bundled common chunk,\n                    // for relative js/css imports, or self-module virtual imports\n                    // (e.g. vue blocks), inherit importer's version query\n                    // do not do this for unknown type imports, otherwise the appended\n                    // query can break 3rd party plugin's extension checks.\n                    if ((isRelative || isSelfImport) &&\n                        !/[\\?&]import=?\\b/.test(url) &&\n                        !url.match(DEP_VERSION_RE)) {\n                        const versionMatch = importer.match(DEP_VERSION_RE);\n                        if (versionMatch) {\n                            url = injectQuery(url, versionMatch[1]);\n                        }\n                    }\n                    // check if the dep has been hmr updated. If yes, we need to attach\n                    // its last updated timestamp to force the browser to fetch the most\n                    // up-to-date version of this module.\n                    try {\n                        // delay setting `isSelfAccepting` until the file is actually used (#7870)\n                        const depModule = await moduleGraph.ensureEntryFromUrl(url, ssr, canSkipImportAnalysis(url));\n                        if (depModule.lastHMRTimestamp > 0) {\n                            url = injectQuery(url, `t=${depModule.lastHMRTimestamp}`);\n                        }\n                    }\n                    catch (e) {\n                        // it's possible that the dep fails to resolve (non-existent import)\n                        // attach location to the missing import\n                        e.pos = pos;\n                        throw e;\n                    }\n                    // prepend base (dev base is guaranteed to have ending slash)\n                    url = base + url.replace(/^\\//, '');\n                }\n                return [url, resolved.id];\n            };\n            for (let index = 0; index < imports.length; index++) {\n                const { s: start, e: end, ss: expStart, se: expEnd, d: dynamicIndex, \n                // #2083 User may use escape path,\n                // so use imports[index].n to get the unescaped string\n                n: specifier, a: assertIndex } = imports[index];\n                const rawUrl = source.slice(start, end);\n                // check import.meta usage\n                if (rawUrl === 'import.meta') {\n                    const prop = source.slice(end, end + 4);\n                    if (prop === '.hot') {\n                        hasHMR = true;\n                        if (source.slice(end + 4, end + 11) === '.accept') {\n                            // further analyze accepted modules\n                            if (source.slice(end + 4, end + 18) === '.acceptExports') {\n                                lexAcceptedHmrExports(source, source.indexOf('(', end + 18) + 1, acceptedExports);\n                                isPartiallySelfAccepting = true;\n                            }\n                            else if (lexAcceptedHmrDeps(source, source.indexOf('(', end + 11) + 1, acceptedUrls)) {\n                                isSelfAccepting = true;\n                            }\n                        }\n                    }\n                    else if (prop === '.env') {\n                        hasEnv = true;\n                    }\n                    continue;\n                }\n                const isDynamicImport = dynamicIndex > -1;\n                // strip import assertions as we can process them ourselves\n                if (!isDynamicImport && assertIndex > -1) {\n                    str().remove(end + 1, expEnd);\n                }\n                // static import or valid string in dynamic import\n                // If resolvable, let's resolve it\n                if (specifier) {\n                    // skip external / data uri\n                    if (isExternalUrl(specifier) || isDataUrl(specifier)) {\n                        continue;\n                    }\n                    // skip ssr external\n                    if (ssr) {\n                        if (config.legacy?.buildSsrCjsExternalHeuristics) {\n                            if (cjsShouldExternalizeForSSR(specifier, server._ssrExternals)) {\n                                continue;\n                            }\n                        }\n                        else if (shouldExternalizeForSSR(specifier, config)) {\n                            continue;\n                        }\n                        if (isBuiltin(specifier)) {\n                            continue;\n                        }\n                    }\n                    // skip client\n                    if (specifier === clientPublicPath) {\n                        continue;\n                    }\n                    // warn imports to non-asset /public files\n                    if (specifier.startsWith('/') &&\n                        !config.assetsInclude(cleanUrl(specifier)) &&\n                        !specifier.endsWith('.json') &&\n                        checkPublicFile(specifier, config)) {\n                        throw new Error(`Cannot import non-asset file ${specifier} which is inside /public.` +\n                            `JS/CSS files inside /public are copied as-is on build and ` +\n                            `can only be referenced via <script src> or <link href> in html.`);\n                    }\n                    // normalize\n                    const [url, resolvedId] = await normalizeUrl(specifier, start);\n                    // record as safe modules\n                    server?.moduleGraph.safeModulesPath.add(fsPathFromUrl(url));\n                    if (url !== specifier) {\n                        let rewriteDone = false;\n                        if (depsOptimizer?.isOptimizedDepFile(resolvedId) &&\n                            !resolvedId.match(optimizedDepChunkRE$1)) {\n                            // for optimized cjs deps, support named imports by rewriting named imports to const assignments.\n                            // internal optimized chunks don't need es interop and are excluded\n                            // The browserHash in resolvedId could be stale in which case there will be a full\n                            // page reload. We could return a 404 in that case but it is safe to return the request\n                            const file = cleanUrl(resolvedId); // Remove ?v={hash}\n                            const needsInterop = await optimizedDepNeedsInterop(depsOptimizer.metadata, file, config, ssr);\n                            if (needsInterop === undefined) {\n                                // Non-entry dynamic imports from dependencies will reach here as there isn't\n                                // optimize info for them, but they don't need es interop. If the request isn't\n                                // a dynamic import, then it is an internal Vite error\n                                if (!file.match(optimizedDepDynamicRE$1)) {\n                                    config.logger.error(picocolors.exports.red(`Vite Error, ${url} optimized info should be defined`));\n                                }\n                            }\n                            else if (needsInterop) {\n                                debug$7(`${url} needs interop`);\n                                interopNamedImports(str(), imports[index], url, index);\n                                rewriteDone = true;\n                            }\n                        }\n                        // If source code imports builtin modules via named imports, the stub proxy export\n                        // would fail as it's `export default` only. Apply interop for builtin modules to\n                        // correctly throw the error message.\n                        else if (url.includes(browserExternalId) &&\n                            source.slice(expStart, start).includes('{')) {\n                            interopNamedImports(str(), imports[index], url, index);\n                            rewriteDone = true;\n                        }\n                        if (!rewriteDone) {\n                            let rewrittenUrl = JSON.stringify(url);\n                            if (!isDynamicImport)\n                                rewrittenUrl = rewrittenUrl.slice(1, -1);\n                            str().overwrite(start, end, rewrittenUrl, {\n                                contentOnly: true\n                            });\n                        }\n                    }\n                    // record for HMR import chain analysis\n                    // make sure to normalize away base\n                    const urlWithoutBase = url.replace(base, '/');\n                    importedUrls.add(urlWithoutBase);\n                    if (enablePartialAccept && importedBindings) {\n                        extractImportedBindings(resolvedId, source, imports[index], importedBindings);\n                    }\n                    if (!isDynamicImport) {\n                        // for pre-transforming\n                        staticImportedUrls.add({ url: urlWithoutBase, id: resolvedId });\n                    }\n                }\n                else if (!importer.startsWith(clientDir)) {\n                    if (!importer.includes('node_modules')) {\n                        // check @vite-ignore which suppresses dynamic import warning\n                        const hasViteIgnore = /\\/\\*\\s*@vite-ignore\\s*\\*\\//.test(\n                        // complete expression inside parens\n                        source.slice(dynamicIndex + 1, end));\n                        if (!hasViteIgnore) {\n                            this.warn(`\\n` +\n                                picocolors.exports.cyan(importerModule.file) +\n                                `\\n` +\n                                generateCodeFrame(source, start) +\n                                `\\nThe above dynamic import cannot be analyzed by Vite.\\n` +\n                                `See ${picocolors.exports.blue(`https://github.com/rollup/plugins/tree/master/packages/dynamic-import-vars#limitations`)} ` +\n                                `for supported dynamic import formats. ` +\n                                `If this is intended to be left as-is, you can use the ` +\n                                `/* @vite-ignore */ comment inside the import() call to suppress this warning.\\n`);\n                        }\n                    }\n                    if (!ssr) {\n                        const url = rawUrl\n                            .replace(/\\/\\*[\\s\\S]*?\\*\\/|([^\\\\:]|^)\\/\\/.*$/gm, '')\n                            .trim();\n                        if (!/^('.*'|\".*\"|`.*`)$/.test(url) ||\n                            isExplicitImportRequired(url.slice(1, -1))) {\n                            needQueryInjectHelper = true;\n                            str().overwrite(start, end, `__vite__injectQuery(${url}, 'import')`, { contentOnly: true });\n                        }\n                    }\n                }\n            }\n            if (hasEnv) {\n                // inject import.meta.env\n                let env = `import.meta.env = ${JSON.stringify({\n                    ...config.env,\n                    SSR: !!ssr\n                })};`;\n                // account for user env defines\n                for (const key in config.define) {\n                    if (key.startsWith(`import.meta.env.`)) {\n                        const val = config.define[key];\n                        env += `${key} = ${typeof val === 'string' ? val : JSON.stringify(val)};`;\n                    }\n                }\n                str().prepend(env);\n            }\n            if (hasHMR && !ssr) {\n                debugHmr(`${isSelfAccepting\n                    ? `[self-accepts]`\n                    : isPartiallySelfAccepting\n                        ? `[accepts-exports]`\n                        : acceptedUrls.size\n                            ? `[accepts-deps]`\n                            : `[detected api usage]`} ${prettyImporter}`);\n                // inject hot context\n                str().prepend(`import { createHotContext as __vite__createHotContext } from \"${clientPublicPath}\";` +\n                    `import.meta.hot = __vite__createHotContext(${JSON.stringify(importerModule.url)});`);\n            }\n            if (needQueryInjectHelper) {\n                str().prepend(`import { injectQuery as __vite__injectQuery } from \"${clientPublicPath}\";`);\n            }\n            // normalize and rewrite accepted urls\n            const normalizedAcceptedUrls = new Set();\n            for (const { url, start, end } of acceptedUrls) {\n                const [normalized] = await moduleGraph.resolveUrl(toAbsoluteUrl(markExplicitImport(url)), ssr);\n                normalizedAcceptedUrls.add(normalized);\n                str().overwrite(start, end, JSON.stringify(normalized), {\n                    contentOnly: true\n                });\n            }\n            // update the module graph for HMR analysis.\n            // node CSS imports does its own graph update in the css plugin so we\n            // only handle js graph updates here.\n            if (!isCSSRequest(importer)) {\n                // attached by pluginContainer.addWatchFile\n                const pluginImports = this._addedImports;\n                if (pluginImports) {\n                    (await Promise.all([...pluginImports].map((id) => normalizeUrl(id, 0)))).forEach(([url]) => importedUrls.add(url));\n                }\n                // HMR transforms are no-ops in SSR, so an `accept` call will\n                // never be injected. Avoid updating the `isSelfAccepting`\n                // property for our module node in that case.\n                if (ssr && importerModule.isSelfAccepting) {\n                    isSelfAccepting = true;\n                }\n                // a partially accepted module that accepts all its exports\n                // behaves like a self-accepted module in practice\n                if (!isSelfAccepting &&\n                    isPartiallySelfAccepting &&\n                    acceptedExports.size >= exports.length &&\n                    exports.every((e) => acceptedExports.has(e.n))) {\n                    isSelfAccepting = true;\n                }\n                const prunedImports = await moduleGraph.updateModuleInfo(importerModule, importedUrls, importedBindings, normalizedAcceptedUrls, isPartiallySelfAccepting ? acceptedExports : null, isSelfAccepting, ssr);\n                if (hasHMR && prunedImports) {\n                    handlePrunedModules(prunedImports, server);\n                }\n            }\n            isDebug$1 &&\n                debug$7(`${timeFrom(start)} ${picocolors.exports.dim(`[${importedUrls.size} imports rewritten] ${prettyImporter}`)}`);\n            // pre-transform known direct imports\n            // These requests will also be registered in transformRequest to be awaited\n            // by the deps optimizer\n            if (config.server.preTransformRequests && staticImportedUrls.size) {\n                staticImportedUrls.forEach(({ url, id }) => {\n                    url = unwrapId(removeImportQuery(url)).replace(NULL_BYTE_PLACEHOLDER, '\\0');\n                    transformRequest(url, server, { ssr }).catch((e) => {\n                        if (e?.code === ERR_OUTDATED_OPTIMIZED_DEP) {\n                            // This are expected errors\n                            return;\n                        }\n                        // Unexpected error, log the issue but avoid an unhandled exception\n                        config.logger.error(e.message);\n                    });\n                });\n            }\n            if (s) {\n                return transformStableResult(s, importer, config);\n            }\n            else {\n                return source;\n            }\n        }\n    };\n}\nfunction interopNamedImports(str, importSpecifier, rewrittenUrl, importIndex) {\n    const source = str.original;\n    const { s: start, e: end, ss: expStart, se: expEnd, d: dynamicIndex } = importSpecifier;\n    if (dynamicIndex > -1) {\n        // rewrite `import('package')` to expose the default directly\n        str.overwrite(expStart, expEnd, `import('${rewrittenUrl}').then(m => m.default && m.default.__esModule ? m.default : ({ ...m.default, default: m.default }))`, { contentOnly: true });\n    }\n    else {\n        const exp = source.slice(expStart, expEnd);\n        const rawUrl = source.slice(start, end);\n        const rewritten = transformCjsImport(exp, rewrittenUrl, rawUrl, importIndex);\n        if (rewritten) {\n            str.overwrite(expStart, expEnd, rewritten, { contentOnly: true });\n        }\n        else {\n            // #1439 export * from '...'\n            str.overwrite(start, end, rewrittenUrl, { contentOnly: true });\n        }\n    }\n}\n/**\n * Detect import statements to a known optimized CJS dependency and provide\n * ES named imports interop. We do this by rewriting named imports to a variable\n * assignment to the corresponding property on the `module.exports` of the cjs\n * module. Note this doesn't support dynamic re-assignments from within the cjs\n * module.\n *\n * Note that es-module-lexer treats `export * from '...'` as an import as well,\n * so, we may encounter ExportAllDeclaration here, in which case `undefined`\n * will be returned.\n *\n * Credits \\@csr632 via #837\n */\nfunction transformCjsImport(importExp, url, rawUrl, importIndex) {\n    const node = parse$c(importExp, {\n        ecmaVersion: 'latest',\n        sourceType: 'module'\n    }).body[0];\n    if (node.type === 'ImportDeclaration' ||\n        node.type === 'ExportNamedDeclaration') {\n        if (!node.specifiers.length) {\n            return `import \"${url}\"`;\n        }\n        const importNames = [];\n        const exportNames = [];\n        let defaultExports = '';\n        for (const spec of node.specifiers) {\n            if (spec.type === 'ImportSpecifier' &&\n                spec.imported.type === 'Identifier') {\n                const importedName = spec.imported.name;\n                const localName = spec.local.name;\n                importNames.push({ importedName, localName });\n            }\n            else if (spec.type === 'ImportDefaultSpecifier') {\n                importNames.push({\n                    importedName: 'default',\n                    localName: spec.local.name\n                });\n            }\n            else if (spec.type === 'ImportNamespaceSpecifier') {\n                importNames.push({ importedName: '*', localName: spec.local.name });\n            }\n            else if (spec.type === 'ExportSpecifier' &&\n                spec.exported.type === 'Identifier') {\n                // for ExportSpecifier, local name is same as imported name\n                // prefix the variable name to avoid clashing with other local variables\n                const importedName = spec.local.name;\n                // we want to specify exported name as variable and re-export it\n                const exportedName = spec.exported.name;\n                if (exportedName === 'default') {\n                    defaultExports = makeLegalIdentifier(`__vite__cjsExportDefault_${importIndex}`);\n                    importNames.push({ importedName, localName: defaultExports });\n                }\n                else {\n                    const localName = makeLegalIdentifier(`__vite__cjsExport_${exportedName}`);\n                    importNames.push({ importedName, localName });\n                    exportNames.push(`${localName} as ${exportedName}`);\n                }\n            }\n        }\n        // If there is multiple import for same id in one file,\n        // importIndex will prevent the cjsModuleName to be duplicate\n        const cjsModuleName = makeLegalIdentifier(`__vite__cjsImport${importIndex}_${rawUrl}`);\n        const lines = [`import ${cjsModuleName} from \"${url}\"`];\n        importNames.forEach(({ importedName, localName }) => {\n            if (importedName === '*') {\n                lines.push(`const ${localName} = ${cjsModuleName}`);\n            }\n            else if (importedName === 'default') {\n                lines.push(`const ${localName} = ${cjsModuleName}.__esModule ? ${cjsModuleName}.default : ${cjsModuleName}`);\n            }\n            else {\n                lines.push(`const ${localName} = ${cjsModuleName}[\"${importedName}\"]`);\n            }\n        });\n        if (defaultExports) {\n            lines.push(`export default ${defaultExports}`);\n        }\n        if (exportNames.length) {\n            lines.push(`export { ${exportNames.join(', ')} }`);\n        }\n        return lines.join('; ');\n    }\n}\n\n/**\n * A flag for injected helpers. This flag will be set to `false` if the output\n * target is not native es - so that injected helper logic can be conditionally\n * dropped.\n */\nconst isModernFlag = `__VITE_IS_MODERN__`;\nconst preloadMethod = `__vitePreload`;\nconst preloadMarker = `__VITE_PRELOAD__`;\nconst preloadHelperId = '\\0vite/preload-helper';\nconst preloadMarkerWithQuote = `\"${preloadMarker}\"`;\nconst dynamicImportPrefixRE = /import\\s*\\(/;\n// TODO: abstract\nconst optimizedDepChunkRE = /\\/chunk-[A-Z0-9]{8}\\.js/;\nconst optimizedDepDynamicRE = /-[A-Z0-9]{8}\\.js/;\n/**\n * Helper for preloading CSS and direct imports of async chunks in parallel to\n * the async chunk itself.\n */\nfunction detectScriptRel() {\n    // @ts-ignore\n    const relList = document.createElement('link').relList;\n    // @ts-ignore\n    return relList && relList.supports && relList.supports('modulepreload')\n        ? 'modulepreload'\n        : 'preload';\n}\nfunction preload(baseModule, deps, importerUrl) {\n    // @ts-ignore\n    if (!__VITE_IS_MODERN__ || !deps || deps.length === 0) {\n        return baseModule();\n    }\n    return Promise.all(deps.map((dep) => {\n        // @ts-ignore\n        dep = assetsURL(dep, importerUrl);\n        // @ts-ignore\n        if (dep in seen)\n            return;\n        // @ts-ignore\n        seen[dep] = true;\n        const isCss = dep.endsWith('.css');\n        const cssSelector = isCss ? '[rel=\"stylesheet\"]' : '';\n        // @ts-ignore check if the file is already preloaded by SSR markup\n        if (document.querySelector(`link[href=\"${dep}\"]${cssSelector}`)) {\n            return;\n        }\n        // @ts-ignore\n        const link = document.createElement('link');\n        // @ts-ignore\n        link.rel = isCss ? 'stylesheet' : scriptRel;\n        if (!isCss) {\n            link.as = 'script';\n            link.crossOrigin = '';\n        }\n        link.href = dep;\n        // @ts-ignore\n        document.head.appendChild(link);\n        if (isCss) {\n            return new Promise((res, rej) => {\n                link.addEventListener('load', res);\n                link.addEventListener('error', () => rej(new Error(`Unable to preload CSS for ${dep}`)));\n            });\n        }\n    })).then(() => baseModule());\n}\n/**\n * Build only. During serve this is performed as part of ./importAnalysis.\n */\nfunction buildImportAnalysisPlugin(config) {\n    const ssr = !!config.build.ssr;\n    const isWorker = config.isWorker;\n    const insertPreload = !(ssr || !!config.build.lib || isWorker);\n    const relativePreloadUrls = config.base === './' || config.base === '';\n    const scriptRel = config.build.polyfillModulePreload\n        ? `'modulepreload'`\n        : `(${detectScriptRel.toString()})()`;\n    const assetsURL = relativePreloadUrls\n        ? `function(dep,importerUrl) { return new URL(dep, importerUrl).href }`\n        : `function(dep) { return ${JSON.stringify(config.base)}+dep }`;\n    const preloadCode = `const scriptRel = ${scriptRel};const assetsURL = ${assetsURL};const seen = {};export const ${preloadMethod} = ${preload.toString()}`;\n    return {\n        name: 'vite:build-import-analysis',\n        resolveId(id) {\n            if (id === preloadHelperId) {\n                return id;\n            }\n        },\n        load(id) {\n            if (id === preloadHelperId) {\n                return preloadCode;\n            }\n        },\n        async transform(source, importer) {\n            if (importer.includes('node_modules') &&\n                !dynamicImportPrefixRE.test(source)) {\n                return;\n            }\n            await init;\n            let imports = [];\n            try {\n                imports = parse$b(source)[0];\n            }\n            catch (e) {\n                this.error(e, e.idx);\n            }\n            if (!imports.length) {\n                return null;\n            }\n            const { root } = config;\n            const depsOptimizer = getDepsOptimizer(config, ssr);\n            const normalizeUrl = async (url, pos) => {\n                let importerFile = importer;\n                const optimizeDeps = getDepOptimizationConfig(config, ssr);\n                if (moduleListContains(optimizeDeps?.exclude, url)) {\n                    if (depsOptimizer) {\n                        await depsOptimizer.scanProcessing;\n                        // if the dependency encountered in the optimized file was excluded from the optimization\n                        // the dependency needs to be resolved starting from the original source location of the optimized file\n                        // because starting from node_modules/.vite will not find the dependency if it was not hoisted\n                        // (that is, if it is under node_modules directory in the package source of the optimized file)\n                        for (const optimizedModule of depsOptimizer.metadata.depInfoList) {\n                            if (!optimizedModule.src)\n                                continue; // Ignore chunks\n                            if (optimizedModule.file === importer) {\n                                importerFile = optimizedModule.src;\n                            }\n                        }\n                    }\n                }\n                const resolved = await this.resolve(url, importerFile);\n                if (!resolved) {\n                    // in ssr, we should let node handle the missing modules\n                    if (ssr) {\n                        return [url, url];\n                    }\n                    return this.error(`Failed to resolve import \"${url}\" from \"${path$n.relative(process.cwd(), importerFile)}\". Does the file exist?`, pos);\n                }\n                // normalize all imports into resolved URLs\n                // e.g. `import 'foo'` -> `import '/@fs/.../node_modules/foo/index.js'`\n                if (resolved.id.startsWith(root + '/')) {\n                    // in root: infer short absolute path from root\n                    url = resolved.id.slice(root.length);\n                }\n                else {\n                    url = resolved.id;\n                }\n                if (isExternalUrl(url)) {\n                    return [url, url];\n                }\n                return [url, resolved.id];\n            };\n            let s;\n            const str = () => s || (s = new MagicString(source));\n            let needPreloadHelper = false;\n            for (let index = 0; index < imports.length; index++) {\n                const { s: start, e: end, ss: expStart, se: expEnd, n: specifier, d: dynamicIndex, a: assertIndex } = imports[index];\n                const isDynamicImport = dynamicIndex > -1;\n                // strip import assertions as we can process them ourselves\n                if (!isDynamicImport && assertIndex > -1) {\n                    str().remove(end + 1, expEnd);\n                }\n                if (isDynamicImport && insertPreload) {\n                    needPreloadHelper = true;\n                    str().prependLeft(expStart, `${preloadMethod}(() => `);\n                    str().appendRight(expEnd, `,${isModernFlag}?\"${preloadMarker}\":void 0${relativePreloadUrls ? ',import.meta.url' : ''})`);\n                }\n                // static import or valid string in dynamic import\n                // If resolvable, let's resolve it\n                if (depsOptimizer && specifier) {\n                    // skip external / data uri\n                    if (isExternalUrl(specifier) || isDataUrl(specifier)) {\n                        continue;\n                    }\n                    // normalize\n                    const [url, resolvedId] = await normalizeUrl(specifier, start);\n                    if (url !== specifier) {\n                        if (depsOptimizer.isOptimizedDepFile(resolvedId) &&\n                            !resolvedId.match(optimizedDepChunkRE)) {\n                            const file = cleanUrl(resolvedId); // Remove ?v={hash}\n                            const needsInterop = await optimizedDepNeedsInterop(depsOptimizer.metadata, file, config, ssr);\n                            let rewriteDone = false;\n                            if (needsInterop === undefined) {\n                                // Non-entry dynamic imports from dependencies will reach here as there isn't\n                                // optimize info for them, but they don't need es interop. If the request isn't\n                                // a dynamic import, then it is an internal Vite error\n                                if (!file.match(optimizedDepDynamicRE)) {\n                                    config.logger.error(picocolors.exports.red(`Vite Error, ${url} optimized info should be defined`));\n                                }\n                            }\n                            else if (needsInterop) {\n                                // config.logger.info(`${url} needs interop`)\n                                interopNamedImports(str(), imports[index], url, index);\n                                rewriteDone = true;\n                            }\n                            if (!rewriteDone) {\n                                let rewrittenUrl = JSON.stringify(file);\n                                if (!isDynamicImport)\n                                    rewrittenUrl = rewrittenUrl.slice(1, -1);\n                                str().overwrite(start, end, rewrittenUrl, {\n                                    contentOnly: true\n                                });\n                            }\n                        }\n                    }\n                }\n                // Differentiate CSS imports that use the default export from those that\n                // do not by injecting a ?used query - this allows us to avoid including\n                // the CSS string when unnecessary (esbuild has trouble tree-shaking\n                // them)\n                if (specifier &&\n                    isCSSRequest(specifier) &&\n                    // always inject ?used query when it is a dynamic import\n                    // because there is no way to check whether the default export is used\n                    (source.slice(expStart, start).includes('from') || isDynamicImport) &&\n                    // already has ?used query (by import.meta.glob)\n                    !specifier.match(/\\?used(&|$)/) &&\n                    // edge case for package names ending with .css (e.g normalize.css)\n                    !(bareImportRE.test(specifier) && !specifier.includes('/'))) {\n                    const url = specifier.replace(/\\?|$/, (m) => `?used${m ? '&' : ''}`);\n                    str().overwrite(start, end, isDynamicImport ? `'${url}'` : url, {\n                        contentOnly: true\n                    });\n                }\n            }\n            if (needPreloadHelper &&\n                insertPreload &&\n                !source.includes(`const ${preloadMethod} =`)) {\n                str().prepend(`import { ${preloadMethod} } from \"${preloadHelperId}\";`);\n            }\n            if (s) {\n                return {\n                    code: s.toString(),\n                    map: config.build.sourcemap ? s.generateMap({ hires: true }) : null\n                };\n            }\n        },\n        renderChunk(code, _, { format }) {\n            // make sure we only perform the preload logic in modern builds.\n            if (code.indexOf(isModernFlag) > -1) {\n                const re = new RegExp(isModernFlag, 'g');\n                const isModern = String(format === 'es');\n                if (config.build.sourcemap) {\n                    const s = new MagicString(code);\n                    let match;\n                    while ((match = re.exec(code))) {\n                        s.overwrite(match.index, match.index + isModernFlag.length, isModern, { contentOnly: true });\n                    }\n                    return {\n                        code: s.toString(),\n                        map: s.generateMap({ hires: true })\n                    };\n                }\n                else {\n                    return code.replace(re, isModern);\n                }\n            }\n            return null;\n        },\n        generateBundle({ format }, bundle) {\n            if (format !== 'es' || ssr || isWorker) {\n                return;\n            }\n            for (const file in bundle) {\n                const chunk = bundle[file];\n                // can't use chunk.dynamicImports.length here since some modules e.g.\n                // dynamic import to constant json may get inlined.\n                if (chunk.type === 'chunk' && chunk.code.indexOf(preloadMarker) > -1) {\n                    const code = chunk.code;\n                    let imports = [];\n                    try {\n                        imports = parse$b(code)[0].filter((i) => i.d > -1);\n                    }\n                    catch (e) {\n                        this.error(e, e.idx);\n                    }\n                    const s = new MagicString(code);\n                    const rewroteMarkerStartPos = new Set(); // position of the leading double quote\n                    if (imports.length) {\n                        for (let index = 0; index < imports.length; index++) {\n                            // To handle escape sequences in specifier strings, the .n field will be provided where possible.\n                            const { n: name, s: start, e: end, ss: expStart, se: expEnd } = imports[index];\n                            // check the chunk being imported\n                            let url = name;\n                            if (!url) {\n                                const rawUrl = code.slice(start, end);\n                                if (rawUrl[0] === `\"` && rawUrl[rawUrl.length - 1] === `\"`)\n                                    url = rawUrl.slice(1, -1);\n                            }\n                            const deps = new Set();\n                            let hasRemovedPureCssChunk = false;\n                            if (url) {\n                                const ownerFilename = chunk.fileName;\n                                // literal import - trace direct imports and add to deps\n                                const analyzed = new Set();\n                                const addDeps = (filename) => {\n                                    if (filename === ownerFilename)\n                                        return;\n                                    if (analyzed.has(filename))\n                                        return;\n                                    analyzed.add(filename);\n                                    const chunk = bundle[filename];\n                                    if (chunk) {\n                                        deps.add(chunk.fileName);\n                                        chunk.viteMetadata.importedCss.forEach((file) => {\n                                            deps.add(file);\n                                        });\n                                        chunk.imports.forEach(addDeps);\n                                    }\n                                    else {\n                                        const removedPureCssFiles = removedPureCssFilesCache.get(config);\n                                        const chunk = removedPureCssFiles.get(filename);\n                                        if (chunk) {\n                                            if (chunk.viteMetadata.importedCss.size) {\n                                                chunk.viteMetadata.importedCss.forEach((file) => {\n                                                    deps.add(file);\n                                                });\n                                                hasRemovedPureCssChunk = true;\n                                            }\n                                            s.overwrite(expStart, expEnd, 'Promise.resolve({})', {\n                                                contentOnly: true\n                                            });\n                                        }\n                                    }\n                                };\n                                const normalizedFile = path$n.posix.join(path$n.posix.dirname(chunk.fileName), url);\n                                addDeps(normalizedFile);\n                            }\n                            let markerStartPos = code.indexOf(preloadMarkerWithQuote, end);\n                            // fix issue #3051\n                            if (markerStartPos === -1 && imports.length === 1) {\n                                markerStartPos = code.indexOf(preloadMarkerWithQuote);\n                            }\n                            if (markerStartPos > 0) {\n                                s.overwrite(markerStartPos, markerStartPos + preloadMarkerWithQuote.length, \n                                // the dep list includes the main chunk, so only need to reload when there are\n                                // actual other deps. Don't include the assets dir if the default asset file names\n                                // are used, the path will be reconstructed by the import preload helper\n                                deps.size > 1 ||\n                                    // main chunk is removed\n                                    (hasRemovedPureCssChunk && deps.size > 0)\n                                    ? `[${[...deps]\n                                        .map((d) => JSON.stringify(relativePreloadUrls\n                                        ? path$n.relative(path$n.dirname(file), d)\n                                        : d))\n                                        .join(',')}]`\n                                    : `[]`, { contentOnly: true });\n                                rewroteMarkerStartPos.add(markerStartPos);\n                            }\n                        }\n                    }\n                    // there may still be markers due to inlined dynamic imports, remove\n                    // all the markers regardless\n                    let markerStartPos = code.indexOf(preloadMarkerWithQuote);\n                    while (markerStartPos >= 0) {\n                        if (!rewroteMarkerStartPos.has(markerStartPos)) {\n                            s.overwrite(markerStartPos, markerStartPos + preloadMarkerWithQuote.length, 'void 0', { contentOnly: true });\n                        }\n                        markerStartPos = code.indexOf(preloadMarkerWithQuote, markerStartPos + preloadMarkerWithQuote.length);\n                    }\n                    if (s.hasChanged()) {\n                        chunk.code = s.toString();\n                        if (config.build.sourcemap && chunk.map) {\n                            const nextMap = s.generateMap({\n                                source: chunk.fileName,\n                                hires: true\n                            });\n                            const map = combineSourcemaps(chunk.fileName, [nextMap, chunk.map], false);\n                            map.toUrl = () => genSourceMapUrl(map);\n                            chunk.map = map;\n                        }\n                    }\n                }\n            }\n        }\n    };\n}\n\nconst modulePreloadPolyfillId = 'vite/modulepreload-polyfill';\nfunction modulePreloadPolyfillPlugin(config) {\n    // `isModernFlag` is only available during build since it is resolved by `vite:build-import-analysis`\n    const skip = config.command !== 'build' || config.build.ssr;\n    let polyfillString;\n    return {\n        name: 'vite:modulepreload-polyfill',\n        resolveId(id) {\n            if (id === modulePreloadPolyfillId) {\n                return id;\n            }\n        },\n        load(id) {\n            if (id === modulePreloadPolyfillId) {\n                if (skip) {\n                    return '';\n                }\n                if (!polyfillString) {\n                    polyfillString = `${isModernFlag}&&(${polyfill.toString()}());`;\n                }\n                return polyfillString;\n            }\n        }\n    };\n}\nfunction polyfill() {\n    const relList = document.createElement('link').relList;\n    if (relList && relList.supports && relList.supports('modulepreload')) {\n        return;\n    }\n    for (const link of document.querySelectorAll('link[rel=\"modulepreload\"]')) {\n        processPreload(link);\n    }\n    new MutationObserver((mutations) => {\n        for (const mutation of mutations) {\n            if (mutation.type !== 'childList') {\n                continue;\n            }\n            for (const node of mutation.addedNodes) {\n                if (node.tagName === 'LINK' && node.rel === 'modulepreload')\n                    processPreload(node);\n            }\n        }\n    }).observe(document, { childList: true, subtree: true });\n    function getFetchOpts(script) {\n        const fetchOpts = {};\n        if (script.integrity)\n            fetchOpts.integrity = script.integrity;\n        if (script.referrerpolicy)\n            fetchOpts.referrerPolicy = script.referrerpolicy;\n        if (script.crossorigin === 'use-credentials')\n            fetchOpts.credentials = 'include';\n        else if (script.crossorigin === 'anonymous')\n            fetchOpts.credentials = 'omit';\n        else\n            fetchOpts.credentials = 'same-origin';\n        return fetchOpts;\n    }\n    function processPreload(link) {\n        if (link.ep)\n            // ep marker = processed\n            return;\n        link.ep = true;\n        // prepopulate the load record\n        const fetchOpts = getFetchOpts(link);\n        fetch(link.href, fetchOpts);\n    }\n}\n\nconst htmlProxyRE$1 = /\\?html-proxy=?(?:&inline-css)?&index=(\\d+)\\.(js|css)$/;\nconst inlineCSSRE$1 = /__VITE_INLINE_CSS__([a-z\\d]{8}_\\d+)__/g;\n// Do not allow preceding '.', but do allow preceding '...' for spread operations\nconst inlineImportRE = /(?<!(?<!\\.\\.)\\.)\\bimport\\s*\\((\"([^\"]|(?<=\\\\)\")*\"|'([^']|(?<=\\\\)')*')\\)/g;\nconst htmlLangRE = /\\.(html|htm)$/;\nconst isHTMLProxy = (id) => htmlProxyRE$1.test(id);\nconst isHTMLRequest = (request) => htmlLangRE.test(request);\n// HTML Proxy Caches are stored by config -> filePath -> index\nconst htmlProxyMap = new WeakMap();\n// HTML Proxy Transform result are stored by config\n// `${hash(importer)}_${query.index}` -> transformed css code\n// PS: key like `hash(/vite/playground/assets/index.html)_1`)\nconst htmlProxyResult = new Map();\nfunction htmlInlineProxyPlugin(config) {\n    // Should do this when `constructor` rather than when `buildStart`,\n    // `buildStart` will be triggered multiple times then the cached result will be emptied.\n    // https://github.com/vitejs/vite/issues/6372\n    htmlProxyMap.set(config, new Map());\n    return {\n        name: 'vite:html-inline-proxy',\n        resolveId(id) {\n            if (htmlProxyRE$1.test(id)) {\n                return id;\n            }\n        },\n        load(id) {\n            const proxyMatch = id.match(htmlProxyRE$1);\n            if (proxyMatch) {\n                const index = Number(proxyMatch[1]);\n                const file = cleanUrl(id);\n                const url = file.replace(normalizePath$3(config.root), '');\n                const result = htmlProxyMap.get(config).get(url)[index];\n                if (result) {\n                    return result;\n                }\n                else {\n                    throw new Error(`No matching HTML proxy module found from ${id}`);\n                }\n            }\n        }\n    };\n}\nfunction addToHTMLProxyCache(config, filePath, index, result) {\n    if (!htmlProxyMap.get(config)) {\n        htmlProxyMap.set(config, new Map());\n    }\n    if (!htmlProxyMap.get(config).get(filePath)) {\n        htmlProxyMap.get(config).set(filePath, []);\n    }\n    htmlProxyMap.get(config).get(filePath)[index] = result;\n}\nfunction addToHTMLProxyTransformResult(hash, code) {\n    htmlProxyResult.set(hash, code);\n}\n// this extends the config in @vue/compiler-sfc with <link href>\nconst assetAttrsConfig = {\n    link: ['href'],\n    video: ['src', 'poster'],\n    source: ['src', 'srcset'],\n    img: ['src', 'srcset'],\n    image: ['xlink:href', 'href'],\n    use: ['xlink:href', 'href']\n};\nconst isAsyncScriptMap = new WeakMap();\nasync function traverseHtml(html, filePath, visitor) {\n    // lazy load compiler\n    const { parse, transform } = await import('./dep-9d3f225a.js').then(function (n) { return n.c; });\n    // @vue/compiler-core doesn't like lowercase doctypes\n    html = html.replace(/<!doctype\\s/i, '<!DOCTYPE ');\n    try {\n        const ast = parse(html, { comments: true });\n        transform(ast, {\n            nodeTransforms: [visitor]\n        });\n    }\n    catch (e) {\n        handleParseError(e, html, filePath);\n    }\n}\nfunction getScriptInfo(node) {\n    let src;\n    let isModule = false;\n    let isAsync = false;\n    for (let i = 0; i < node.props.length; i++) {\n        const p = node.props[i];\n        if (p.type === 6 /* ATTRIBUTE */) {\n            if (p.name === 'src') {\n                src = p;\n            }\n            else if (p.name === 'type' && p.value && p.value.content === 'module') {\n                isModule = true;\n            }\n            else if (p.name === 'async') {\n                isAsync = true;\n            }\n        }\n    }\n    return { src, isModule, isAsync };\n}\n/**\n * Format Vue @type {CompilerError} to @type {RollupError}\n */\nfunction formatParseError(compilerError, id, html) {\n    const formattedError = { ...compilerError };\n    if (compilerError.loc) {\n        formattedError.frame = generateCodeFrame(html, compilerError.loc.start.offset);\n        formattedError.loc = {\n            file: id,\n            line: compilerError.loc.start.line,\n            column: compilerError.loc.start.column\n        };\n    }\n    return formattedError;\n}\nfunction handleParseError(compilerError, html, filePath) {\n    const parseError = {\n        loc: filePath,\n        frame: '',\n        ...formatParseError(compilerError, filePath, html)\n    };\n    throw new Error(`Unable to parse HTML; ${compilerError.message}\\n at ${JSON.stringify(parseError.loc)}\\n${parseError.frame}`);\n}\n/**\n * Compiles index.html into an entry js module\n */\nfunction buildHtmlPlugin(config) {\n    const [preHooks, postHooks] = resolveHtmlTransforms(config.plugins);\n    const processedHtml = new Map();\n    const isExcludedUrl = (url) => url.startsWith('#') ||\n        isExternalUrl(url) ||\n        isDataUrl(url) ||\n        checkPublicFile(url, config);\n    // Same reason with `htmlInlineProxyPlugin`\n    isAsyncScriptMap.set(config, new Map());\n    return {\n        name: 'vite:build-html',\n        async transform(html, id) {\n            if (id.endsWith('.html')) {\n                const relativeUrlPath = slash$1(path$n.relative(config.root, id));\n                const publicPath = `/${relativeUrlPath}`;\n                const publicBase = getBaseInHTML(relativeUrlPath, config);\n                const publicToRelative = (filename, importer) => publicBase + filename;\n                const toOutputPublicFilePath = (url) => toOutputFilePathInHtml(url.slice(1), 'public', relativeUrlPath, 'html', config, publicToRelative);\n                // pre-transform\n                html = await applyHtmlTransforms(html, preHooks, {\n                    path: publicPath,\n                    filename: id\n                });\n                let js = '';\n                const s = new MagicString(html);\n                const assetUrls = [];\n                const scriptUrls = [];\n                const styleUrls = [];\n                let inlineModuleIndex = -1;\n                let everyScriptIsAsync = true;\n                let someScriptsAreAsync = false;\n                let someScriptsAreDefer = false;\n                await traverseHtml(html, id, (node) => {\n                    if (node.type !== 1 /* ELEMENT */) {\n                        return;\n                    }\n                    let shouldRemove = false;\n                    // script tags\n                    if (node.tag === 'script') {\n                        const { src, isModule, isAsync } = getScriptInfo(node);\n                        const url = src && src.value && src.value.content;\n                        const isPublicFile = !!(url && checkPublicFile(url, config));\n                        if (isPublicFile) {\n                            // referencing public dir url, prefix with base\n                            s.overwrite(src.value.loc.start.offset, src.value.loc.end.offset, `\"${toOutputPublicFilePath(url)}\"`, { contentOnly: true });\n                        }\n                        if (isModule) {\n                            inlineModuleIndex++;\n                            if (url && !isExcludedUrl(url)) {\n                                // <script type=\"module\" src=\"...\"/>\n                                // add it as an import\n                                js += `\\nimport ${JSON.stringify(url)}`;\n                                shouldRemove = true;\n                            }\n                            else if (node.children.length) {\n                                const contents = node.children\n                                    .map((child) => child.content || '')\n                                    .join('');\n                                // <script type=\"module\">...</script>\n                                const filePath = id.replace(normalizePath$3(config.root), '');\n                                addToHTMLProxyCache(config, filePath, inlineModuleIndex, {\n                                    code: contents\n                                });\n                                js += `\\nimport \"${id}?html-proxy&index=${inlineModuleIndex}.js\"`;\n                                shouldRemove = true;\n                            }\n                            everyScriptIsAsync && (everyScriptIsAsync = isAsync);\n                            someScriptsAreAsync || (someScriptsAreAsync = isAsync);\n                            someScriptsAreDefer || (someScriptsAreDefer = !isAsync);\n                        }\n                        else if (url && !isPublicFile) {\n                            if (!isExcludedUrl(url)) {\n                                config.logger.warn(`<script src=\"${url}\"> in \"${publicPath}\" can't be bundled without type=\"module\" attribute`);\n                            }\n                        }\n                        else if (node.children.length) {\n                            const scriptNode = node.children.pop();\n                            const cleanCode = stripLiteral(scriptNode.content);\n                            let match;\n                            while ((match = inlineImportRE.exec(cleanCode))) {\n                                const { 1: url, index } = match;\n                                const startUrl = cleanCode.indexOf(url, index);\n                                const start = startUrl + 1;\n                                const end = start + url.length - 2;\n                                scriptUrls.push({\n                                    start: start + scriptNode.loc.start.offset,\n                                    end: end + scriptNode.loc.start.offset,\n                                    url: scriptNode.content.slice(start, end)\n                                });\n                            }\n                        }\n                    }\n                    // For asset references in index.html, also generate an import\n                    // statement for each - this will be handled by the asset plugin\n                    const assetAttrs = assetAttrsConfig[node.tag];\n                    if (assetAttrs) {\n                        for (const p of node.props) {\n                            if (p.type === 6 /* ATTRIBUTE */ &&\n                                p.value &&\n                                assetAttrs.includes(p.name)) {\n                                // assetsUrl may be encodeURI\n                                const url = decodeURI(p.value.content);\n                                if (!isExcludedUrl(url)) {\n                                    if (node.tag === 'link' &&\n                                        isCSSRequest(url) &&\n                                        // should not be converted if following attributes are present (#6748)\n                                        !node.props.some((p) => p.name === 'media' || p.name === 'disabled')) {\n                                        // CSS references, convert to import\n                                        const importExpression = `\\nimport ${JSON.stringify(url)}`;\n                                        styleUrls.push({\n                                            url,\n                                            start: node.loc.start.offset,\n                                            end: node.loc.end.offset\n                                        });\n                                        js += importExpression;\n                                    }\n                                    else {\n                                        assetUrls.push(p);\n                                    }\n                                }\n                                else if (checkPublicFile(url, config)) {\n                                    s.overwrite(p.value.loc.start.offset, p.value.loc.end.offset, `\"${toOutputPublicFilePath(url)}\"`, { contentOnly: true });\n                                }\n                            }\n                        }\n                    }\n                    // <tag style=\"... url(...) ...\"></tag>\n                    // extract inline styles as virtual css and add class attribute to tag for selecting\n                    const inlineStyle = node.props.find((prop) => prop.name === 'style' &&\n                        prop.type === 6 /* ATTRIBUTE */ &&\n                        prop.value &&\n                        prop.value.content.includes('url(') // only url(...) in css need to emit file\n                    );\n                    if (inlineStyle) {\n                        inlineModuleIndex++;\n                        // replace `inline style` to class\n                        // and import css in js code\n                        const styleNode = inlineStyle.value;\n                        const code = styleNode.content;\n                        const filePath = id.replace(normalizePath$3(config.root), '');\n                        addToHTMLProxyCache(config, filePath, inlineModuleIndex, { code });\n                        // will transform with css plugin and cache result with css-post plugin\n                        js += `\\nimport \"${id}?html-proxy&inline-css&index=${inlineModuleIndex}.css\"`;\n                        const hash = getHash(cleanUrl(id));\n                        // will transform in `applyHtmlTransforms`\n                        s.overwrite(styleNode.loc.start.offset, styleNode.loc.end.offset, `\"__VITE_INLINE_CSS__${hash}_${inlineModuleIndex}__\"`, { contentOnly: true });\n                    }\n                    // <style>...</style>\n                    if (node.tag === 'style' && node.children.length) {\n                        const styleNode = node.children.pop();\n                        const filePath = id.replace(normalizePath$3(config.root), '');\n                        inlineModuleIndex++;\n                        addToHTMLProxyCache(config, filePath, inlineModuleIndex, {\n                            code: styleNode.content\n                        });\n                        js += `\\nimport \"${id}?html-proxy&inline-css&index=${inlineModuleIndex}.css\"`;\n                        const hash = getHash(cleanUrl(id));\n                        // will transform in `applyHtmlTransforms`\n                        s.overwrite(styleNode.loc.start.offset, styleNode.loc.end.offset, `__VITE_INLINE_CSS__${hash}_${inlineModuleIndex}__`, { contentOnly: true });\n                    }\n                    if (shouldRemove) {\n                        // remove the script tag from the html. we are going to inject new\n                        // ones in the end.\n                        s.remove(node.loc.start.offset, node.loc.end.offset);\n                    }\n                });\n                isAsyncScriptMap.get(config).set(id, everyScriptIsAsync);\n                if (someScriptsAreAsync && someScriptsAreDefer) {\n                    config.logger.warn(`\\nMixed async and defer script modules in ${id}, output script will fallback to defer. Every script, including inline ones, need to be marked as async for your output script to be async.`);\n                }\n                // for each encountered asset url, rewrite original html so that it\n                // references the post-build location, ignoring empty attributes and\n                // attributes that directly reference named output.\n                const namedOutput = Object.keys(config?.build?.rollupOptions?.input || {});\n                for (const attr of assetUrls) {\n                    const value = attr.value;\n                    // assetsUrl may be encodeURI\n                    const content = decodeURI(value.content);\n                    if (content !== '' && // Empty attribute\n                        !namedOutput.includes(content) && // Direct reference to named output\n                        !namedOutput.includes(content.replace(/^\\//, '')) // Allow for absolute references as named output can't be an absolute path\n                    ) {\n                        try {\n                            const url = attr.name === 'srcset'\n                                ? await processSrcSet(content, ({ url }) => urlToBuiltUrl(url, id, config, this))\n                                : await urlToBuiltUrl(content, id, config, this);\n                            s.overwrite(value.loc.start.offset, value.loc.end.offset, `\"${url}\"`, { contentOnly: true });\n                        }\n                        catch (e) {\n                            if (e.code !== 'ENOENT') {\n                                throw e;\n                            }\n                        }\n                    }\n                }\n                // emit <script>import(\"./aaa\")</script> asset\n                for (const { start, end, url } of scriptUrls) {\n                    if (!isExcludedUrl(url)) {\n                        s.overwrite(start, end, await urlToBuiltUrl(url, id, config, this), { contentOnly: true });\n                    }\n                    else if (checkPublicFile(url, config)) {\n                        s.overwrite(start, end, toOutputPublicFilePath(url), {\n                            contentOnly: true\n                        });\n                    }\n                }\n                // ignore <link rel=\"stylesheet\"> if its url can't be resolved\n                const resolvedStyleUrls = await Promise.all(styleUrls.map(async (styleUrl) => ({\n                    ...styleUrl,\n                    resolved: await this.resolve(styleUrl.url, id)\n                })));\n                for (const { start, end, url, resolved } of resolvedStyleUrls) {\n                    if (resolved == null) {\n                        config.logger.warnOnce(`\\n${url} doesn't exist at build time, it will remain unchanged to be resolved at runtime`);\n                        const importExpression = `\\nimport ${JSON.stringify(url)}`;\n                        js = js.replace(importExpression, '');\n                    }\n                    else {\n                        s.remove(start, end);\n                    }\n                }\n                processedHtml.set(id, s.toString());\n                // inject module preload polyfill only when configured and needed\n                if (config.build.polyfillModulePreload &&\n                    (someScriptsAreAsync || someScriptsAreDefer)) {\n                    js = `import \"${modulePreloadPolyfillId}\";\\n${js}`;\n                }\n                return js;\n            }\n        },\n        async generateBundle(options, bundle) {\n            const analyzedChunk = new Map();\n            const getImportedChunks = (chunk, seen = new Set()) => {\n                const chunks = [];\n                chunk.imports.forEach((file) => {\n                    const importee = bundle[file];\n                    if (importee?.type === 'chunk' && !seen.has(file)) {\n                        seen.add(file);\n                        // post-order traversal\n                        chunks.push(...getImportedChunks(importee, seen));\n                        chunks.push(importee);\n                    }\n                });\n                return chunks;\n            };\n            const toScriptTag = (chunk, toOutputPath, isAsync) => ({\n                tag: 'script',\n                attrs: {\n                    ...(isAsync ? { async: true } : {}),\n                    type: 'module',\n                    crossorigin: true,\n                    src: toOutputPath(chunk.fileName)\n                }\n            });\n            const toPreloadTag = (chunk, toOutputPath) => ({\n                tag: 'link',\n                attrs: {\n                    rel: 'modulepreload',\n                    crossorigin: true,\n                    href: toOutputPath(chunk.fileName)\n                }\n            });\n            const getCssTagsForChunk = (chunk, toOutputPath, seen = new Set()) => {\n                const tags = [];\n                if (!analyzedChunk.has(chunk)) {\n                    analyzedChunk.set(chunk, 1);\n                    chunk.imports.forEach((file) => {\n                        const importee = bundle[file];\n                        if (importee?.type === 'chunk') {\n                            tags.push(...getCssTagsForChunk(importee, toOutputPath, seen));\n                        }\n                    });\n                }\n                chunk.viteMetadata.importedCss.forEach((file) => {\n                    if (!seen.has(file)) {\n                        seen.add(file);\n                        tags.push({\n                            tag: 'link',\n                            attrs: {\n                                rel: 'stylesheet',\n                                href: toOutputPath(file)\n                            }\n                        });\n                    }\n                });\n                return tags;\n            };\n            for (const [id, html] of processedHtml) {\n                const relativeUrlPath = path$n.posix.relative(config.root, id);\n                const assetsBase = getBaseInHTML(relativeUrlPath, config);\n                const toOutputFilePath = (filename, type) => {\n                    if (isExternalUrl(filename)) {\n                        return filename;\n                    }\n                    else {\n                        return toOutputFilePathInHtml(filename, type, relativeUrlPath, 'html', config, (filename, importer) => assetsBase + filename);\n                    }\n                };\n                const toOutputAssetFilePath = (filename) => toOutputFilePath(filename, 'asset');\n                const toOutputPublicAssetFilePath = (filename) => toOutputFilePath(filename, 'public');\n                const isAsync = isAsyncScriptMap.get(config).get(id);\n                let result = html;\n                // find corresponding entry chunk\n                const chunk = Object.values(bundle).find((chunk) => chunk.type === 'chunk' &&\n                    chunk.isEntry &&\n                    chunk.facadeModuleId === id);\n                let canInlineEntry = false;\n                // inject chunk asset links\n                if (chunk) {\n                    // an entry chunk can be inlined if\n                    //  - it's an ES module (e.g. not generated by the legacy plugin)\n                    //  - it contains no meaningful code other than import statements\n                    if (options.format === 'es' && isEntirelyImport(chunk.code)) {\n                        canInlineEntry = true;\n                    }\n                    // when not inlined, inject <script> for entry and modulepreload its dependencies\n                    // when inlined, discard entry chunk and inject <script> for everything in post-order\n                    const imports = getImportedChunks(chunk);\n                    const assetTags = canInlineEntry\n                        ? imports.map((chunk) => toScriptTag(chunk, toOutputAssetFilePath, isAsync))\n                        : [\n                            toScriptTag(chunk, toOutputAssetFilePath, isAsync),\n                            ...imports.map((i) => toPreloadTag(i, toOutputAssetFilePath))\n                        ];\n                    assetTags.push(...getCssTagsForChunk(chunk, toOutputAssetFilePath));\n                    result = injectToHead(result, assetTags);\n                }\n                // inject css link when cssCodeSplit is false\n                if (!config.build.cssCodeSplit) {\n                    const cssChunk = Object.values(bundle).find((chunk) => chunk.type === 'asset' && chunk.name === 'style.css');\n                    if (cssChunk) {\n                        result = injectToHead(result, [\n                            {\n                                tag: 'link',\n                                attrs: {\n                                    rel: 'stylesheet',\n                                    href: toOutputAssetFilePath(cssChunk.fileName)\n                                }\n                            }\n                        ]);\n                    }\n                }\n                // no use assets plugin because it will emit file\n                let match;\n                let s;\n                while ((match = inlineCSSRE$1.exec(result))) {\n                    s || (s = new MagicString(result));\n                    const { 0: full, 1: scopedName } = match;\n                    const cssTransformedCode = htmlProxyResult.get(scopedName);\n                    s.overwrite(match.index, match.index + full.length, cssTransformedCode, { contentOnly: true });\n                }\n                if (s) {\n                    result = s.toString();\n                }\n                result = await applyHtmlTransforms(result, postHooks, {\n                    path: '/' + relativeUrlPath,\n                    filename: id,\n                    bundle,\n                    chunk\n                });\n                // resolve asset url references\n                result = result.replace(assetUrlRE, (_, fileHash, postfix = '') => {\n                    return (toOutputAssetFilePath(getAssetFilename(fileHash, config)) + postfix);\n                });\n                result = result.replace(publicAssetUrlRE, (_, fileHash) => {\n                    return normalizePath$3(toOutputPublicAssetFilePath(getPublicAssetFilename(fileHash, config)));\n                });\n                if (chunk && canInlineEntry) {\n                    // all imports from entry have been inlined to html, prevent rollup from outputting it\n                    delete bundle[chunk.fileName];\n                }\n                const shortEmitName = normalizePath$3(path$n.relative(config.root, id));\n                this.emitFile({\n                    type: 'asset',\n                    fileName: shortEmitName,\n                    source: result\n                });\n            }\n        }\n    };\n}\nfunction resolveHtmlTransforms(plugins) {\n    const preHooks = [];\n    const postHooks = [];\n    for (const plugin of plugins) {\n        const hook = plugin.transformIndexHtml;\n        if (hook) {\n            if (typeof hook === 'function') {\n                postHooks.push(hook);\n            }\n            else if (hook.enforce === 'pre') {\n                preHooks.push(hook.transform);\n            }\n            else {\n                postHooks.push(hook.transform);\n            }\n        }\n    }\n    return [preHooks, postHooks];\n}\nasync function applyHtmlTransforms(html, hooks, ctx) {\n    for (const hook of hooks) {\n        const res = await hook(html, ctx);\n        if (!res) {\n            continue;\n        }\n        if (typeof res === 'string') {\n            html = res;\n        }\n        else {\n            let tags;\n            if (Array.isArray(res)) {\n                tags = res;\n            }\n            else {\n                html = res.html || html;\n                tags = res.tags;\n            }\n            const headTags = [];\n            const headPrependTags = [];\n            const bodyTags = [];\n            const bodyPrependTags = [];\n            for (const tag of tags) {\n                if (tag.injectTo === 'body') {\n                    bodyTags.push(tag);\n                }\n                else if (tag.injectTo === 'body-prepend') {\n                    bodyPrependTags.push(tag);\n                }\n                else if (tag.injectTo === 'head') {\n                    headTags.push(tag);\n                }\n                else {\n                    headPrependTags.push(tag);\n                }\n            }\n            html = injectToHead(html, headPrependTags, true);\n            html = injectToHead(html, headTags);\n            html = injectToBody(html, bodyPrependTags, true);\n            html = injectToBody(html, bodyTags);\n        }\n    }\n    return html;\n}\nconst importRE = /\\bimport\\s*(\"[^\"]*[^\\\\]\"|'[^']*[^\\\\]');*/g;\nconst commentRE = /\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*$/gm;\nfunction isEntirelyImport(code) {\n    // only consider \"side-effect\" imports, which match <script type=module> semantics exactly\n    // the regexes will remove too little in some exotic cases, but false-negatives are alright\n    return !code.replace(importRE, '').replace(commentRE, '').trim().length;\n}\nfunction getBaseInHTML(urlRelativePath, config) {\n    // Prefer explicit URL if defined for linking to assets and public files from HTML,\n    // even when base relative is specified\n    return config.base === './' || config.base === ''\n        ? path$n.posix.join(path$n.posix.relative(urlRelativePath, '').slice(0, -2), './')\n        : config.base;\n}\nconst headInjectRE = /([ \\t]*)<\\/head>/i;\nconst headPrependInjectRE = /([ \\t]*)<head[^>]*>/i;\nconst htmlInjectRE = /<\\/html>/i;\nconst htmlPrependInjectRE = /([ \\t]*)<html[^>]*>/i;\nconst bodyInjectRE = /([ \\t]*)<\\/body>/i;\nconst bodyPrependInjectRE = /([ \\t]*)<body[^>]*>/i;\nconst doctypePrependInjectRE = /<!doctype html>/i;\nfunction injectToHead(html, tags, prepend = false) {\n    if (tags.length === 0)\n        return html;\n    if (prepend) {\n        // inject as the first element of head\n        if (headPrependInjectRE.test(html)) {\n            return html.replace(headPrependInjectRE, (match, p1) => `${match}\\n${serializeTags(tags, incrementIndent(p1))}`);\n        }\n    }\n    else {\n        // inject before head close\n        if (headInjectRE.test(html)) {\n            // respect indentation of head tag\n            return html.replace(headInjectRE, (match, p1) => `${serializeTags(tags, incrementIndent(p1))}${match}`);\n        }\n        // try to inject before the body tag\n        if (bodyPrependInjectRE.test(html)) {\n            return html.replace(bodyPrependInjectRE, (match, p1) => `${serializeTags(tags, p1)}\\n${match}`);\n        }\n    }\n    // if no head tag is present, we prepend the tag for both prepend and append\n    return prependInjectFallback(html, tags);\n}\nfunction injectToBody(html, tags, prepend = false) {\n    if (tags.length === 0)\n        return html;\n    if (prepend) {\n        // inject after body open\n        if (bodyPrependInjectRE.test(html)) {\n            return html.replace(bodyPrependInjectRE, (match, p1) => `${match}\\n${serializeTags(tags, incrementIndent(p1))}`);\n        }\n        // if no there is no body tag, inject after head or fallback to prepend in html\n        if (headInjectRE.test(html)) {\n            return html.replace(headInjectRE, (match, p1) => `${match}\\n${serializeTags(tags, p1)}`);\n        }\n        return prependInjectFallback(html, tags);\n    }\n    else {\n        // inject before body close\n        if (bodyInjectRE.test(html)) {\n            return html.replace(bodyInjectRE, (match, p1) => `${serializeTags(tags, incrementIndent(p1))}${match}`);\n        }\n        // if no body tag is present, append to the html tag, or at the end of the file\n        if (htmlInjectRE.test(html)) {\n            return html.replace(htmlInjectRE, `${serializeTags(tags)}\\n$&`);\n        }\n        return html + `\\n` + serializeTags(tags);\n    }\n}\nfunction prependInjectFallback(html, tags) {\n    // prepend to the html tag, append after doctype, or the document start\n    if (htmlPrependInjectRE.test(html)) {\n        return html.replace(htmlPrependInjectRE, `$&\\n${serializeTags(tags)}`);\n    }\n    if (doctypePrependInjectRE.test(html)) {\n        return html.replace(doctypePrependInjectRE, `$&\\n${serializeTags(tags)}`);\n    }\n    return serializeTags(tags) + html;\n}\nconst unaryTags = new Set(['link', 'meta', 'base']);\nfunction serializeTag({ tag, attrs, children }, indent = '') {\n    if (unaryTags.has(tag)) {\n        return `<${tag}${serializeAttrs(attrs)}>`;\n    }\n    else {\n        return `<${tag}${serializeAttrs(attrs)}>${serializeTags(children, incrementIndent(indent))}</${tag}>`;\n    }\n}\nfunction serializeTags(tags, indent = '') {\n    if (typeof tags === 'string') {\n        return tags;\n    }\n    else if (tags && tags.length) {\n        return tags.map((tag) => `${indent}${serializeTag(tag, indent)}\\n`).join('');\n    }\n    return '';\n}\nfunction serializeAttrs(attrs) {\n    let res = '';\n    for (const key in attrs) {\n        if (typeof attrs[key] === 'boolean') {\n            res += attrs[key] ? ` ${key}` : ``;\n        }\n        else {\n            res += ` ${key}=${JSON.stringify(attrs[key])}`;\n        }\n    }\n    return res;\n}\nfunction incrementIndent(indent = '') {\n    return `${indent}${indent[0] === '\\t' ? '\\t' : '  '}`;\n}\n\nconst cssLangs = `\\\\.(css|less|sass|scss|styl|stylus|pcss|postcss)($|\\\\?)`;\nconst cssLangRE = new RegExp(cssLangs);\nconst cssModuleRE = new RegExp(`\\\\.module${cssLangs}`);\nconst directRequestRE = /(\\?|&)direct\\b/;\nconst htmlProxyRE = /(\\?|&)html-proxy\\b/;\nconst commonjsProxyRE = /\\?commonjs-proxy/;\nconst inlineRE = /(\\?|&)inline\\b/;\nconst inlineCSSRE = /(\\?|&)inline-css\\b/;\nconst usedRE = /(\\?|&)used\\b/;\nconst varRE = /^var\\(/i;\nconst cssBundleName = 'style.css';\nconst isCSSRequest = (request) => cssLangRE.test(request);\nconst isDirectCSSRequest = (request) => cssLangRE.test(request) && directRequestRE.test(request);\nconst isDirectRequest = (request) => directRequestRE.test(request);\nconst cssModulesCache = new WeakMap();\nconst removedPureCssFilesCache = new WeakMap();\nconst cssEntryFilesCache = new WeakMap();\nconst postcssConfigCache = new WeakMap();\nfunction encodePublicUrlsInCSS(config) {\n    return config.command === 'build';\n}\n/**\n * Plugin applied before user plugins\n */\nfunction cssPlugin(config) {\n    let server;\n    let moduleCache;\n    const resolveUrl = config.createResolver({\n        preferRelative: true,\n        tryIndex: false,\n        extensions: []\n    });\n    const atImportResolvers = createCSSResolvers(config);\n    return {\n        name: 'vite:css',\n        configureServer(_server) {\n            server = _server;\n        },\n        buildStart() {\n            // Ensure a new cache for every build (i.e. rebuilding in watch mode)\n            moduleCache = new Map();\n            cssModulesCache.set(config, moduleCache);\n            removedPureCssFilesCache.set(config, new Map());\n            cssEntryFilesCache.set(config, new Set());\n        },\n        async transform(raw, id, options) {\n            if (!isCSSRequest(id) ||\n                commonjsProxyRE.test(id) ||\n                SPECIAL_QUERY_RE.test(id)) {\n                return;\n            }\n            const ssr = options?.ssr === true;\n            const urlReplacer = async (url, importer) => {\n                if (checkPublicFile(url, config)) {\n                    if (encodePublicUrlsInCSS(config)) {\n                        return publicFileToBuiltUrl(url, config);\n                    }\n                    else {\n                        return config.base + url.slice(1);\n                    }\n                }\n                const resolved = await resolveUrl(url, importer);\n                if (resolved) {\n                    return fileToUrl(resolved, config, this);\n                }\n                return url;\n            };\n            const { code: css, modules, deps, map } = await compileCSS(id, raw, config, urlReplacer, atImportResolvers);\n            if (modules) {\n                moduleCache.set(id, modules);\n            }\n            // track deps for build watch mode\n            if (config.command === 'build' && config.build.watch && deps) {\n                for (const file of deps) {\n                    this.addWatchFile(file);\n                }\n            }\n            // dev\n            if (server) {\n                // server only logic for handling CSS @import dependency hmr\n                const { moduleGraph } = server;\n                const thisModule = moduleGraph.getModuleById(id);\n                const devBase = config.base;\n                if (thisModule) {\n                    // CSS modules cannot self-accept since it exports values\n                    const isSelfAccepting = !modules && !inlineRE.test(id) && !htmlProxyRE.test(id);\n                    if (deps) {\n                        // record deps in the module graph so edits to @import css can trigger\n                        // main import to hot update\n                        const depModules = new Set();\n                        for (const file of deps) {\n                            depModules.add(isCSSRequest(file)\n                                ? moduleGraph.createFileOnlyEntry(file)\n                                : await moduleGraph.ensureEntryFromUrl((await fileToUrl(file, config, this)).replace((config.server?.origin ?? '') + devBase, '/'), ssr));\n                        }\n                        moduleGraph.updateModuleInfo(thisModule, depModules, null, \n                        // The root CSS proxy module is self-accepting and should not\n                        // have an explicit accept list\n                        new Set(), null, isSelfAccepting, ssr);\n                        for (const file of deps) {\n                            this.addWatchFile(file);\n                        }\n                    }\n                    else {\n                        thisModule.isSelfAccepting = isSelfAccepting;\n                    }\n                }\n            }\n            return {\n                code: css,\n                map\n            };\n        }\n    };\n}\n/**\n * Plugin applied after user plugins\n */\nfunction cssPostPlugin(config) {\n    // styles initialization in buildStart causes a styling loss in watch\n    const styles = new Map();\n    let pureCssChunks;\n    // when there are multiple rollup outputs and extracting CSS, only emit once,\n    // since output formats have no effect on the generated CSS.\n    let outputToExtractedCSSMap;\n    let hasEmitted = false;\n    const rollupOptionsOutput = config.build.rollupOptions.output;\n    const assetFileNames = (Array.isArray(rollupOptionsOutput)\n        ? rollupOptionsOutput[0]\n        : rollupOptionsOutput)?.assetFileNames;\n    const getCssAssetDirname = (cssAssetName) => {\n        if (!assetFileNames) {\n            return config.build.assetsDir;\n        }\n        else if (typeof assetFileNames === 'string') {\n            return path$n.dirname(assetFileNames);\n        }\n        else {\n            return path$n.dirname(assetFileNames({\n                name: cssAssetName,\n                type: 'asset',\n                source: '/* vite internal call, ignore */'\n            }));\n        }\n    };\n    return {\n        name: 'vite:css-post',\n        buildStart() {\n            // Ensure new caches for every build (i.e. rebuilding in watch mode)\n            pureCssChunks = new Set();\n            outputToExtractedCSSMap = new Map();\n            hasEmitted = false;\n        },\n        async transform(css, id, options) {\n            if (!isCSSRequest(id) ||\n                commonjsProxyRE.test(id) ||\n                SPECIAL_QUERY_RE.test(id)) {\n                return;\n            }\n            const inlined = inlineRE.test(id);\n            const modules = cssModulesCache.get(config).get(id);\n            // #6984, #7552\n            // `foo.module.css` => modulesCode\n            // `foo.module.css?inline` => cssContent\n            const modulesCode = modules &&\n                !inlined &&\n                dataToEsm(modules, { namedExports: true, preferConst: true });\n            if (config.command === 'serve') {\n                const getContentWithSourcemap = async (content) => {\n                    if (config.css?.devSourcemap) {\n                        const sourcemap = this.getCombinedSourcemap();\n                        await injectSourcesContent(sourcemap, cleanUrl(id), config.logger);\n                        return getCodeWithSourcemap('css', content, sourcemap);\n                    }\n                    return content;\n                };\n                if (isDirectCSSRequest(id)) {\n                    return await getContentWithSourcemap(css);\n                }\n                // server only\n                if (options?.ssr) {\n                    return modulesCode || `export default ${JSON.stringify(css)}`;\n                }\n                if (inlined) {\n                    return `export default ${JSON.stringify(css)}`;\n                }\n                const cssContent = await getContentWithSourcemap(css);\n                const devBase = config.base;\n                return [\n                    `import { updateStyle as __vite__updateStyle, removeStyle as __vite__removeStyle } from ${JSON.stringify(path$n.posix.join(devBase, CLIENT_PUBLIC_PATH))}`,\n                    `const __vite__id = ${JSON.stringify(id)}`,\n                    `const __vite__css = ${JSON.stringify(cssContent)}`,\n                    `__vite__updateStyle(__vite__id, __vite__css)`,\n                    // css modules exports change on edit so it can't self accept\n                    `${modulesCode ||\n                        `import.meta.hot.accept()\\nexport default __vite__css`}`,\n                    `import.meta.hot.prune(() => __vite__removeStyle(__vite__id))`\n                ].join('\\n');\n            }\n            // build CSS handling ----------------------------------------------------\n            // record css\n            // cache css compile result to map\n            // and then use the cache replace inline-style-flag when `generateBundle` in vite:build-html plugin\n            const inlineCSS = inlineCSSRE.test(id);\n            const isHTMLProxy = htmlProxyRE.test(id);\n            const query = parseRequest(id);\n            if (inlineCSS && isHTMLProxy) {\n                addToHTMLProxyTransformResult(`${getHash(cleanUrl(id))}_${Number.parseInt(query.index)}`, css);\n                return `export default ''`;\n            }\n            if (!inlined) {\n                styles.set(id, css);\n            }\n            let code;\n            if (usedRE.test(id)) {\n                if (modulesCode) {\n                    code = modulesCode;\n                }\n                else {\n                    let content = css;\n                    if (config.build.minify) {\n                        content = await minifyCSS(content, config);\n                    }\n                    code = `export default ${JSON.stringify(content)}`;\n                }\n            }\n            else {\n                // if moduleCode exists return it **even if** it does not have `?used`\n                // this will disable tree-shake to work with `import './foo.module.css'` but this usually does not happen\n                // this is a limitation of the current approach by `?used` to make tree-shake work\n                // See #8936 for more details\n                code = modulesCode || `export default ''`;\n            }\n            return {\n                code,\n                map: { mappings: '' },\n                // avoid the css module from being tree-shaken so that we can retrieve\n                // it in renderChunk()\n                moduleSideEffects: inlined ? false : 'no-treeshake'\n            };\n        },\n        async renderChunk(code, chunk, opts) {\n            let chunkCSS = '';\n            let isPureCssChunk = true;\n            const ids = Object.keys(chunk.modules);\n            for (const id of ids) {\n                if (!isCSSRequest(id) ||\n                    cssModuleRE.test(id) ||\n                    commonjsProxyRE.test(id)) {\n                    isPureCssChunk = false;\n                }\n                if (styles.has(id)) {\n                    chunkCSS += styles.get(id);\n                }\n            }\n            if (!chunkCSS) {\n                return null;\n            }\n            const cssEntryFiles = cssEntryFilesCache.get(config);\n            const publicAssetUrlMap = publicAssetUrlCache.get(config);\n            // resolve asset URL placeholders to their built file URLs\n            function resolveAssetUrlsInCss(chunkCSS, cssAssetName) {\n                const encodedPublicUrls = encodePublicUrlsInCSS(config);\n                const relative = config.base === './' || config.base === '';\n                const cssAssetDirname = encodedPublicUrls || relative\n                    ? getCssAssetDirname(cssAssetName)\n                    : undefined;\n                const toRelative = (filename, importer) => {\n                    // relative base + extracted CSS\n                    const relativePath = path$n.posix.relative(cssAssetDirname, filename);\n                    return relativePath.startsWith('.')\n                        ? relativePath\n                        : './' + relativePath;\n                };\n                // replace asset url references with resolved url.\n                chunkCSS = chunkCSS.replace(assetUrlRE, (_, fileHash, postfix = '') => {\n                    const filename = getAssetFilename(fileHash, config) + postfix;\n                    chunk.viteMetadata.importedAssets.add(cleanUrl(filename));\n                    return toOutputFilePathInCss(filename, 'asset', cssAssetName, 'css', config, toRelative);\n                });\n                // resolve public URL from CSS paths\n                if (encodedPublicUrls) {\n                    const relativePathToPublicFromCSS = path$n.posix.relative(cssAssetDirname, '');\n                    chunkCSS = chunkCSS.replace(publicAssetUrlRE, (_, hash) => {\n                        const publicUrl = publicAssetUrlMap.get(hash).slice(1);\n                        return toOutputFilePathInCss(publicUrl, 'public', cssAssetName, 'css', config, () => `${relativePathToPublicFromCSS}/${publicUrl}`);\n                    });\n                }\n                return chunkCSS;\n            }\n            function ensureFileExt(name, ext) {\n                return normalizePath$3(path$n.format({ ...path$n.parse(name), base: undefined, ext }));\n            }\n            if (config.build.cssCodeSplit) {\n                if (isPureCssChunk) {\n                    // this is a shared CSS-only chunk that is empty.\n                    pureCssChunks.add(chunk.fileName);\n                }\n                if (opts.format === 'es' || opts.format === 'cjs') {\n                    const cssAssetName = chunk.facadeModuleId\n                        ? normalizePath$3(path$n.relative(config.root, chunk.facadeModuleId))\n                        : chunk.name;\n                    const lang = path$n.extname(cssAssetName).slice(1);\n                    const cssFileName = ensureFileExt(cssAssetName, '.css');\n                    if (chunk.isEntry && isPureCssChunk)\n                        cssEntryFiles.add(cssAssetName);\n                    chunkCSS = resolveAssetUrlsInCss(chunkCSS, cssAssetName);\n                    chunkCSS = await finalizeCss(chunkCSS, true, config);\n                    // emit corresponding css file\n                    const fileHandle = this.emitFile({\n                        name: isPreProcessor(lang) ? cssAssetName : cssFileName,\n                        fileName: assetFileNamesToFileName(resolveAssetFileNames(config), cssFileName, getHash(chunkCSS), chunkCSS),\n                        type: 'asset',\n                        source: chunkCSS\n                    });\n                    chunk.viteMetadata.importedCss.add(this.getFileName(fileHandle));\n                }\n                else if (!config.build.ssr) {\n                    chunkCSS = await finalizeCss(chunkCSS, true, config);\n                    let cssString = JSON.stringify(chunkCSS);\n                    cssString =\n                        renderAssetUrlInJS(this, config, chunk, opts, cssString)?.toString() || cssString;\n                    const style = `__vite_style__`;\n                    const injectCode = `var ${style} = document.createElement('style');` +\n                        `${style}.innerHTML = ${cssString};` +\n                        `document.head.appendChild(${style});`;\n                    const wrapIdx = code.indexOf('System.register');\n                    const insertMark = \"'use strict';\";\n                    const insertIdx = code.indexOf(insertMark, wrapIdx);\n                    const s = new MagicString(code);\n                    s.appendLeft(insertIdx + insertMark.length, injectCode);\n                    if (config.build.sourcemap) {\n                        // resolve public URL from CSS paths, we need to use absolute paths\n                        return {\n                            code: s.toString(),\n                            map: s.generateMap({ hires: true })\n                        };\n                    }\n                    else {\n                        return { code: s.toString() };\n                    }\n                }\n            }\n            else {\n                chunkCSS = resolveAssetUrlsInCss(chunkCSS, cssBundleName);\n                // finalizeCss is called for the aggregated chunk in generateBundle\n                outputToExtractedCSSMap.set(opts, (outputToExtractedCSSMap.get(opts) || '') + chunkCSS);\n            }\n            return null;\n        },\n        async generateBundle(opts, bundle) {\n            // @ts-ignore asset emits are skipped in legacy bundle\n            if (opts.__vite_skip_asset_emit__) {\n                return;\n            }\n            // remove empty css chunks and their imports\n            if (pureCssChunks.size) {\n                const emptyChunkFiles = [...pureCssChunks]\n                    .map((file) => path$n.basename(file))\n                    .join('|')\n                    .replace(/\\./g, '\\\\.');\n                const emptyChunkRE = new RegExp(opts.format === 'es'\n                    ? `\\\\bimport\\\\s*[\"'][^\"']*(?:${emptyChunkFiles})[\"'];\\n?`\n                    : `\\\\brequire\\\\(\\\\s*[\"'][^\"']*(?:${emptyChunkFiles})[\"']\\\\);\\n?`, 'g');\n                for (const file in bundle) {\n                    const chunk = bundle[file];\n                    if (chunk.type === 'chunk') {\n                        // remove pure css chunk from other chunk's imports,\n                        // and also register the emitted CSS files under the importer\n                        // chunks instead.\n                        chunk.imports = chunk.imports.filter((file) => {\n                            if (pureCssChunks.has(file)) {\n                                const { viteMetadata: { importedCss } } = bundle[file];\n                                importedCss.forEach((file) => chunk.viteMetadata.importedCss.add(file));\n                                return false;\n                            }\n                            return true;\n                        });\n                        chunk.code = chunk.code.replace(emptyChunkRE, \n                        // remove css import while preserving source map location\n                        (m) => `/* empty css ${''.padEnd(m.length - 15)}*/`);\n                    }\n                }\n                const removedPureCssFiles = removedPureCssFilesCache.get(config);\n                pureCssChunks.forEach((fileName) => {\n                    removedPureCssFiles.set(fileName, bundle[fileName]);\n                    delete bundle[fileName];\n                });\n            }\n            let extractedCss = outputToExtractedCSSMap.get(opts);\n            if (extractedCss && !hasEmitted) {\n                hasEmitted = true;\n                extractedCss = await finalizeCss(extractedCss, true, config);\n                this.emitFile({\n                    name: cssBundleName,\n                    type: 'asset',\n                    source: extractedCss\n                });\n            }\n        }\n    };\n}\nfunction createCSSResolvers(config) {\n    let cssResolve;\n    let sassResolve;\n    let lessResolve;\n    return {\n        get css() {\n            return (cssResolve ||\n                (cssResolve = config.createResolver({\n                    extensions: ['.css'],\n                    mainFields: ['style'],\n                    tryIndex: false,\n                    preferRelative: true\n                })));\n        },\n        get sass() {\n            return (sassResolve ||\n                (sassResolve = config.createResolver({\n                    extensions: ['.scss', '.sass', '.css'],\n                    mainFields: ['sass', 'style'],\n                    tryIndex: true,\n                    tryPrefix: '_',\n                    preferRelative: true\n                })));\n        },\n        get less() {\n            return (lessResolve ||\n                (lessResolve = config.createResolver({\n                    extensions: ['.less', '.css'],\n                    mainFields: ['less', 'style'],\n                    tryIndex: false,\n                    preferRelative: true\n                })));\n        }\n    };\n}\nfunction getCssResolversKeys(resolvers) {\n    return Object.keys(resolvers);\n}\nasync function compileCSS(id, code, config, urlReplacer, atImportResolvers, server) {\n    const { modules: modulesOptions, preprocessorOptions, devSourcemap } = config.css || {};\n    const isModule = modulesOptions !== false && cssModuleRE.test(id);\n    // although at serve time it can work without processing, we do need to\n    // crawl them in order to register watch dependencies.\n    const needInlineImport = code.includes('@import');\n    const hasUrl = cssUrlRE.test(code) || cssImageSetRE.test(code);\n    const postcssConfig = await resolvePostcssConfig(config);\n    const lang = id.match(cssLangRE)?.[1];\n    // 1. plain css that needs no processing\n    if (lang === 'css' &&\n        !postcssConfig &&\n        !isModule &&\n        !needInlineImport &&\n        !hasUrl) {\n        return { code, map: null };\n    }\n    let preprocessorMap;\n    let modules;\n    const deps = new Set();\n    // 2. pre-processors: sass etc.\n    if (isPreProcessor(lang)) {\n        const preProcessor = preProcessors[lang];\n        let opts = (preprocessorOptions && preprocessorOptions[lang]) || {};\n        // support @import from node dependencies by default\n        switch (lang) {\n            case \"scss\" /* scss */:\n            case \"sass\" /* sass */:\n                opts = {\n                    includePaths: ['node_modules'],\n                    alias: config.resolve.alias,\n                    ...opts\n                };\n                break;\n            case \"less\" /* less */:\n            case \"styl\" /* styl */:\n            case \"stylus\" /* stylus */:\n                opts = {\n                    paths: ['node_modules'],\n                    alias: config.resolve.alias,\n                    ...opts\n                };\n        }\n        // important: set this for relative import resolving\n        opts.filename = cleanUrl(id);\n        opts.enableSourcemap = devSourcemap ?? false;\n        const preprocessResult = await preProcessor(code, config.root, opts, atImportResolvers);\n        if (preprocessResult.errors.length) {\n            throw preprocessResult.errors[0];\n        }\n        code = preprocessResult.code;\n        preprocessorMap = combineSourcemapsIfExists(opts.filename, preprocessResult.map, preprocessResult.additionalMap);\n        if (preprocessResult.deps) {\n            preprocessResult.deps.forEach((dep) => {\n                // sometimes sass registers the file itself as a dep\n                if (normalizePath$3(dep) !== normalizePath$3(opts.filename)) {\n                    deps.add(dep);\n                }\n            });\n        }\n    }\n    // 3. postcss\n    const postcssOptions = (postcssConfig && postcssConfig.options) || {};\n    const postcssPlugins = postcssConfig && postcssConfig.plugins ? postcssConfig.plugins.slice() : [];\n    if (needInlineImport) {\n        postcssPlugins.unshift((await import('./dep-94c1417a.js').then(function (n) { return n.i; })).default({\n            async resolve(id, basedir) {\n                const publicFile = checkPublicFile(id, config);\n                if (publicFile) {\n                    return publicFile;\n                }\n                const resolved = await atImportResolvers.css(id, path$n.join(basedir, '*'));\n                if (resolved) {\n                    return path$n.resolve(resolved);\n                }\n                return id;\n            }\n        }));\n    }\n    postcssPlugins.push(UrlRewritePostcssPlugin({\n        replacer: urlReplacer,\n        logger: config.logger\n    }));\n    if (isModule) {\n        postcssPlugins.unshift((await import('./dep-25be4b3b.js').then(function (n) { return n.i; })).default({\n            ...modulesOptions,\n            getJSON(cssFileName, _modules, outputFileName) {\n                modules = _modules;\n                if (modulesOptions && typeof modulesOptions.getJSON === 'function') {\n                    modulesOptions.getJSON(cssFileName, _modules, outputFileName);\n                }\n            },\n            async resolve(id) {\n                for (const key of getCssResolversKeys(atImportResolvers)) {\n                    const resolved = await atImportResolvers[key](id);\n                    if (resolved) {\n                        return path$n.resolve(resolved);\n                    }\n                }\n                return id;\n            }\n        }));\n    }\n    if (!postcssPlugins.length) {\n        return {\n            code,\n            map: preprocessorMap\n        };\n    }\n    // postcss is an unbundled dep and should be lazy imported\n    const postcssResult = await (await import('postcss'))\n        .default(postcssPlugins)\n        .process(code, {\n        ...postcssOptions,\n        to: id,\n        from: id,\n        ...(devSourcemap\n            ? {\n                map: {\n                    inline: false,\n                    annotation: false,\n                    // postcss may return virtual files\n                    // we cannot obtain content of them, so this needs to be enabled\n                    sourcesContent: true\n                    // when \"prev: preprocessorMap\", the result map may include duplicate filename in `postcssResult.map.sources`\n                    // prev: preprocessorMap,\n                }\n            }\n            : {})\n    });\n    // record CSS dependencies from @imports\n    for (const message of postcssResult.messages) {\n        if (message.type === 'dependency') {\n            deps.add(normalizePath$3(message.file));\n        }\n        else if (message.type === 'dir-dependency') {\n            // https://github.com/postcss/postcss/blob/main/docs/guidelines/plugin.md#3-dependencies\n            const { dir, glob: globPattern = '**' } = message;\n            const pattern = out.escapePath(normalizePath$3(path$n.resolve(path$n.dirname(id), dir))) +\n                `/` +\n                globPattern;\n            const files = out.sync(pattern, {\n                ignore: ['**/node_modules/**']\n            });\n            for (let i = 0; i < files.length; i++) {\n                deps.add(files[i]);\n            }\n        }\n        else if (message.type === 'warning') {\n            let msg = `[vite:css] ${message.text}`;\n            if (message.line && message.column) {\n                msg += `\\n${generateCodeFrame(code, {\n                    line: message.line,\n                    column: message.column\n                })}`;\n            }\n            config.logger.warn(picocolors.exports.yellow(msg));\n        }\n    }\n    if (!devSourcemap) {\n        return {\n            ast: postcssResult,\n            code: postcssResult.css,\n            map: { mappings: '' },\n            modules,\n            deps\n        };\n    }\n    const rawPostcssMap = postcssResult.map.toJSON();\n    const postcssMap = await formatPostcssSourceMap(\n    // version property of rawPostcssMap is declared as string\n    // but actually it is a number\n    rawPostcssMap, cleanUrl(id));\n    return {\n        ast: postcssResult,\n        code: postcssResult.css,\n        map: combineSourcemapsIfExists(cleanUrl(id), postcssMap, preprocessorMap),\n        modules,\n        deps\n    };\n}\nasync function formatPostcssSourceMap(rawMap, file) {\n    const inputFileDir = path$n.dirname(file);\n    const sources = rawMap.sources.map((source) => {\n        const cleanSource = cleanUrl(decodeURIComponent(source));\n        // postcss returns virtual files\n        if (/^<.+>$/.test(cleanSource)) {\n            return `\\0${cleanSource}`;\n        }\n        return normalizePath$3(path$n.resolve(inputFileDir, cleanSource));\n    });\n    return {\n        file,\n        mappings: rawMap.mappings,\n        names: rawMap.names,\n        sources,\n        sourcesContent: rawMap.sourcesContent,\n        version: rawMap.version\n    };\n}\nfunction combineSourcemapsIfExists(filename, map1, map2) {\n    return map1 && map2\n        ? combineSourcemaps(filename, [\n            // type of version property of ExistingRawSourceMap is number\n            // but it is always 3\n            map1,\n            map2\n        ])\n        : map1;\n}\nasync function finalizeCss(css, minify, config) {\n    // hoist external @imports and @charset to the top of the CSS chunk per spec (#1845 and #6333)\n    if (css.includes('@import') || css.includes('@charset')) {\n        css = await hoistAtRules(css);\n    }\n    if (minify && config.build.minify) {\n        css = await minifyCSS(css, config);\n    }\n    return css;\n}\nasync function resolvePostcssConfig(config) {\n    let result = postcssConfigCache.get(config);\n    if (result !== undefined) {\n        return result;\n    }\n    // inline postcss config via vite config\n    const inlineOptions = config.css?.postcss;\n    if (isObject$2(inlineOptions)) {\n        const options = { ...inlineOptions };\n        delete options.plugins;\n        result = {\n            options,\n            plugins: inlineOptions.plugins || []\n        };\n    }\n    else {\n        const searchPath = typeof inlineOptions === 'string' ? inlineOptions : config.root;\n        try {\n            // @ts-ignore\n            result = await src$1({}, searchPath);\n        }\n        catch (e) {\n            if (!/No PostCSS Config found/.test(e.message)) {\n                if (e instanceof Error) {\n                    const { name, message, stack } = e;\n                    e.name = 'Failed to load PostCSS config';\n                    e.message = `Failed to load PostCSS config (searchPath: ${searchPath}): [${name}] ${message}\\n${stack}`;\n                    e.stack = ''; // add stack to message to retain stack\n                    throw e;\n                }\n                else {\n                    throw new Error(`Failed to load PostCSS config: ${e}`);\n                }\n            }\n            result = null;\n        }\n    }\n    postcssConfigCache.set(config, result);\n    return result;\n}\n// https://drafts.csswg.org/css-syntax-3/#identifier-code-point\nconst cssUrlRE = /(?<=^|[^\\w\\-\\u0080-\\uffff])url\\(\\s*('[^']+'|\"[^\"]+\"|[^'\")]+)\\s*\\)/;\nconst cssDataUriRE = /(?<=^|[^\\w\\-\\u0080-\\uffff])data-uri\\(\\s*('[^']+'|\"[^\"]+\"|[^'\")]+)\\s*\\)/;\nconst importCssRE = /@import ('[^']+\\.css'|\"[^\"]+\\.css\"|[^'\")]+\\.css)/;\nconst cssImageSetRE = /(?<=image-set\\()((?:[\\w\\-]+\\([^\\)]*\\)|[^)])*)(?=\\))/;\nconst UrlRewritePostcssPlugin = (opts) => {\n    if (!opts) {\n        throw new Error('base or replace is required');\n    }\n    return {\n        postcssPlugin: 'vite-url-rewrite',\n        Once(root) {\n            const promises = [];\n            root.walkDecls((declaration) => {\n                const importer = declaration.source?.input.file;\n                if (!importer) {\n                    opts.logger.warnOnce('\\nA PostCSS plugin did not pass the `from` option to `postcss.parse`. ' +\n                        'This may cause imported assets to be incorrectly transformed. ' +\n                        \"If you've recently added a PostCSS plugin that raised this warning, \" +\n                        'please contact the package author to fix the issue.');\n                }\n                const isCssUrl = cssUrlRE.test(declaration.value);\n                const isCssImageSet = cssImageSetRE.test(declaration.value);\n                if (isCssUrl || isCssImageSet) {\n                    const replacerForDeclaration = (rawUrl) => {\n                        return opts.replacer(rawUrl, importer);\n                    };\n                    const rewriterToUse = isCssImageSet\n                        ? rewriteCssImageSet\n                        : rewriteCssUrls;\n                    promises.push(rewriterToUse(declaration.value, replacerForDeclaration).then((url) => {\n                        declaration.value = url;\n                    }));\n                }\n            });\n            if (promises.length) {\n                return Promise.all(promises);\n            }\n        }\n    };\n};\nUrlRewritePostcssPlugin.postcss = true;\nfunction rewriteCssUrls(css, replacer) {\n    return asyncReplace(css, cssUrlRE, async (match) => {\n        const [matched, rawUrl] = match;\n        return await doUrlReplace(rawUrl, matched, replacer);\n    });\n}\nfunction rewriteCssDataUris(css, replacer) {\n    return asyncReplace(css, cssDataUriRE, async (match) => {\n        const [matched, rawUrl] = match;\n        return await doUrlReplace(rawUrl, matched, replacer, 'data-uri');\n    });\n}\nfunction rewriteImportCss(css, replacer) {\n    return asyncReplace(css, importCssRE, async (match) => {\n        const [matched, rawUrl] = match;\n        return await doImportCSSReplace(rawUrl, matched, replacer);\n    });\n}\n// TODO: image and cross-fade could contain a \"url\" that needs to be processed\n// https://drafts.csswg.org/css-images-4/#image-notation\n// https://drafts.csswg.org/css-images-4/#cross-fade-function\nconst cssNotProcessedRE = /(gradient|element|cross-fade|image)\\(/;\nasync function rewriteCssImageSet(css, replacer) {\n    return await asyncReplace(css, cssImageSetRE, async (match) => {\n        const [, rawUrl] = match;\n        const url = await processSrcSet(rawUrl, async ({ url }) => {\n            // the url maybe url(...)\n            if (cssUrlRE.test(url)) {\n                return await rewriteCssUrls(url, replacer);\n            }\n            if (!cssNotProcessedRE.test(url)) {\n                return await doUrlReplace(url, url, replacer);\n            }\n            return url;\n        });\n        return url;\n    });\n}\nasync function doUrlReplace(rawUrl, matched, replacer, funcName = 'url') {\n    let wrap = '';\n    const first = rawUrl[0];\n    if (first === `\"` || first === `'`) {\n        wrap = first;\n        rawUrl = rawUrl.slice(1, -1);\n    }\n    if (isExternalUrl(rawUrl) ||\n        isDataUrl(rawUrl) ||\n        rawUrl.startsWith('#') ||\n        varRE.test(rawUrl)) {\n        return matched;\n    }\n    const newUrl = await replacer(rawUrl);\n    if (wrap === '' && newUrl !== encodeURI(newUrl)) {\n        // The new url might need wrapping even if the original did not have it, e.g. if a space was added during replacement\n        wrap = \"'\";\n    }\n    return `${funcName}(${wrap}${newUrl}${wrap})`;\n}\nasync function doImportCSSReplace(rawUrl, matched, replacer) {\n    let wrap = '';\n    const first = rawUrl[0];\n    if (first === `\"` || first === `'`) {\n        wrap = first;\n        rawUrl = rawUrl.slice(1, -1);\n    }\n    if (isExternalUrl(rawUrl) || isDataUrl(rawUrl) || rawUrl.startsWith('#')) {\n        return matched;\n    }\n    return `@import ${wrap}${await replacer(rawUrl)}${wrap}`;\n}\nasync function minifyCSS(css, config) {\n    try {\n        const { code, warnings } = await transform$2(css, {\n            loader: 'css',\n            target: config.build.cssTarget || undefined,\n            ...resolveEsbuildMinifyOptions(config.esbuild || {})\n        });\n        if (warnings.length) {\n            const msgs = await formatMessages(warnings, { kind: 'warning' });\n            config.logger.warn(picocolors.exports.yellow(`warnings when minifying css:\\n${msgs.join('\\n')}`));\n        }\n        return code;\n    }\n    catch (e) {\n        if (e.errors) {\n            const msgs = await formatMessages(e.errors, { kind: 'error' });\n            e.frame = '\\n' + msgs.join('\\n');\n            e.loc = e.errors[0].location;\n        }\n        throw e;\n    }\n}\nfunction resolveEsbuildMinifyOptions(options) {\n    const base = {\n        logLevel: options.logLevel,\n        logLimit: options.logLimit,\n        logOverride: options.logOverride\n    };\n    if (options.minifyIdentifiers != null ||\n        options.minifySyntax != null ||\n        options.minifyWhitespace != null) {\n        return {\n            ...base,\n            minifyIdentifiers: options.minifyIdentifiers ?? true,\n            minifySyntax: options.minifySyntax ?? true,\n            minifyWhitespace: options.minifyWhitespace ?? true\n        };\n    }\n    else {\n        return { ...base, minify: true };\n    }\n}\nasync function hoistAtRules(css) {\n    const s = new MagicString(css);\n    const cleanCss = emptyCssComments(css);\n    let match;\n    // #1845\n    // CSS @import can only appear at top of the file. We need to hoist all @import\n    // to top when multiple files are concatenated.\n    // match until semicolon that's not in quotes\n    const atImportRE = /@import\\s*(?:url\\([^\\)]*\\)|\"([^\"]|(?<=\\\\)\")*\"|'([^']|(?<=\\\\)')*'|[^;]*).*?;/gm;\n    while ((match = atImportRE.exec(cleanCss))) {\n        s.remove(match.index, match.index + match[0].length);\n        // Use `appendLeft` instead of `prepend` to preserve original @import order\n        s.appendLeft(0, match[0]);\n    }\n    // #6333\n    // CSS @charset must be the top-first in the file, hoist the first to top\n    const atCharsetRE = /@charset\\s*(?:\"([^\"]|(?<=\\\\)\")*\"|'([^']|(?<=\\\\)')*'|[^;]*).*?;/gm;\n    let foundCharset = false;\n    while ((match = atCharsetRE.exec(cleanCss))) {\n        s.remove(match.index, match.index + match[0].length);\n        if (!foundCharset) {\n            s.prepend(match[0]);\n            foundCharset = true;\n        }\n    }\n    return s.toString();\n}\nconst loadedPreprocessors = {};\n// TODO: use dynamic import\nconst _require$2 = createRequire$1(import.meta.url);\nfunction loadPreprocessor(lang, root) {\n    if (lang in loadedPreprocessors) {\n        return loadedPreprocessors[lang];\n    }\n    try {\n        const resolved = requireResolveFromRootWithFallback(root, lang);\n        return (loadedPreprocessors[lang] = _require$2(resolved));\n    }\n    catch (e) {\n        if (e.code === 'MODULE_NOT_FOUND') {\n            throw new Error(`Preprocessor dependency \"${lang}\" not found. Did you install it?`);\n        }\n        else {\n            const message = new Error(`Preprocessor dependency \"${lang}\" failed to load:\\n${e.message}`);\n            message.stack = e.stack + '\\n' + message.stack;\n            throw message;\n        }\n    }\n}\n// .scss/.sass processor\nconst scss = async (source, root, options, resolvers) => {\n    const render = loadPreprocessor(\"sass\" /* sass */, root).render;\n    const internalImporter = (url, importer, done) => {\n        resolvers.sass(url, importer).then((resolved) => {\n            if (resolved) {\n                rebaseUrls(resolved, options.filename, options.alias)\n                    .then((data) => done?.(data))\n                    .catch((data) => done?.(data));\n            }\n            else {\n                done?.(null);\n            }\n        });\n    };\n    const importer = [internalImporter];\n    if (options.importer) {\n        Array.isArray(options.importer)\n            ? importer.push(...options.importer)\n            : importer.push(options.importer);\n    }\n    const { content: data, map: additionalMap } = await getSource(source, options.filename, options.additionalData, options.enableSourcemap);\n    const finalOptions = {\n        ...options,\n        data,\n        file: options.filename,\n        outFile: options.filename,\n        importer,\n        ...(options.enableSourcemap\n            ? {\n                sourceMap: true,\n                omitSourceMapUrl: true,\n                sourceMapRoot: path$n.dirname(options.filename)\n            }\n            : {})\n    };\n    try {\n        const result = await new Promise((resolve, reject) => {\n            render(finalOptions, (err, res) => {\n                if (err) {\n                    reject(err);\n                }\n                else {\n                    resolve(res);\n                }\n            });\n        });\n        const deps = result.stats.includedFiles;\n        const map = result.map\n            ? JSON.parse(result.map.toString())\n            : undefined;\n        return {\n            code: result.css.toString(),\n            map,\n            additionalMap,\n            errors: [],\n            deps\n        };\n    }\n    catch (e) {\n        // normalize SASS error\n        e.id = e.file;\n        e.frame = e.formatted;\n        return { code: '', errors: [e], deps: [] };\n    }\n};\nconst sass = (source, root, options, aliasResolver) => scss(source, root, {\n    ...options,\n    indentedSyntax: true\n}, aliasResolver);\n/**\n * relative url() inside \\@imported sass and less files must be rebased to use\n * root file as base.\n */\nasync function rebaseUrls(file, rootFile, alias) {\n    file = path$n.resolve(file); // ensure os-specific flashes\n    // in the same dir, no need to rebase\n    const fileDir = path$n.dirname(file);\n    const rootDir = path$n.dirname(rootFile);\n    if (fileDir === rootDir) {\n        return { file };\n    }\n    const content = fs$l.readFileSync(file, 'utf-8');\n    // no url()\n    const hasUrls = cssUrlRE.test(content);\n    // data-uri() calls\n    const hasDataUris = cssDataUriRE.test(content);\n    // no @import xxx.css\n    const hasImportCss = importCssRE.test(content);\n    if (!hasUrls && !hasDataUris && !hasImportCss) {\n        return { file };\n    }\n    let rebased;\n    const rebaseFn = (url) => {\n        if (url.startsWith('/'))\n            return url;\n        // match alias, no need to rewrite\n        for (const { find } of alias) {\n            const matches = typeof find === 'string' ? url.startsWith(find) : find.test(url);\n            if (matches) {\n                return url;\n            }\n        }\n        const absolute = path$n.resolve(fileDir, url);\n        const relative = path$n.relative(rootDir, absolute);\n        return normalizePath$3(relative);\n    };\n    // fix css imports in less such as `@import \"foo.css\"`\n    if (hasImportCss) {\n        rebased = await rewriteImportCss(content, rebaseFn);\n    }\n    if (hasUrls) {\n        rebased = await rewriteCssUrls(rebased || content, rebaseFn);\n    }\n    if (hasDataUris) {\n        rebased = await rewriteCssDataUris(rebased || content, rebaseFn);\n    }\n    return {\n        file,\n        contents: rebased\n    };\n}\n// .less\nconst less = async (source, root, options, resolvers) => {\n    const nodeLess = loadPreprocessor(\"less\" /* less */, root);\n    const viteResolverPlugin = createViteLessPlugin(nodeLess, options.filename, options.alias, resolvers);\n    const { content, map: additionalMap } = await getSource(source, options.filename, options.additionalData, options.enableSourcemap);\n    let result;\n    try {\n        result = await nodeLess.render(content, {\n            ...options,\n            plugins: [viteResolverPlugin, ...(options.plugins || [])],\n            ...(options.enableSourcemap\n                ? {\n                    sourceMap: {\n                        outputSourceFiles: true,\n                        sourceMapFileInline: false\n                    }\n                }\n                : {})\n        });\n    }\n    catch (e) {\n        const error = e;\n        // normalize error info\n        const normalizedError = new Error(error.message || error.type);\n        normalizedError.loc = {\n            file: error.filename || options.filename,\n            line: error.line,\n            column: error.column\n        };\n        return { code: '', errors: [normalizedError], deps: [] };\n    }\n    const map = result.map && JSON.parse(result.map);\n    if (map) {\n        delete map.sourcesContent;\n    }\n    return {\n        code: result.css.toString(),\n        map,\n        additionalMap,\n        deps: result.imports,\n        errors: []\n    };\n};\n/**\n * Less manager, lazy initialized\n */\nlet ViteLessManager;\nfunction createViteLessPlugin(less, rootFile, alias, resolvers) {\n    if (!ViteLessManager) {\n        ViteLessManager = class ViteManager extends less.FileManager {\n            constructor(rootFile, resolvers, alias) {\n                super();\n                this.rootFile = rootFile;\n                this.resolvers = resolvers;\n                this.alias = alias;\n            }\n            supports() {\n                return true;\n            }\n            supportsSync() {\n                return false;\n            }\n            async loadFile(filename, dir, opts, env) {\n                const resolved = await this.resolvers.less(filename, path$n.join(dir, '*'));\n                if (resolved) {\n                    const result = await rebaseUrls(resolved, this.rootFile, this.alias);\n                    let contents;\n                    if (result && 'contents' in result) {\n                        contents = result.contents;\n                    }\n                    else {\n                        contents = fs$l.readFileSync(resolved, 'utf-8');\n                    }\n                    return {\n                        filename: path$n.resolve(resolved),\n                        contents\n                    };\n                }\n                else {\n                    return super.loadFile(filename, dir, opts, env);\n                }\n            }\n        };\n    }\n    return {\n        install(_, pluginManager) {\n            pluginManager.addFileManager(new ViteLessManager(rootFile, resolvers, alias));\n        },\n        minVersion: [3, 0, 0]\n    };\n}\n// .styl\nconst styl = async (source, root, options) => {\n    const nodeStylus = loadPreprocessor(\"stylus\" /* stylus */, root);\n    // Get source with preprocessor options.additionalData. Make sure a new line separator\n    // is added to avoid any render error, as added stylus content may not have semi-colon separators\n    const { content, map: additionalMap } = await getSource(source, options.filename, options.additionalData, options.enableSourcemap, '\\n');\n    // Get preprocessor options.imports dependencies as stylus\n    // does not return them with its builtin `.deps()` method\n    const importsDeps = (options.imports ?? []).map((dep) => path$n.resolve(dep));\n    try {\n        const ref = nodeStylus(content, options);\n        if (options.enableSourcemap) {\n            ref.set('sourcemap', {\n                comment: false,\n                inline: false,\n                basePath: root\n            });\n        }\n        const result = ref.render();\n        // Concat imports deps with computed deps\n        const deps = [...ref.deps(), ...importsDeps];\n        // @ts-expect-error sourcemap exists\n        const map = ref.sourcemap;\n        return {\n            code: result,\n            map: formatStylusSourceMap(map, root),\n            additionalMap,\n            errors: [],\n            deps\n        };\n    }\n    catch (e) {\n        return { code: '', errors: [e], deps: [] };\n    }\n};\nfunction formatStylusSourceMap(mapBefore, root) {\n    if (!mapBefore)\n        return undefined;\n    const map = { ...mapBefore };\n    const resolveFromRoot = (p) => normalizePath$3(path$n.resolve(root, p));\n    if (map.file) {\n        map.file = resolveFromRoot(map.file);\n    }\n    map.sources = map.sources.map(resolveFromRoot);\n    return map;\n}\nasync function getSource(source, filename, additionalData, enableSourcemap, sep = '') {\n    if (!additionalData)\n        return { content: source };\n    if (typeof additionalData === 'function') {\n        const newContent = await additionalData(source, filename);\n        if (typeof newContent === 'string') {\n            return { content: newContent };\n        }\n        return newContent;\n    }\n    if (!enableSourcemap) {\n        return { content: additionalData + sep + source };\n    }\n    const ms = new MagicString(source);\n    ms.appendLeft(0, sep);\n    ms.appendLeft(0, additionalData);\n    const map = ms.generateMap({ hires: true });\n    map.file = filename;\n    map.sources = [filename];\n    return {\n        content: ms.toString(),\n        map\n    };\n}\nconst preProcessors = Object.freeze({\n    [\"less\" /* less */]: less,\n    [\"sass\" /* sass */]: sass,\n    [\"scss\" /* scss */]: scss,\n    [\"styl\" /* styl */]: styl,\n    [\"stylus\" /* stylus */]: styl\n});\nfunction isPreProcessor(lang) {\n    return lang && lang in preProcessors;\n}\n\nfunction manifestPlugin(config) {\n    const manifest = {};\n    let outputCount;\n    return {\n        name: 'vite:manifest',\n        buildStart() {\n            outputCount = 0;\n        },\n        generateBundle({ format }, bundle) {\n            function getChunkName(chunk) {\n                if (chunk.facadeModuleId) {\n                    let name = normalizePath$3(path$n.relative(config.root, chunk.facadeModuleId));\n                    if (format === 'system' && !chunk.name.includes('-legacy')) {\n                        const ext = path$n.extname(name);\n                        const endPos = ext.length !== 0 ? -ext.length : undefined;\n                        name = name.slice(0, endPos) + `-legacy` + ext;\n                    }\n                    return name.replace(/\\0/g, '');\n                }\n                else {\n                    return `_` + path$n.basename(chunk.fileName);\n                }\n            }\n            function getInternalImports(imports) {\n                const filteredImports = [];\n                for (const file of imports) {\n                    if (bundle[file] === undefined) {\n                        continue;\n                    }\n                    filteredImports.push(getChunkName(bundle[file]));\n                }\n                return filteredImports;\n            }\n            function createChunk(chunk) {\n                const manifestChunk = {\n                    file: chunk.fileName\n                };\n                if (chunk.facadeModuleId) {\n                    manifestChunk.src = getChunkName(chunk);\n                }\n                if (chunk.isEntry) {\n                    manifestChunk.isEntry = true;\n                }\n                if (chunk.isDynamicEntry) {\n                    manifestChunk.isDynamicEntry = true;\n                }\n                if (chunk.imports.length) {\n                    const internalImports = getInternalImports(chunk.imports);\n                    if (internalImports.length > 0) {\n                        manifestChunk.imports = internalImports;\n                    }\n                }\n                if (chunk.dynamicImports.length) {\n                    const internalImports = getInternalImports(chunk.dynamicImports);\n                    if (internalImports.length > 0) {\n                        manifestChunk.dynamicImports = internalImports;\n                    }\n                }\n                if (chunk.viteMetadata.importedCss.size) {\n                    manifestChunk.css = [...chunk.viteMetadata.importedCss];\n                }\n                if (chunk.viteMetadata.importedAssets.size) {\n                    manifestChunk.assets = [...chunk.viteMetadata.importedAssets];\n                }\n                return manifestChunk;\n            }\n            function createAsset(chunk) {\n                const manifestChunk = {\n                    file: chunk.fileName,\n                    src: chunk.name\n                };\n                if (cssEntryFiles.has(chunk.name))\n                    manifestChunk.isEntry = true;\n                return manifestChunk;\n            }\n            const cssEntryFiles = cssEntryFilesCache.get(config);\n            for (const file in bundle) {\n                const chunk = bundle[file];\n                if (chunk.type === 'chunk') {\n                    manifest[getChunkName(chunk)] = createChunk(chunk);\n                }\n                else if (chunk.type === 'asset' && typeof chunk.name === 'string') {\n                    manifest[chunk.name] = createAsset(chunk);\n                }\n            }\n            outputCount++;\n            const output = config.build.rollupOptions?.output;\n            const outputLength = Array.isArray(output) ? output.length : 1;\n            if (outputCount >= outputLength) {\n                this.emitFile({\n                    fileName: typeof config.build.manifest === 'string'\n                        ? config.build.manifest\n                        : 'manifest.json',\n                    type: 'asset',\n                    source: JSON.stringify(manifest, null, 2)\n                });\n            }\n        }\n    };\n}\n\n// This is based on @rollup/plugin-data-uri\nconst dataUriRE = /^([^/]+\\/[^;,]+)(;base64)?,([\\s\\S]*)$/;\nconst dataUriPrefix = `/@data-uri/`;\n/**\n * Build only, since importing from a data URI works natively.\n */\nfunction dataURIPlugin() {\n    let resolved;\n    return {\n        name: 'vite:data-uri',\n        buildStart() {\n            resolved = {};\n        },\n        resolveId(id) {\n            if (!dataUriRE.test(id)) {\n                return null;\n            }\n            const uri = new URL$3(id);\n            if (uri.protocol !== 'data:') {\n                return null;\n            }\n            const match = uri.pathname.match(dataUriRE);\n            if (!match) {\n                return null;\n            }\n            const [, mime, format, data] = match;\n            if (mime !== 'text/javascript') {\n                throw new Error(`data URI with non-JavaScript mime type is not supported.`);\n            }\n            // decode data\n            const base64 = format && /base64/i.test(format.substring(1));\n            const content = base64\n                ? Buffer.from(data, 'base64').toString('utf-8')\n                : data;\n            resolved[id] = content;\n            return dataUriPrefix + id;\n        },\n        load(id) {\n            if (id.startsWith(dataUriPrefix)) {\n                id = id.slice(dataUriPrefix.length);\n                return resolved[id] || null;\n            }\n        }\n    };\n}\n\nfunction ssrManifestPlugin(config) {\n    // module id => preload assets mapping\n    const ssrManifest = {};\n    const base = config.base; // TODO:base\n    return {\n        name: 'vite:ssr-manifest',\n        generateBundle(_options, bundle) {\n            for (const file in bundle) {\n                const chunk = bundle[file];\n                if (chunk.type === 'chunk') {\n                    for (const id in chunk.modules) {\n                        const normalizedId = normalizePath$3(relative$2(config.root, id));\n                        const mappedChunks = ssrManifest[normalizedId] ?? (ssrManifest[normalizedId] = []);\n                        if (!chunk.isEntry) {\n                            mappedChunks.push(base + chunk.fileName);\n                            // <link> tags for entry chunks are already generated in static HTML,\n                            // so we only need to record info for non-entry chunks.\n                            chunk.viteMetadata.importedCss.forEach((file) => {\n                                mappedChunks.push(base + file);\n                            });\n                        }\n                        chunk.viteMetadata.importedAssets.forEach((file) => {\n                            mappedChunks.push(base + file);\n                        });\n                    }\n                    if (chunk.code.includes(preloadMethod)) {\n                        // generate css deps map\n                        const code = chunk.code;\n                        let imports;\n                        try {\n                            imports = parse$b(code)[0].filter((i) => i.n && i.d > -1);\n                        }\n                        catch (e) {\n                            this.error(e, e.idx);\n                        }\n                        if (imports.length) {\n                            for (let index = 0; index < imports.length; index++) {\n                                const { s: start, e: end, n: name } = imports[index];\n                                // check the chunk being imported\n                                const url = code.slice(start, end);\n                                const deps = [];\n                                const ownerFilename = chunk.fileName;\n                                // literal import - trace direct imports and add to deps\n                                const analyzed = new Set();\n                                const addDeps = (filename) => {\n                                    if (filename === ownerFilename)\n                                        return;\n                                    if (analyzed.has(filename))\n                                        return;\n                                    analyzed.add(filename);\n                                    const chunk = bundle[filename];\n                                    if (chunk) {\n                                        chunk.viteMetadata.importedCss.forEach((file) => {\n                                            deps.push(join$2(base, file)); // TODO:base\n                                        });\n                                        chunk.imports.forEach(addDeps);\n                                    }\n                                };\n                                const normalizedFile = normalizePath$3(join$2(dirname$2(chunk.fileName), url.slice(1, -1)));\n                                addDeps(normalizedFile);\n                                ssrManifest[basename$2(name)] = deps;\n                            }\n                        }\n                    }\n                }\n            }\n            this.emitFile({\n                fileName: typeof config.build.ssrManifest === 'string'\n                    ? config.build.ssrManifest\n                    : 'ssr-manifest.json',\n                type: 'asset',\n                source: JSON.stringify(ssrManifest, null, 2)\n            });\n        }\n    };\n}\n\n/**\n * Convert `new URL('./foo.png', import.meta.url)` to its resolved built URL\n *\n * Supports template string with dynamic segments:\n * ```\n * new URL(`./dir/${name}.png`, import.meta.url)\n * // transformed to\n * import.meta.glob('./dir/**.png', { eager: true, import: 'default' })[`./dir/${name}.png`]\n * ```\n */\nfunction assetImportMetaUrlPlugin(config) {\n    return {\n        name: 'vite:asset-import-meta-url',\n        async transform(code, id, options) {\n            if (!options?.ssr &&\n                id !== preloadHelperId &&\n                code.includes('new URL') &&\n                code.includes(`import.meta.url`)) {\n                let s;\n                const assetImportMetaUrlRE = /\\bnew\\s+URL\\s*\\(\\s*('[^']+'|\"[^\"]+\"|`[^`]+`)\\s*,\\s*import\\.meta\\.url\\s*,?\\s*\\)/g;\n                const cleanString = stripLiteral(code);\n                let match;\n                while ((match = assetImportMetaUrlRE.exec(cleanString))) {\n                    const { 0: exp, 1: emptyUrl, index } = match;\n                    const urlStart = cleanString.indexOf(emptyUrl, index);\n                    const urlEnd = urlStart + emptyUrl.length;\n                    const rawUrl = code.slice(urlStart, urlEnd);\n                    if (!s)\n                        s = new MagicString(code);\n                    // potential dynamic template string\n                    if (rawUrl[0] === '`' && /\\$\\{/.test(rawUrl)) {\n                        const ast = this.parse(rawUrl);\n                        const templateLiteral = ast.body[0].expression;\n                        if (templateLiteral.expressions.length) {\n                            const pattern = JSON.stringify(buildGlobPattern(templateLiteral));\n                            // Note: native import.meta.url is not supported in the baseline\n                            // target so we use the global location here. It can be\n                            // window.location or self.location in case it is used in a Web Worker.\n                            // @see https://developer.mozilla.org/en-US/docs/Web/API/Window/self\n                            s.overwrite(index, index + exp.length, `new URL((import.meta.glob(${pattern}, { eager: true, import: 'default', as: 'url' }))[${rawUrl}], self.location)`, { contentOnly: true });\n                            continue;\n                        }\n                    }\n                    const url = rawUrl.slice(1, -1);\n                    const file = path$n.resolve(path$n.dirname(id), url);\n                    // Get final asset URL. Catch error if the file does not exist,\n                    // in which we can resort to the initial URL and let it resolve in runtime\n                    const builtUrl = await fileToUrl(file, config, this).catch(() => {\n                        const rawExp = code.slice(index, index + exp.length);\n                        config.logger.warnOnce(`\\n${rawExp} doesn't exist at build time, it will remain unchanged to be resolved at runtime`);\n                        return url;\n                    });\n                    s.overwrite(index, index + exp.length, `new URL(${JSON.stringify(builtUrl)}, self.location)`, { contentOnly: true });\n                }\n                if (s) {\n                    return transformStableResult(s, id, config);\n                }\n            }\n            return null;\n        }\n    };\n}\nfunction buildGlobPattern(ast) {\n    let pattern = '';\n    let lastElementIndex = -1;\n    for (const exp of ast.expressions) {\n        for (let i = lastElementIndex + 1; i < ast.quasis.length; i++) {\n            const el = ast.quasis[i];\n            if (el.end < exp.start) {\n                pattern += el.value.raw;\n                lastElementIndex = i;\n            }\n        }\n        pattern += '**';\n    }\n    for (let i = lastElementIndex + 1; i < ast.quasis.length; i++) {\n        pattern += ast.quasis[i].value.raw;\n    }\n    return pattern;\n}\n\n/**\n * A plugin to provide build load fallback for arbitrary request with queries.\n */\nfunction loadFallbackPlugin() {\n    return {\n        name: 'vite:load-fallback',\n        async load(id) {\n            try {\n                // if we don't add `await` here, we couldn't catch the error in readFile\n                return await promises$2.readFile(cleanUrl(id), 'utf-8');\n            }\n            catch (e) {\n                return promises$2.readFile(id, 'utf-8');\n            }\n        }\n    };\n}\n\n/**\n * plugin to ensure rollup can watch correctly.\n */\nfunction ensureWatchPlugin() {\n    return {\n        name: 'vite:ensure-watch',\n        load(id) {\n            if (queryRE.test(id)) {\n                this.addWatchFile(cleanUrl(id));\n            }\n            return null;\n        }\n    };\n}\n\nfunction resolveChokidarOptions(options) {\n    const { ignored = [], ...otherOptions } = options ?? {};\n    const resolvedWatchOptions = {\n        ignored: [\n            '**/.git/**',\n            '**/node_modules/**',\n            '**/test-results/**',\n            ...(Array.isArray(ignored) ? ignored : [ignored])\n        ],\n        ignoreInitial: true,\n        ignorePermissionErrors: true,\n        ...otherOptions\n    };\n    return resolvedWatchOptions;\n}\n\n/**\n * make sure systemjs register wrap to had complete parameters in system format\n */\nfunction completeSystemWrapPlugin() {\n    const SystemJSWrapRE = /System.register\\(.*\\((exports)\\)/g;\n    return {\n        name: 'vite:force-systemjs-wrap-complete',\n        renderChunk(code, chunk, opts) {\n            if (opts.format === 'system') {\n                return {\n                    code: code.replace(SystemJSWrapRE, (s, s1) => s.replace(s1, 'exports, module')),\n                    map: null\n                };\n            }\n        }\n    };\n}\n\nfunction resolveBuildOptions(raw, isBuild, logger) {\n    const resolved = {\n        target: 'modules',\n        polyfillModulePreload: true,\n        outDir: 'dist',\n        assetsDir: 'assets',\n        assetsInlineLimit: 4096,\n        cssCodeSplit: !raw?.lib,\n        cssTarget: false,\n        sourcemap: false,\n        rollupOptions: {},\n        minify: raw?.ssr ? false : 'esbuild',\n        terserOptions: {},\n        write: true,\n        emptyOutDir: null,\n        manifest: false,\n        lib: false,\n        ssr: false,\n        ssrManifest: false,\n        reportCompressedSize: true,\n        chunkSizeWarningLimit: 500,\n        watch: null,\n        ...raw,\n        commonjsOptions: {\n            include: [/node_modules/],\n            extensions: ['.js', '.cjs'],\n            ...raw?.commonjsOptions\n        },\n        dynamicImportVarsOptions: {\n            warnOnError: true,\n            exclude: [/node_modules/],\n            ...raw?.dynamicImportVarsOptions\n        }\n    };\n    // handle special build targets\n    if (resolved.target === 'modules') {\n        resolved.target = ESBUILD_MODULES_TARGET;\n    }\n    else if (resolved.target === 'esnext' && resolved.minify === 'terser') {\n        // esnext + terser: limit to es2021 so it can be minified by terser\n        resolved.target = 'es2021';\n    }\n    if (!resolved.cssTarget) {\n        resolved.cssTarget = resolved.target;\n    }\n    // normalize false string into actual false\n    if (resolved.minify === 'false') {\n        resolved.minify = false;\n    }\n    if (resolved.minify === true) {\n        resolved.minify = 'esbuild';\n    }\n    return resolved;\n}\nfunction resolveBuildPlugins(config) {\n    const options = config.build;\n    const { commonjsOptions } = options;\n    const usePluginCommonjs = !Array.isArray(commonjsOptions?.include) ||\n        commonjsOptions?.include.length !== 0;\n    return {\n        pre: [\n            completeSystemWrapPlugin(),\n            ...(options.watch ? [ensureWatchPlugin()] : []),\n            watchPackageDataPlugin(config),\n            ...(usePluginCommonjs ? [commonjs(options.commonjsOptions)] : []),\n            dataURIPlugin(),\n            assetImportMetaUrlPlugin(config),\n            ...(options.rollupOptions.plugins\n                ? options.rollupOptions.plugins.filter(Boolean)\n                : [])\n        ],\n        post: [\n            buildImportAnalysisPlugin(config),\n            ...(config.esbuild !== false ? [buildEsbuildPlugin(config)] : []),\n            ...(options.minify ? [terserPlugin(config)] : []),\n            ...(options.manifest ? [manifestPlugin(config)] : []),\n            ...(options.ssrManifest ? [ssrManifestPlugin(config)] : []),\n            buildReporterPlugin(config),\n            loadFallbackPlugin()\n        ]\n    };\n}\n/**\n * Track parallel build calls and only stop the esbuild service when all\n * builds are done. (#1098)\n */\nlet parallelCallCounts = 0;\n// we use a separate counter to track since the call may error before the\n// bundle is even pushed.\nconst parallelBuilds = [];\n/**\n * Bundles the app for production.\n * Returns a Promise containing the build result.\n */\nasync function build(inlineConfig = {}) {\n    parallelCallCounts++;\n    try {\n        return await doBuild(inlineConfig);\n    }\n    finally {\n        parallelCallCounts--;\n        if (parallelCallCounts <= 0) {\n            await Promise.all(parallelBuilds.map((bundle) => bundle.close()));\n            parallelBuilds.length = 0;\n        }\n    }\n}\nasync function doBuild(inlineConfig = {}) {\n    const config = await resolveConfig(inlineConfig, 'build', 'production');\n    const options = config.build;\n    const ssr = !!options.ssr;\n    const libOptions = options.lib;\n    config.logger.info(picocolors.exports.cyan(`vite v${VERSION} ${picocolors.exports.green(`building ${ssr ? `SSR bundle ` : ``}for ${config.mode}...`)}`));\n    const resolve = (p) => path$n.resolve(config.root, p);\n    const input = libOptions\n        ? resolve(libOptions.entry)\n        : typeof options.ssr === 'string'\n            ? resolve(options.ssr)\n            : options.rollupOptions?.input || resolve('index.html');\n    if (ssr && typeof input === 'string' && input.endsWith('.html')) {\n        throw new Error(`rollupOptions.input should not be an html file when building for SSR. ` +\n            `Please specify a dedicated SSR entry.`);\n    }\n    const outDir = resolve(options.outDir);\n    // inject ssr arg to plugin load/transform hooks\n    const plugins = (ssr ? config.plugins.map((p) => injectSsrFlagToHooks(p)) : config.plugins);\n    const userExternal = options.rollupOptions?.external;\n    let external = userExternal;\n    // In CJS, we can pass the externals to rollup as is. In ESM, we need to\n    // do it in the resolve plugin so we can add the resolved extension for\n    // deep node_modules imports\n    if (ssr && config.legacy?.buildSsrCjsExternalHeuristics) {\n        external = await cjsSsrResolveExternal(config, userExternal);\n    }\n    if (isDepsOptimizerEnabled(config, ssr)) {\n        await initDepsOptimizer(config);\n    }\n    const rollupOptions = {\n        context: 'globalThis',\n        preserveEntrySignatures: ssr\n            ? 'allow-extension'\n            : libOptions\n                ? 'strict'\n                : false,\n        ...options.rollupOptions,\n        input,\n        plugins,\n        external,\n        onwarn(warning, warn) {\n            onRollupWarning(warning, warn, config);\n        }\n    };\n    const outputBuildError = (e) => {\n        let msg = picocolors.exports.red((e.plugin ? `[${e.plugin}] ` : '') + e.message);\n        if (e.id) {\n            msg += `\\nfile: ${picocolors.exports.cyan(e.id + (e.loc ? `:${e.loc.line}:${e.loc.column}` : ''))}`;\n        }\n        if (e.frame) {\n            msg += `\\n` + picocolors.exports.yellow(e.frame);\n        }\n        config.logger.error(msg, { error: e });\n    };\n    try {\n        const buildOutputOptions = (output = {}) => {\n            // See https://github.com/vitejs/vite/issues/5812#issuecomment-984345618\n            // @ts-ignore\n            if (output.output) {\n                config.logger.warn(`You've set \"rollupOptions.output.output\" in your config. ` +\n                    `This is deprecated and will override all Vite.js default output options. ` +\n                    `Please use \"rollupOptions.output\" instead.`);\n            }\n            const ssrNodeBuild = ssr && config.ssr.target === 'node';\n            const ssrWorkerBuild = ssr && config.ssr.target === 'webworker';\n            const cjsSsrBuild = ssr && config.ssr.format === 'cjs';\n            const format = output.format || (cjsSsrBuild ? 'cjs' : 'es');\n            const jsExt = ssrNodeBuild || libOptions\n                ? resolveOutputJsExtension(format, getPkgJson(config.root)?.type)\n                : 'js';\n            return {\n                dir: outDir,\n                // Default format is 'es' for regular and for SSR builds\n                format,\n                exports: cjsSsrBuild ? 'named' : 'auto',\n                sourcemap: options.sourcemap,\n                name: libOptions ? libOptions.name : undefined,\n                // es2015 enables `generatedCode.symbols`\n                // - #764 add `Symbol.toStringTag` when build es module into cjs chunk\n                // - #1048 add `Symbol.toStringTag` for module default export\n                generatedCode: 'es2015',\n                entryFileNames: ssr\n                    ? `[name].${jsExt}`\n                    : libOptions\n                        ? resolveLibFilename(libOptions, format, config.root, jsExt)\n                        : path$n.posix.join(options.assetsDir, `[name].[hash].${jsExt}`),\n                chunkFileNames: libOptions\n                    ? `[name].[hash].${jsExt}`\n                    : path$n.posix.join(options.assetsDir, `[name].[hash].${jsExt}`),\n                assetFileNames: libOptions\n                    ? `[name].[ext]`\n                    : path$n.posix.join(options.assetsDir, `[name].[hash].[ext]`),\n                inlineDynamicImports: output.format === 'umd' ||\n                    output.format === 'iife' ||\n                    (ssrWorkerBuild && typeof input === 'string'),\n                ...output\n            };\n        };\n        // resolve lib mode outputs\n        const outputs = resolveBuildOutputs(options.rollupOptions?.output, libOptions, config.logger);\n        // watch file changes with rollup\n        if (config.build.watch) {\n            config.logger.info(picocolors.exports.cyan(`\\nwatching for file changes...`));\n            const output = [];\n            if (Array.isArray(outputs)) {\n                for (const resolvedOutput of outputs) {\n                    output.push(buildOutputOptions(resolvedOutput));\n                }\n            }\n            else {\n                output.push(buildOutputOptions(outputs));\n            }\n            const resolvedChokidarOptions = resolveChokidarOptions(config.build.watch.chokidar);\n            const { watch } = await import('rollup');\n            const watcher = watch({\n                ...rollupOptions,\n                output,\n                watch: {\n                    ...config.build.watch,\n                    chokidar: resolvedChokidarOptions\n                }\n            });\n            watcher.on('event', (event) => {\n                if (event.code === 'BUNDLE_START') {\n                    config.logger.info(picocolors.exports.cyan(`\\nbuild started...`));\n                    if (options.write) {\n                        prepareOutDir(outDir, options.emptyOutDir, config);\n                    }\n                }\n                else if (event.code === 'BUNDLE_END') {\n                    event.result.close();\n                    config.logger.info(picocolors.exports.cyan(`built in ${event.duration}ms.`));\n                }\n                else if (event.code === 'ERROR') {\n                    outputBuildError(event.error);\n                }\n            });\n            return watcher;\n        }\n        // write or generate files with rollup\n        const { rollup } = await import('rollup');\n        const bundle = await rollup(rollupOptions);\n        parallelBuilds.push(bundle);\n        const generate = (output = {}) => {\n            return bundle[options.write ? 'write' : 'generate'](buildOutputOptions(output));\n        };\n        if (options.write) {\n            prepareOutDir(outDir, options.emptyOutDir, config);\n        }\n        if (Array.isArray(outputs)) {\n            const res = [];\n            for (const output of outputs) {\n                res.push(await generate(output));\n            }\n            return res;\n        }\n        else {\n            return await generate(outputs);\n        }\n    }\n    catch (e) {\n        outputBuildError(e);\n        throw e;\n    }\n}\nfunction prepareOutDir(outDir, emptyOutDir, config) {\n    if (fs$l.existsSync(outDir)) {\n        if (emptyOutDir == null &&\n            !normalizePath$3(outDir).startsWith(config.root + '/')) {\n            // warn if outDir is outside of root\n            config.logger.warn(picocolors.exports.yellow(`\\n${picocolors.exports.bold(`(!)`)} outDir ${picocolors.exports.white(picocolors.exports.dim(outDir))} is not inside project root and will not be emptied.\\n` +\n                `Use --emptyOutDir to override.\\n`));\n        }\n        else if (emptyOutDir !== false) {\n            emptyDir(outDir, ['.git']);\n        }\n    }\n    if (config.publicDir && fs$l.existsSync(config.publicDir)) {\n        copyDir(config.publicDir, outDir);\n    }\n}\nfunction getPkgJson(root) {\n    return JSON.parse(lookupFile(root, ['package.json']) || `{}`);\n}\nfunction getPkgName(name) {\n    return name?.startsWith('@') ? name.split('/')[1] : name;\n}\nfunction resolveOutputJsExtension(format, type = 'commonjs') {\n    if (type === 'module') {\n        return format === 'cjs' || format === 'umd' ? 'cjs' : 'js';\n    }\n    else {\n        return format === 'es' ? 'mjs' : 'js';\n    }\n}\nfunction resolveLibFilename(libOptions, format, root, extension) {\n    if (typeof libOptions.fileName === 'function') {\n        return libOptions.fileName(format);\n    }\n    const packageJson = getPkgJson(root);\n    const name = libOptions.fileName || getPkgName(packageJson.name);\n    if (!name)\n        throw new Error('Name in package.json is required if option \"build.lib.fileName\" is not provided.');\n    extension ?? (extension = resolveOutputJsExtension(format, packageJson.type));\n    if (format === 'cjs' || format === 'es') {\n        return `${name}.${extension}`;\n    }\n    return `${name}.${format}.${extension}`;\n}\nfunction resolveBuildOutputs(outputs, libOptions, logger) {\n    if (libOptions) {\n        const formats = libOptions.formats || ['es', 'umd'];\n        if ((formats.includes('umd') || formats.includes('iife')) &&\n            !libOptions.name) {\n            throw new Error(`Option \"build.lib.name\" is required when output formats ` +\n                `include \"umd\" or \"iife\".`);\n        }\n        if (!outputs) {\n            return formats.map((format) => ({ format }));\n        }\n        else if (!Array.isArray(outputs)) {\n            return formats.map((format) => ({ ...outputs, format }));\n        }\n        else if (libOptions.formats) {\n            // user explicitly specifying own output array\n            logger.warn(picocolors.exports.yellow(`\"build.lib.formats\" will be ignored because ` +\n                `\"build.rollupOptions.output\" is already an array format`));\n        }\n    }\n    return outputs;\n}\nconst warningIgnoreList = [`CIRCULAR_DEPENDENCY`, `THIS_IS_UNDEFINED`];\nconst dynamicImportWarningIgnoreList = [\n    `Unsupported expression`,\n    `statically analyzed`\n];\nfunction onRollupWarning(warning, warn, config) {\n    if (warning.code === 'UNRESOLVED_IMPORT') {\n        const id = warning.source;\n        const importer = warning.importer;\n        // throw unless it's commonjs external...\n        if (!importer || !/\\?commonjs-external$/.test(importer)) {\n            throw new Error(`[vite]: Rollup failed to resolve import \"${id}\" from \"${importer}\".\\n` +\n                `This is most likely unintended because it can break your application at runtime.\\n` +\n                `If you do want to externalize this module explicitly add it to\\n` +\n                `\\`build.rollupOptions.external\\``);\n        }\n    }\n    if (warning.plugin === 'rollup-plugin-dynamic-import-variables' &&\n        dynamicImportWarningIgnoreList.some((msg) => warning.message.includes(msg))) {\n        return;\n    }\n    if (!warningIgnoreList.includes(warning.code)) {\n        const userOnWarn = config.build.rollupOptions?.onwarn;\n        if (userOnWarn) {\n            userOnWarn(warning, warn);\n        }\n        else if (warning.code === 'PLUGIN_WARNING') {\n            config.logger.warn(`${picocolors.exports.bold(picocolors.exports.yellow(`[plugin:${warning.plugin}]`))} ${picocolors.exports.yellow(warning.message)}`);\n        }\n        else {\n            warn(warning);\n        }\n    }\n}\nasync function cjsSsrResolveExternal(config, user) {\n    // see if we have cached deps data available\n    let knownImports;\n    const dataPath = path$n.join(getDepsCacheDir(config, false), '_metadata.json');\n    try {\n        const data = JSON.parse(fs$l.readFileSync(dataPath, 'utf-8'));\n        knownImports = Object.keys(data.optimized);\n    }\n    catch (e) { }\n    if (!knownImports) {\n        // no dev deps optimization data, do a fresh scan\n        knownImports = await findKnownImports(config, false); // needs to use non-ssr\n    }\n    const ssrExternals = cjsSsrResolveExternals(config, knownImports);\n    return (id, parentId, isResolved) => {\n        const isExternal = cjsShouldExternalizeForSSR(id, ssrExternals);\n        if (isExternal) {\n            return true;\n        }\n        if (user) {\n            return resolveUserExternal(user, id, parentId, isResolved);\n        }\n    };\n}\nfunction resolveUserExternal(user, id, parentId, isResolved) {\n    if (typeof user === 'function') {\n        return user(id, parentId, isResolved);\n    }\n    else if (Array.isArray(user)) {\n        return user.some((test) => isExternal(id, test));\n    }\n    else {\n        return isExternal(id, user);\n    }\n}\nfunction isExternal(id, test) {\n    if (typeof test === 'string') {\n        return id === test;\n    }\n    else {\n        return test.test(id);\n    }\n}\nfunction injectSsrFlagToHooks(plugin) {\n    const { resolveId, load, transform } = plugin;\n    return {\n        ...plugin,\n        resolveId: wrapSsrResolveId(resolveId),\n        load: wrapSsrLoad(load),\n        transform: wrapSsrTransform(transform)\n    };\n}\nfunction wrapSsrResolveId(fn) {\n    if (!fn)\n        return;\n    return function (id, importer, options) {\n        return fn.call(this, id, importer, injectSsrFlag(options));\n    };\n}\nfunction wrapSsrLoad(fn) {\n    if (!fn)\n        return;\n    return function (id, ...args) {\n        // @ts-expect-error: Receiving options param to be future-proof if Rollup adds it\n        return fn.call(this, id, injectSsrFlag(args[0]));\n    };\n}\nfunction wrapSsrTransform(fn) {\n    if (!fn)\n        return;\n    return function (code, importer, ...args) {\n        // @ts-expect-error: Receiving options param to be future-proof if Rollup adds it\n        return fn.call(this, code, importer, injectSsrFlag(args[0]));\n    };\n}\nfunction injectSsrFlag(options) {\n    return { ...(options ?? {}), ssr: true };\n}\n/*\n  The following functions are copied from rollup\n  https://github.com/rollup/rollup/blob/c5269747cd3dd14c4b306e8cea36f248d9c1aa01/src/ast/nodes/MetaProperty.ts#L189-L232\n\n  https://github.com/rollup/rollup\n  The MIT License (MIT)\n  Copyright (c) 2017 [these people](https://github.com/rollup/rollup/graphs/contributors)\n  Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n  The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\nconst getResolveUrl = (path, URL = 'URL') => `new ${URL}(${path}).href`;\nconst getRelativeUrlFromDocument = (relativePath, umd = false) => getResolveUrl(`'${relativePath}', ${umd ? `typeof document === 'undefined' ? location.href : ` : ''}document.currentScript && document.currentScript.src || document.baseURI`);\nconst relativeUrlMechanisms = {\n    amd: (relativePath) => {\n        if (relativePath[0] !== '.')\n            relativePath = './' + relativePath;\n        return getResolveUrl(`require.toUrl('${relativePath}'), document.baseURI`);\n    },\n    cjs: (relativePath) => `(typeof document === 'undefined' ? ${getResolveUrl(`'file:' + __dirname + '/${relativePath}'`, `(require('u' + 'rl').URL)`)} : ${getRelativeUrlFromDocument(relativePath)})`,\n    es: (relativePath) => getResolveUrl(`'${relativePath}', import.meta.url`),\n    iife: (relativePath) => getRelativeUrlFromDocument(relativePath),\n    // NOTE: make sure rollup generate `module` params\n    system: (relativePath) => getResolveUrl(`'${relativePath}', module.meta.url`),\n    umd: (relativePath) => `(typeof document === 'undefined' && typeof location === 'undefined' ? ${getResolveUrl(`'file:' + __dirname + '/${relativePath}'`, `(require('u' + 'rl').URL)`)} : ${getRelativeUrlFromDocument(relativePath, true)})`\n};\nfunction toOutputFilePathInString(filename, type, hostId, hostType, config, format, toRelative = getToImportMetaURLBasedRelativePath(format)) {\n    const { renderBuiltUrl } = config.experimental;\n    let relative = config.base === '' || config.base === './';\n    if (renderBuiltUrl) {\n        const result = renderBuiltUrl(filename, {\n            hostId,\n            hostType,\n            type,\n            ssr: !!config.build.ssr\n        });\n        if (typeof result === 'object') {\n            if (result.runtime) {\n                return { runtime: result.runtime };\n            }\n            if (typeof result.relative === 'boolean') {\n                relative = result.relative;\n            }\n        }\n        else if (result) {\n            return result;\n        }\n    }\n    if (relative && !config.build.ssr) {\n        return toRelative(filename, hostId);\n    }\n    return config.base + filename;\n}\nfunction getToImportMetaURLBasedRelativePath(format) {\n    const toRelativePath = relativeUrlMechanisms[format];\n    return (filename, importer) => ({\n        runtime: toRelativePath(path$n.posix.relative(path$n.dirname(importer), filename))\n    });\n}\nfunction toOutputFilePathWithoutRuntime(filename, type, hostId, hostType, config, toRelative) {\n    const { renderBuiltUrl } = config.experimental;\n    let relative = config.base === '' || config.base === './';\n    if (renderBuiltUrl) {\n        const result = renderBuiltUrl(filename, {\n            hostId,\n            hostType,\n            type,\n            ssr: !!config.build.ssr\n        });\n        if (typeof result === 'object') {\n            if (result.runtime) {\n                throw new Error(`{ runtime: \"${result.runtime} }\" is not supported for assets in ${hostType} files: ${filename}`);\n            }\n            if (typeof result.relative === 'boolean') {\n                relative = result.relative;\n            }\n        }\n        else if (result) {\n            return result;\n        }\n    }\n    if (relative && !config.build.ssr) {\n        return toRelative(filename, hostId);\n    }\n    else {\n        return config.base + filename;\n    }\n}\nconst toOutputFilePathInCss = toOutputFilePathWithoutRuntime;\nconst toOutputFilePathInHtml = toOutputFilePathWithoutRuntime;\n\nvar build$1 = {\n\t__proto__: null,\n\tresolveBuildOptions: resolveBuildOptions,\n\tresolveBuildPlugins: resolveBuildPlugins,\n\tbuild: build,\n\tresolveLibFilename: resolveLibFilename,\n\tonRollupWarning: onRollupWarning,\n\ttoOutputFilePathInString: toOutputFilePathInString,\n\ttoOutputFilePathWithoutRuntime: toOutputFilePathWithoutRuntime,\n\ttoOutputFilePathInCss: toOutputFilePathInCss,\n\ttoOutputFilePathInHtml: toOutputFilePathInHtml\n};\n\nvar src = {exports: {}};\n\nvar browser = {exports: {}};\n\nvar debug$6 = {exports: {}};\n\n/**\n * Helpers.\n */\n\nvar ms;\nvar hasRequiredMs;\n\nfunction requireMs () {\n\tif (hasRequiredMs) return ms;\n\thasRequiredMs = 1;\n\tvar s = 1000;\n\tvar m = s * 60;\n\tvar h = m * 60;\n\tvar d = h * 24;\n\tvar y = d * 365.25;\n\n\t/**\n\t * Parse or format the given `val`.\n\t *\n\t * Options:\n\t *\n\t *  - `long` verbose formatting [false]\n\t *\n\t * @param {String|Number} val\n\t * @param {Object} [options]\n\t * @throws {Error} throw an error if val is not a non-empty string or a number\n\t * @return {String|Number}\n\t * @api public\n\t */\n\n\tms = function(val, options) {\n\t  options = options || {};\n\t  var type = typeof val;\n\t  if (type === 'string' && val.length > 0) {\n\t    return parse(val);\n\t  } else if (type === 'number' && isNaN(val) === false) {\n\t    return options.long ? fmtLong(val) : fmtShort(val);\n\t  }\n\t  throw new Error(\n\t    'val is not a non-empty string or a valid number. val=' +\n\t      JSON.stringify(val)\n\t  );\n\t};\n\n\t/**\n\t * Parse the given `str` and return milliseconds.\n\t *\n\t * @param {String} str\n\t * @return {Number}\n\t * @api private\n\t */\n\n\tfunction parse(str) {\n\t  str = String(str);\n\t  if (str.length > 100) {\n\t    return;\n\t  }\n\t  var match = /^((?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|years?|yrs?|y)?$/i.exec(\n\t    str\n\t  );\n\t  if (!match) {\n\t    return;\n\t  }\n\t  var n = parseFloat(match[1]);\n\t  var type = (match[2] || 'ms').toLowerCase();\n\t  switch (type) {\n\t    case 'years':\n\t    case 'year':\n\t    case 'yrs':\n\t    case 'yr':\n\t    case 'y':\n\t      return n * y;\n\t    case 'days':\n\t    case 'day':\n\t    case 'd':\n\t      return n * d;\n\t    case 'hours':\n\t    case 'hour':\n\t    case 'hrs':\n\t    case 'hr':\n\t    case 'h':\n\t      return n * h;\n\t    case 'minutes':\n\t    case 'minute':\n\t    case 'mins':\n\t    case 'min':\n\t    case 'm':\n\t      return n * m;\n\t    case 'seconds':\n\t    case 'second':\n\t    case 'secs':\n\t    case 'sec':\n\t    case 's':\n\t      return n * s;\n\t    case 'milliseconds':\n\t    case 'millisecond':\n\t    case 'msecs':\n\t    case 'msec':\n\t    case 'ms':\n\t      return n;\n\t    default:\n\t      return undefined;\n\t  }\n\t}\n\n\t/**\n\t * Short format for `ms`.\n\t *\n\t * @param {Number} ms\n\t * @return {String}\n\t * @api private\n\t */\n\n\tfunction fmtShort(ms) {\n\t  if (ms >= d) {\n\t    return Math.round(ms / d) + 'd';\n\t  }\n\t  if (ms >= h) {\n\t    return Math.round(ms / h) + 'h';\n\t  }\n\t  if (ms >= m) {\n\t    return Math.round(ms / m) + 'm';\n\t  }\n\t  if (ms >= s) {\n\t    return Math.round(ms / s) + 's';\n\t  }\n\t  return ms + 'ms';\n\t}\n\n\t/**\n\t * Long format for `ms`.\n\t *\n\t * @param {Number} ms\n\t * @return {String}\n\t * @api private\n\t */\n\n\tfunction fmtLong(ms) {\n\t  return plural(ms, d, 'day') ||\n\t    plural(ms, h, 'hour') ||\n\t    plural(ms, m, 'minute') ||\n\t    plural(ms, s, 'second') ||\n\t    ms + ' ms';\n\t}\n\n\t/**\n\t * Pluralization helper.\n\t */\n\n\tfunction plural(ms, n, name) {\n\t  if (ms < n) {\n\t    return;\n\t  }\n\t  if (ms < n * 1.5) {\n\t    return Math.floor(ms / n) + ' ' + name;\n\t  }\n\t  return Math.ceil(ms / n) + ' ' + name + 's';\n\t}\n\treturn ms;\n}\n\nvar hasRequiredDebug;\n\nfunction requireDebug () {\n\tif (hasRequiredDebug) return debug$6.exports;\n\thasRequiredDebug = 1;\n\t(function (module, exports) {\n\t\t/**\n\t\t * This is the common logic for both the Node.js and web browser\n\t\t * implementations of `debug()`.\n\t\t *\n\t\t * Expose `debug()` as the module.\n\t\t */\n\n\t\texports = module.exports = createDebug.debug = createDebug['default'] = createDebug;\n\t\texports.coerce = coerce;\n\t\texports.disable = disable;\n\t\texports.enable = enable;\n\t\texports.enabled = enabled;\n\t\texports.humanize = requireMs();\n\n\t\t/**\n\t\t * The currently active debug mode names, and names to skip.\n\t\t */\n\n\t\texports.names = [];\n\t\texports.skips = [];\n\n\t\t/**\n\t\t * Map of special \"%n\" handling functions, for the debug \"format\" argument.\n\t\t *\n\t\t * Valid key names are a single, lower or upper-case letter, i.e. \"n\" and \"N\".\n\t\t */\n\n\t\texports.formatters = {};\n\n\t\t/**\n\t\t * Previous log timestamp.\n\t\t */\n\n\t\tvar prevTime;\n\n\t\t/**\n\t\t * Select a color.\n\t\t * @param {String} namespace\n\t\t * @return {Number}\n\t\t * @api private\n\t\t */\n\n\t\tfunction selectColor(namespace) {\n\t\t  var hash = 0, i;\n\n\t\t  for (i in namespace) {\n\t\t    hash  = ((hash << 5) - hash) + namespace.charCodeAt(i);\n\t\t    hash |= 0; // Convert to 32bit integer\n\t\t  }\n\n\t\t  return exports.colors[Math.abs(hash) % exports.colors.length];\n\t\t}\n\n\t\t/**\n\t\t * Create a debugger with the given `namespace`.\n\t\t *\n\t\t * @param {String} namespace\n\t\t * @return {Function}\n\t\t * @api public\n\t\t */\n\n\t\tfunction createDebug(namespace) {\n\n\t\t  function debug() {\n\t\t    // disabled?\n\t\t    if (!debug.enabled) return;\n\n\t\t    var self = debug;\n\n\t\t    // set `diff` timestamp\n\t\t    var curr = +new Date();\n\t\t    var ms = curr - (prevTime || curr);\n\t\t    self.diff = ms;\n\t\t    self.prev = prevTime;\n\t\t    self.curr = curr;\n\t\t    prevTime = curr;\n\n\t\t    // turn the `arguments` into a proper Array\n\t\t    var args = new Array(arguments.length);\n\t\t    for (var i = 0; i < args.length; i++) {\n\t\t      args[i] = arguments[i];\n\t\t    }\n\n\t\t    args[0] = exports.coerce(args[0]);\n\n\t\t    if ('string' !== typeof args[0]) {\n\t\t      // anything else let's inspect with %O\n\t\t      args.unshift('%O');\n\t\t    }\n\n\t\t    // apply any `formatters` transformations\n\t\t    var index = 0;\n\t\t    args[0] = args[0].replace(/%([a-zA-Z%])/g, function(match, format) {\n\t\t      // if we encounter an escaped % then don't increase the array index\n\t\t      if (match === '%%') return match;\n\t\t      index++;\n\t\t      var formatter = exports.formatters[format];\n\t\t      if ('function' === typeof formatter) {\n\t\t        var val = args[index];\n\t\t        match = formatter.call(self, val);\n\n\t\t        // now we need to remove `args[index]` since it's inlined in the `format`\n\t\t        args.splice(index, 1);\n\t\t        index--;\n\t\t      }\n\t\t      return match;\n\t\t    });\n\n\t\t    // apply env-specific formatting (colors, etc.)\n\t\t    exports.formatArgs.call(self, args);\n\n\t\t    var logFn = debug.log || exports.log || console.log.bind(console);\n\t\t    logFn.apply(self, args);\n\t\t  }\n\n\t\t  debug.namespace = namespace;\n\t\t  debug.enabled = exports.enabled(namespace);\n\t\t  debug.useColors = exports.useColors();\n\t\t  debug.color = selectColor(namespace);\n\n\t\t  // env-specific initialization logic for debug instances\n\t\t  if ('function' === typeof exports.init) {\n\t\t    exports.init(debug);\n\t\t  }\n\n\t\t  return debug;\n\t\t}\n\n\t\t/**\n\t\t * Enables a debug mode by namespaces. This can include modes\n\t\t * separated by a colon and wildcards.\n\t\t *\n\t\t * @param {String} namespaces\n\t\t * @api public\n\t\t */\n\n\t\tfunction enable(namespaces) {\n\t\t  exports.save(namespaces);\n\n\t\t  exports.names = [];\n\t\t  exports.skips = [];\n\n\t\t  var split = (typeof namespaces === 'string' ? namespaces : '').split(/[\\s,]+/);\n\t\t  var len = split.length;\n\n\t\t  for (var i = 0; i < len; i++) {\n\t\t    if (!split[i]) continue; // ignore empty strings\n\t\t    namespaces = split[i].replace(/\\*/g, '.*?');\n\t\t    if (namespaces[0] === '-') {\n\t\t      exports.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));\n\t\t    } else {\n\t\t      exports.names.push(new RegExp('^' + namespaces + '$'));\n\t\t    }\n\t\t  }\n\t\t}\n\n\t\t/**\n\t\t * Disable debug output.\n\t\t *\n\t\t * @api public\n\t\t */\n\n\t\tfunction disable() {\n\t\t  exports.enable('');\n\t\t}\n\n\t\t/**\n\t\t * Returns true if the given mode name is enabled, false otherwise.\n\t\t *\n\t\t * @param {String} name\n\t\t * @return {Boolean}\n\t\t * @api public\n\t\t */\n\n\t\tfunction enabled(name) {\n\t\t  var i, len;\n\t\t  for (i = 0, len = exports.skips.length; i < len; i++) {\n\t\t    if (exports.skips[i].test(name)) {\n\t\t      return false;\n\t\t    }\n\t\t  }\n\t\t  for (i = 0, len = exports.names.length; i < len; i++) {\n\t\t    if (exports.names[i].test(name)) {\n\t\t      return true;\n\t\t    }\n\t\t  }\n\t\t  return false;\n\t\t}\n\n\t\t/**\n\t\t * Coerce `val`.\n\t\t *\n\t\t * @param {Mixed} val\n\t\t * @return {Mixed}\n\t\t * @api private\n\t\t */\n\n\t\tfunction coerce(val) {\n\t\t  if (val instanceof Error) return val.stack || val.message;\n\t\t  return val;\n\t\t}\n} (debug$6, debug$6.exports));\n\treturn debug$6.exports;\n}\n\n/**\n * This is the web browser implementation of `debug()`.\n *\n * Expose `debug()` as the module.\n */\n\nvar hasRequiredBrowser;\n\nfunction requireBrowser () {\n\tif (hasRequiredBrowser) return browser.exports;\n\thasRequiredBrowser = 1;\n\t(function (module, exports) {\n\t\texports = module.exports = requireDebug();\n\t\texports.log = log;\n\t\texports.formatArgs = formatArgs;\n\t\texports.save = save;\n\t\texports.load = load;\n\t\texports.useColors = useColors;\n\t\texports.storage = 'undefined' != typeof chrome\n\t\t               && 'undefined' != typeof chrome.storage\n\t\t                  ? chrome.storage.local\n\t\t                  : localstorage();\n\n\t\t/**\n\t\t * Colors.\n\t\t */\n\n\t\texports.colors = [\n\t\t  'lightseagreen',\n\t\t  'forestgreen',\n\t\t  'goldenrod',\n\t\t  'dodgerblue',\n\t\t  'darkorchid',\n\t\t  'crimson'\n\t\t];\n\n\t\t/**\n\t\t * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n\t\t * and the Firebug extension (any Firefox version) are known\n\t\t * to support \"%c\" CSS customizations.\n\t\t *\n\t\t * TODO: add a `localStorage` variable to explicitly enable/disable colors\n\t\t */\n\n\t\tfunction useColors() {\n\t\t  // NB: In an Electron preload script, document will be defined but not fully\n\t\t  // initialized. Since we know we're in Chrome, we'll just detect this case\n\t\t  // explicitly\n\t\t  if (typeof window !== 'undefined' && window.process && window.process.type === 'renderer') {\n\t\t    return true;\n\t\t  }\n\n\t\t  // is webkit? http://stackoverflow.com/a/16459606/376773\n\t\t  // document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\n\t\t  return (typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance) ||\n\t\t    // is firebug? http://stackoverflow.com/a/398120/376773\n\t\t    (typeof window !== 'undefined' && window.console && (window.console.firebug || (window.console.exception && window.console.table))) ||\n\t\t    // is firefox >= v31?\n\t\t    // https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n\t\t    (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31) ||\n\t\t    // double check webkit in userAgent just in case we are in a worker\n\t\t    (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/));\n\t\t}\n\n\t\t/**\n\t\t * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n\t\t */\n\n\t\texports.formatters.j = function(v) {\n\t\t  try {\n\t\t    return JSON.stringify(v);\n\t\t  } catch (err) {\n\t\t    return '[UnexpectedJSONParseError]: ' + err.message;\n\t\t  }\n\t\t};\n\n\n\t\t/**\n\t\t * Colorize log arguments if enabled.\n\t\t *\n\t\t * @api public\n\t\t */\n\n\t\tfunction formatArgs(args) {\n\t\t  var useColors = this.useColors;\n\n\t\t  args[0] = (useColors ? '%c' : '')\n\t\t    + this.namespace\n\t\t    + (useColors ? ' %c' : ' ')\n\t\t    + args[0]\n\t\t    + (useColors ? '%c ' : ' ')\n\t\t    + '+' + exports.humanize(this.diff);\n\n\t\t  if (!useColors) return;\n\n\t\t  var c = 'color: ' + this.color;\n\t\t  args.splice(1, 0, c, 'color: inherit');\n\n\t\t  // the final \"%c\" is somewhat tricky, because there could be other\n\t\t  // arguments passed either before or after the %c, so we need to\n\t\t  // figure out the correct index to insert the CSS into\n\t\t  var index = 0;\n\t\t  var lastC = 0;\n\t\t  args[0].replace(/%[a-zA-Z%]/g, function(match) {\n\t\t    if ('%%' === match) return;\n\t\t    index++;\n\t\t    if ('%c' === match) {\n\t\t      // we only are interested in the *last* %c\n\t\t      // (the user may have provided their own)\n\t\t      lastC = index;\n\t\t    }\n\t\t  });\n\n\t\t  args.splice(lastC, 0, c);\n\t\t}\n\n\t\t/**\n\t\t * Invokes `console.log()` when available.\n\t\t * No-op when `console.log` is not a \"function\".\n\t\t *\n\t\t * @api public\n\t\t */\n\n\t\tfunction log() {\n\t\t  // this hackery is required for IE8/9, where\n\t\t  // the `console.log` function doesn't have 'apply'\n\t\t  return 'object' === typeof console\n\t\t    && console.log\n\t\t    && Function.prototype.apply.call(console.log, console, arguments);\n\t\t}\n\n\t\t/**\n\t\t * Save `namespaces`.\n\t\t *\n\t\t * @param {String} namespaces\n\t\t * @api private\n\t\t */\n\n\t\tfunction save(namespaces) {\n\t\t  try {\n\t\t    if (null == namespaces) {\n\t\t      exports.storage.removeItem('debug');\n\t\t    } else {\n\t\t      exports.storage.debug = namespaces;\n\t\t    }\n\t\t  } catch(e) {}\n\t\t}\n\n\t\t/**\n\t\t * Load `namespaces`.\n\t\t *\n\t\t * @return {String} returns the previously persisted debug modes\n\t\t * @api private\n\t\t */\n\n\t\tfunction load() {\n\t\t  var r;\n\t\t  try {\n\t\t    r = exports.storage.debug;\n\t\t  } catch(e) {}\n\n\t\t  // If debug isn't set in LS, and we're in Electron, try to load $DEBUG\n\t\t  if (!r && typeof process !== 'undefined' && 'env' in process) {\n\t\t    r = process.env.DEBUG;\n\t\t  }\n\n\t\t  return r;\n\t\t}\n\n\t\t/**\n\t\t * Enable namespaces listed in `localStorage.debug` initially.\n\t\t */\n\n\t\texports.enable(load());\n\n\t\t/**\n\t\t * Localstorage attempts to return the localstorage.\n\t\t *\n\t\t * This is necessary because safari throws\n\t\t * when a user disables cookies/localstorage\n\t\t * and you attempt to access it.\n\t\t *\n\t\t * @return {LocalStorage}\n\t\t * @api private\n\t\t */\n\n\t\tfunction localstorage() {\n\t\t  try {\n\t\t    return window.localStorage;\n\t\t  } catch (e) {}\n\t\t}\n} (browser, browser.exports));\n\treturn browser.exports;\n}\n\nvar node = {exports: {}};\n\n/**\n * Module dependencies.\n */\n\nvar hasRequiredNode;\n\nfunction requireNode () {\n\tif (hasRequiredNode) return node.exports;\n\thasRequiredNode = 1;\n\t(function (module, exports) {\n\t\tvar tty = require$$0$3;\n\t\tvar util = require$$0$6;\n\n\t\t/**\n\t\t * This is the Node.js implementation of `debug()`.\n\t\t *\n\t\t * Expose `debug()` as the module.\n\t\t */\n\n\t\texports = module.exports = requireDebug();\n\t\texports.init = init;\n\t\texports.log = log;\n\t\texports.formatArgs = formatArgs;\n\t\texports.save = save;\n\t\texports.load = load;\n\t\texports.useColors = useColors;\n\n\t\t/**\n\t\t * Colors.\n\t\t */\n\n\t\texports.colors = [6, 2, 3, 4, 5, 1];\n\n\t\t/**\n\t\t * Build up the default `inspectOpts` object from the environment variables.\n\t\t *\n\t\t *   $ DEBUG_COLORS=no DEBUG_DEPTH=10 DEBUG_SHOW_HIDDEN=enabled node script.js\n\t\t */\n\n\t\texports.inspectOpts = Object.keys(process.env).filter(function (key) {\n\t\t  return /^debug_/i.test(key);\n\t\t}).reduce(function (obj, key) {\n\t\t  // camel-case\n\t\t  var prop = key\n\t\t    .substring(6)\n\t\t    .toLowerCase()\n\t\t    .replace(/_([a-z])/g, function (_, k) { return k.toUpperCase() });\n\n\t\t  // coerce string value into JS value\n\t\t  var val = process.env[key];\n\t\t  if (/^(yes|on|true|enabled)$/i.test(val)) val = true;\n\t\t  else if (/^(no|off|false|disabled)$/i.test(val)) val = false;\n\t\t  else if (val === 'null') val = null;\n\t\t  else val = Number(val);\n\n\t\t  obj[prop] = val;\n\t\t  return obj;\n\t\t}, {});\n\n\t\t/**\n\t\t * The file descriptor to write the `debug()` calls to.\n\t\t * Set the `DEBUG_FD` env variable to override with another value. i.e.:\n\t\t *\n\t\t *   $ DEBUG_FD=3 node script.js 3>debug.log\n\t\t */\n\n\t\tvar fd = parseInt(process.env.DEBUG_FD, 10) || 2;\n\n\t\tif (1 !== fd && 2 !== fd) {\n\t\t  util.deprecate(function(){}, 'except for stderr(2) and stdout(1), any other usage of DEBUG_FD is deprecated. Override debug.log if you want to use a different log function (https://git.io/debug_fd)')();\n\t\t}\n\n\t\tvar stream = 1 === fd ? process.stdout :\n\t\t             2 === fd ? process.stderr :\n\t\t             createWritableStdioStream(fd);\n\n\t\t/**\n\t\t * Is stdout a TTY? Colored output is enabled when `true`.\n\t\t */\n\n\t\tfunction useColors() {\n\t\t  return 'colors' in exports.inspectOpts\n\t\t    ? Boolean(exports.inspectOpts.colors)\n\t\t    : tty.isatty(fd);\n\t\t}\n\n\t\t/**\n\t\t * Map %o to `util.inspect()`, all on a single line.\n\t\t */\n\n\t\texports.formatters.o = function(v) {\n\t\t  this.inspectOpts.colors = this.useColors;\n\t\t  return util.inspect(v, this.inspectOpts)\n\t\t    .split('\\n').map(function(str) {\n\t\t      return str.trim()\n\t\t    }).join(' ');\n\t\t};\n\n\t\t/**\n\t\t * Map %o to `util.inspect()`, allowing multiple lines if needed.\n\t\t */\n\n\t\texports.formatters.O = function(v) {\n\t\t  this.inspectOpts.colors = this.useColors;\n\t\t  return util.inspect(v, this.inspectOpts);\n\t\t};\n\n\t\t/**\n\t\t * Adds ANSI color escape codes if enabled.\n\t\t *\n\t\t * @api public\n\t\t */\n\n\t\tfunction formatArgs(args) {\n\t\t  var name = this.namespace;\n\t\t  var useColors = this.useColors;\n\n\t\t  if (useColors) {\n\t\t    var c = this.color;\n\t\t    var prefix = '  \\u001b[3' + c + ';1m' + name + ' ' + '\\u001b[0m';\n\n\t\t    args[0] = prefix + args[0].split('\\n').join('\\n' + prefix);\n\t\t    args.push('\\u001b[3' + c + 'm+' + exports.humanize(this.diff) + '\\u001b[0m');\n\t\t  } else {\n\t\t    args[0] = new Date().toUTCString()\n\t\t      + ' ' + name + ' ' + args[0];\n\t\t  }\n\t\t}\n\n\t\t/**\n\t\t * Invokes `util.format()` with the specified arguments and writes to `stream`.\n\t\t */\n\n\t\tfunction log() {\n\t\t  return stream.write(util.format.apply(util, arguments) + '\\n');\n\t\t}\n\n\t\t/**\n\t\t * Save `namespaces`.\n\t\t *\n\t\t * @param {String} namespaces\n\t\t * @api private\n\t\t */\n\n\t\tfunction save(namespaces) {\n\t\t  if (null == namespaces) {\n\t\t    // If you set a process.env field to null or undefined, it gets cast to the\n\t\t    // string 'null' or 'undefined'. Just delete instead.\n\t\t    delete process.env.DEBUG;\n\t\t  } else {\n\t\t    process.env.DEBUG = namespaces;\n\t\t  }\n\t\t}\n\n\t\t/**\n\t\t * Load `namespaces`.\n\t\t *\n\t\t * @return {String} returns the previously persisted debug modes\n\t\t * @api private\n\t\t */\n\n\t\tfunction load() {\n\t\t  return process.env.DEBUG;\n\t\t}\n\n\t\t/**\n\t\t * Copied from `node/src/node.js`.\n\t\t *\n\t\t * XXX: It's lame that node doesn't expose this API out-of-the-box. It also\n\t\t * relies on the undocumented `tty_wrap.guessHandleType()` which is also lame.\n\t\t */\n\n\t\tfunction createWritableStdioStream (fd) {\n\t\t  var stream;\n\t\t  var tty_wrap = process.binding('tty_wrap');\n\n\t\t  // Note stream._type is used for test-module-load-list.js\n\n\t\t  switch (tty_wrap.guessHandleType(fd)) {\n\t\t    case 'TTY':\n\t\t      stream = new tty.WriteStream(fd);\n\t\t      stream._type = 'tty';\n\n\t\t      // Hack to have stream not keep the event loop alive.\n\t\t      // See https://github.com/joyent/node/issues/1726\n\t\t      if (stream._handle && stream._handle.unref) {\n\t\t        stream._handle.unref();\n\t\t      }\n\t\t      break;\n\n\t\t    case 'FILE':\n\t\t      var fs = require$$0__default;\n\t\t      stream = new fs.SyncWriteStream(fd, { autoClose: false });\n\t\t      stream._type = 'fs';\n\t\t      break;\n\n\t\t    case 'PIPE':\n\t\t    case 'TCP':\n\t\t      var net = require$$3$1;\n\t\t      stream = new net.Socket({\n\t\t        fd: fd,\n\t\t        readable: false,\n\t\t        writable: true\n\t\t      });\n\n\t\t      // FIXME Should probably have an option in net.Socket to create a\n\t\t      // stream from an existing fd which is writable only. But for now\n\t\t      // we'll just add this hack and set the `readable` member to false.\n\t\t      // Test: ./node test/fixtures/echo.js < /etc/passwd\n\t\t      stream.readable = false;\n\t\t      stream.read = null;\n\t\t      stream._type = 'pipe';\n\n\t\t      // FIXME Hack to have stream not keep the event loop alive.\n\t\t      // See https://github.com/joyent/node/issues/1726\n\t\t      if (stream._handle && stream._handle.unref) {\n\t\t        stream._handle.unref();\n\t\t      }\n\t\t      break;\n\n\t\t    default:\n\t\t      // Probably an error on in uv_guess_handle()\n\t\t      throw new Error('Implement me. Unknown stream file type!');\n\t\t  }\n\n\t\t  // For supporting legacy API we put the FD here.\n\t\t  stream.fd = fd;\n\n\t\t  stream._isStdio = true;\n\n\t\t  return stream;\n\t\t}\n\n\t\t/**\n\t\t * Init logic for `debug` instances.\n\t\t *\n\t\t * Create a new `inspectOpts` object in case `useColors` is set\n\t\t * differently for a particular `debug` instance.\n\t\t */\n\n\t\tfunction init (debug) {\n\t\t  debug.inspectOpts = {};\n\n\t\t  var keys = Object.keys(exports.inspectOpts);\n\t\t  for (var i = 0; i < keys.length; i++) {\n\t\t    debug.inspectOpts[keys[i]] = exports.inspectOpts[keys[i]];\n\t\t  }\n\t\t}\n\n\t\t/**\n\t\t * Enable namespaces listed in `process.env.DEBUG` initially.\n\t\t */\n\n\t\texports.enable(load());\n} (node, node.exports));\n\treturn node.exports;\n}\n\n/**\n * Detect Electron renderer process, which is node, but we should\n * treat as a browser.\n */\n\n(function (module) {\n\tif (typeof process !== 'undefined' && process.type === 'renderer') {\n\t  module.exports = requireBrowser();\n\t} else {\n\t  module.exports = requireNode();\n\t}\n} (src));\n\n/*!\n * encodeurl\n * Copyright(c) 2016 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n/**\n * Module exports.\n * @public\n */\n\nvar encodeurl = encodeUrl$1;\n\n/**\n * RegExp to match non-URL code points, *after* encoding (i.e. not including \"%\")\n * and including invalid escape sequences.\n * @private\n */\n\nvar ENCODE_CHARS_REGEXP = /(?:[^\\x21\\x25\\x26-\\x3B\\x3D\\x3F-\\x5B\\x5D\\x5F\\x61-\\x7A\\x7E]|%(?:[^0-9A-Fa-f]|[0-9A-Fa-f][^0-9A-Fa-f]|$))+/g;\n\n/**\n * RegExp to match unmatched surrogate pair.\n * @private\n */\n\nvar UNMATCHED_SURROGATE_PAIR_REGEXP = /(^|[^\\uD800-\\uDBFF])[\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF]([^\\uDC00-\\uDFFF]|$)/g;\n\n/**\n * String to replace unmatched surrogate pair with.\n * @private\n */\n\nvar UNMATCHED_SURROGATE_PAIR_REPLACE = '$1\\uFFFD$2';\n\n/**\n * Encode a URL to a percent-encoded form, excluding already-encoded sequences.\n *\n * This function will take an already-encoded URL and encode all the non-URL\n * code points. This function will not encode the \"%\" character unless it is\n * not part of a valid sequence (`%20` will be left as-is, but `%foo` will\n * be encoded as `%25foo`).\n *\n * This encode is meant to be \"safe\" and does not throw errors. It will try as\n * hard as it can to properly encode the given URL, including replacing any raw,\n * unpaired surrogate pairs with the Unicode replacement character prior to\n * encoding.\n *\n * @param {string} url\n * @return {string}\n * @public\n */\n\nfunction encodeUrl$1 (url) {\n  return String(url)\n    .replace(UNMATCHED_SURROGATE_PAIR_REGEXP, UNMATCHED_SURROGATE_PAIR_REPLACE)\n    .replace(ENCODE_CHARS_REGEXP, encodeURI)\n}\n\n/*!\n * escape-html\n * Copyright(c) 2012-2013 TJ Holowaychuk\n * Copyright(c) 2015 Andreas Lubbe\n * Copyright(c) 2015 Tiancheng \"Timothy\" Gu\n * MIT Licensed\n */\n\n/**\n * Module variables.\n * @private\n */\n\nvar matchHtmlRegExp = /[\"'&<>]/;\n\n/**\n * Module exports.\n * @public\n */\n\nvar escapeHtml_1 = escapeHtml$1;\n\n/**\n * Escape special characters in the given string of html.\n *\n * @param  {string} string The string to escape for inserting into HTML\n * @return {string}\n * @public\n */\n\nfunction escapeHtml$1(string) {\n  var str = '' + string;\n  var match = matchHtmlRegExp.exec(str);\n\n  if (!match) {\n    return str;\n  }\n\n  var escape;\n  var html = '';\n  var index = 0;\n  var lastIndex = 0;\n\n  for (index = match.index; index < str.length; index++) {\n    switch (str.charCodeAt(index)) {\n      case 34: // \"\n        escape = '&quot;';\n        break;\n      case 38: // &\n        escape = '&amp;';\n        break;\n      case 39: // '\n        escape = '&#39;';\n        break;\n      case 60: // <\n        escape = '&lt;';\n        break;\n      case 62: // >\n        escape = '&gt;';\n        break;\n      default:\n        continue;\n    }\n\n    if (lastIndex !== index) {\n      html += str.substring(lastIndex, index);\n    }\n\n    lastIndex = index + 1;\n    html += escape;\n  }\n\n  return lastIndex !== index\n    ? html + str.substring(lastIndex, index)\n    : html;\n}\n\nvar onFinished$2 = {exports: {}};\n\n/*!\n * ee-first\n * Copyright(c) 2014 Jonathan Ong\n * MIT Licensed\n */\n\n/**\n * Module exports.\n * @public\n */\n\nvar eeFirst = first$1;\n\n/**\n * Get the first event in a set of event emitters and event pairs.\n *\n * @param {array} stuff\n * @param {function} done\n * @public\n */\n\nfunction first$1(stuff, done) {\n  if (!Array.isArray(stuff))\n    throw new TypeError('arg must be an array of [ee, events...] arrays')\n\n  var cleanups = [];\n\n  for (var i = 0; i < stuff.length; i++) {\n    var arr = stuff[i];\n\n    if (!Array.isArray(arr) || arr.length < 2)\n      throw new TypeError('each array member must be [ee, events...]')\n\n    var ee = arr[0];\n\n    for (var j = 1; j < arr.length; j++) {\n      var event = arr[j];\n      var fn = listener(event, callback);\n\n      // listen to the event\n      ee.on(event, fn);\n      // push this listener to the list of cleanups\n      cleanups.push({\n        ee: ee,\n        event: event,\n        fn: fn,\n      });\n    }\n  }\n\n  function callback() {\n    cleanup();\n    done.apply(null, arguments);\n  }\n\n  function cleanup() {\n    var x;\n    for (var i = 0; i < cleanups.length; i++) {\n      x = cleanups[i];\n      x.ee.removeListener(x.event, x.fn);\n    }\n  }\n\n  function thunk(fn) {\n    done = fn;\n  }\n\n  thunk.cancel = cleanup;\n\n  return thunk\n}\n\n/**\n * Create the event listener.\n * @private\n */\n\nfunction listener(event, done) {\n  return function onevent(arg1) {\n    var args = new Array(arguments.length);\n    var ee = this;\n    var err = event === 'error'\n      ? arg1\n      : null;\n\n    // copy args to prevent arguments escaping scope\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i];\n    }\n\n    done(err, ee, event, args);\n  }\n}\n\n/*!\n * on-finished\n * Copyright(c) 2013 Jonathan Ong\n * Copyright(c) 2014 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n/**\n * Module exports.\n * @public\n */\n\nonFinished$2.exports = onFinished$1;\nonFinished$2.exports.isFinished = isFinished$1;\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar first = eeFirst;\n\n/**\n * Variables.\n * @private\n */\n\n/* istanbul ignore next */\nvar defer$2 = typeof setImmediate === 'function'\n  ? setImmediate\n  : function(fn){ process.nextTick(fn.bind.apply(fn, arguments)); };\n\n/**\n * Invoke callback when the response has finished, useful for\n * cleaning up resources afterwards.\n *\n * @param {object} msg\n * @param {function} listener\n * @return {object}\n * @public\n */\n\nfunction onFinished$1(msg, listener) {\n  if (isFinished$1(msg) !== false) {\n    defer$2(listener, null, msg);\n    return msg\n  }\n\n  // attach the listener to the message\n  attachListener(msg, listener);\n\n  return msg\n}\n\n/**\n * Determine if message is already finished.\n *\n * @param {object} msg\n * @return {boolean}\n * @public\n */\n\nfunction isFinished$1(msg) {\n  var socket = msg.socket;\n\n  if (typeof msg.finished === 'boolean') {\n    // OutgoingMessage\n    return Boolean(msg.finished || (socket && !socket.writable))\n  }\n\n  if (typeof msg.complete === 'boolean') {\n    // IncomingMessage\n    return Boolean(msg.upgrade || !socket || !socket.readable || (msg.complete && !msg.readable))\n  }\n\n  // don't know\n  return undefined\n}\n\n/**\n * Attach a finished listener to the message.\n *\n * @param {object} msg\n * @param {function} callback\n * @private\n */\n\nfunction attachFinishedListener(msg, callback) {\n  var eeMsg;\n  var eeSocket;\n  var finished = false;\n\n  function onFinish(error) {\n    eeMsg.cancel();\n    eeSocket.cancel();\n\n    finished = true;\n    callback(error);\n  }\n\n  // finished on first message event\n  eeMsg = eeSocket = first([[msg, 'end', 'finish']], onFinish);\n\n  function onSocket(socket) {\n    // remove listener\n    msg.removeListener('socket', onSocket);\n\n    if (finished) return\n    if (eeMsg !== eeSocket) return\n\n    // finished on first socket event\n    eeSocket = first([[socket, 'error', 'close']], onFinish);\n  }\n\n  if (msg.socket) {\n    // socket already assigned\n    onSocket(msg.socket);\n    return\n  }\n\n  // wait for socket to be assigned\n  msg.on('socket', onSocket);\n\n  if (msg.socket === undefined) {\n    // node.js 0.8 patch\n    patchAssignSocket(msg, onSocket);\n  }\n}\n\n/**\n * Attach the listener to the message.\n *\n * @param {object} msg\n * @return {function}\n * @private\n */\n\nfunction attachListener(msg, listener) {\n  var attached = msg.__onFinished;\n\n  // create a private single listener with queue\n  if (!attached || !attached.queue) {\n    attached = msg.__onFinished = createListener(msg);\n    attachFinishedListener(msg, attached);\n  }\n\n  attached.queue.push(listener);\n}\n\n/**\n * Create listener on message.\n *\n * @param {object} msg\n * @return {function}\n * @private\n */\n\nfunction createListener(msg) {\n  function listener(err) {\n    if (msg.__onFinished === listener) msg.__onFinished = null;\n    if (!listener.queue) return\n\n    var queue = listener.queue;\n    listener.queue = null;\n\n    for (var i = 0; i < queue.length; i++) {\n      queue[i](err, msg);\n    }\n  }\n\n  listener.queue = [];\n\n  return listener\n}\n\n/**\n * Patch ServerResponse.prototype.assignSocket for node.js 0.8.\n *\n * @param {ServerResponse} res\n * @param {function} callback\n * @private\n */\n\nfunction patchAssignSocket(res, callback) {\n  var assignSocket = res.assignSocket;\n\n  if (typeof assignSocket !== 'function') return\n\n  // res.on('socket', callback) is broken in 0.8\n  res.assignSocket = function _assignSocket(socket) {\n    assignSocket.call(this, socket);\n    callback(socket);\n  };\n}\n\nvar parseurl$1 = {exports: {}};\n\n/*!\n * parseurl\n * Copyright(c) 2014 Jonathan Ong\n * Copyright(c) 2014-2017 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar url$3 = require$$0$9;\nvar parse$9 = url$3.parse;\nvar Url = url$3.Url;\n\n/**\n * Module exports.\n * @public\n */\n\nparseurl$1.exports = parseurl;\nparseurl$1.exports.original = originalurl;\n\n/**\n * Parse the `req` url with memoization.\n *\n * @param {ServerRequest} req\n * @return {Object}\n * @public\n */\n\nfunction parseurl (req) {\n  var url = req.url;\n\n  if (url === undefined) {\n    // URL is undefined\n    return undefined\n  }\n\n  var parsed = req._parsedUrl;\n\n  if (fresh(url, parsed)) {\n    // Return cached URL parse\n    return parsed\n  }\n\n  // Parse the URL\n  parsed = fastparse(url);\n  parsed._raw = url;\n\n  return (req._parsedUrl = parsed)\n}\n/**\n * Parse the `req` original url with fallback and memoization.\n *\n * @param {ServerRequest} req\n * @return {Object}\n * @public\n */\n\nfunction originalurl (req) {\n  var url = req.originalUrl;\n\n  if (typeof url !== 'string') {\n    // Fallback\n    return parseurl(req)\n  }\n\n  var parsed = req._parsedOriginalUrl;\n\n  if (fresh(url, parsed)) {\n    // Return cached URL parse\n    return parsed\n  }\n\n  // Parse the URL\n  parsed = fastparse(url);\n  parsed._raw = url;\n\n  return (req._parsedOriginalUrl = parsed)\n}\n/**\n * Parse the `str` url with fast-path short-cut.\n *\n * @param {string} str\n * @return {Object}\n * @private\n */\n\nfunction fastparse (str) {\n  if (typeof str !== 'string' || str.charCodeAt(0) !== 0x2f /* / */) {\n    return parse$9(str)\n  }\n\n  var pathname = str;\n  var query = null;\n  var search = null;\n\n  // This takes the regexp from https://github.com/joyent/node/pull/7878\n  // Which is /^(\\/[^?#\\s]*)(\\?[^#\\s]*)?$/\n  // And unrolls it into a for loop\n  for (var i = 1; i < str.length; i++) {\n    switch (str.charCodeAt(i)) {\n      case 0x3f: /* ?  */\n        if (search === null) {\n          pathname = str.substring(0, i);\n          query = str.substring(i + 1);\n          search = str.substring(i);\n        }\n        break\n      case 0x09: /* \\t */\n      case 0x0a: /* \\n */\n      case 0x0c: /* \\f */\n      case 0x0d: /* \\r */\n      case 0x20: /*    */\n      case 0x23: /* #  */\n      case 0xa0:\n      case 0xfeff:\n        return parse$9(str)\n    }\n  }\n\n  var url = Url !== undefined\n    ? new Url()\n    : {};\n\n  url.path = str;\n  url.href = str;\n  url.pathname = pathname;\n\n  if (search !== null) {\n    url.query = query;\n    url.search = search;\n  }\n\n  return url\n}\n\n/**\n * Determine if parsed is still fresh for url.\n *\n * @param {string} url\n * @param {object} parsedUrl\n * @return {boolean}\n * @private\n */\n\nfunction fresh (url, parsedUrl) {\n  return typeof parsedUrl === 'object' &&\n    parsedUrl !== null &&\n    (Url === undefined || parsedUrl instanceof Url) &&\n    parsedUrl._raw === url\n}\n\nvar require$$0$1 = {\n\t\"100\": \"Continue\",\n\t\"101\": \"Switching Protocols\",\n\t\"102\": \"Processing\",\n\t\"103\": \"Early Hints\",\n\t\"200\": \"OK\",\n\t\"201\": \"Created\",\n\t\"202\": \"Accepted\",\n\t\"203\": \"Non-Authoritative Information\",\n\t\"204\": \"No Content\",\n\t\"205\": \"Reset Content\",\n\t\"206\": \"Partial Content\",\n\t\"207\": \"Multi-Status\",\n\t\"208\": \"Already Reported\",\n\t\"226\": \"IM Used\",\n\t\"300\": \"Multiple Choices\",\n\t\"301\": \"Moved Permanently\",\n\t\"302\": \"Found\",\n\t\"303\": \"See Other\",\n\t\"304\": \"Not Modified\",\n\t\"305\": \"Use Proxy\",\n\t\"306\": \"(Unused)\",\n\t\"307\": \"Temporary Redirect\",\n\t\"308\": \"Permanent Redirect\",\n\t\"400\": \"Bad Request\",\n\t\"401\": \"Unauthorized\",\n\t\"402\": \"Payment Required\",\n\t\"403\": \"Forbidden\",\n\t\"404\": \"Not Found\",\n\t\"405\": \"Method Not Allowed\",\n\t\"406\": \"Not Acceptable\",\n\t\"407\": \"Proxy Authentication Required\",\n\t\"408\": \"Request Timeout\",\n\t\"409\": \"Conflict\",\n\t\"410\": \"Gone\",\n\t\"411\": \"Length Required\",\n\t\"412\": \"Precondition Failed\",\n\t\"413\": \"Payload Too Large\",\n\t\"414\": \"URI Too Long\",\n\t\"415\": \"Unsupported Media Type\",\n\t\"416\": \"Range Not Satisfiable\",\n\t\"417\": \"Expectation Failed\",\n\t\"418\": \"I'm a teapot\",\n\t\"421\": \"Misdirected Request\",\n\t\"422\": \"Unprocessable Entity\",\n\t\"423\": \"Locked\",\n\t\"424\": \"Failed Dependency\",\n\t\"425\": \"Unordered Collection\",\n\t\"426\": \"Upgrade Required\",\n\t\"428\": \"Precondition Required\",\n\t\"429\": \"Too Many Requests\",\n\t\"431\": \"Request Header Fields Too Large\",\n\t\"451\": \"Unavailable For Legal Reasons\",\n\t\"500\": \"Internal Server Error\",\n\t\"501\": \"Not Implemented\",\n\t\"502\": \"Bad Gateway\",\n\t\"503\": \"Service Unavailable\",\n\t\"504\": \"Gateway Timeout\",\n\t\"505\": \"HTTP Version Not Supported\",\n\t\"506\": \"Variant Also Negotiates\",\n\t\"507\": \"Insufficient Storage\",\n\t\"508\": \"Loop Detected\",\n\t\"509\": \"Bandwidth Limit Exceeded\",\n\t\"510\": \"Not Extended\",\n\t\"511\": \"Network Authentication Required\"\n};\n\n/*!\n * statuses\n * Copyright(c) 2014 Jonathan Ong\n * Copyright(c) 2016 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar codes = require$$0$1;\n\n/**\n * Module exports.\n * @public\n */\n\nvar statuses$1 = status;\n\n// status code to message map\nstatus.STATUS_CODES = codes;\n\n// array of status codes\nstatus.codes = populateStatusesMap(status, codes);\n\n// status codes for redirects\nstatus.redirect = {\n  300: true,\n  301: true,\n  302: true,\n  303: true,\n  305: true,\n  307: true,\n  308: true\n};\n\n// status codes for empty bodies\nstatus.empty = {\n  204: true,\n  205: true,\n  304: true\n};\n\n// status codes for when you should retry the request\nstatus.retry = {\n  502: true,\n  503: true,\n  504: true\n};\n\n/**\n * Populate the statuses map for given codes.\n * @private\n */\n\nfunction populateStatusesMap (statuses, codes) {\n  var arr = [];\n\n  Object.keys(codes).forEach(function forEachCode (code) {\n    var message = codes[code];\n    var status = Number(code);\n\n    // Populate properties\n    statuses[status] = message;\n    statuses[message] = status;\n    statuses[message.toLowerCase()] = status;\n\n    // Add to array\n    arr.push(status);\n  });\n\n  return arr\n}\n\n/**\n * Get the status code.\n *\n * Given a number, this will throw if it is not a known status\n * code, otherwise the code will be returned. Given a string,\n * the string will be parsed for a number and return the code\n * if valid, otherwise will lookup the code assuming this is\n * the status message.\n *\n * @param {string|number} code\n * @returns {number}\n * @public\n */\n\nfunction status (code) {\n  if (typeof code === 'number') {\n    if (!status[code]) throw new Error('invalid status code: ' + code)\n    return code\n  }\n\n  if (typeof code !== 'string') {\n    throw new TypeError('code must be a number or string')\n  }\n\n  // '403'\n  var n = parseInt(code, 10);\n  if (!isNaN(n)) {\n    if (!status[n]) throw new Error('invalid status code: ' + n)\n    return n\n  }\n\n  n = status[code.toLowerCase()];\n  if (!n) throw new Error('invalid status message: \"' + code + '\"')\n  return n\n}\n\n/*!\n * unpipe\n * Copyright(c) 2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n/**\n * Module exports.\n * @public\n */\n\nvar unpipe_1 = unpipe$1;\n\n/**\n * Determine if there are Node.js pipe-like data listeners.\n * @private\n */\n\nfunction hasPipeDataListeners(stream) {\n  var listeners = stream.listeners('data');\n\n  for (var i = 0; i < listeners.length; i++) {\n    if (listeners[i].name === 'ondata') {\n      return true\n    }\n  }\n\n  return false\n}\n\n/**\n * Unpipe a stream from all destinations.\n *\n * @param {object} stream\n * @public\n */\n\nfunction unpipe$1(stream) {\n  if (!stream) {\n    throw new TypeError('argument stream is required')\n  }\n\n  if (typeof stream.unpipe === 'function') {\n    // new-style\n    stream.unpipe();\n    return\n  }\n\n  // Node.js 0.8 hack\n  if (!hasPipeDataListeners(stream)) {\n    return\n  }\n\n  var listener;\n  var listeners = stream.listeners('close');\n\n  for (var i = 0; i < listeners.length; i++) {\n    listener = listeners[i];\n\n    if (listener.name !== 'cleanup' && listener.name !== 'onclose') {\n      continue\n    }\n\n    // invoke the listener\n    listener.call(stream);\n  }\n}\n\n/*!\n * finalhandler\n * Copyright(c) 2014-2017 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar debug$5 = src.exports('finalhandler');\nvar encodeUrl = encodeurl;\nvar escapeHtml = escapeHtml_1;\nvar onFinished = onFinished$2.exports;\nvar parseUrl$1 = parseurl$1.exports;\nvar statuses = statuses$1;\nvar unpipe = unpipe_1;\n\n/**\n * Module variables.\n * @private\n */\n\nvar DOUBLE_SPACE_REGEXP = /\\x20{2}/g;\nvar NEWLINE_REGEXP = /\\n/g;\n\n/* istanbul ignore next */\nvar defer$1 = typeof setImmediate === 'function'\n  ? setImmediate\n  : function (fn) { process.nextTick(fn.bind.apply(fn, arguments)); };\nvar isFinished = onFinished.isFinished;\n\n/**\n * Create a minimal HTML document.\n *\n * @param {string} message\n * @private\n */\n\nfunction createHtmlDocument (message) {\n  var body = escapeHtml(message)\n    .replace(NEWLINE_REGEXP, '<br>')\n    .replace(DOUBLE_SPACE_REGEXP, ' &nbsp;');\n\n  return '<!DOCTYPE html>\\n' +\n    '<html lang=\"en\">\\n' +\n    '<head>\\n' +\n    '<meta charset=\"utf-8\">\\n' +\n    '<title>Error</title>\\n' +\n    '</head>\\n' +\n    '<body>\\n' +\n    '<pre>' + body + '</pre>\\n' +\n    '</body>\\n' +\n    '</html>\\n'\n}\n\n/**\n * Module exports.\n * @public\n */\n\nvar finalhandler_1 = finalhandler$1;\n\n/**\n * Create a function to handle the final response.\n *\n * @param {Request} req\n * @param {Response} res\n * @param {Object} [options]\n * @return {Function}\n * @public\n */\n\nfunction finalhandler$1 (req, res, options) {\n  var opts = options || {};\n\n  // get environment\n  var env = opts.env || process.env.NODE_ENV || 'development';\n\n  // get error callback\n  var onerror = opts.onerror;\n\n  return function (err) {\n    var headers;\n    var msg;\n    var status;\n\n    // ignore 404 on in-flight response\n    if (!err && headersSent(res)) {\n      debug$5('cannot 404 after headers sent');\n      return\n    }\n\n    // unhandled error\n    if (err) {\n      // respect status code from error\n      status = getErrorStatusCode(err);\n\n      if (status === undefined) {\n        // fallback to status code on response\n        status = getResponseStatusCode(res);\n      } else {\n        // respect headers from error\n        headers = getErrorHeaders(err);\n      }\n\n      // get error message\n      msg = getErrorMessage(err, status, env);\n    } else {\n      // not found\n      status = 404;\n      msg = 'Cannot ' + req.method + ' ' + encodeUrl(getResourceName(req));\n    }\n\n    debug$5('default %s', status);\n\n    // schedule onerror callback\n    if (err && onerror) {\n      defer$1(onerror, err, req, res);\n    }\n\n    // cannot actually respond\n    if (headersSent(res)) {\n      debug$5('cannot %d after headers sent', status);\n      req.socket.destroy();\n      return\n    }\n\n    // send response\n    send$1(req, res, status, headers, msg);\n  }\n}\n\n/**\n * Get headers from Error object.\n *\n * @param {Error} err\n * @return {object}\n * @private\n */\n\nfunction getErrorHeaders (err) {\n  if (!err.headers || typeof err.headers !== 'object') {\n    return undefined\n  }\n\n  var headers = Object.create(null);\n  var keys = Object.keys(err.headers);\n\n  for (var i = 0; i < keys.length; i++) {\n    var key = keys[i];\n    headers[key] = err.headers[key];\n  }\n\n  return headers\n}\n\n/**\n * Get message from Error object, fallback to status message.\n *\n * @param {Error} err\n * @param {number} status\n * @param {string} env\n * @return {string}\n * @private\n */\n\nfunction getErrorMessage (err, status, env) {\n  var msg;\n\n  if (env !== 'production') {\n    // use err.stack, which typically includes err.message\n    msg = err.stack;\n\n    // fallback to err.toString() when possible\n    if (!msg && typeof err.toString === 'function') {\n      msg = err.toString();\n    }\n  }\n\n  return msg || statuses[status]\n}\n\n/**\n * Get status code from Error object.\n *\n * @param {Error} err\n * @return {number}\n * @private\n */\n\nfunction getErrorStatusCode (err) {\n  // check err.status\n  if (typeof err.status === 'number' && err.status >= 400 && err.status < 600) {\n    return err.status\n  }\n\n  // check err.statusCode\n  if (typeof err.statusCode === 'number' && err.statusCode >= 400 && err.statusCode < 600) {\n    return err.statusCode\n  }\n\n  return undefined\n}\n\n/**\n * Get resource name for the request.\n *\n * This is typically just the original pathname of the request\n * but will fallback to \"resource\" is that cannot be determined.\n *\n * @param {IncomingMessage} req\n * @return {string}\n * @private\n */\n\nfunction getResourceName (req) {\n  try {\n    return parseUrl$1.original(req).pathname\n  } catch (e) {\n    return 'resource'\n  }\n}\n\n/**\n * Get status code from response.\n *\n * @param {OutgoingMessage} res\n * @return {number}\n * @private\n */\n\nfunction getResponseStatusCode (res) {\n  var status = res.statusCode;\n\n  // default status code to 500 if outside valid range\n  if (typeof status !== 'number' || status < 400 || status > 599) {\n    status = 500;\n  }\n\n  return status\n}\n\n/**\n * Determine if the response headers have been sent.\n *\n * @param {object} res\n * @returns {boolean}\n * @private\n */\n\nfunction headersSent (res) {\n  return typeof res.headersSent !== 'boolean'\n    ? Boolean(res._header)\n    : res.headersSent\n}\n\n/**\n * Send response.\n *\n * @param {IncomingMessage} req\n * @param {OutgoingMessage} res\n * @param {number} status\n * @param {object} headers\n * @param {string} message\n * @private\n */\n\nfunction send$1 (req, res, status, headers, message) {\n  function write () {\n    // response body\n    var body = createHtmlDocument(message);\n\n    // response status\n    res.statusCode = status;\n    res.statusMessage = statuses[status];\n\n    // response headers\n    setHeaders(res, headers);\n\n    // security headers\n    res.setHeader('Content-Security-Policy', \"default-src 'none'\");\n    res.setHeader('X-Content-Type-Options', 'nosniff');\n\n    // standard headers\n    res.setHeader('Content-Type', 'text/html; charset=utf-8');\n    res.setHeader('Content-Length', Buffer.byteLength(body, 'utf8'));\n\n    if (req.method === 'HEAD') {\n      res.end();\n      return\n    }\n\n    res.end(body, 'utf8');\n  }\n\n  if (isFinished(req)) {\n    write();\n    return\n  }\n\n  // unpipe everything from the request\n  unpipe(req);\n\n  // flush the request\n  onFinished(req, write);\n  req.resume();\n}\n\n/**\n * Set response headers from an object.\n *\n * @param {OutgoingMessage} res\n * @param {object} headers\n * @private\n */\n\nfunction setHeaders (res, headers) {\n  if (!headers) {\n    return\n  }\n\n  var keys = Object.keys(headers);\n  for (var i = 0; i < keys.length; i++) {\n    var key = keys[i];\n    res.setHeader(key, headers[key]);\n  }\n}\n\nvar utilsMerge = {exports: {}};\n\n/**\n * Merge object b with object a.\n *\n *     var a = { foo: 'bar' }\n *       , b = { bar: 'baz' };\n *\n *     merge(a, b);\n *     // => { foo: 'bar', bar: 'baz' }\n *\n * @param {Object} a\n * @param {Object} b\n * @return {Object}\n * @api public\n */\n\n(function (module, exports) {\n\tmodule.exports = function(a, b){\n\t  if (a && b) {\n\t    for (var key in b) {\n\t      a[key] = b[key];\n\t    }\n\t  }\n\t  return a;\n\t};\n} (utilsMerge));\n\n/*!\n * connect\n * Copyright(c) 2010 Sencha Inc.\n * Copyright(c) 2011 TJ Holowaychuk\n * Copyright(c) 2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar debug$4 = src.exports('connect:dispatcher');\nvar EventEmitter$3 = require$$0$5.EventEmitter;\nvar finalhandler = finalhandler_1;\nvar http$4 = require$$1$2;\nvar merge = utilsMerge.exports;\nvar parseUrl = parseurl$1.exports;\n\n/**\n * Module exports.\n * @public\n */\n\nvar connect = createServer$1;\n\n/**\n * Module variables.\n * @private\n */\n\nvar env = process.env.NODE_ENV || 'development';\nvar proto = {};\n\n/* istanbul ignore next */\nvar defer = typeof setImmediate === 'function'\n  ? setImmediate\n  : function(fn){ process.nextTick(fn.bind.apply(fn, arguments)); };\n\n/**\n * Create a new connect server.\n *\n * @return {function}\n * @public\n */\n\nfunction createServer$1() {\n  function app(req, res, next){ app.handle(req, res, next); }\n  merge(app, proto);\n  merge(app, EventEmitter$3.prototype);\n  app.route = '/';\n  app.stack = [];\n  return app;\n}\n\n/**\n * Utilize the given middleware `handle` to the given `route`,\n * defaulting to _/_. This \"route\" is the mount-point for the\n * middleware, when given a value other than _/_ the middleware\n * is only effective when that segment is present in the request's\n * pathname.\n *\n * For example if we were to mount a function at _/admin_, it would\n * be invoked on _/admin_, and _/admin/settings_, however it would\n * not be invoked for _/_, or _/posts_.\n *\n * @param {String|Function|Server} route, callback or server\n * @param {Function|Server} callback or server\n * @return {Server} for chaining\n * @public\n */\n\nproto.use = function use(route, fn) {\n  var handle = fn;\n  var path = route;\n\n  // default route to '/'\n  if (typeof route !== 'string') {\n    handle = route;\n    path = '/';\n  }\n\n  // wrap sub-apps\n  if (typeof handle.handle === 'function') {\n    var server = handle;\n    server.route = path;\n    handle = function (req, res, next) {\n      server.handle(req, res, next);\n    };\n  }\n\n  // wrap vanilla http.Servers\n  if (handle instanceof http$4.Server) {\n    handle = handle.listeners('request')[0];\n  }\n\n  // strip trailing slash\n  if (path[path.length - 1] === '/') {\n    path = path.slice(0, -1);\n  }\n\n  // add the middleware\n  debug$4('use %s %s', path || '/', handle.name || 'anonymous');\n  this.stack.push({ route: path, handle: handle });\n\n  return this;\n};\n\n/**\n * Handle server requests, punting them down\n * the middleware stack.\n *\n * @private\n */\n\nproto.handle = function handle(req, res, out) {\n  var index = 0;\n  var protohost = getProtohost(req.url) || '';\n  var removed = '';\n  var slashAdded = false;\n  var stack = this.stack;\n\n  // final function handler\n  var done = out || finalhandler(req, res, {\n    env: env,\n    onerror: logerror\n  });\n\n  // store the original URL\n  req.originalUrl = req.originalUrl || req.url;\n\n  function next(err) {\n    if (slashAdded) {\n      req.url = req.url.substr(1);\n      slashAdded = false;\n    }\n\n    if (removed.length !== 0) {\n      req.url = protohost + removed + req.url.substr(protohost.length);\n      removed = '';\n    }\n\n    // next callback\n    var layer = stack[index++];\n\n    // all done\n    if (!layer) {\n      defer(done, err);\n      return;\n    }\n\n    // route data\n    var path = parseUrl(req).pathname || '/';\n    var route = layer.route;\n\n    // skip this layer if the route doesn't match\n    if (path.toLowerCase().substr(0, route.length) !== route.toLowerCase()) {\n      return next(err);\n    }\n\n    // skip if route match does not border \"/\", \".\", or end\n    var c = path.length > route.length && path[route.length];\n    if (c && c !== '/' && c !== '.') {\n      return next(err);\n    }\n\n    // trim off the part of the url that matches the route\n    if (route.length !== 0 && route !== '/') {\n      removed = route;\n      req.url = protohost + req.url.substr(protohost.length + removed.length);\n\n      // ensure leading slash\n      if (!protohost && req.url[0] !== '/') {\n        req.url = '/' + req.url;\n        slashAdded = true;\n      }\n    }\n\n    // call the layer handle\n    call(layer.handle, route, err, req, res, next);\n  }\n\n  next();\n};\n\n/**\n * Listen for connections.\n *\n * This method takes the same arguments\n * as node's `http.Server#listen()`.\n *\n * HTTP and HTTPS:\n *\n * If you run your application both as HTTP\n * and HTTPS you may wrap them individually,\n * since your Connect \"server\" is really just\n * a JavaScript `Function`.\n *\n *      var connect = require('connect')\n *        , http = require('http')\n *        , https = require('https');\n *\n *      var app = connect();\n *\n *      http.createServer(app).listen(80);\n *      https.createServer(options, app).listen(443);\n *\n * @return {http.Server}\n * @api public\n */\n\nproto.listen = function listen() {\n  var server = http$4.createServer(this);\n  return server.listen.apply(server, arguments);\n};\n\n/**\n * Invoke a route handle.\n * @private\n */\n\nfunction call(handle, route, err, req, res, next) {\n  var arity = handle.length;\n  var error = err;\n  var hasError = Boolean(err);\n\n  debug$4('%s %s : %s', handle.name || '<anonymous>', route, req.originalUrl);\n\n  try {\n    if (hasError && arity === 4) {\n      // error-handling middleware\n      handle(err, req, res, next);\n      return;\n    } else if (!hasError && arity < 4) {\n      // request-handling middleware\n      handle(req, res, next);\n      return;\n    }\n  } catch (e) {\n    // replace the error\n    error = e;\n  }\n\n  // continue\n  next(error);\n}\n\n/**\n * Log error using console.error.\n *\n * @param {Error} err\n * @private\n */\n\nfunction logerror(err) {\n  if (env !== 'test') console.error(err.stack || err.toString());\n}\n\n/**\n * Get get protocol + host for a URL.\n *\n * @param {string} url\n * @private\n */\n\nfunction getProtohost(url) {\n  if (url.length === 0 || url[0] === '/') {\n    return undefined;\n  }\n\n  var fqdnIndex = url.indexOf('://');\n\n  return fqdnIndex !== -1 && url.lastIndexOf('?', fqdnIndex) === -1\n    ? url.substr(0, url.indexOf('/', 3 + fqdnIndex))\n    : undefined;\n}\n\nvar lib$2 = {exports: {}};\n\n/*\nobject-assign\n(c) Sindre Sorhus\n@license MIT\n*/\n/* eslint-disable no-unused-vars */\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\nfunction toObject(val) {\n\tif (val === null || val === undefined) {\n\t\tthrow new TypeError('Object.assign cannot be called with null or undefined');\n\t}\n\n\treturn Object(val);\n}\n\nfunction shouldUseNative() {\n\ttry {\n\t\tif (!Object.assign) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Detect buggy property enumeration order in older V8 versions.\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=4118\n\t\tvar test1 = new String('abc');  // eslint-disable-line no-new-wrappers\n\t\ttest1[5] = 'de';\n\t\tif (Object.getOwnPropertyNames(test1)[0] === '5') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test2 = {};\n\t\tfor (var i = 0; i < 10; i++) {\n\t\t\ttest2['_' + String.fromCharCode(i)] = i;\n\t\t}\n\t\tvar order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n\t\t\treturn test2[n];\n\t\t});\n\t\tif (order2.join('') !== '0123456789') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test3 = {};\n\t\t'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n\t\t\ttest3[letter] = letter;\n\t\t});\n\t\tif (Object.keys(Object.assign({}, test3)).join('') !==\n\t\t\t\t'abcdefghijklmnopqrst') {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t} catch (err) {\n\t\t// We don't expect any of the above to throw, but better to be safe.\n\t\treturn false;\n\t}\n}\n\nvar objectAssign = shouldUseNative() ? Object.assign : function (target, source) {\n\tvar from;\n\tvar to = toObject(target);\n\tvar symbols;\n\n\tfor (var s = 1; s < arguments.length; s++) {\n\t\tfrom = Object(arguments[s]);\n\n\t\tfor (var key in from) {\n\t\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\t\tto[key] = from[key];\n\t\t\t}\n\t\t}\n\n\t\tif (getOwnPropertySymbols) {\n\t\t\tsymbols = getOwnPropertySymbols(from);\n\t\t\tfor (var i = 0; i < symbols.length; i++) {\n\t\t\t\tif (propIsEnumerable.call(from, symbols[i])) {\n\t\t\t\t\tto[symbols[i]] = from[symbols[i]];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn to;\n};\n\nvar vary$1 = {exports: {}};\n\n/*!\n * vary\n * Copyright(c) 2014-2017 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n/**\n * Module exports.\n */\n\nvary$1.exports = vary;\nvary$1.exports.append = append;\n\n/**\n * RegExp to match field-name in RFC 7230 sec 3.2\n *\n * field-name    = token\n * token         = 1*tchar\n * tchar         = \"!\" / \"#\" / \"$\" / \"%\" / \"&\" / \"'\" / \"*\"\n *               / \"+\" / \"-\" / \".\" / \"^\" / \"_\" / \"`\" / \"|\" / \"~\"\n *               / DIGIT / ALPHA\n *               ; any VCHAR, except delimiters\n */\n\nvar FIELD_NAME_REGEXP = /^[!#$%&'*+\\-.^_`|~0-9A-Za-z]+$/;\n\n/**\n * Append a field to a vary header.\n *\n * @param {String} header\n * @param {String|Array} field\n * @return {String}\n * @public\n */\n\nfunction append (header, field) {\n  if (typeof header !== 'string') {\n    throw new TypeError('header argument is required')\n  }\n\n  if (!field) {\n    throw new TypeError('field argument is required')\n  }\n\n  // get fields array\n  var fields = !Array.isArray(field)\n    ? parse$8(String(field))\n    : field;\n\n  // assert on invalid field names\n  for (var j = 0; j < fields.length; j++) {\n    if (!FIELD_NAME_REGEXP.test(fields[j])) {\n      throw new TypeError('field argument contains an invalid header name')\n    }\n  }\n\n  // existing, unspecified vary\n  if (header === '*') {\n    return header\n  }\n\n  // enumerate current values\n  var val = header;\n  var vals = parse$8(header.toLowerCase());\n\n  // unspecified vary\n  if (fields.indexOf('*') !== -1 || vals.indexOf('*') !== -1) {\n    return '*'\n  }\n\n  for (var i = 0; i < fields.length; i++) {\n    var fld = fields[i].toLowerCase();\n\n    // append value (case-preserving)\n    if (vals.indexOf(fld) === -1) {\n      vals.push(fld);\n      val = val\n        ? val + ', ' + fields[i]\n        : fields[i];\n    }\n  }\n\n  return val\n}\n\n/**\n * Parse a vary header into an array.\n *\n * @param {String} header\n * @return {Array}\n * @private\n */\n\nfunction parse$8 (header) {\n  var end = 0;\n  var list = [];\n  var start = 0;\n\n  // gather tokens\n  for (var i = 0, len = header.length; i < len; i++) {\n    switch (header.charCodeAt(i)) {\n      case 0x20: /*   */\n        if (start === end) {\n          start = end = i + 1;\n        }\n        break\n      case 0x2c: /* , */\n        list.push(header.substring(start, end));\n        start = end = i + 1;\n        break\n      default:\n        end = i + 1;\n        break\n    }\n  }\n\n  // final token\n  list.push(header.substring(start, end));\n\n  return list\n}\n\n/**\n * Mark that a request is varied on a header field.\n *\n * @param {Object} res\n * @param {String|Array} field\n * @public\n */\n\nfunction vary (res, field) {\n  if (!res || !res.getHeader || !res.setHeader) {\n    // quack quack\n    throw new TypeError('res argument is required')\n  }\n\n  // get existing header\n  var val = res.getHeader('Vary') || '';\n  var header = Array.isArray(val)\n    ? val.join(', ')\n    : String(val);\n\n  // set new header\n  if ((val = append(header, field))) {\n    res.setHeader('Vary', val);\n  }\n}\n\n(function () {\n\n  var assign = objectAssign;\n  var vary = vary$1.exports;\n\n  var defaults = {\n    origin: '*',\n    methods: 'GET,HEAD,PUT,PATCH,POST,DELETE',\n    preflightContinue: false,\n    optionsSuccessStatus: 204\n  };\n\n  function isString(s) {\n    return typeof s === 'string' || s instanceof String;\n  }\n\n  function isOriginAllowed(origin, allowedOrigin) {\n    if (Array.isArray(allowedOrigin)) {\n      for (var i = 0; i < allowedOrigin.length; ++i) {\n        if (isOriginAllowed(origin, allowedOrigin[i])) {\n          return true;\n        }\n      }\n      return false;\n    } else if (isString(allowedOrigin)) {\n      return origin === allowedOrigin;\n    } else if (allowedOrigin instanceof RegExp) {\n      return allowedOrigin.test(origin);\n    } else {\n      return !!allowedOrigin;\n    }\n  }\n\n  function configureOrigin(options, req) {\n    var requestOrigin = req.headers.origin,\n      headers = [],\n      isAllowed;\n\n    if (!options.origin || options.origin === '*') {\n      // allow any origin\n      headers.push([{\n        key: 'Access-Control-Allow-Origin',\n        value: '*'\n      }]);\n    } else if (isString(options.origin)) {\n      // fixed origin\n      headers.push([{\n        key: 'Access-Control-Allow-Origin',\n        value: options.origin\n      }]);\n      headers.push([{\n        key: 'Vary',\n        value: 'Origin'\n      }]);\n    } else {\n      isAllowed = isOriginAllowed(requestOrigin, options.origin);\n      // reflect origin\n      headers.push([{\n        key: 'Access-Control-Allow-Origin',\n        value: isAllowed ? requestOrigin : false\n      }]);\n      headers.push([{\n        key: 'Vary',\n        value: 'Origin'\n      }]);\n    }\n\n    return headers;\n  }\n\n  function configureMethods(options) {\n    var methods = options.methods;\n    if (methods.join) {\n      methods = options.methods.join(','); // .methods is an array, so turn it into a string\n    }\n    return {\n      key: 'Access-Control-Allow-Methods',\n      value: methods\n    };\n  }\n\n  function configureCredentials(options) {\n    if (options.credentials === true) {\n      return {\n        key: 'Access-Control-Allow-Credentials',\n        value: 'true'\n      };\n    }\n    return null;\n  }\n\n  function configureAllowedHeaders(options, req) {\n    var allowedHeaders = options.allowedHeaders || options.headers;\n    var headers = [];\n\n    if (!allowedHeaders) {\n      allowedHeaders = req.headers['access-control-request-headers']; // .headers wasn't specified, so reflect the request headers\n      headers.push([{\n        key: 'Vary',\n        value: 'Access-Control-Request-Headers'\n      }]);\n    } else if (allowedHeaders.join) {\n      allowedHeaders = allowedHeaders.join(','); // .headers is an array, so turn it into a string\n    }\n    if (allowedHeaders && allowedHeaders.length) {\n      headers.push([{\n        key: 'Access-Control-Allow-Headers',\n        value: allowedHeaders\n      }]);\n    }\n\n    return headers;\n  }\n\n  function configureExposedHeaders(options) {\n    var headers = options.exposedHeaders;\n    if (!headers) {\n      return null;\n    } else if (headers.join) {\n      headers = headers.join(','); // .headers is an array, so turn it into a string\n    }\n    if (headers && headers.length) {\n      return {\n        key: 'Access-Control-Expose-Headers',\n        value: headers\n      };\n    }\n    return null;\n  }\n\n  function configureMaxAge(options) {\n    var maxAge = (typeof options.maxAge === 'number' || options.maxAge) && options.maxAge.toString();\n    if (maxAge && maxAge.length) {\n      return {\n        key: 'Access-Control-Max-Age',\n        value: maxAge\n      };\n    }\n    return null;\n  }\n\n  function applyHeaders(headers, res) {\n    for (var i = 0, n = headers.length; i < n; i++) {\n      var header = headers[i];\n      if (header) {\n        if (Array.isArray(header)) {\n          applyHeaders(header, res);\n        } else if (header.key === 'Vary' && header.value) {\n          vary(res, header.value);\n        } else if (header.value) {\n          res.setHeader(header.key, header.value);\n        }\n      }\n    }\n  }\n\n  function cors(options, req, res, next) {\n    var headers = [],\n      method = req.method && req.method.toUpperCase && req.method.toUpperCase();\n\n    if (method === 'OPTIONS') {\n      // preflight\n      headers.push(configureOrigin(options, req));\n      headers.push(configureCredentials(options));\n      headers.push(configureMethods(options));\n      headers.push(configureAllowedHeaders(options, req));\n      headers.push(configureMaxAge(options));\n      headers.push(configureExposedHeaders(options));\n      applyHeaders(headers, res);\n\n      if (options.preflightContinue) {\n        next();\n      } else {\n        // Safari (and potentially other browsers) need content-length 0,\n        //   for 204 or they just hang waiting for a body\n        res.statusCode = options.optionsSuccessStatus;\n        res.setHeader('Content-Length', '0');\n        res.end();\n      }\n    } else {\n      // actual response\n      headers.push(configureOrigin(options, req));\n      headers.push(configureCredentials(options));\n      headers.push(configureExposedHeaders(options));\n      applyHeaders(headers, res);\n      next();\n    }\n  }\n\n  function middlewareWrapper(o) {\n    // if options are static (either via defaults or custom options passed in), wrap in a function\n    var optionsCallback = null;\n    if (typeof o === 'function') {\n      optionsCallback = o;\n    } else {\n      optionsCallback = function (req, cb) {\n        cb(null, o);\n      };\n    }\n\n    return function corsMiddleware(req, res, next) {\n      optionsCallback(req, function (err, options) {\n        if (err) {\n          next(err);\n        } else {\n          var corsOptions = assign({}, defaults, options);\n          var originCallback = null;\n          if (corsOptions.origin && typeof corsOptions.origin === 'function') {\n            originCallback = corsOptions.origin;\n          } else if (corsOptions.origin) {\n            originCallback = function (origin, cb) {\n              cb(null, corsOptions.origin);\n            };\n          }\n\n          if (originCallback) {\n            originCallback(req.headers.origin, function (err2, origin) {\n              if (err2 || !origin) {\n                next(err2);\n              } else {\n                corsOptions.origin = origin;\n                cors(corsOptions, req, res, next);\n              }\n            });\n          } else {\n            next();\n          }\n        }\n      });\n    };\n  }\n\n  // can pass either an options hash, an options delegate, or nothing\n  lib$2.exports = middlewareWrapper;\n\n}());\n\nvar chokidar = {};\n\nconst fs$9 = require$$0__default;\nconst { Readable } = require$$0$7;\nconst sysPath$3 = require$$0$4;\nconst { promisify: promisify$3 } = require$$0$6;\nconst picomatch$1 = picomatch$4.exports;\n\nconst readdir$1 = promisify$3(fs$9.readdir);\nconst stat$3 = promisify$3(fs$9.stat);\nconst lstat$2 = promisify$3(fs$9.lstat);\nconst realpath$1 = promisify$3(fs$9.realpath);\n\n/**\n * @typedef {Object} EntryInfo\n * @property {String} path\n * @property {String} fullPath\n * @property {fs.Stats=} stats\n * @property {fs.Dirent=} dirent\n * @property {String} basename\n */\n\nconst BANG$2 = '!';\nconst RECURSIVE_ERROR_CODE = 'READDIRP_RECURSIVE_ERROR';\nconst NORMAL_FLOW_ERRORS = new Set(['ENOENT', 'EPERM', 'EACCES', 'ELOOP', RECURSIVE_ERROR_CODE]);\nconst FILE_TYPE = 'files';\nconst DIR_TYPE = 'directories';\nconst FILE_DIR_TYPE = 'files_directories';\nconst EVERYTHING_TYPE = 'all';\nconst ALL_TYPES = [FILE_TYPE, DIR_TYPE, FILE_DIR_TYPE, EVERYTHING_TYPE];\n\nconst isNormalFlowError = error => NORMAL_FLOW_ERRORS.has(error.code);\nconst [maj, min] = process.versions.node.split('.').slice(0, 2).map(n => Number.parseInt(n, 10));\nconst wantBigintFsStats = process.platform === 'win32' && (maj > 10 || (maj === 10 && min >= 5));\n\nconst normalizeFilter = filter => {\n  if (filter === undefined) return;\n  if (typeof filter === 'function') return filter;\n\n  if (typeof filter === 'string') {\n    const glob = picomatch$1(filter.trim());\n    return entry => glob(entry.basename);\n  }\n\n  if (Array.isArray(filter)) {\n    const positive = [];\n    const negative = [];\n    for (const item of filter) {\n      const trimmed = item.trim();\n      if (trimmed.charAt(0) === BANG$2) {\n        negative.push(picomatch$1(trimmed.slice(1)));\n      } else {\n        positive.push(picomatch$1(trimmed));\n      }\n    }\n\n    if (negative.length > 0) {\n      if (positive.length > 0) {\n        return entry =>\n          positive.some(f => f(entry.basename)) && !negative.some(f => f(entry.basename));\n      }\n      return entry => !negative.some(f => f(entry.basename));\n    }\n    return entry => positive.some(f => f(entry.basename));\n  }\n};\n\nclass ReaddirpStream extends Readable {\n  static get defaultOptions() {\n    return {\n      root: '.',\n      /* eslint-disable no-unused-vars */\n      fileFilter: (path) => true,\n      directoryFilter: (path) => true,\n      /* eslint-enable no-unused-vars */\n      type: FILE_TYPE,\n      lstat: false,\n      depth: 2147483648,\n      alwaysStat: false\n    };\n  }\n\n  constructor(options = {}) {\n    super({\n      objectMode: true,\n      autoDestroy: true,\n      highWaterMark: options.highWaterMark || 4096\n    });\n    const opts = { ...ReaddirpStream.defaultOptions, ...options };\n    const { root, type } = opts;\n\n    this._fileFilter = normalizeFilter(opts.fileFilter);\n    this._directoryFilter = normalizeFilter(opts.directoryFilter);\n\n    const statMethod = opts.lstat ? lstat$2 : stat$3;\n    // Use bigint stats if it's windows and stat() supports options (node 10+).\n    if (wantBigintFsStats) {\n      this._stat = path => statMethod(path, { bigint: true });\n    } else {\n      this._stat = statMethod;\n    }\n\n    this._maxDepth = opts.depth;\n    this._wantsDir = [DIR_TYPE, FILE_DIR_TYPE, EVERYTHING_TYPE].includes(type);\n    this._wantsFile = [FILE_TYPE, FILE_DIR_TYPE, EVERYTHING_TYPE].includes(type);\n    this._wantsEverything = type === EVERYTHING_TYPE;\n    this._root = sysPath$3.resolve(root);\n    this._isDirent = ('Dirent' in fs$9) && !opts.alwaysStat;\n    this._statsProp = this._isDirent ? 'dirent' : 'stats';\n    this._rdOptions = { encoding: 'utf8', withFileTypes: this._isDirent };\n\n    // Launch stream with one parent, the root dir.\n    this.parents = [this._exploreDir(root, 1)];\n    this.reading = false;\n    this.parent = undefined;\n  }\n\n  async _read(batch) {\n    if (this.reading) return;\n    this.reading = true;\n\n    try {\n      while (!this.destroyed && batch > 0) {\n        const { path, depth, files = [] } = this.parent || {};\n\n        if (files.length > 0) {\n          const slice = files.splice(0, batch).map(dirent => this._formatEntry(dirent, path));\n          for (const entry of await Promise.all(slice)) {\n            if (this.destroyed) return;\n\n            const entryType = await this._getEntryType(entry);\n            if (entryType === 'directory' && this._directoryFilter(entry)) {\n              if (depth <= this._maxDepth) {\n                this.parents.push(this._exploreDir(entry.fullPath, depth + 1));\n              }\n\n              if (this._wantsDir) {\n                this.push(entry);\n                batch--;\n              }\n            } else if ((entryType === 'file' || this._includeAsFile(entry)) && this._fileFilter(entry)) {\n              if (this._wantsFile) {\n                this.push(entry);\n                batch--;\n              }\n            }\n          }\n        } else {\n          const parent = this.parents.pop();\n          if (!parent) {\n            this.push(null);\n            break;\n          }\n          this.parent = await parent;\n          if (this.destroyed) return;\n        }\n      }\n    } catch (error) {\n      this.destroy(error);\n    } finally {\n      this.reading = false;\n    }\n  }\n\n  async _exploreDir(path, depth) {\n    let files;\n    try {\n      files = await readdir$1(path, this._rdOptions);\n    } catch (error) {\n      this._onError(error);\n    }\n    return { files, depth, path };\n  }\n\n  async _formatEntry(dirent, path) {\n    let entry;\n    try {\n      const basename = this._isDirent ? dirent.name : dirent;\n      const fullPath = sysPath$3.resolve(sysPath$3.join(path, basename));\n      entry = { path: sysPath$3.relative(this._root, fullPath), fullPath, basename };\n      entry[this._statsProp] = this._isDirent ? dirent : await this._stat(fullPath);\n    } catch (err) {\n      this._onError(err);\n    }\n    return entry;\n  }\n\n  _onError(err) {\n    if (isNormalFlowError(err) && !this.destroyed) {\n      this.emit('warn', err);\n    } else {\n      this.destroy(err);\n    }\n  }\n\n  async _getEntryType(entry) {\n    // entry may be undefined, because a warning or an error were emitted\n    // and the statsProp is undefined\n    const stats = entry && entry[this._statsProp];\n    if (!stats) {\n      return;\n    }\n    if (stats.isFile()) {\n      return 'file';\n    }\n    if (stats.isDirectory()) {\n      return 'directory';\n    }\n    if (stats && stats.isSymbolicLink()) {\n      const full = entry.fullPath;\n      try {\n        const entryRealPath = await realpath$1(full);\n        const entryRealPathStats = await lstat$2(entryRealPath);\n        if (entryRealPathStats.isFile()) {\n          return 'file';\n        }\n        if (entryRealPathStats.isDirectory()) {\n          const len = entryRealPath.length;\n          if (full.startsWith(entryRealPath) && full.substr(len, 1) === sysPath$3.sep) {\n            const recursiveError = new Error(\n              `Circular symlink detected: \"${full}\" points to \"${entryRealPath}\"`\n            );\n            recursiveError.code = RECURSIVE_ERROR_CODE;\n            return this._onError(recursiveError);\n          }\n          return 'directory';\n        }\n      } catch (error) {\n        this._onError(error);\n      }\n    }\n  }\n\n  _includeAsFile(entry) {\n    const stats = entry && entry[this._statsProp];\n\n    return stats && this._wantsEverything && !stats.isDirectory();\n  }\n}\n\n/**\n * @typedef {Object} ReaddirpArguments\n * @property {Function=} fileFilter\n * @property {Function=} directoryFilter\n * @property {String=} type\n * @property {Number=} depth\n * @property {String=} root\n * @property {Boolean=} lstat\n * @property {Boolean=} bigint\n */\n\n/**\n * Main function which ends up calling readdirRec and reads all files and directories in given root recursively.\n * @param {String} root Root directory\n * @param {ReaddirpArguments=} options Options to specify root (start directory), filters and recursion depth\n */\nconst readdirp$1 = (root, options = {}) => {\n  let type = options.entryType || options.type;\n  if (type === 'both') type = FILE_DIR_TYPE; // backwards-compatibility\n  if (type) options.type = type;\n  if (!root) {\n    throw new Error('readdirp: root argument is required. Usage: readdirp(root, options)');\n  } else if (typeof root !== 'string') {\n    throw new TypeError('readdirp: root argument must be a string. Usage: readdirp(root, options)');\n  } else if (type && !ALL_TYPES.includes(type)) {\n    throw new Error(`readdirp: Invalid type passed. Use one of ${ALL_TYPES.join(', ')}`);\n  }\n\n  options.root = root;\n  return new ReaddirpStream(options);\n};\n\nconst readdirpPromise = (root, options = {}) => {\n  return new Promise((resolve, reject) => {\n    const files = [];\n    readdirp$1(root, options)\n      .on('data', entry => files.push(entry))\n      .on('end', () => resolve(files))\n      .on('error', error => reject(error));\n  });\n};\n\nreaddirp$1.promise = readdirpPromise;\nreaddirp$1.ReaddirpStream = ReaddirpStream;\nreaddirp$1.default = readdirp$1;\n\nvar readdirp_1 = readdirp$1;\n\nvar anymatch$2 = {exports: {}};\n\n/*!\n * normalize-path <https://github.com/jonschlinkert/normalize-path>\n *\n * Copyright (c) 2014-2018, Jon Schlinkert.\n * Released under the MIT License.\n */\n\nvar normalizePath$2 = function(path, stripTrailing) {\n  if (typeof path !== 'string') {\n    throw new TypeError('expected path to be a string');\n  }\n\n  if (path === '\\\\' || path === '/') return '/';\n\n  var len = path.length;\n  if (len <= 1) return path;\n\n  // ensure that win32 namespaces has two leading slashes, so that the path is\n  // handled properly by the win32 version of path.parse() after being normalized\n  // https://msdn.microsoft.com/library/windows/desktop/aa365247(v=vs.85).aspx#namespaces\n  var prefix = '';\n  if (len > 4 && path[3] === '\\\\') {\n    var ch = path[2];\n    if ((ch === '?' || ch === '.') && path.slice(0, 2) === '\\\\\\\\') {\n      path = path.slice(2);\n      prefix = '//';\n    }\n  }\n\n  var segs = path.split(/[/\\\\]+/);\n  if (stripTrailing !== false && segs[segs.length - 1] === '') {\n    segs.pop();\n  }\n  return prefix + segs.join('/');\n};\n\nObject.defineProperty(anymatch$2.exports, \"__esModule\", { value: true });\n\nconst picomatch = picomatch$4.exports;\nconst normalizePath$1 = normalizePath$2;\n\n/**\n * @typedef {(testString: string) => boolean} AnymatchFn\n * @typedef {string|RegExp|AnymatchFn} AnymatchPattern\n * @typedef {AnymatchPattern|AnymatchPattern[]} AnymatchMatcher\n */\nconst BANG$1 = '!';\nconst DEFAULT_OPTIONS = {returnIndex: false};\nconst arrify$1 = (item) => Array.isArray(item) ? item : [item];\n\n/**\n * @param {AnymatchPattern} matcher\n * @param {object} options\n * @returns {AnymatchFn}\n */\nconst createPattern = (matcher, options) => {\n  if (typeof matcher === 'function') {\n    return matcher;\n  }\n  if (typeof matcher === 'string') {\n    const glob = picomatch(matcher, options);\n    return (string) => matcher === string || glob(string);\n  }\n  if (matcher instanceof RegExp) {\n    return (string) => matcher.test(string);\n  }\n  return (string) => false;\n};\n\n/**\n * @param {Array<Function>} patterns\n * @param {Array<Function>} negPatterns\n * @param {String|Array} args\n * @param {Boolean} returnIndex\n * @returns {boolean|number}\n */\nconst matchPatterns = (patterns, negPatterns, args, returnIndex) => {\n  const isList = Array.isArray(args);\n  const _path = isList ? args[0] : args;\n  if (!isList && typeof _path !== 'string') {\n    throw new TypeError('anymatch: second argument must be a string: got ' +\n      Object.prototype.toString.call(_path))\n  }\n  const path = normalizePath$1(_path);\n\n  for (let index = 0; index < negPatterns.length; index++) {\n    const nglob = negPatterns[index];\n    if (nglob(path)) {\n      return returnIndex ? -1 : false;\n    }\n  }\n\n  const applied = isList && [path].concat(args.slice(1));\n  for (let index = 0; index < patterns.length; index++) {\n    const pattern = patterns[index];\n    if (isList ? pattern(...applied) : pattern(path)) {\n      return returnIndex ? index : true;\n    }\n  }\n\n  return returnIndex ? -1 : false;\n};\n\n/**\n * @param {AnymatchMatcher} matchers\n * @param {Array|string} testString\n * @param {object} options\n * @returns {boolean|number|Function}\n */\nconst anymatch$1 = (matchers, testString, options = DEFAULT_OPTIONS) => {\n  if (matchers == null) {\n    throw new TypeError('anymatch: specify first argument');\n  }\n  const opts = typeof options === 'boolean' ? {returnIndex: options} : options;\n  const returnIndex = opts.returnIndex || false;\n\n  // Early cache for matchers.\n  const mtchers = arrify$1(matchers);\n  const negatedGlobs = mtchers\n    .filter(item => typeof item === 'string' && item.charAt(0) === BANG$1)\n    .map(item => item.slice(1))\n    .map(item => picomatch(item, opts));\n  const patterns = mtchers\n    .filter(item => typeof item !== 'string' || (typeof item === 'string' && item.charAt(0) !== BANG$1))\n    .map(matcher => createPattern(matcher, opts));\n\n  if (testString == null) {\n    return (testString, ri = false) => {\n      const returnIndex = typeof ri === 'boolean' ? ri : false;\n      return matchPatterns(patterns, negatedGlobs, testString, returnIndex);\n    }\n  }\n\n  return matchPatterns(patterns, negatedGlobs, testString, returnIndex);\n};\n\nanymatch$1.default = anymatch$1;\nanymatch$2.exports = anymatch$1;\n\nvar binaryExtensions$1 = {exports: {}};\n\nvar require$$0 = [\n\t\"3dm\",\n\t\"3ds\",\n\t\"3g2\",\n\t\"3gp\",\n\t\"7z\",\n\t\"a\",\n\t\"aac\",\n\t\"adp\",\n\t\"ai\",\n\t\"aif\",\n\t\"aiff\",\n\t\"alz\",\n\t\"ape\",\n\t\"apk\",\n\t\"appimage\",\n\t\"ar\",\n\t\"arj\",\n\t\"asf\",\n\t\"au\",\n\t\"avi\",\n\t\"bak\",\n\t\"baml\",\n\t\"bh\",\n\t\"bin\",\n\t\"bk\",\n\t\"bmp\",\n\t\"btif\",\n\t\"bz2\",\n\t\"bzip2\",\n\t\"cab\",\n\t\"caf\",\n\t\"cgm\",\n\t\"class\",\n\t\"cmx\",\n\t\"cpio\",\n\t\"cr2\",\n\t\"cur\",\n\t\"dat\",\n\t\"dcm\",\n\t\"deb\",\n\t\"dex\",\n\t\"djvu\",\n\t\"dll\",\n\t\"dmg\",\n\t\"dng\",\n\t\"doc\",\n\t\"docm\",\n\t\"docx\",\n\t\"dot\",\n\t\"dotm\",\n\t\"dra\",\n\t\"DS_Store\",\n\t\"dsk\",\n\t\"dts\",\n\t\"dtshd\",\n\t\"dvb\",\n\t\"dwg\",\n\t\"dxf\",\n\t\"ecelp4800\",\n\t\"ecelp7470\",\n\t\"ecelp9600\",\n\t\"egg\",\n\t\"eol\",\n\t\"eot\",\n\t\"epub\",\n\t\"exe\",\n\t\"f4v\",\n\t\"fbs\",\n\t\"fh\",\n\t\"fla\",\n\t\"flac\",\n\t\"flatpak\",\n\t\"fli\",\n\t\"flv\",\n\t\"fpx\",\n\t\"fst\",\n\t\"fvt\",\n\t\"g3\",\n\t\"gh\",\n\t\"gif\",\n\t\"graffle\",\n\t\"gz\",\n\t\"gzip\",\n\t\"h261\",\n\t\"h263\",\n\t\"h264\",\n\t\"icns\",\n\t\"ico\",\n\t\"ief\",\n\t\"img\",\n\t\"ipa\",\n\t\"iso\",\n\t\"jar\",\n\t\"jpeg\",\n\t\"jpg\",\n\t\"jpgv\",\n\t\"jpm\",\n\t\"jxr\",\n\t\"key\",\n\t\"ktx\",\n\t\"lha\",\n\t\"lib\",\n\t\"lvp\",\n\t\"lz\",\n\t\"lzh\",\n\t\"lzma\",\n\t\"lzo\",\n\t\"m3u\",\n\t\"m4a\",\n\t\"m4v\",\n\t\"mar\",\n\t\"mdi\",\n\t\"mht\",\n\t\"mid\",\n\t\"midi\",\n\t\"mj2\",\n\t\"mka\",\n\t\"mkv\",\n\t\"mmr\",\n\t\"mng\",\n\t\"mobi\",\n\t\"mov\",\n\t\"movie\",\n\t\"mp3\",\n\t\"mp4\",\n\t\"mp4a\",\n\t\"mpeg\",\n\t\"mpg\",\n\t\"mpga\",\n\t\"mxu\",\n\t\"nef\",\n\t\"npx\",\n\t\"numbers\",\n\t\"nupkg\",\n\t\"o\",\n\t\"odp\",\n\t\"ods\",\n\t\"odt\",\n\t\"oga\",\n\t\"ogg\",\n\t\"ogv\",\n\t\"otf\",\n\t\"ott\",\n\t\"pages\",\n\t\"pbm\",\n\t\"pcx\",\n\t\"pdb\",\n\t\"pdf\",\n\t\"pea\",\n\t\"pgm\",\n\t\"pic\",\n\t\"png\",\n\t\"pnm\",\n\t\"pot\",\n\t\"potm\",\n\t\"potx\",\n\t\"ppa\",\n\t\"ppam\",\n\t\"ppm\",\n\t\"pps\",\n\t\"ppsm\",\n\t\"ppsx\",\n\t\"ppt\",\n\t\"pptm\",\n\t\"pptx\",\n\t\"psd\",\n\t\"pya\",\n\t\"pyc\",\n\t\"pyo\",\n\t\"pyv\",\n\t\"qt\",\n\t\"rar\",\n\t\"ras\",\n\t\"raw\",\n\t\"resources\",\n\t\"rgb\",\n\t\"rip\",\n\t\"rlc\",\n\t\"rmf\",\n\t\"rmvb\",\n\t\"rpm\",\n\t\"rtf\",\n\t\"rz\",\n\t\"s3m\",\n\t\"s7z\",\n\t\"scpt\",\n\t\"sgi\",\n\t\"shar\",\n\t\"snap\",\n\t\"sil\",\n\t\"sketch\",\n\t\"slk\",\n\t\"smv\",\n\t\"snk\",\n\t\"so\",\n\t\"stl\",\n\t\"suo\",\n\t\"sub\",\n\t\"swf\",\n\t\"tar\",\n\t\"tbz\",\n\t\"tbz2\",\n\t\"tga\",\n\t\"tgz\",\n\t\"thmx\",\n\t\"tif\",\n\t\"tiff\",\n\t\"tlz\",\n\t\"ttc\",\n\t\"ttf\",\n\t\"txz\",\n\t\"udf\",\n\t\"uvh\",\n\t\"uvi\",\n\t\"uvm\",\n\t\"uvp\",\n\t\"uvs\",\n\t\"uvu\",\n\t\"viv\",\n\t\"vob\",\n\t\"war\",\n\t\"wav\",\n\t\"wax\",\n\t\"wbmp\",\n\t\"wdp\",\n\t\"weba\",\n\t\"webm\",\n\t\"webp\",\n\t\"whl\",\n\t\"wim\",\n\t\"wm\",\n\t\"wma\",\n\t\"wmv\",\n\t\"wmx\",\n\t\"woff\",\n\t\"woff2\",\n\t\"wrm\",\n\t\"wvx\",\n\t\"xbm\",\n\t\"xif\",\n\t\"xla\",\n\t\"xlam\",\n\t\"xls\",\n\t\"xlsb\",\n\t\"xlsm\",\n\t\"xlsx\",\n\t\"xlt\",\n\t\"xltm\",\n\t\"xltx\",\n\t\"xm\",\n\t\"xmind\",\n\t\"xpi\",\n\t\"xpm\",\n\t\"xwd\",\n\t\"xz\",\n\t\"z\",\n\t\"zip\",\n\t\"zipx\"\n];\n\n(function (module) {\n\tmodule.exports = require$$0;\n} (binaryExtensions$1));\n\nconst path$9 = require$$0$4;\nconst binaryExtensions = binaryExtensions$1.exports;\n\nconst extensions = new Set(binaryExtensions);\n\nvar isBinaryPath$1 = filePath => extensions.has(path$9.extname(filePath).slice(1).toLowerCase());\n\nvar constants$1 = {};\n\n(function (exports) {\n\n\tconst {sep} = require$$0$4;\n\tconst {platform} = process;\n\tconst os = require$$1;\n\n\texports.EV_ALL = 'all';\n\texports.EV_READY = 'ready';\n\texports.EV_ADD = 'add';\n\texports.EV_CHANGE = 'change';\n\texports.EV_ADD_DIR = 'addDir';\n\texports.EV_UNLINK = 'unlink';\n\texports.EV_UNLINK_DIR = 'unlinkDir';\n\texports.EV_RAW = 'raw';\n\texports.EV_ERROR = 'error';\n\n\texports.STR_DATA = 'data';\n\texports.STR_END = 'end';\n\texports.STR_CLOSE = 'close';\n\n\texports.FSEVENT_CREATED = 'created';\n\texports.FSEVENT_MODIFIED = 'modified';\n\texports.FSEVENT_DELETED = 'deleted';\n\texports.FSEVENT_MOVED = 'moved';\n\texports.FSEVENT_CLONED = 'cloned';\n\texports.FSEVENT_UNKNOWN = 'unknown';\n\texports.FSEVENT_TYPE_FILE = 'file';\n\texports.FSEVENT_TYPE_DIRECTORY = 'directory';\n\texports.FSEVENT_TYPE_SYMLINK = 'symlink';\n\n\texports.KEY_LISTENERS = 'listeners';\n\texports.KEY_ERR = 'errHandlers';\n\texports.KEY_RAW = 'rawEmitters';\n\texports.HANDLER_KEYS = [exports.KEY_LISTENERS, exports.KEY_ERR, exports.KEY_RAW];\n\n\texports.DOT_SLASH = `.${sep}`;\n\n\texports.BACK_SLASH_RE = /\\\\/g;\n\texports.DOUBLE_SLASH_RE = /\\/\\//;\n\texports.SLASH_OR_BACK_SLASH_RE = /[/\\\\]/;\n\texports.DOT_RE = /\\..*\\.(sw[px])$|~$|\\.subl.*\\.tmp/;\n\texports.REPLACER_RE = /^\\.[/\\\\]/;\n\n\texports.SLASH = '/';\n\texports.SLASH_SLASH = '//';\n\texports.BRACE_START = '{';\n\texports.BANG = '!';\n\texports.ONE_DOT = '.';\n\texports.TWO_DOTS = '..';\n\texports.STAR = '*';\n\texports.GLOBSTAR = '**';\n\texports.ROOT_GLOBSTAR = '/**/*';\n\texports.SLASH_GLOBSTAR = '/**';\n\texports.DIR_SUFFIX = 'Dir';\n\texports.ANYMATCH_OPTS = {dot: true};\n\texports.STRING_TYPE = 'string';\n\texports.FUNCTION_TYPE = 'function';\n\texports.EMPTY_STR = '';\n\texports.EMPTY_FN = () => {};\n\texports.IDENTITY_FN = val => val;\n\n\texports.isWindows = platform === 'win32';\n\texports.isMacos = platform === 'darwin';\n\texports.isLinux = platform === 'linux';\n\texports.isIBMi = os.type() === 'OS400';\n} (constants$1));\n\nconst fs$8 = require$$0__default;\nconst sysPath$2 = require$$0$4;\nconst { promisify: promisify$2 } = require$$0$6;\nconst isBinaryPath = isBinaryPath$1;\nconst {\n  isWindows: isWindows$2,\n  isLinux,\n  EMPTY_FN: EMPTY_FN$2,\n  EMPTY_STR: EMPTY_STR$1,\n  KEY_LISTENERS,\n  KEY_ERR,\n  KEY_RAW,\n  HANDLER_KEYS,\n  EV_CHANGE: EV_CHANGE$2,\n  EV_ADD: EV_ADD$2,\n  EV_ADD_DIR: EV_ADD_DIR$2,\n  EV_ERROR: EV_ERROR$2,\n  STR_DATA: STR_DATA$1,\n  STR_END: STR_END$2,\n  BRACE_START: BRACE_START$1,\n  STAR\n} = constants$1;\n\nconst THROTTLE_MODE_WATCH = 'watch';\n\nconst open$1 = promisify$2(fs$8.open);\nconst stat$2 = promisify$2(fs$8.stat);\nconst lstat$1 = promisify$2(fs$8.lstat);\nconst close = promisify$2(fs$8.close);\nconst fsrealpath = promisify$2(fs$8.realpath);\n\nconst statMethods$1 = { lstat: lstat$1, stat: stat$2 };\n\n// TODO: emit errors properly. Example: EMFILE on Macos.\nconst foreach = (val, fn) => {\n  if (val instanceof Set) {\n    val.forEach(fn);\n  } else {\n    fn(val);\n  }\n};\n\nconst addAndConvert = (main, prop, item) => {\n  let container = main[prop];\n  if (!(container instanceof Set)) {\n    main[prop] = container = new Set([container]);\n  }\n  container.add(item);\n};\n\nconst clearItem = cont => key => {\n  const set = cont[key];\n  if (set instanceof Set) {\n    set.clear();\n  } else {\n    delete cont[key];\n  }\n};\n\nconst delFromSet = (main, prop, item) => {\n  const container = main[prop];\n  if (container instanceof Set) {\n    container.delete(item);\n  } else if (container === item) {\n    delete main[prop];\n  }\n};\n\nconst isEmptySet = (val) => val instanceof Set ? val.size === 0 : !val;\n\n/**\n * @typedef {String} Path\n */\n\n// fs_watch helpers\n\n// object to hold per-process fs_watch instances\n// (may be shared across chokidar FSWatcher instances)\n\n/**\n * @typedef {Object} FsWatchContainer\n * @property {Set} listeners\n * @property {Set} errHandlers\n * @property {Set} rawEmitters\n * @property {fs.FSWatcher=} watcher\n * @property {Boolean=} watcherUnusable\n */\n\n/**\n * @type {Map<String,FsWatchContainer>}\n */\nconst FsWatchInstances = new Map();\n\n/**\n * Instantiates the fs_watch interface\n * @param {String} path to be watched\n * @param {Object} options to be passed to fs_watch\n * @param {Function} listener main event handler\n * @param {Function} errHandler emits info about errors\n * @param {Function} emitRaw emits raw event data\n * @returns {fs.FSWatcher} new fsevents instance\n */\nfunction createFsWatchInstance(path, options, listener, errHandler, emitRaw) {\n  const handleEvent = (rawEvent, evPath) => {\n    listener(path);\n    emitRaw(rawEvent, evPath, {watchedPath: path});\n\n    // emit based on events occurring for files from a directory's watcher in\n    // case the file's watcher misses it (and rely on throttling to de-dupe)\n    if (evPath && path !== evPath) {\n      fsWatchBroadcast(\n        sysPath$2.resolve(path, evPath), KEY_LISTENERS, sysPath$2.join(path, evPath)\n      );\n    }\n  };\n  try {\n    return fs$8.watch(path, options, handleEvent);\n  } catch (error) {\n    errHandler(error);\n  }\n}\n\n/**\n * Helper for passing fs_watch event data to a collection of listeners\n * @param {Path} fullPath absolute path bound to fs_watch instance\n * @param {String} type listener type\n * @param {*=} val1 arguments to be passed to listeners\n * @param {*=} val2\n * @param {*=} val3\n */\nconst fsWatchBroadcast = (fullPath, type, val1, val2, val3) => {\n  const cont = FsWatchInstances.get(fullPath);\n  if (!cont) return;\n  foreach(cont[type], (listener) => {\n    listener(val1, val2, val3);\n  });\n};\n\n/**\n * Instantiates the fs_watch interface or binds listeners\n * to an existing one covering the same file system entry\n * @param {String} path\n * @param {String} fullPath absolute path\n * @param {Object} options to be passed to fs_watch\n * @param {Object} handlers container for event listener functions\n */\nconst setFsWatchListener = (path, fullPath, options, handlers) => {\n  const {listener, errHandler, rawEmitter} = handlers;\n  let cont = FsWatchInstances.get(fullPath);\n\n  /** @type {fs.FSWatcher=} */\n  let watcher;\n  if (!options.persistent) {\n    watcher = createFsWatchInstance(\n      path, options, listener, errHandler, rawEmitter\n    );\n    return watcher.close.bind(watcher);\n  }\n  if (cont) {\n    addAndConvert(cont, KEY_LISTENERS, listener);\n    addAndConvert(cont, KEY_ERR, errHandler);\n    addAndConvert(cont, KEY_RAW, rawEmitter);\n  } else {\n    watcher = createFsWatchInstance(\n      path,\n      options,\n      fsWatchBroadcast.bind(null, fullPath, KEY_LISTENERS),\n      errHandler, // no need to use broadcast here\n      fsWatchBroadcast.bind(null, fullPath, KEY_RAW)\n    );\n    if (!watcher) return;\n    watcher.on(EV_ERROR$2, async (error) => {\n      const broadcastErr = fsWatchBroadcast.bind(null, fullPath, KEY_ERR);\n      cont.watcherUnusable = true; // documented since Node 10.4.1\n      // Workaround for https://github.com/joyent/node/issues/4337\n      if (isWindows$2 && error.code === 'EPERM') {\n        try {\n          const fd = await open$1(path, 'r');\n          await close(fd);\n          broadcastErr(error);\n        } catch (err) {}\n      } else {\n        broadcastErr(error);\n      }\n    });\n    cont = {\n      listeners: listener,\n      errHandlers: errHandler,\n      rawEmitters: rawEmitter,\n      watcher\n    };\n    FsWatchInstances.set(fullPath, cont);\n  }\n  // const index = cont.listeners.indexOf(listener);\n\n  // removes this instance's listeners and closes the underlying fs_watch\n  // instance if there are no more listeners left\n  return () => {\n    delFromSet(cont, KEY_LISTENERS, listener);\n    delFromSet(cont, KEY_ERR, errHandler);\n    delFromSet(cont, KEY_RAW, rawEmitter);\n    if (isEmptySet(cont.listeners)) {\n      // Check to protect against issue gh-730.\n      // if (cont.watcherUnusable) {\n      cont.watcher.close();\n      // }\n      FsWatchInstances.delete(fullPath);\n      HANDLER_KEYS.forEach(clearItem(cont));\n      cont.watcher = undefined;\n      Object.freeze(cont);\n    }\n  };\n};\n\n// fs_watchFile helpers\n\n// object to hold per-process fs_watchFile instances\n// (may be shared across chokidar FSWatcher instances)\nconst FsWatchFileInstances = new Map();\n\n/**\n * Instantiates the fs_watchFile interface or binds listeners\n * to an existing one covering the same file system entry\n * @param {String} path to be watched\n * @param {String} fullPath absolute path\n * @param {Object} options options to be passed to fs_watchFile\n * @param {Object} handlers container for event listener functions\n * @returns {Function} closer\n */\nconst setFsWatchFileListener = (path, fullPath, options, handlers) => {\n  const {listener, rawEmitter} = handlers;\n  let cont = FsWatchFileInstances.get(fullPath);\n\n  const copts = cont && cont.options;\n  if (copts && (copts.persistent < options.persistent || copts.interval > options.interval)) {\n    fs$8.unwatchFile(fullPath);\n    cont = undefined;\n  }\n\n  /* eslint-enable no-unused-vars, prefer-destructuring */\n\n  if (cont) {\n    addAndConvert(cont, KEY_LISTENERS, listener);\n    addAndConvert(cont, KEY_RAW, rawEmitter);\n  } else {\n    // TODO\n    // listeners.add(listener);\n    // rawEmitters.add(rawEmitter);\n    cont = {\n      listeners: listener,\n      rawEmitters: rawEmitter,\n      options,\n      watcher: fs$8.watchFile(fullPath, options, (curr, prev) => {\n        foreach(cont.rawEmitters, (rawEmitter) => {\n          rawEmitter(EV_CHANGE$2, fullPath, {curr, prev});\n        });\n        const currmtime = curr.mtimeMs;\n        if (curr.size !== prev.size || currmtime > prev.mtimeMs || currmtime === 0) {\n          foreach(cont.listeners, (listener) => listener(path, curr));\n        }\n      })\n    };\n    FsWatchFileInstances.set(fullPath, cont);\n  }\n  // const index = cont.listeners.indexOf(listener);\n\n  // Removes this instance's listeners and closes the underlying fs_watchFile\n  // instance if there are no more listeners left.\n  return () => {\n    delFromSet(cont, KEY_LISTENERS, listener);\n    delFromSet(cont, KEY_RAW, rawEmitter);\n    if (isEmptySet(cont.listeners)) {\n      FsWatchFileInstances.delete(fullPath);\n      fs$8.unwatchFile(fullPath);\n      cont.options = cont.watcher = undefined;\n      Object.freeze(cont);\n    }\n  };\n};\n\n/**\n * @mixin\n */\nclass NodeFsHandler$1 {\n\n/**\n * @param {import(\"../index\").FSWatcher} fsW\n */\nconstructor(fsW) {\n  this.fsw = fsW;\n  this._boundHandleError = (error) => fsW._handleError(error);\n}\n\n/**\n * Watch file for changes with fs_watchFile or fs_watch.\n * @param {String} path to file or dir\n * @param {Function} listener on fs change\n * @returns {Function} closer for the watcher instance\n */\n_watchWithNodeFs(path, listener) {\n  const opts = this.fsw.options;\n  const directory = sysPath$2.dirname(path);\n  const basename = sysPath$2.basename(path);\n  const parent = this.fsw._getWatchedDir(directory);\n  parent.add(basename);\n  const absolutePath = sysPath$2.resolve(path);\n  const options = {persistent: opts.persistent};\n  if (!listener) listener = EMPTY_FN$2;\n\n  let closer;\n  if (opts.usePolling) {\n    options.interval = opts.enableBinaryInterval && isBinaryPath(basename) ?\n      opts.binaryInterval : opts.interval;\n    closer = setFsWatchFileListener(path, absolutePath, options, {\n      listener,\n      rawEmitter: this.fsw._emitRaw\n    });\n  } else {\n    closer = setFsWatchListener(path, absolutePath, options, {\n      listener,\n      errHandler: this._boundHandleError,\n      rawEmitter: this.fsw._emitRaw\n    });\n  }\n  return closer;\n}\n\n/**\n * Watch a file and emit add event if warranted.\n * @param {Path} file Path\n * @param {fs.Stats} stats result of fs_stat\n * @param {Boolean} initialAdd was the file added at watch instantiation?\n * @returns {Function} closer for the watcher instance\n */\n_handleFile(file, stats, initialAdd) {\n  if (this.fsw.closed) {\n    return;\n  }\n  const dirname = sysPath$2.dirname(file);\n  const basename = sysPath$2.basename(file);\n  const parent = this.fsw._getWatchedDir(dirname);\n  // stats is always present\n  let prevStats = stats;\n\n  // if the file is already being watched, do nothing\n  if (parent.has(basename)) return;\n\n  const listener = async (path, newStats) => {\n    if (!this.fsw._throttle(THROTTLE_MODE_WATCH, file, 5)) return;\n    if (!newStats || newStats.mtimeMs === 0) {\n      try {\n        const newStats = await stat$2(file);\n        if (this.fsw.closed) return;\n        // Check that change event was not fired because of changed only accessTime.\n        const at = newStats.atimeMs;\n        const mt = newStats.mtimeMs;\n        if (!at || at <= mt || mt !== prevStats.mtimeMs) {\n          this.fsw._emit(EV_CHANGE$2, file, newStats);\n        }\n        if (isLinux && prevStats.ino !== newStats.ino) {\n          this.fsw._closeFile(path);\n          prevStats = newStats;\n          this.fsw._addPathCloser(path, this._watchWithNodeFs(file, listener));\n        } else {\n          prevStats = newStats;\n        }\n      } catch (error) {\n        // Fix issues where mtime is null but file is still present\n        this.fsw._remove(dirname, basename);\n      }\n      // add is about to be emitted if file not already tracked in parent\n    } else if (parent.has(basename)) {\n      // Check that change event was not fired because of changed only accessTime.\n      const at = newStats.atimeMs;\n      const mt = newStats.mtimeMs;\n      if (!at || at <= mt || mt !== prevStats.mtimeMs) {\n        this.fsw._emit(EV_CHANGE$2, file, newStats);\n      }\n      prevStats = newStats;\n    }\n  };\n  // kick off the watcher\n  const closer = this._watchWithNodeFs(file, listener);\n\n  // emit an add event if we're supposed to\n  if (!(initialAdd && this.fsw.options.ignoreInitial) && this.fsw._isntIgnored(file)) {\n    if (!this.fsw._throttle(EV_ADD$2, file, 0)) return;\n    this.fsw._emit(EV_ADD$2, file, stats);\n  }\n\n  return closer;\n}\n\n/**\n * Handle symlinks encountered while reading a dir.\n * @param {Object} entry returned by readdirp\n * @param {String} directory path of dir being read\n * @param {String} path of this item\n * @param {String} item basename of this item\n * @returns {Promise<Boolean>} true if no more processing is needed for this entry.\n */\nasync _handleSymlink(entry, directory, path, item) {\n  if (this.fsw.closed) {\n    return;\n  }\n  const full = entry.fullPath;\n  const dir = this.fsw._getWatchedDir(directory);\n\n  if (!this.fsw.options.followSymlinks) {\n    // watch symlink directly (don't follow) and detect changes\n    this.fsw._incrReadyCount();\n\n    let linkPath;\n    try {\n      linkPath = await fsrealpath(path);\n    } catch (e) {\n      this.fsw._emitReady();\n      return true;\n    }\n\n    if (this.fsw.closed) return;\n    if (dir.has(item)) {\n      if (this.fsw._symlinkPaths.get(full) !== linkPath) {\n        this.fsw._symlinkPaths.set(full, linkPath);\n        this.fsw._emit(EV_CHANGE$2, path, entry.stats);\n      }\n    } else {\n      dir.add(item);\n      this.fsw._symlinkPaths.set(full, linkPath);\n      this.fsw._emit(EV_ADD$2, path, entry.stats);\n    }\n    this.fsw._emitReady();\n    return true;\n  }\n\n  // don't follow the same symlink more than once\n  if (this.fsw._symlinkPaths.has(full)) {\n    return true;\n  }\n\n  this.fsw._symlinkPaths.set(full, true);\n}\n\n_handleRead(directory, initialAdd, wh, target, dir, depth, throttler) {\n  // Normalize the directory name on Windows\n  directory = sysPath$2.join(directory, EMPTY_STR$1);\n\n  if (!wh.hasGlob) {\n    throttler = this.fsw._throttle('readdir', directory, 1000);\n    if (!throttler) return;\n  }\n\n  const previous = this.fsw._getWatchedDir(wh.path);\n  const current = new Set();\n\n  let stream = this.fsw._readdirp(directory, {\n    fileFilter: entry => wh.filterPath(entry),\n    directoryFilter: entry => wh.filterDir(entry),\n    depth: 0\n  }).on(STR_DATA$1, async (entry) => {\n    if (this.fsw.closed) {\n      stream = undefined;\n      return;\n    }\n    const item = entry.path;\n    let path = sysPath$2.join(directory, item);\n    current.add(item);\n\n    if (entry.stats.isSymbolicLink() && await this._handleSymlink(entry, directory, path, item)) {\n      return;\n    }\n\n    if (this.fsw.closed) {\n      stream = undefined;\n      return;\n    }\n    // Files that present in current directory snapshot\n    // but absent in previous are added to watch list and\n    // emit `add` event.\n    if (item === target || !target && !previous.has(item)) {\n      this.fsw._incrReadyCount();\n\n      // ensure relativeness of path is preserved in case of watcher reuse\n      path = sysPath$2.join(dir, sysPath$2.relative(dir, path));\n\n      this._addToNodeFs(path, initialAdd, wh, depth + 1);\n    }\n  }).on(EV_ERROR$2, this._boundHandleError);\n\n  return new Promise(resolve =>\n    stream.once(STR_END$2, () => {\n      if (this.fsw.closed) {\n        stream = undefined;\n        return;\n      }\n      const wasThrottled = throttler ? throttler.clear() : false;\n\n      resolve();\n\n      // Files that absent in current directory snapshot\n      // but present in previous emit `remove` event\n      // and are removed from @watched[directory].\n      previous.getChildren().filter((item) => {\n        return item !== directory &&\n          !current.has(item) &&\n          // in case of intersecting globs;\n          // a path may have been filtered out of this readdir, but\n          // shouldn't be removed because it matches a different glob\n          (!wh.hasGlob || wh.filterPath({\n            fullPath: sysPath$2.resolve(directory, item)\n          }));\n      }).forEach((item) => {\n        this.fsw._remove(directory, item);\n      });\n\n      stream = undefined;\n\n      // one more time for any missed in case changes came in extremely quickly\n      if (wasThrottled) this._handleRead(directory, false, wh, target, dir, depth, throttler);\n    })\n  );\n}\n\n/**\n * Read directory to add / remove files from `@watched` list and re-read it on change.\n * @param {String} dir fs path\n * @param {fs.Stats} stats\n * @param {Boolean} initialAdd\n * @param {Number} depth relative to user-supplied path\n * @param {String} target child path targeted for watch\n * @param {Object} wh Common watch helpers for this path\n * @param {String} realpath\n * @returns {Promise<Function>} closer for the watcher instance.\n */\nasync _handleDir(dir, stats, initialAdd, depth, target, wh, realpath) {\n  const parentDir = this.fsw._getWatchedDir(sysPath$2.dirname(dir));\n  const tracked = parentDir.has(sysPath$2.basename(dir));\n  if (!(initialAdd && this.fsw.options.ignoreInitial) && !target && !tracked) {\n    if (!wh.hasGlob || wh.globFilter(dir)) this.fsw._emit(EV_ADD_DIR$2, dir, stats);\n  }\n\n  // ensure dir is tracked (harmless if redundant)\n  parentDir.add(sysPath$2.basename(dir));\n  this.fsw._getWatchedDir(dir);\n  let throttler;\n  let closer;\n\n  const oDepth = this.fsw.options.depth;\n  if ((oDepth == null || depth <= oDepth) && !this.fsw._symlinkPaths.has(realpath)) {\n    if (!target) {\n      await this._handleRead(dir, initialAdd, wh, target, dir, depth, throttler);\n      if (this.fsw.closed) return;\n    }\n\n    closer = this._watchWithNodeFs(dir, (dirPath, stats) => {\n      // if current directory is removed, do nothing\n      if (stats && stats.mtimeMs === 0) return;\n\n      this._handleRead(dirPath, false, wh, target, dir, depth, throttler);\n    });\n  }\n  return closer;\n}\n\n/**\n * Handle added file, directory, or glob pattern.\n * Delegates call to _handleFile / _handleDir after checks.\n * @param {String} path to file or ir\n * @param {Boolean} initialAdd was the file added at watch instantiation?\n * @param {Object} priorWh depth relative to user-supplied path\n * @param {Number} depth Child path actually targeted for watch\n * @param {String=} target Child path actually targeted for watch\n * @returns {Promise}\n */\nasync _addToNodeFs(path, initialAdd, priorWh, depth, target) {\n  const ready = this.fsw._emitReady;\n  if (this.fsw._isIgnored(path) || this.fsw.closed) {\n    ready();\n    return false;\n  }\n\n  const wh = this.fsw._getWatchHelpers(path, depth);\n  if (!wh.hasGlob && priorWh) {\n    wh.hasGlob = priorWh.hasGlob;\n    wh.globFilter = priorWh.globFilter;\n    wh.filterPath = entry => priorWh.filterPath(entry);\n    wh.filterDir = entry => priorWh.filterDir(entry);\n  }\n\n  // evaluate what is at the path we're being asked to watch\n  try {\n    const stats = await statMethods$1[wh.statMethod](wh.watchPath);\n    if (this.fsw.closed) return;\n    if (this.fsw._isIgnored(wh.watchPath, stats)) {\n      ready();\n      return false;\n    }\n\n    const follow = this.fsw.options.followSymlinks && !path.includes(STAR) && !path.includes(BRACE_START$1);\n    let closer;\n    if (stats.isDirectory()) {\n      const absPath = sysPath$2.resolve(path);\n      const targetPath = follow ? await fsrealpath(path) : path;\n      if (this.fsw.closed) return;\n      closer = await this._handleDir(wh.watchPath, stats, initialAdd, depth, target, wh, targetPath);\n      if (this.fsw.closed) return;\n      // preserve this symlink's target path\n      if (absPath !== targetPath && targetPath !== undefined) {\n        this.fsw._symlinkPaths.set(absPath, targetPath);\n      }\n    } else if (stats.isSymbolicLink()) {\n      const targetPath = follow ? await fsrealpath(path) : path;\n      if (this.fsw.closed) return;\n      const parent = sysPath$2.dirname(wh.watchPath);\n      this.fsw._getWatchedDir(parent).add(wh.watchPath);\n      this.fsw._emit(EV_ADD$2, wh.watchPath, stats);\n      closer = await this._handleDir(parent, stats, initialAdd, depth, path, wh, targetPath);\n      if (this.fsw.closed) return;\n\n      // preserve this symlink's target path\n      if (targetPath !== undefined) {\n        this.fsw._symlinkPaths.set(sysPath$2.resolve(path), targetPath);\n      }\n    } else {\n      closer = this._handleFile(wh.watchPath, stats, initialAdd);\n    }\n    ready();\n\n    this.fsw._addPathCloser(path, closer);\n    return false;\n\n  } catch (error) {\n    if (this.fsw._handleError(error)) {\n      ready();\n      return path;\n    }\n  }\n}\n\n}\n\nvar nodefsHandler = NodeFsHandler$1;\n\nvar fseventsHandler = {exports: {}};\n\nconst fs$7 = require$$0__default;\nconst sysPath$1 = require$$0$4;\nconst { promisify: promisify$1 } = require$$0$6;\n\nlet fsevents;\ntry {\n  fsevents = __require('fsevents');\n} catch (error) {\n  if (process.env.CHOKIDAR_PRINT_FSEVENTS_REQUIRE_ERROR) console.error(error);\n}\n\nif (fsevents) {\n  // TODO: real check\n  const mtch = process.version.match(/v(\\d+)\\.(\\d+)/);\n  if (mtch && mtch[1] && mtch[2]) {\n    const maj = Number.parseInt(mtch[1], 10);\n    const min = Number.parseInt(mtch[2], 10);\n    if (maj === 8 && min < 16) {\n      fsevents = undefined;\n    }\n  }\n}\n\nconst {\n  EV_ADD: EV_ADD$1,\n  EV_CHANGE: EV_CHANGE$1,\n  EV_ADD_DIR: EV_ADD_DIR$1,\n  EV_UNLINK: EV_UNLINK$1,\n  EV_ERROR: EV_ERROR$1,\n  STR_DATA,\n  STR_END: STR_END$1,\n  FSEVENT_CREATED,\n  FSEVENT_MODIFIED,\n  FSEVENT_DELETED,\n  FSEVENT_MOVED,\n  // FSEVENT_CLONED,\n  FSEVENT_UNKNOWN,\n  FSEVENT_TYPE_FILE,\n  FSEVENT_TYPE_DIRECTORY,\n  FSEVENT_TYPE_SYMLINK,\n\n  ROOT_GLOBSTAR,\n  DIR_SUFFIX,\n  DOT_SLASH,\n  FUNCTION_TYPE: FUNCTION_TYPE$1,\n  EMPTY_FN: EMPTY_FN$1,\n  IDENTITY_FN\n} = constants$1;\n\nconst Depth = (value) => isNaN(value) ? {} : {depth: value};\n\nconst stat$1 = promisify$1(fs$7.stat);\nconst lstat = promisify$1(fs$7.lstat);\nconst realpath = promisify$1(fs$7.realpath);\n\nconst statMethods = { stat: stat$1, lstat };\n\n/**\n * @typedef {String} Path\n */\n\n/**\n * @typedef {Object} FsEventsWatchContainer\n * @property {Set<Function>} listeners\n * @property {Function} rawEmitter\n * @property {{stop: Function}} watcher\n */\n\n// fsevents instance helper functions\n/**\n * Object to hold per-process fsevents instances (may be shared across chokidar FSWatcher instances)\n * @type {Map<Path,FsEventsWatchContainer>}\n */\nconst FSEventsWatchers = new Map();\n\n// Threshold of duplicate path prefixes at which to start\n// consolidating going forward\nconst consolidateThreshhold = 10;\n\nconst wrongEventFlags = new Set([\n  69888, 70400, 71424, 72704, 73472, 131328, 131840, 262912\n]);\n\n/**\n * Instantiates the fsevents interface\n * @param {Path} path path to be watched\n * @param {Function} callback called when fsevents is bound and ready\n * @returns {{stop: Function}} new fsevents instance\n */\nconst createFSEventsInstance = (path, callback) => {\n  const stop = fsevents.watch(path, callback);\n  return {stop};\n};\n\n/**\n * Instantiates the fsevents interface or binds listeners to an existing one covering\n * the same file tree.\n * @param {Path} path           - to be watched\n * @param {Path} realPath       - real path for symlinks\n * @param {Function} listener   - called when fsevents emits events\n * @param {Function} rawEmitter - passes data to listeners of the 'raw' event\n * @returns {Function} closer\n */\nfunction setFSEventsListener(path, realPath, listener, rawEmitter) {\n  let watchPath = sysPath$1.extname(realPath) ? sysPath$1.dirname(realPath) : realPath;\n\n  const parentPath = sysPath$1.dirname(watchPath);\n  let cont = FSEventsWatchers.get(watchPath);\n\n  // If we've accumulated a substantial number of paths that\n  // could have been consolidated by watching one directory\n  // above the current one, create a watcher on the parent\n  // path instead, so that we do consolidate going forward.\n  if (couldConsolidate(parentPath)) {\n    watchPath = parentPath;\n  }\n\n  const resolvedPath = sysPath$1.resolve(path);\n  const hasSymlink = resolvedPath !== realPath;\n\n  const filteredListener = (fullPath, flags, info) => {\n    if (hasSymlink) fullPath = fullPath.replace(realPath, resolvedPath);\n    if (\n      fullPath === resolvedPath ||\n      !fullPath.indexOf(resolvedPath + sysPath$1.sep)\n    ) listener(fullPath, flags, info);\n  };\n\n  // check if there is already a watcher on a parent path\n  // modifies `watchPath` to the parent path when it finds a match\n  let watchedParent = false;\n  for (const watchedPath of FSEventsWatchers.keys()) {\n    if (realPath.indexOf(sysPath$1.resolve(watchedPath) + sysPath$1.sep) === 0) {\n      watchPath = watchedPath;\n      cont = FSEventsWatchers.get(watchPath);\n      watchedParent = true;\n      break;\n    }\n  }\n\n  if (cont || watchedParent) {\n    cont.listeners.add(filteredListener);\n  } else {\n    cont = {\n      listeners: new Set([filteredListener]),\n      rawEmitter,\n      watcher: createFSEventsInstance(watchPath, (fullPath, flags) => {\n        if (!cont.listeners.size) return;\n        const info = fsevents.getInfo(fullPath, flags);\n        cont.listeners.forEach(list => {\n          list(fullPath, flags, info);\n        });\n\n        cont.rawEmitter(info.event, fullPath, info);\n      })\n    };\n    FSEventsWatchers.set(watchPath, cont);\n  }\n\n  // removes this instance's listeners and closes the underlying fsevents\n  // instance if there are no more listeners left\n  return () => {\n    const lst = cont.listeners;\n\n    lst.delete(filteredListener);\n    if (!lst.size) {\n      FSEventsWatchers.delete(watchPath);\n      if (cont.watcher) return cont.watcher.stop().then(() => {\n        cont.rawEmitter = cont.watcher = undefined;\n        Object.freeze(cont);\n      });\n    }\n  };\n}\n\n// Decide whether or not we should start a new higher-level\n// parent watcher\nconst couldConsolidate = (path) => {\n  let count = 0;\n  for (const watchPath of FSEventsWatchers.keys()) {\n    if (watchPath.indexOf(path) === 0) {\n      count++;\n      if (count >= consolidateThreshhold) {\n        return true;\n      }\n    }\n  }\n\n  return false;\n};\n\n// returns boolean indicating whether fsevents can be used\nconst canUse = () => fsevents && FSEventsWatchers.size < 128;\n\n// determines subdirectory traversal levels from root to path\nconst calcDepth = (path, root) => {\n  let i = 0;\n  while (!path.indexOf(root) && (path = sysPath$1.dirname(path)) !== root) i++;\n  return i;\n};\n\n// returns boolean indicating whether the fsevents' event info has the same type\n// as the one returned by fs.stat\nconst sameTypes = (info, stats) => (\n  info.type === FSEVENT_TYPE_DIRECTORY && stats.isDirectory() ||\n  info.type === FSEVENT_TYPE_SYMLINK && stats.isSymbolicLink() ||\n  info.type === FSEVENT_TYPE_FILE && stats.isFile()\n);\n\n/**\n * @mixin\n */\nclass FsEventsHandler$1 {\n\n/**\n * @param {import('../index').FSWatcher} fsw\n */\nconstructor(fsw) {\n  this.fsw = fsw;\n}\ncheckIgnored(path, stats) {\n  const ipaths = this.fsw._ignoredPaths;\n  if (this.fsw._isIgnored(path, stats)) {\n    ipaths.add(path);\n    if (stats && stats.isDirectory()) {\n      ipaths.add(path + ROOT_GLOBSTAR);\n    }\n    return true;\n  }\n\n  ipaths.delete(path);\n  ipaths.delete(path + ROOT_GLOBSTAR);\n}\n\naddOrChange(path, fullPath, realPath, parent, watchedDir, item, info, opts) {\n  const event = watchedDir.has(item) ? EV_CHANGE$1 : EV_ADD$1;\n  this.handleEvent(event, path, fullPath, realPath, parent, watchedDir, item, info, opts);\n}\n\nasync checkExists(path, fullPath, realPath, parent, watchedDir, item, info, opts) {\n  try {\n    const stats = await stat$1(path);\n    if (this.fsw.closed) return;\n    if (sameTypes(info, stats)) {\n      this.addOrChange(path, fullPath, realPath, parent, watchedDir, item, info, opts);\n    } else {\n      this.handleEvent(EV_UNLINK$1, path, fullPath, realPath, parent, watchedDir, item, info, opts);\n    }\n  } catch (error) {\n    if (error.code === 'EACCES') {\n      this.addOrChange(path, fullPath, realPath, parent, watchedDir, item, info, opts);\n    } else {\n      this.handleEvent(EV_UNLINK$1, path, fullPath, realPath, parent, watchedDir, item, info, opts);\n    }\n  }\n}\n\nhandleEvent(event, path, fullPath, realPath, parent, watchedDir, item, info, opts) {\n  if (this.fsw.closed || this.checkIgnored(path)) return;\n\n  if (event === EV_UNLINK$1) {\n    const isDirectory = info.type === FSEVENT_TYPE_DIRECTORY;\n    // suppress unlink events on never before seen files\n    if (isDirectory || watchedDir.has(item)) {\n      this.fsw._remove(parent, item, isDirectory);\n    }\n  } else {\n    if (event === EV_ADD$1) {\n      // track new directories\n      if (info.type === FSEVENT_TYPE_DIRECTORY) this.fsw._getWatchedDir(path);\n\n      if (info.type === FSEVENT_TYPE_SYMLINK && opts.followSymlinks) {\n        // push symlinks back to the top of the stack to get handled\n        const curDepth = opts.depth === undefined ?\n          undefined : calcDepth(fullPath, realPath) + 1;\n        return this._addToFsEvents(path, false, true, curDepth);\n      }\n\n      // track new paths\n      // (other than symlinks being followed, which will be tracked soon)\n      this.fsw._getWatchedDir(parent).add(item);\n    }\n    /**\n     * @type {'add'|'addDir'|'unlink'|'unlinkDir'}\n     */\n    const eventName = info.type === FSEVENT_TYPE_DIRECTORY ? event + DIR_SUFFIX : event;\n    this.fsw._emit(eventName, path);\n    if (eventName === EV_ADD_DIR$1) this._addToFsEvents(path, false, true);\n  }\n}\n\n/**\n * Handle symlinks encountered during directory scan\n * @param {String} watchPath  - file/dir path to be watched with fsevents\n * @param {String} realPath   - real path (in case of symlinks)\n * @param {Function} transform  - path transformer\n * @param {Function} globFilter - path filter in case a glob pattern was provided\n * @returns {Function} closer for the watcher instance\n*/\n_watchWithFsEvents(watchPath, realPath, transform, globFilter) {\n  if (this.fsw.closed || this.fsw._isIgnored(watchPath)) return;\n  const opts = this.fsw.options;\n  const watchCallback = async (fullPath, flags, info) => {\n    if (this.fsw.closed) return;\n    if (\n      opts.depth !== undefined &&\n      calcDepth(fullPath, realPath) > opts.depth\n    ) return;\n    const path = transform(sysPath$1.join(\n      watchPath, sysPath$1.relative(watchPath, fullPath)\n    ));\n    if (globFilter && !globFilter(path)) return;\n    // ensure directories are tracked\n    const parent = sysPath$1.dirname(path);\n    const item = sysPath$1.basename(path);\n    const watchedDir = this.fsw._getWatchedDir(\n      info.type === FSEVENT_TYPE_DIRECTORY ? path : parent\n    );\n\n    // correct for wrong events emitted\n    if (wrongEventFlags.has(flags) || info.event === FSEVENT_UNKNOWN) {\n      if (typeof opts.ignored === FUNCTION_TYPE$1) {\n        let stats;\n        try {\n          stats = await stat$1(path);\n        } catch (error) {}\n        if (this.fsw.closed) return;\n        if (this.checkIgnored(path, stats)) return;\n        if (sameTypes(info, stats)) {\n          this.addOrChange(path, fullPath, realPath, parent, watchedDir, item, info, opts);\n        } else {\n          this.handleEvent(EV_UNLINK$1, path, fullPath, realPath, parent, watchedDir, item, info, opts);\n        }\n      } else {\n        this.checkExists(path, fullPath, realPath, parent, watchedDir, item, info, opts);\n      }\n    } else {\n      switch (info.event) {\n      case FSEVENT_CREATED:\n      case FSEVENT_MODIFIED:\n        return this.addOrChange(path, fullPath, realPath, parent, watchedDir, item, info, opts);\n      case FSEVENT_DELETED:\n      case FSEVENT_MOVED:\n        return this.checkExists(path, fullPath, realPath, parent, watchedDir, item, info, opts);\n      }\n    }\n  };\n\n  const closer = setFSEventsListener(\n    watchPath,\n    realPath,\n    watchCallback,\n    this.fsw._emitRaw\n  );\n\n  this.fsw._emitReady();\n  return closer;\n}\n\n/**\n * Handle symlinks encountered during directory scan\n * @param {String} linkPath path to symlink\n * @param {String} fullPath absolute path to the symlink\n * @param {Function} transform pre-existing path transformer\n * @param {Number} curDepth level of subdirectories traversed to where symlink is\n * @returns {Promise<void>}\n */\nasync _handleFsEventsSymlink(linkPath, fullPath, transform, curDepth) {\n  // don't follow the same symlink more than once\n  if (this.fsw.closed || this.fsw._symlinkPaths.has(fullPath)) return;\n\n  this.fsw._symlinkPaths.set(fullPath, true);\n  this.fsw._incrReadyCount();\n\n  try {\n    const linkTarget = await realpath(linkPath);\n    if (this.fsw.closed) return;\n    if (this.fsw._isIgnored(linkTarget)) {\n      return this.fsw._emitReady();\n    }\n\n    this.fsw._incrReadyCount();\n\n    // add the linkTarget for watching with a wrapper for transform\n    // that causes emitted paths to incorporate the link's path\n    this._addToFsEvents(linkTarget || linkPath, (path) => {\n      let aliasedPath = linkPath;\n      if (linkTarget && linkTarget !== DOT_SLASH) {\n        aliasedPath = path.replace(linkTarget, linkPath);\n      } else if (path !== DOT_SLASH) {\n        aliasedPath = sysPath$1.join(linkPath, path);\n      }\n      return transform(aliasedPath);\n    }, false, curDepth);\n  } catch(error) {\n    if (this.fsw._handleError(error)) {\n      return this.fsw._emitReady();\n    }\n  }\n}\n\n/**\n *\n * @param {Path} newPath\n * @param {fs.Stats} stats\n */\nemitAdd(newPath, stats, processPath, opts, forceAdd) {\n  const pp = processPath(newPath);\n  const isDir = stats.isDirectory();\n  const dirObj = this.fsw._getWatchedDir(sysPath$1.dirname(pp));\n  const base = sysPath$1.basename(pp);\n\n  // ensure empty dirs get tracked\n  if (isDir) this.fsw._getWatchedDir(pp);\n  if (dirObj.has(base)) return;\n  dirObj.add(base);\n\n  if (!opts.ignoreInitial || forceAdd === true) {\n    this.fsw._emit(isDir ? EV_ADD_DIR$1 : EV_ADD$1, pp, stats);\n  }\n}\n\ninitWatch(realPath, path, wh, processPath) {\n  if (this.fsw.closed) return;\n  const closer = this._watchWithFsEvents(\n    wh.watchPath,\n    sysPath$1.resolve(realPath || wh.watchPath),\n    processPath,\n    wh.globFilter\n  );\n  this.fsw._addPathCloser(path, closer);\n}\n\n/**\n * Handle added path with fsevents\n * @param {String} path file/dir path or glob pattern\n * @param {Function|Boolean=} transform converts working path to what the user expects\n * @param {Boolean=} forceAdd ensure add is emitted\n * @param {Number=} priorDepth Level of subdirectories already traversed.\n * @returns {Promise<void>}\n */\nasync _addToFsEvents(path, transform, forceAdd, priorDepth) {\n  if (this.fsw.closed) {\n    return;\n  }\n  const opts = this.fsw.options;\n  const processPath = typeof transform === FUNCTION_TYPE$1 ? transform : IDENTITY_FN;\n\n  const wh = this.fsw._getWatchHelpers(path);\n\n  // evaluate what is at the path we're being asked to watch\n  try {\n    const stats = await statMethods[wh.statMethod](wh.watchPath);\n    if (this.fsw.closed) return;\n    if (this.fsw._isIgnored(wh.watchPath, stats)) {\n      throw null;\n    }\n    if (stats.isDirectory()) {\n      // emit addDir unless this is a glob parent\n      if (!wh.globFilter) this.emitAdd(processPath(path), stats, processPath, opts, forceAdd);\n\n      // don't recurse further if it would exceed depth setting\n      if (priorDepth && priorDepth > opts.depth) return;\n\n      // scan the contents of the dir\n      this.fsw._readdirp(wh.watchPath, {\n        fileFilter: entry => wh.filterPath(entry),\n        directoryFilter: entry => wh.filterDir(entry),\n        ...Depth(opts.depth - (priorDepth || 0))\n      }).on(STR_DATA, (entry) => {\n        // need to check filterPath on dirs b/c filterDir is less restrictive\n        if (this.fsw.closed) {\n          return;\n        }\n        if (entry.stats.isDirectory() && !wh.filterPath(entry)) return;\n\n        const joinedPath = sysPath$1.join(wh.watchPath, entry.path);\n        const {fullPath} = entry;\n\n        if (wh.followSymlinks && entry.stats.isSymbolicLink()) {\n          // preserve the current depth here since it can't be derived from\n          // real paths past the symlink\n          const curDepth = opts.depth === undefined ?\n            undefined : calcDepth(joinedPath, sysPath$1.resolve(wh.watchPath)) + 1;\n\n          this._handleFsEventsSymlink(joinedPath, fullPath, processPath, curDepth);\n        } else {\n          this.emitAdd(joinedPath, entry.stats, processPath, opts, forceAdd);\n        }\n      }).on(EV_ERROR$1, EMPTY_FN$1).on(STR_END$1, () => {\n        this.fsw._emitReady();\n      });\n    } else {\n      this.emitAdd(wh.watchPath, stats, processPath, opts, forceAdd);\n      this.fsw._emitReady();\n    }\n  } catch (error) {\n    if (!error || this.fsw._handleError(error)) {\n      // TODO: Strange thing: \"should not choke on an ignored watch path\" will be failed without 2 ready calls -__-\n      this.fsw._emitReady();\n      this.fsw._emitReady();\n    }\n  }\n\n  if (opts.persistent && forceAdd !== true) {\n    if (typeof transform === FUNCTION_TYPE$1) {\n      // realpath has already been resolved\n      this.initWatch(undefined, path, wh, processPath);\n    } else {\n      let realPath;\n      try {\n        realPath = await realpath(wh.watchPath);\n      } catch (e) {}\n      this.initWatch(realPath, path, wh, processPath);\n    }\n  }\n}\n\n}\n\nfseventsHandler.exports = FsEventsHandler$1;\nfseventsHandler.exports.canUse = canUse;\n\nconst { EventEmitter: EventEmitter$2 } = require$$0$5;\nconst fs$6 = require$$0__default;\nconst sysPath = require$$0$4;\nconst { promisify } = require$$0$6;\nconst readdirp = readdirp_1;\nconst anymatch = anymatch$2.exports.default;\nconst globParent = globParent$2;\nconst isGlob = isGlob$2;\nconst braces = braces_1;\nconst normalizePath = normalizePath$2;\n\nconst NodeFsHandler = nodefsHandler;\nconst FsEventsHandler = fseventsHandler.exports;\nconst {\n  EV_ALL,\n  EV_READY,\n  EV_ADD,\n  EV_CHANGE,\n  EV_UNLINK,\n  EV_ADD_DIR,\n  EV_UNLINK_DIR,\n  EV_RAW,\n  EV_ERROR,\n\n  STR_CLOSE,\n  STR_END,\n\n  BACK_SLASH_RE,\n  DOUBLE_SLASH_RE,\n  SLASH_OR_BACK_SLASH_RE,\n  DOT_RE,\n  REPLACER_RE,\n\n  SLASH,\n  SLASH_SLASH,\n  BRACE_START,\n  BANG,\n  ONE_DOT,\n  TWO_DOTS,\n  GLOBSTAR,\n  SLASH_GLOBSTAR,\n  ANYMATCH_OPTS,\n  STRING_TYPE,\n  FUNCTION_TYPE,\n  EMPTY_STR,\n  EMPTY_FN,\n\n  isWindows: isWindows$1,\n  isMacos,\n  isIBMi\n} = constants$1;\n\nconst stat = promisify(fs$6.stat);\nconst readdir = promisify(fs$6.readdir);\n\n/**\n * @typedef {String} Path\n * @typedef {'all'|'add'|'addDir'|'change'|'unlink'|'unlinkDir'|'raw'|'error'|'ready'} EventName\n * @typedef {'readdir'|'watch'|'add'|'remove'|'change'} ThrottleType\n */\n\n/**\n *\n * @typedef {Object} WatchHelpers\n * @property {Boolean} followSymlinks\n * @property {'stat'|'lstat'} statMethod\n * @property {Path} path\n * @property {Path} watchPath\n * @property {Function} entryPath\n * @property {Boolean} hasGlob\n * @property {Object} globFilter\n * @property {Function} filterPath\n * @property {Function} filterDir\n */\n\nconst arrify = (value = []) => Array.isArray(value) ? value : [value];\nconst flatten = (list, result = []) => {\n  list.forEach(item => {\n    if (Array.isArray(item)) {\n      flatten(item, result);\n    } else {\n      result.push(item);\n    }\n  });\n  return result;\n};\n\nconst unifyPaths = (paths_) => {\n  /**\n   * @type {Array<String>}\n   */\n  const paths = flatten(arrify(paths_));\n  if (!paths.every(p => typeof p === STRING_TYPE)) {\n    throw new TypeError(`Non-string provided as watch path: ${paths}`);\n  }\n  return paths.map(normalizePathToUnix);\n};\n\n// If SLASH_SLASH occurs at the beginning of path, it is not replaced\n//     because \"//StoragePC/DrivePool/Movies\" is a valid network path\nconst toUnix = (string) => {\n  let str = string.replace(BACK_SLASH_RE, SLASH);\n  let prepend = false;\n  if (str.startsWith(SLASH_SLASH)) {\n    prepend = true;\n  }\n  while (str.match(DOUBLE_SLASH_RE)) {\n    str = str.replace(DOUBLE_SLASH_RE, SLASH);\n  }\n  if (prepend) {\n    str = SLASH + str;\n  }\n  return str;\n};\n\n// Our version of upath.normalize\n// TODO: this is not equal to path-normalize module - investigate why\nconst normalizePathToUnix = (path) => toUnix(sysPath.normalize(toUnix(path)));\n\nconst normalizeIgnored = (cwd = EMPTY_STR) => (path) => {\n  if (typeof path !== STRING_TYPE) return path;\n  return normalizePathToUnix(sysPath.isAbsolute(path) ? path : sysPath.join(cwd, path));\n};\n\nconst getAbsolutePath = (path, cwd) => {\n  if (sysPath.isAbsolute(path)) {\n    return path;\n  }\n  if (path.startsWith(BANG)) {\n    return BANG + sysPath.join(cwd, path.slice(1));\n  }\n  return sysPath.join(cwd, path);\n};\n\nconst undef = (opts, key) => opts[key] === undefined;\n\n/**\n * Directory entry.\n * @property {Path} path\n * @property {Set<Path>} items\n */\nclass DirEntry {\n  /**\n   * @param {Path} dir\n   * @param {Function} removeWatcher\n   */\n  constructor(dir, removeWatcher) {\n    this.path = dir;\n    this._removeWatcher = removeWatcher;\n    /** @type {Set<Path>} */\n    this.items = new Set();\n  }\n\n  add(item) {\n    const {items} = this;\n    if (!items) return;\n    if (item !== ONE_DOT && item !== TWO_DOTS) items.add(item);\n  }\n\n  async remove(item) {\n    const {items} = this;\n    if (!items) return;\n    items.delete(item);\n    if (items.size > 0) return;\n\n    const dir = this.path;\n    try {\n      await readdir(dir);\n    } catch (err) {\n      if (this._removeWatcher) {\n        this._removeWatcher(sysPath.dirname(dir), sysPath.basename(dir));\n      }\n    }\n  }\n\n  has(item) {\n    const {items} = this;\n    if (!items) return;\n    return items.has(item);\n  }\n\n  /**\n   * @returns {Array<String>}\n   */\n  getChildren() {\n    const {items} = this;\n    if (!items) return;\n    return [...items.values()];\n  }\n\n  dispose() {\n    this.items.clear();\n    delete this.path;\n    delete this._removeWatcher;\n    delete this.items;\n    Object.freeze(this);\n  }\n}\n\nconst STAT_METHOD_F = 'stat';\nconst STAT_METHOD_L = 'lstat';\nclass WatchHelper {\n  constructor(path, watchPath, follow, fsw) {\n    this.fsw = fsw;\n    this.path = path = path.replace(REPLACER_RE, EMPTY_STR);\n    this.watchPath = watchPath;\n    this.fullWatchPath = sysPath.resolve(watchPath);\n    this.hasGlob = watchPath !== path;\n    /** @type {object|boolean} */\n    if (path === EMPTY_STR) this.hasGlob = false;\n    this.globSymlink = this.hasGlob && follow ? undefined : false;\n    this.globFilter = this.hasGlob ? anymatch(path, undefined, ANYMATCH_OPTS) : false;\n    this.dirParts = this.getDirParts(path);\n    this.dirParts.forEach((parts) => {\n      if (parts.length > 1) parts.pop();\n    });\n    this.followSymlinks = follow;\n    this.statMethod = follow ? STAT_METHOD_F : STAT_METHOD_L;\n  }\n\n  checkGlobSymlink(entry) {\n    // only need to resolve once\n    // first entry should always have entry.parentDir === EMPTY_STR\n    if (this.globSymlink === undefined) {\n      this.globSymlink = entry.fullParentDir === this.fullWatchPath ?\n        false : {realPath: entry.fullParentDir, linkPath: this.fullWatchPath};\n    }\n\n    if (this.globSymlink) {\n      return entry.fullPath.replace(this.globSymlink.realPath, this.globSymlink.linkPath);\n    }\n\n    return entry.fullPath;\n  }\n\n  entryPath(entry) {\n    return sysPath.join(this.watchPath,\n      sysPath.relative(this.watchPath, this.checkGlobSymlink(entry))\n    );\n  }\n\n  filterPath(entry) {\n    const {stats} = entry;\n    if (stats && stats.isSymbolicLink()) return this.filterDir(entry);\n    const resolvedPath = this.entryPath(entry);\n    const matchesGlob = this.hasGlob && typeof this.globFilter === FUNCTION_TYPE ?\n      this.globFilter(resolvedPath) : true;\n    return matchesGlob &&\n      this.fsw._isntIgnored(resolvedPath, stats) &&\n      this.fsw._hasReadPermissions(stats);\n  }\n\n  getDirParts(path) {\n    if (!this.hasGlob) return [];\n    const parts = [];\n    const expandedPath = path.includes(BRACE_START) ? braces.expand(path) : [path];\n    expandedPath.forEach((path) => {\n      parts.push(sysPath.relative(this.watchPath, path).split(SLASH_OR_BACK_SLASH_RE));\n    });\n    return parts;\n  }\n\n  filterDir(entry) {\n    if (this.hasGlob) {\n      const entryParts = this.getDirParts(this.checkGlobSymlink(entry));\n      let globstar = false;\n      this.unmatchedGlob = !this.dirParts.some((parts) => {\n        return parts.every((part, i) => {\n          if (part === GLOBSTAR) globstar = true;\n          return globstar || !entryParts[0][i] || anymatch(part, entryParts[0][i], ANYMATCH_OPTS);\n        });\n      });\n    }\n    return !this.unmatchedGlob && this.fsw._isntIgnored(this.entryPath(entry), entry.stats);\n  }\n}\n\n/**\n * Watches files & directories for changes. Emitted events:\n * `add`, `addDir`, `change`, `unlink`, `unlinkDir`, `all`, `error`\n *\n *     new FSWatcher()\n *       .add(directories)\n *       .on('add', path => log('File', path, 'was added'))\n */\nclass FSWatcher extends EventEmitter$2 {\n// Not indenting methods for history sake; for now.\nconstructor(_opts) {\n  super();\n\n  const opts = {};\n  if (_opts) Object.assign(opts, _opts); // for frozen objects\n\n  /** @type {Map<String, DirEntry>} */\n  this._watched = new Map();\n  /** @type {Map<String, Array>} */\n  this._closers = new Map();\n  /** @type {Set<String>} */\n  this._ignoredPaths = new Set();\n\n  /** @type {Map<ThrottleType, Map>} */\n  this._throttled = new Map();\n\n  /** @type {Map<Path, String|Boolean>} */\n  this._symlinkPaths = new Map();\n\n  this._streams = new Set();\n  this.closed = false;\n\n  // Set up default options.\n  if (undef(opts, 'persistent')) opts.persistent = true;\n  if (undef(opts, 'ignoreInitial')) opts.ignoreInitial = false;\n  if (undef(opts, 'ignorePermissionErrors')) opts.ignorePermissionErrors = false;\n  if (undef(opts, 'interval')) opts.interval = 100;\n  if (undef(opts, 'binaryInterval')) opts.binaryInterval = 300;\n  if (undef(opts, 'disableGlobbing')) opts.disableGlobbing = false;\n  opts.enableBinaryInterval = opts.binaryInterval !== opts.interval;\n\n  // Enable fsevents on OS X when polling isn't explicitly enabled.\n  if (undef(opts, 'useFsEvents')) opts.useFsEvents = !opts.usePolling;\n\n  // If we can't use fsevents, ensure the options reflect it's disabled.\n  const canUseFsEvents = FsEventsHandler.canUse();\n  if (!canUseFsEvents) opts.useFsEvents = false;\n\n  // Use polling on Mac if not using fsevents.\n  // Other platforms use non-polling fs_watch.\n  if (undef(opts, 'usePolling') && !opts.useFsEvents) {\n    opts.usePolling = isMacos;\n  }\n\n  // Always default to polling on IBM i because fs.watch() is not available on IBM i.\n  if(isIBMi) {\n    opts.usePolling = true;\n  }\n\n  // Global override (useful for end-developers that need to force polling for all\n  // instances of chokidar, regardless of usage/dependency depth)\n  const envPoll = process.env.CHOKIDAR_USEPOLLING;\n  if (envPoll !== undefined) {\n    const envLower = envPoll.toLowerCase();\n\n    if (envLower === 'false' || envLower === '0') {\n      opts.usePolling = false;\n    } else if (envLower === 'true' || envLower === '1') {\n      opts.usePolling = true;\n    } else {\n      opts.usePolling = !!envLower;\n    }\n  }\n  const envInterval = process.env.CHOKIDAR_INTERVAL;\n  if (envInterval) {\n    opts.interval = Number.parseInt(envInterval, 10);\n  }\n\n  // Editor atomic write normalization enabled by default with fs.watch\n  if (undef(opts, 'atomic')) opts.atomic = !opts.usePolling && !opts.useFsEvents;\n  if (opts.atomic) this._pendingUnlinks = new Map();\n\n  if (undef(opts, 'followSymlinks')) opts.followSymlinks = true;\n\n  if (undef(opts, 'awaitWriteFinish')) opts.awaitWriteFinish = false;\n  if (opts.awaitWriteFinish === true) opts.awaitWriteFinish = {};\n  const awf = opts.awaitWriteFinish;\n  if (awf) {\n    if (!awf.stabilityThreshold) awf.stabilityThreshold = 2000;\n    if (!awf.pollInterval) awf.pollInterval = 100;\n    this._pendingWrites = new Map();\n  }\n  if (opts.ignored) opts.ignored = arrify(opts.ignored);\n\n  let readyCalls = 0;\n  this._emitReady = () => {\n    readyCalls++;\n    if (readyCalls >= this._readyCount) {\n      this._emitReady = EMPTY_FN;\n      this._readyEmitted = true;\n      // use process.nextTick to allow time for listener to be bound\n      process.nextTick(() => this.emit(EV_READY));\n    }\n  };\n  this._emitRaw = (...args) => this.emit(EV_RAW, ...args);\n  this._readyEmitted = false;\n  this.options = opts;\n\n  // Initialize with proper watcher.\n  if (opts.useFsEvents) {\n    this._fsEventsHandler = new FsEventsHandler(this);\n  } else {\n    this._nodeFsHandler = new NodeFsHandler(this);\n  }\n\n  // You\u2019re frozen when your heart\u2019s not open.\n  Object.freeze(opts);\n}\n\n// Public methods\n\n/**\n * Adds paths to be watched on an existing FSWatcher instance\n * @param {Path|Array<Path>} paths_\n * @param {String=} _origAdd private; for handling non-existent paths to be watched\n * @param {Boolean=} _internal private; indicates a non-user add\n * @returns {FSWatcher} for chaining\n */\nadd(paths_, _origAdd, _internal) {\n  const {cwd, disableGlobbing} = this.options;\n  this.closed = false;\n  let paths = unifyPaths(paths_);\n  if (cwd) {\n    paths = paths.map((path) => {\n      const absPath = getAbsolutePath(path, cwd);\n\n      // Check `path` instead of `absPath` because the cwd portion can't be a glob\n      if (disableGlobbing || !isGlob(path)) {\n        return absPath;\n      }\n      return normalizePath(absPath);\n    });\n  }\n\n  // set aside negated glob strings\n  paths = paths.filter((path) => {\n    if (path.startsWith(BANG)) {\n      this._ignoredPaths.add(path.slice(1));\n      return false;\n    }\n\n    // if a path is being added that was previously ignored, stop ignoring it\n    this._ignoredPaths.delete(path);\n    this._ignoredPaths.delete(path + SLASH_GLOBSTAR);\n\n    // reset the cached userIgnored anymatch fn\n    // to make ignoredPaths changes effective\n    this._userIgnored = undefined;\n\n    return true;\n  });\n\n  if (this.options.useFsEvents && this._fsEventsHandler) {\n    if (!this._readyCount) this._readyCount = paths.length;\n    if (this.options.persistent) this._readyCount *= 2;\n    paths.forEach((path) => this._fsEventsHandler._addToFsEvents(path));\n  } else {\n    if (!this._readyCount) this._readyCount = 0;\n    this._readyCount += paths.length;\n    Promise.all(\n      paths.map(async path => {\n        const res = await this._nodeFsHandler._addToNodeFs(path, !_internal, 0, 0, _origAdd);\n        if (res) this._emitReady();\n        return res;\n      })\n    ).then(results => {\n      if (this.closed) return;\n      results.filter(item => item).forEach(item => {\n        this.add(sysPath.dirname(item), sysPath.basename(_origAdd || item));\n      });\n    });\n  }\n\n  return this;\n}\n\n/**\n * Close watchers or start ignoring events from specified paths.\n * @param {Path|Array<Path>} paths_ - string or array of strings, file/directory paths and/or globs\n * @returns {FSWatcher} for chaining\n*/\nunwatch(paths_) {\n  if (this.closed) return this;\n  const paths = unifyPaths(paths_);\n  const {cwd} = this.options;\n\n  paths.forEach((path) => {\n    // convert to absolute path unless relative path already matches\n    if (!sysPath.isAbsolute(path) && !this._closers.has(path)) {\n      if (cwd) path = sysPath.join(cwd, path);\n      path = sysPath.resolve(path);\n    }\n\n    this._closePath(path);\n\n    this._ignoredPaths.add(path);\n    if (this._watched.has(path)) {\n      this._ignoredPaths.add(path + SLASH_GLOBSTAR);\n    }\n\n    // reset the cached userIgnored anymatch fn\n    // to make ignoredPaths changes effective\n    this._userIgnored = undefined;\n  });\n\n  return this;\n}\n\n/**\n * Close watchers and remove all listeners from watched paths.\n * @returns {Promise<void>}.\n*/\nclose() {\n  if (this.closed) return this._closePromise;\n  this.closed = true;\n\n  // Memory management.\n  this.removeAllListeners();\n  const closers = [];\n  this._closers.forEach(closerList => closerList.forEach(closer => {\n    const promise = closer();\n    if (promise instanceof Promise) closers.push(promise);\n  }));\n  this._streams.forEach(stream => stream.destroy());\n  this._userIgnored = undefined;\n  this._readyCount = 0;\n  this._readyEmitted = false;\n  this._watched.forEach(dirent => dirent.dispose());\n  ['closers', 'watched', 'streams', 'symlinkPaths', 'throttled'].forEach(key => {\n    this[`_${key}`].clear();\n  });\n\n  this._closePromise = closers.length ? Promise.all(closers).then(() => undefined) : Promise.resolve();\n  return this._closePromise;\n}\n\n/**\n * Expose list of watched paths\n * @returns {Object} for chaining\n*/\ngetWatched() {\n  const watchList = {};\n  this._watched.forEach((entry, dir) => {\n    const key = this.options.cwd ? sysPath.relative(this.options.cwd, dir) : dir;\n    watchList[key || ONE_DOT] = entry.getChildren().sort();\n  });\n  return watchList;\n}\n\nemitWithAll(event, args) {\n  this.emit(...args);\n  if (event !== EV_ERROR) this.emit(EV_ALL, ...args);\n}\n\n// Common helpers\n// --------------\n\n/**\n * Normalize and emit events.\n * Calling _emit DOES NOT MEAN emit() would be called!\n * @param {EventName} event Type of event\n * @param {Path} path File or directory path\n * @param {*=} val1 arguments to be passed with event\n * @param {*=} val2\n * @param {*=} val3\n * @returns the error if defined, otherwise the value of the FSWatcher instance's `closed` flag\n */\nasync _emit(event, path, val1, val2, val3) {\n  if (this.closed) return;\n\n  const opts = this.options;\n  if (isWindows$1) path = sysPath.normalize(path);\n  if (opts.cwd) path = sysPath.relative(opts.cwd, path);\n  /** @type Array<any> */\n  const args = [event, path];\n  if (val3 !== undefined) args.push(val1, val2, val3);\n  else if (val2 !== undefined) args.push(val1, val2);\n  else if (val1 !== undefined) args.push(val1);\n\n  const awf = opts.awaitWriteFinish;\n  let pw;\n  if (awf && (pw = this._pendingWrites.get(path))) {\n    pw.lastChange = new Date();\n    return this;\n  }\n\n  if (opts.atomic) {\n    if (event === EV_UNLINK) {\n      this._pendingUnlinks.set(path, args);\n      setTimeout(() => {\n        this._pendingUnlinks.forEach((entry, path) => {\n          this.emit(...entry);\n          this.emit(EV_ALL, ...entry);\n          this._pendingUnlinks.delete(path);\n        });\n      }, typeof opts.atomic === 'number' ? opts.atomic : 100);\n      return this;\n    }\n    if (event === EV_ADD && this._pendingUnlinks.has(path)) {\n      event = args[0] = EV_CHANGE;\n      this._pendingUnlinks.delete(path);\n    }\n  }\n\n  if (awf && (event === EV_ADD || event === EV_CHANGE) && this._readyEmitted) {\n    const awfEmit = (err, stats) => {\n      if (err) {\n        event = args[0] = EV_ERROR;\n        args[1] = err;\n        this.emitWithAll(event, args);\n      } else if (stats) {\n        // if stats doesn't exist the file must have been deleted\n        if (args.length > 2) {\n          args[2] = stats;\n        } else {\n          args.push(stats);\n        }\n        this.emitWithAll(event, args);\n      }\n    };\n\n    this._awaitWriteFinish(path, awf.stabilityThreshold, event, awfEmit);\n    return this;\n  }\n\n  if (event === EV_CHANGE) {\n    const isThrottled = !this._throttle(EV_CHANGE, path, 50);\n    if (isThrottled) return this;\n  }\n\n  if (opts.alwaysStat && val1 === undefined &&\n    (event === EV_ADD || event === EV_ADD_DIR || event === EV_CHANGE)\n  ) {\n    const fullPath = opts.cwd ? sysPath.join(opts.cwd, path) : path;\n    let stats;\n    try {\n      stats = await stat(fullPath);\n    } catch (err) {}\n    // Suppress event when fs_stat fails, to avoid sending undefined 'stat'\n    if (!stats || this.closed) return;\n    args.push(stats);\n  }\n  this.emitWithAll(event, args);\n\n  return this;\n}\n\n/**\n * Common handler for errors\n * @param {Error} error\n * @returns {Error|Boolean} The error if defined, otherwise the value of the FSWatcher instance's `closed` flag\n */\n_handleError(error) {\n  const code = error && error.code;\n  if (error && code !== 'ENOENT' && code !== 'ENOTDIR' &&\n    (!this.options.ignorePermissionErrors || (code !== 'EPERM' && code !== 'EACCES'))\n  ) {\n    this.emit(EV_ERROR, error);\n  }\n  return error || this.closed;\n}\n\n/**\n * Helper utility for throttling\n * @param {ThrottleType} actionType type being throttled\n * @param {Path} path being acted upon\n * @param {Number} timeout duration of time to suppress duplicate actions\n * @returns {Object|false} tracking object or false if action should be suppressed\n */\n_throttle(actionType, path, timeout) {\n  if (!this._throttled.has(actionType)) {\n    this._throttled.set(actionType, new Map());\n  }\n\n  /** @type {Map<Path, Object>} */\n  const action = this._throttled.get(actionType);\n  /** @type {Object} */\n  const actionPath = action.get(path);\n\n  if (actionPath) {\n    actionPath.count++;\n    return false;\n  }\n\n  let timeoutObject;\n  const clear = () => {\n    const item = action.get(path);\n    const count = item ? item.count : 0;\n    action.delete(path);\n    clearTimeout(timeoutObject);\n    if (item) clearTimeout(item.timeoutObject);\n    return count;\n  };\n  timeoutObject = setTimeout(clear, timeout);\n  const thr = {timeoutObject, clear, count: 0};\n  action.set(path, thr);\n  return thr;\n}\n\n_incrReadyCount() {\n  return this._readyCount++;\n}\n\n/**\n * Awaits write operation to finish.\n * Polls a newly created file for size variations. When files size does not change for 'threshold' milliseconds calls callback.\n * @param {Path} path being acted upon\n * @param {Number} threshold Time in milliseconds a file size must be fixed before acknowledging write OP is finished\n * @param {EventName} event\n * @param {Function} awfEmit Callback to be called when ready for event to be emitted.\n */\n_awaitWriteFinish(path, threshold, event, awfEmit) {\n  let timeoutHandler;\n\n  let fullPath = path;\n  if (this.options.cwd && !sysPath.isAbsolute(path)) {\n    fullPath = sysPath.join(this.options.cwd, path);\n  }\n\n  const now = new Date();\n\n  const awaitWriteFinish = (prevStat) => {\n    fs$6.stat(fullPath, (err, curStat) => {\n      if (err || !this._pendingWrites.has(path)) {\n        if (err && err.code !== 'ENOENT') awfEmit(err);\n        return;\n      }\n\n      const now = Number(new Date());\n\n      if (prevStat && curStat.size !== prevStat.size) {\n        this._pendingWrites.get(path).lastChange = now;\n      }\n      const pw = this._pendingWrites.get(path);\n      const df = now - pw.lastChange;\n\n      if (df >= threshold) {\n        this._pendingWrites.delete(path);\n        awfEmit(undefined, curStat);\n      } else {\n        timeoutHandler = setTimeout(\n          awaitWriteFinish,\n          this.options.awaitWriteFinish.pollInterval,\n          curStat\n        );\n      }\n    });\n  };\n\n  if (!this._pendingWrites.has(path)) {\n    this._pendingWrites.set(path, {\n      lastChange: now,\n      cancelWait: () => {\n        this._pendingWrites.delete(path);\n        clearTimeout(timeoutHandler);\n        return event;\n      }\n    });\n    timeoutHandler = setTimeout(\n      awaitWriteFinish,\n      this.options.awaitWriteFinish.pollInterval\n    );\n  }\n}\n\n_getGlobIgnored() {\n  return [...this._ignoredPaths.values()];\n}\n\n/**\n * Determines whether user has asked to ignore this path.\n * @param {Path} path filepath or dir\n * @param {fs.Stats=} stats result of fs.stat\n * @returns {Boolean}\n */\n_isIgnored(path, stats) {\n  if (this.options.atomic && DOT_RE.test(path)) return true;\n  if (!this._userIgnored) {\n    const {cwd} = this.options;\n    const ign = this.options.ignored;\n\n    const ignored = ign && ign.map(normalizeIgnored(cwd));\n    const paths = arrify(ignored)\n      .filter((path) => typeof path === STRING_TYPE && !isGlob(path))\n      .map((path) => path + SLASH_GLOBSTAR);\n    const list = this._getGlobIgnored().map(normalizeIgnored(cwd)).concat(ignored, paths);\n    this._userIgnored = anymatch(list, undefined, ANYMATCH_OPTS);\n  }\n\n  return this._userIgnored([path, stats]);\n}\n\n_isntIgnored(path, stat) {\n  return !this._isIgnored(path, stat);\n}\n\n/**\n * Provides a set of common helpers and properties relating to symlink and glob handling.\n * @param {Path} path file, directory, or glob pattern being watched\n * @param {Number=} depth at any depth > 0, this isn't a glob\n * @returns {WatchHelper} object containing helpers for this path\n */\n_getWatchHelpers(path, depth) {\n  const watchPath = depth || this.options.disableGlobbing || !isGlob(path) ? path : globParent(path);\n  const follow = this.options.followSymlinks;\n\n  return new WatchHelper(path, watchPath, follow, this);\n}\n\n// Directory helpers\n// -----------------\n\n/**\n * Provides directory tracking objects\n * @param {String} directory path of the directory\n * @returns {DirEntry} the directory's tracking object\n */\n_getWatchedDir(directory) {\n  if (!this._boundRemove) this._boundRemove = this._remove.bind(this);\n  const dir = sysPath.resolve(directory);\n  if (!this._watched.has(dir)) this._watched.set(dir, new DirEntry(dir, this._boundRemove));\n  return this._watched.get(dir);\n}\n\n// File helpers\n// ------------\n\n/**\n * Check for read permissions.\n * Based on this answer on SO: https://stackoverflow.com/a/11781404/1358405\n * @param {fs.Stats} stats - object, result of fs_stat\n * @returns {Boolean} indicates whether the file can be read\n*/\n_hasReadPermissions(stats) {\n  if (this.options.ignorePermissionErrors) return true;\n\n  // stats.mode may be bigint\n  const md = stats && Number.parseInt(stats.mode, 10);\n  const st = md & 0o777;\n  const it = Number.parseInt(st.toString(8)[0], 10);\n  return Boolean(4 & it);\n}\n\n/**\n * Handles emitting unlink events for\n * files and directories, and via recursion, for\n * files and directories within directories that are unlinked\n * @param {String} directory within which the following item is located\n * @param {String} item      base path of item/directory\n * @returns {void}\n*/\n_remove(directory, item, isDirectory) {\n  // if what is being deleted is a directory, get that directory's paths\n  // for recursive deleting and cleaning of watched object\n  // if it is not a directory, nestedDirectoryChildren will be empty array\n  const path = sysPath.join(directory, item);\n  const fullPath = sysPath.resolve(path);\n  isDirectory = isDirectory != null\n    ? isDirectory\n    : this._watched.has(path) || this._watched.has(fullPath);\n\n  // prevent duplicate handling in case of arriving here nearly simultaneously\n  // via multiple paths (such as _handleFile and _handleDir)\n  if (!this._throttle('remove', path, 100)) return;\n\n  // if the only watched file is removed, watch for its return\n  if (!isDirectory && !this.options.useFsEvents && this._watched.size === 1) {\n    this.add(directory, item, true);\n  }\n\n  // This will create a new entry in the watched object in either case\n  // so we got to do the directory check beforehand\n  const wp = this._getWatchedDir(path);\n  const nestedDirectoryChildren = wp.getChildren();\n\n  // Recursively remove children directories / files.\n  nestedDirectoryChildren.forEach(nested => this._remove(path, nested));\n\n  // Check if item was on the watched list and remove it\n  const parent = this._getWatchedDir(directory);\n  const wasTracked = parent.has(item);\n  parent.remove(item);\n\n  // Fixes issue #1042 -> Relative paths were detected and added as symlinks\n  // (https://github.com/paulmillr/chokidar/blob/e1753ddbc9571bdc33b4a4af172d52cb6e611c10/lib/nodefs-handler.js#L612),\n  // but never removed from the map in case the path was deleted.\n  // This leads to an incorrect state if the path was recreated:\n  // https://github.com/paulmillr/chokidar/blob/e1753ddbc9571bdc33b4a4af172d52cb6e611c10/lib/nodefs-handler.js#L553\n  if (this._symlinkPaths.has(fullPath)) {\n    this._symlinkPaths.delete(fullPath);\n  }\n\n  // If we wait for this file to be fully written, cancel the wait.\n  let relPath = path;\n  if (this.options.cwd) relPath = sysPath.relative(this.options.cwd, path);\n  if (this.options.awaitWriteFinish && this._pendingWrites.has(relPath)) {\n    const event = this._pendingWrites.get(relPath).cancelWait();\n    if (event === EV_ADD) return;\n  }\n\n  // The Entry will either be a directory that just got removed\n  // or a bogus entry to a file, in either case we have to remove it\n  this._watched.delete(path);\n  this._watched.delete(fullPath);\n  const eventName = isDirectory ? EV_UNLINK_DIR : EV_UNLINK;\n  if (wasTracked && !this._isIgnored(path)) this._emit(eventName, path);\n\n  // Avoid conflicts if we later create another file with the same name\n  if (!this.options.useFsEvents) {\n    this._closePath(path);\n  }\n}\n\n/**\n * Closes all watchers for a path\n * @param {Path} path\n */\n_closePath(path) {\n  this._closeFile(path);\n  const dir = sysPath.dirname(path);\n  this._getWatchedDir(dir).remove(sysPath.basename(path));\n}\n\n/**\n * Closes only file-specific watchers\n * @param {Path} path\n */\n_closeFile(path) {\n  const closers = this._closers.get(path);\n  if (!closers) return;\n  closers.forEach(closer => closer());\n  this._closers.delete(path);\n}\n\n/**\n *\n * @param {Path} path\n * @param {Function} closer\n */\n_addPathCloser(path, closer) {\n  if (!closer) return;\n  let list = this._closers.get(path);\n  if (!list) {\n    list = [];\n    this._closers.set(path, list);\n  }\n  list.push(closer);\n}\n\n_readdirp(root, opts) {\n  if (this.closed) return;\n  const options = {type: EV_ALL, alwaysStat: true, lstat: true, ...opts};\n  let stream = readdirp(root, options);\n  this._streams.add(stream);\n  stream.once(STR_CLOSE, () => {\n    stream = undefined;\n  });\n  stream.once(STR_END, () => {\n    if (stream) {\n      this._streams.delete(stream);\n      stream = undefined;\n    }\n  });\n  return stream;\n}\n\n}\n\n// Export FSWatcher class\nchokidar.FSWatcher = FSWatcher;\n\n/**\n * Instantiates watcher with paths to be tracked.\n * @param {String|Array<String>} paths file/directory paths and/or globs\n * @param {Object=} options chokidar opts\n * @returns an instance of FSWatcher for chaining.\n */\nconst watch = (paths, options) => {\n  const watcher = new FSWatcher(options);\n  watcher.add(paths);\n  return watcher;\n};\n\nchokidar.watch = watch;\n\nvar shellQuote$1 = {};\n\nshellQuote$1.quote = function (xs) {\n    return xs.map(function (s) {\n        if (s && typeof s === 'object') {\n            return s.op.replace(/(.)/g, '\\\\$1');\n        }\n        else if (/[\"\\s]/.test(s) && !/'/.test(s)) {\n            return \"'\" + s.replace(/(['\\\\])/g, '\\\\$1') + \"'\";\n        }\n        else if (/[\"'\\s]/.test(s)) {\n            return '\"' + s.replace(/([\"\\\\$`!])/g, '\\\\$1') + '\"';\n        }\n        else {\n            return String(s).replace(/([A-Za-z]:)?([#!\"$&'()*,:;<=>?@\\[\\\\\\]^`{|}])/g, '$1\\\\$2');\n        }\n    }).join(' ');\n};\n\n// '<(' is process substitution operator and\n// can be parsed the same as control operator\nvar CONTROL = '(?:' + [\n    '\\\\|\\\\|', '\\\\&\\\\&', ';;', '\\\\|\\\\&', '\\\\<\\\\(', '>>', '>\\\\&', '[&;()|<>]'\n].join('|') + ')';\nvar META = '|&;()<> \\\\t';\nvar BAREWORD = '(\\\\\\\\[\\'\"' + META + ']|[^\\\\s\\'\"' + META + '])+';\nvar SINGLE_QUOTE = '\"((\\\\\\\\\"|[^\"])*?)\"';\nvar DOUBLE_QUOTE = '\\'((\\\\\\\\\\'|[^\\'])*?)\\'';\n\nvar TOKEN = '';\nfor (var i = 0; i < 4; i++) {\n    TOKEN += (Math.pow(16,8)*Math.random()).toString(16);\n}\n\nshellQuote$1.parse = function (s, env, opts) {\n    var mapped = parse$7(s, env, opts);\n    if (typeof env !== 'function') return mapped;\n    return mapped.reduce(function (acc, s) {\n        if (typeof s === 'object') return acc.concat(s);\n        var xs = s.split(RegExp('(' + TOKEN + '.*?' + TOKEN + ')', 'g'));\n        if (xs.length === 1) return acc.concat(xs[0]);\n        return acc.concat(xs.filter(Boolean).map(function (x) {\n            if (RegExp('^' + TOKEN).test(x)) {\n                return JSON.parse(x.split(TOKEN)[1]);\n            }\n            else return x;\n        }));\n    }, []);\n};\n\nfunction parse$7 (s, env, opts) {\n    var chunker = new RegExp([\n        '(' + CONTROL + ')', // control chars\n        '(' + BAREWORD + '|' + SINGLE_QUOTE + '|' + DOUBLE_QUOTE + ')*'\n    ].join('|'), 'g');\n    var match = s.match(chunker).filter(Boolean);\n    var commented = false;\n\n    if (!match) return [];\n    if (!env) env = {};\n    if (!opts) opts = {};\n    return match.map(function (s, j) {\n        if (commented) {\n            return;\n        }\n        if (RegExp('^' + CONTROL + '$').test(s)) {\n            return { op: s };\n        }\n\n        // Hand-written scanner/parser for Bash quoting rules:\n        //\n        //  1. inside single quotes, all characters are printed literally.\n        //  2. inside double quotes, all characters are printed literally\n        //     except variables prefixed by '$' and backslashes followed by\n        //     either a double quote or another backslash.\n        //  3. outside of any quotes, backslashes are treated as escape\n        //     characters and not printed (unless they are themselves escaped)\n        //  4. quote context can switch mid-token if there is no whitespace\n        //     between the two quote contexts (e.g. all'one'\"token\" parses as\n        //     \"allonetoken\")\n        var SQ = \"'\";\n        var DQ = '\"';\n        var DS = '$';\n        var BS = opts.escape || '\\\\';\n        var quote = false;\n        var esc = false;\n        var out = '';\n        var isGlob = false;\n\n        for (var i = 0, len = s.length; i < len; i++) {\n            var c = s.charAt(i);\n            isGlob = isGlob || (!quote && (c === '*' || c === '?'));\n            if (esc) {\n                out += c;\n                esc = false;\n            }\n            else if (quote) {\n                if (c === quote) {\n                    quote = false;\n                }\n                else if (quote == SQ) {\n                    out += c;\n                }\n                else { // Double quote\n                    if (c === BS) {\n                        i += 1;\n                        c = s.charAt(i);\n                        if (c === DQ || c === BS || c === DS) {\n                            out += c;\n                        } else {\n                            out += BS + c;\n                        }\n                    }\n                    else if (c === DS) {\n                        out += parseEnvVar();\n                    }\n                    else {\n                        out += c;\n                    }\n                }\n            }\n            else if (c === DQ || c === SQ) {\n                quote = c;\n            }\n            else if (RegExp('^' + CONTROL + '$').test(c)) {\n                return { op: s };\n            }\n            else if (RegExp('^#$').test(c)) {\n                commented = true;\n                if (out.length){\n                    return [out, { comment: s.slice(i+1) + match.slice(j+1).join(' ') }];\n                }\n                return [{ comment: s.slice(i+1) + match.slice(j+1).join(' ') }];\n            }\n            else if (c === BS) {\n                esc = true;\n            }\n            else if (c === DS) {\n                out += parseEnvVar();\n            }\n            else out += c;\n        }\n\n        if (isGlob) return {op: 'glob', pattern: out};\n\n        return out;\n\n        function parseEnvVar() {\n            i += 1;\n            var varend, varname;\n            //debugger\n            if (s.charAt(i) === '{') {\n                i += 1;\n                if (s.charAt(i) === '}') {\n                    throw new Error(\"Bad substitution: \" + s.substr(i - 2, 3));\n                }\n                varend = s.indexOf('}', i);\n                if (varend < 0) {\n                    throw new Error(\"Bad substitution: \" + s.substr(i));\n                }\n                varname = s.substr(i, varend - i);\n                i = varend;\n            }\n            else if (/[*@#?$!_\\-]/.test(s.charAt(i))) {\n                varname = s.charAt(i);\n                i += 1;\n            }\n            else {\n                varend = s.substr(i).match(/[^\\w\\d_]/);\n                if (!varend) {\n                    varname = s.substr(i);\n                    i = s.length;\n                } else {\n                    varname = s.substr(i, varend.index);\n                    i += varend.index - 1;\n                }\n            }\n            return getVar(null, '', varname);\n        }\n    })\n    // finalize parsed aruments\n    .reduce(function(prev, arg){\n        if (arg === undefined){\n            return prev;\n        }\n        return prev.concat(arg);\n    },[]);\n\n    function getVar (_, pre, key) {\n        var r = typeof env === 'function' ? env(key) : env[key];\n        if (r === undefined && key != '')\n            r = '';\n        else if (r === undefined)\n            r = '$';\n\n        if (typeof r === 'object') {\n            return pre + TOKEN + JSON.stringify(r) + TOKEN;\n        }\n        else return pre + r;\n    }\n}\n\nvar osx = {\n  '/Applications/Atom.app/Contents/MacOS/Atom': 'atom',\n  '/Applications/Atom Beta.app/Contents/MacOS/Atom Beta':\n    '/Applications/Atom Beta.app/Contents/MacOS/Atom Beta',\n  '/Applications/Brackets.app/Contents/MacOS/Brackets': 'brackets',\n  '/Applications/Sublime Text.app/Contents/MacOS/Sublime Text':\n    '/Applications/Sublime Text.app/Contents/SharedSupport/bin/subl',\n  '/Applications/Sublime Text.app/Contents/MacOS/sublime_text':\n    '/Applications/Sublime Text.app/Contents/SharedSupport/bin/subl',\n  '/Applications/Sublime Text 2.app/Contents/MacOS/Sublime Text 2':\n    '/Applications/Sublime Text 2.app/Contents/SharedSupport/bin/subl',\n  '/Applications/Sublime Text Dev.app/Contents/MacOS/Sublime Text':\n    '/Applications/Sublime Text Dev.app/Contents/SharedSupport/bin/subl',\n  '/Applications/Visual Studio Code.app/Contents/MacOS/Electron': 'code',\n  '/Applications/Visual Studio Code - Insiders.app/Contents/MacOS/Electron':\n    'code-insiders',\n  '/Applications/AppCode.app/Contents/MacOS/appcode':\n    '/Applications/AppCode.app/Contents/MacOS/appcode',\n  '/Applications/CLion.app/Contents/MacOS/clion':\n    '/Applications/CLion.app/Contents/MacOS/clion',\n  '/Applications/IntelliJ IDEA.app/Contents/MacOS/idea':\n    '/Applications/IntelliJ IDEA.app/Contents/MacOS/idea',\n  '/Applications/PhpStorm.app/Contents/MacOS/phpstorm':\n    '/Applications/PhpStorm.app/Contents/MacOS/phpstorm',\n  '/Applications/PyCharm.app/Contents/MacOS/pycharm':\n    '/Applications/PyCharm.app/Contents/MacOS/pycharm',\n  '/Applications/PyCharm CE.app/Contents/MacOS/pycharm':\n    '/Applications/PyCharm CE.app/Contents/MacOS/pycharm',\n  '/Applications/RubyMine.app/Contents/MacOS/rubymine':\n    '/Applications/RubyMine.app/Contents/MacOS/rubymine',\n  '/Applications/WebStorm.app/Contents/MacOS/webstorm':\n    '/Applications/WebStorm.app/Contents/MacOS/webstorm'\n};\n\nvar linux = {\n  atom: 'atom',\n  Brackets: 'brackets',\n  code: 'code',\n  emacs: 'emacs',\n  'idea.sh': 'idea',\n  'phpstorm.sh': 'phpstorm',\n  'pycharm.sh': 'pycharm',\n  'rubymine.sh': 'rubymine',\n  sublime_text: 'subl',\n  vim: 'vim',\n  'webstorm.sh': 'webstorm'\n};\n\nvar windows$1 = [\n  'Brackets.exe',\n  'Code.exe',\n  'atom.exe',\n  'sublime_text.exe',\n  'notepad++.exe',\n  'clion.exe',\n  'clion64.exe',\n  'idea.exe',\n  'idea64.exe',\n  'phpstorm.exe',\n  'phpstorm64.exe',\n  'pycharm.exe',\n  'pycharm64.exe',\n  'rubymine.exe',\n  'rubymine64.exe',\n  'webstorm.exe',\n  'webstorm64.exe'\n];\n\nconst path$8 = require$$0$4;\nconst shellQuote = shellQuote$1;\nconst childProcess$2 = require$$2;\n\n// Map from full process name to binary that starts the process\n// We can't just re-use full process name, because it will spawn a new instance\n// of the app every time\nconst COMMON_EDITORS_OSX = osx;\nconst COMMON_EDITORS_LINUX = linux;\nconst COMMON_EDITORS_WIN = windows$1;\n\nvar guess = function guessEditor (specifiedEditor) {\n  if (specifiedEditor) {\n    return shellQuote.parse(specifiedEditor)\n  }\n\n  if (process.versions.webcontainer) {\n    return [process.env.EDITOR || 'code']\n  }\n\n  // We can find out which editor is currently running by:\n  // `ps x` on macOS and Linux\n  // `Get-Process` on Windows\n  try {\n    if (process.platform === 'darwin') {\n      const output = childProcess$2\n        .execSync('ps x -o comm=', {\n          stdio: ['pipe', 'pipe', 'ignore']\n        })\n        .toString();\n      const processNames = Object.keys(COMMON_EDITORS_OSX);\n      const processList = output.split('\\n');\n      for (let i = 0; i < processNames.length; i++) {\n        const processName = processNames[i];\n        // Find editor by exact match.\n        if (output.indexOf(processName) !== -1) {\n          return [COMMON_EDITORS_OSX[processName]]\n        }\n        const processNameWithoutApplications = processName.replace('/Applications', '');\n        // Find editor installation not in /Applications.\n        if (output.indexOf(processNameWithoutApplications) !== -1) {\n          // Use the CLI command if one is specified\n          if (processName !== COMMON_EDITORS_OSX[processName]) {\n            return [COMMON_EDITORS_OSX[processName]]\n          }\n          // Use a partial match to find the running process path.  If one is found, use the\n          // existing path since it can be running from anywhere.\n          const runningProcess = processList.find((procName) => procName.endsWith(processNameWithoutApplications));\n          if (runningProcess !== undefined) {\n            return [runningProcess]\n          }\n        }\n      }\n    } else if (process.platform === 'win32') {\n      const output = childProcess$2\n        .execSync(\n          'powershell -NoProfile -Command \"Get-CimInstance -Query \\\\\"select executablepath from win32_process where executablepath is not null\\\\\" | % { $_.ExecutablePath }\"',\n          {\n            stdio: ['pipe', 'pipe', 'ignore']\n          }\n        )\n        .toString();\n      const runningProcesses = output.split('\\r\\n');\n      for (let i = 0; i < runningProcesses.length; i++) {\n        const fullProcessPath = runningProcesses[i].trim();\n        const shortProcessName = path$8.basename(fullProcessPath);\n\n        if (COMMON_EDITORS_WIN.indexOf(shortProcessName) !== -1) {\n          return [fullProcessPath]\n        }\n      }\n    } else if (process.platform === 'linux') {\n      // --no-heading No header line\n      // x List all processes owned by you\n      // -o comm Need only names column\n      const output = childProcess$2\n        .execSync('ps x --no-heading -o comm --sort=comm', {\n          stdio: ['pipe', 'pipe', 'ignore']\n        })\n        .toString();\n      const processNames = Object.keys(COMMON_EDITORS_LINUX);\n      for (let i = 0; i < processNames.length; i++) {\n        const processName = processNames[i];\n        if (output.indexOf(processName) !== -1) {\n          return [COMMON_EDITORS_LINUX[processName]]\n        }\n      }\n    }\n  } catch (error) {\n    // Ignore...\n  }\n\n  // Last resort, use old skool env vars\n  if (process.env.VISUAL) {\n    return [process.env.VISUAL]\n  } else if (process.env.EDITOR) {\n    return [process.env.EDITOR]\n  }\n\n  return [null]\n};\n\nconst path$7 = require$$0$4;\n\n// normalize file/line numbers into command line args for specific editors\nvar getArgs = function getArgumentsForPosition (\n  editor,\n  fileName,\n  lineNumber,\n  columnNumber = 1\n) {\n  const editorBasename = path$7.basename(editor).replace(/\\.(exe|cmd|bat)$/i, '');\n  switch (editorBasename) {\n    case 'atom':\n    case 'Atom':\n    case 'Atom Beta':\n    case 'subl':\n    case 'sublime':\n    case 'sublime_text':\n    case 'wstorm':\n    case 'charm':\n      return [`${fileName}:${lineNumber}:${columnNumber}`]\n    case 'notepad++':\n      return ['-n' + lineNumber, fileName]\n    case 'vim':\n    case 'mvim':\n      return [`+call cursor(${lineNumber}, ${columnNumber})`, fileName]\n    case 'joe':\n      return ['+' + `${lineNumber}`, fileName]\n    case 'emacs':\n    case 'emacsclient':\n      return [`+${lineNumber}:${columnNumber}`, fileName]\n    case 'rmate':\n    case 'mate':\n    case 'mine':\n      return ['--line', lineNumber, fileName]\n    case 'code':\n    case 'code-insiders':\n    case 'Code':\n    case 'codium':\n      return ['-r', '-g', `${fileName}:${lineNumber}:${columnNumber}`]\n    case 'appcode':\n    case 'clion':\n    case 'clion64':\n    case 'idea':\n    case 'idea64':\n    case 'phpstorm':\n    case 'phpstorm64':\n    case 'pycharm':\n    case 'pycharm64':\n    case 'rubymine':\n    case 'rubymine64':\n    case 'webstorm':\n    case 'webstorm64':\n      return ['--line', lineNumber, '--column', columnNumber, fileName]\n  }\n\n  // For all others, drop the lineNumber until we have\n  // a mapping above, since providing the lineNumber incorrectly\n  // can result in errors or confusing behavior.\n  return [fileName]\n};\n\n/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file at\n * https://github.com/facebookincubator/create-react-app/blob/master/LICENSE\n *\n * Modified by Yuxi Evan You\n */\n\nconst fs$5 = require$$0__default;\nconst os$2 = require$$1;\nconst path$6 = require$$0$4;\nconst colors = picocolors.exports;\nconst childProcess$1 = require$$2;\n\nconst guessEditor = guess;\nconst getArgumentsForPosition = getArgs;\n\nfunction wrapErrorCallback (cb) {\n  return (fileName, errorMessage) => {\n    console.log();\n    console.log(\n      colors.red('Could not open ' + path$6.basename(fileName) + ' in the editor.')\n    );\n    if (errorMessage) {\n      if (errorMessage[errorMessage.length - 1] !== '.') {\n        errorMessage += '.';\n      }\n      console.log(\n        colors.red('The editor process exited with an error: ' + errorMessage)\n      );\n    }\n    console.log();\n    if (cb) cb(fileName, errorMessage);\n  }\n}\n\nfunction isTerminalEditor (editor) {\n  switch (editor) {\n    case 'vim':\n    case 'emacs':\n    case 'nano':\n      return true\n  }\n  return false\n}\n\nconst positionRE = /:(\\d+)(:(\\d+))?$/;\nfunction parseFile (file) {\n  const fileName = file.replace(positionRE, '');\n  const match = file.match(positionRE);\n  const lineNumber = match && match[1];\n  const columnNumber = match && match[3];\n  return {\n    fileName,\n    lineNumber,\n    columnNumber\n  }\n}\n\nlet _childProcess = null;\n\nfunction launchEditor (file, specifiedEditor, onErrorCallback) {\n  const parsed = parseFile(file);\n  let { fileName } = parsed;\n  const { lineNumber, columnNumber } = parsed;\n\n  if (!fs$5.existsSync(fileName)) {\n    return\n  }\n\n  if (typeof specifiedEditor === 'function') {\n    onErrorCallback = specifiedEditor;\n    specifiedEditor = undefined;\n  }\n\n  onErrorCallback = wrapErrorCallback(onErrorCallback);\n\n  const [editor, ...args] = guessEditor(specifiedEditor);\n  if (!editor) {\n    onErrorCallback(fileName, null);\n    return\n  }\n\n  if (\n    process.platform === 'linux' &&\n    fileName.startsWith('/mnt/') &&\n    /Microsoft/i.test(os$2.release())\n  ) {\n    // Assume WSL / \"Bash on Ubuntu on Windows\" is being used, and\n    // that the file exists on the Windows file system.\n    // `os.release()` is \"4.4.0-43-Microsoft\" in the current release\n    // build of WSL, see: https://github.com/Microsoft/BashOnWindows/issues/423#issuecomment-221627364\n    // When a Windows editor is specified, interop functionality can\n    // handle the path translation, but only if a relative path is used.\n    fileName = path$6.relative('', fileName);\n  }\n\n  if (lineNumber) {\n    const extraArgs = getArgumentsForPosition(editor, fileName, lineNumber, columnNumber);\n    args.push.apply(args, extraArgs);\n  } else {\n    args.push(fileName);\n  }\n\n  if (_childProcess && isTerminalEditor(editor)) {\n    // There's an existing editor process already and it's attached\n    // to the terminal, so go kill it. Otherwise two separate editor\n    // instances attach to the stdin/stdout which gets confusing.\n    _childProcess.kill('SIGKILL');\n  }\n\n  if (process.platform === 'win32') {\n    // On Windows, launch the editor in a shell because spawn can only\n    // launch .exe files.\n    _childProcess = childProcess$1.spawn(\n      'cmd.exe',\n      ['/C', editor].concat(args),\n      { stdio: 'inherit' }\n    );\n  } else {\n    _childProcess = childProcess$1.spawn(editor, args, { stdio: 'inherit' });\n  }\n  _childProcess.on('exit', function (errorCode) {\n    _childProcess = null;\n\n    if (errorCode) {\n      onErrorCallback(fileName, '(code ' + errorCode + ')');\n    }\n  });\n\n  _childProcess.on('error', function (error) {\n    onErrorCallback(fileName, error.message);\n  });\n}\n\nvar launchEditor_1 = launchEditor;\n\nconst url$2 = require$$0$9;\nconst path$5 = require$$0$4;\nconst launch = launchEditor_1;\n\nvar launchEditorMiddleware = (specifiedEditor, srcRoot, onErrorCallback) => {\n  if (typeof specifiedEditor === 'function') {\n    onErrorCallback = specifiedEditor;\n    specifiedEditor = undefined;\n  }\n\n  if (typeof srcRoot === 'function') {\n    onErrorCallback = srcRoot;\n    srcRoot = undefined;\n  }\n\n  srcRoot = srcRoot || process.cwd();\n\n  return function launchEditorMiddleware (req, res, next) {\n    const { file } = url$2.parse(req.url, true).query || {};\n    if (!file) {\n      res.statusCode = 500;\n      res.end(`launch-editor-middleware: required query param \"file\" is missing.`);\n    } else {\n      launch(path$5.resolve(srcRoot, file), specifiedEditor, onErrorCallback);\n      res.end();\n    }\n  }\n};\n\nasync function resolveHttpServer({ proxy }, app, httpsOptions) {\n    if (!httpsOptions) {\n        const { createServer } = await import('node:http');\n        return createServer(app);\n    }\n    // #484 fallback to http1 when proxy is needed.\n    if (proxy) {\n        const { createServer } = await import('node:https');\n        return createServer(httpsOptions, app);\n    }\n    else {\n        const { createSecureServer } = await import('node:http2');\n        return createSecureServer({\n            // Manually increase the session memory to prevent 502 ENHANCE_YOUR_CALM\n            // errors on large numbers of requests\n            maxSessionMemory: 1000,\n            ...httpsOptions,\n            allowHTTP1: true\n        }, \n        // @ts-expect-error TODO: is this correct?\n        app);\n    }\n}\nasync function resolveHttpsConfig(https, cacheDir) {\n    if (!https)\n        return undefined;\n    const httpsOption = isObject$2(https) ? { ...https } : {};\n    const { ca, cert, key, pfx } = httpsOption;\n    Object.assign(httpsOption, {\n        ca: readFileIfExists(ca),\n        cert: readFileIfExists(cert),\n        key: readFileIfExists(key),\n        pfx: readFileIfExists(pfx)\n    });\n    return httpsOption;\n}\nfunction readFileIfExists(value) {\n    if (typeof value === 'string') {\n        try {\n            return fs$l.readFileSync(path$n.resolve(value));\n        }\n        catch (e) {\n            return value;\n        }\n    }\n    return value;\n}\nasync function httpServerStart(httpServer, serverOptions) {\n    let { port, strictPort, host, logger } = serverOptions;\n    return new Promise((resolve, reject) => {\n        const onError = (e) => {\n            if (e.code === 'EADDRINUSE') {\n                if (strictPort) {\n                    httpServer.removeListener('error', onError);\n                    reject(new Error(`Port ${port} is already in use`));\n                }\n                else {\n                    logger.info(`Port ${port} is in use, trying another one...`);\n                    httpServer.listen(++port, host);\n                }\n            }\n            else {\n                httpServer.removeListener('error', onError);\n                reject(e);\n            }\n        };\n        httpServer.on('error', onError);\n        httpServer.listen(port, host, () => {\n            httpServer.removeListener('error', onError);\n            resolve(port);\n        });\n    });\n}\nfunction setClientErrorHandler(server, logger) {\n    server.on('clientError', (err, socket) => {\n        if (err.code === 'HPE_HEADER_OVERFLOW') {\n            logger.warn(picocolors.exports.yellow('Server responded with status code 431. ' +\n                'See https://vitejs.dev/guide/troubleshooting.html#_431-request-header-fields-too-large.'));\n        }\n    });\n}\n\n/**\n * This plugin hooks into Node's module resolution algorithm at runtime,\n * so that SSR builds can benefit from `resolve.dedupe` like they do\n * in development.\n */\nfunction ssrRequireHookPlugin(config) {\n    if (config.command !== 'build' ||\n        !config.build.ssr ||\n        !config.resolve.dedupe?.length ||\n        config.ssr?.noExternal === true ||\n        config.ssr?.format !== 'cjs' ||\n        isBuildOutputEsm(config)) {\n        return null;\n    }\n    return {\n        name: 'vite:ssr-require-hook',\n        transform(code, id) {\n            const moduleInfo = this.getModuleInfo(id);\n            if (moduleInfo?.isEntry) {\n                const s = new MagicString(code);\n                s.prepend(`;(${dedupeRequire.toString()})(${JSON.stringify(config.resolve.dedupe)});\\n`);\n                return {\n                    code: s.toString(),\n                    map: s.generateMap({\n                        source: id,\n                        hires: true\n                    })\n                };\n            }\n        }\n    };\n}\n/** Respect the `resolve.dedupe` option in production SSR. */\nfunction dedupeRequire(dedupe) {\n    // eslint-disable-next-line no-restricted-globals\n    const Module = require('node:module');\n    const resolveFilename = Module._resolveFilename;\n    Module._resolveFilename = function (request, parent, isMain, options) {\n        if (request[0] !== '.' && request[0] !== '/') {\n            const parts = request.split('/');\n            const pkgName = parts[0][0] === '@' ? parts[0] + '/' + parts[1] : parts[0];\n            if (dedupe.includes(pkgName)) {\n                // Use this module as the parent.\n                parent = module;\n            }\n        }\n        return resolveFilename(request, parent, isMain, options);\n    };\n}\nconst _require$1 = createRequire$1(import.meta.url);\nfunction hookNodeResolve(getResolver) {\n    const Module = _require$1('module');\n    const prevResolver = Module._resolveFilename;\n    Module._resolveFilename = getResolver(prevResolver);\n    return () => {\n        Module._resolveFilename = prevResolver;\n    };\n}\nfunction isBuildOutputEsm(config) {\n    const outputs = arraify(config.build.rollupOptions?.output);\n    return outputs.some((output) => output?.format === 'es' || output?.format === 'esm');\n}\n\nlet offset;\ntry {\n    new Function('throw new Error(1)')();\n}\ncatch (e) {\n    // in Node 12, stack traces account for the function wrapper.\n    // in Node 13 and later, the function wrapper adds two lines,\n    // which must be subtracted to generate a valid mapping\n    const match = /:(\\d+):\\d+\\)$/.exec(e.stack.split('\\n')[1]);\n    offset = match ? +match[1] - 1 : 0;\n}\nfunction ssrRewriteStacktrace(stack, moduleGraph) {\n    return stack\n        .split('\\n')\n        .map((line) => {\n        return line.replace(/^ {4}at (?:(.+?)\\s+\\()?(?:(.+?):(\\d+)(?::(\\d+))?)\\)?/, (input, varName, url, line, column) => {\n            if (!url)\n                return input;\n            const mod = moduleGraph.urlToModuleMap.get(url);\n            const rawSourceMap = mod?.ssrTransformResult?.map;\n            if (!rawSourceMap) {\n                return input;\n            }\n            const traced = new TraceMap(rawSourceMap);\n            const pos = originalPositionFor$1(traced, {\n                line: Number(line) - offset,\n                column: Number(column)\n            });\n            if (!pos.source || pos.line == null || pos.column == null) {\n                return input;\n            }\n            const source = `${pos.source}:${pos.line}:${pos.column}`;\n            if (!varName || varName === 'eval') {\n                return `    at ${source}`;\n            }\n            else {\n                return `    at ${varName} (${source})`;\n            }\n        });\n    })\n        .join('\\n');\n}\nfunction rebindErrorStacktrace(e, stacktrace) {\n    const { configurable, writable } = Object.getOwnPropertyDescriptor(e, 'stack');\n    if (configurable) {\n        Object.defineProperty(e, 'stack', {\n            value: stacktrace,\n            enumerable: true,\n            configurable: true,\n            writable: true\n        });\n    }\n    else if (writable) {\n        e.stack = stacktrace;\n    }\n}\n\nconst pendingModules = new Map();\nconst pendingImports = new Map();\nasync function ssrLoadModule(url, server, context = { global }, urlStack = [], fixStacktrace) {\n    url = unwrapId(url).replace(NULL_BYTE_PLACEHOLDER, '\\0');\n    // when we instantiate multiple dependency modules in parallel, they may\n    // point to shared modules. We need to avoid duplicate instantiation attempts\n    // by register every module as pending synchronously so that all subsequent\n    // request to that module are simply waiting on the same promise.\n    const pending = pendingModules.get(url);\n    if (pending) {\n        return pending;\n    }\n    const modulePromise = instantiateModule(url, server, context, urlStack, fixStacktrace);\n    pendingModules.set(url, modulePromise);\n    modulePromise\n        .catch(() => {\n        pendingImports.delete(url);\n    })\n        .finally(() => {\n        pendingModules.delete(url);\n    });\n    return modulePromise;\n}\nasync function instantiateModule(url, server, context = { global }, urlStack = [], fixStacktrace) {\n    const { moduleGraph } = server;\n    const mod = await moduleGraph.ensureEntryFromUrl(url, true);\n    if (mod.ssrError) {\n        throw mod.ssrError;\n    }\n    if (mod.ssrModule) {\n        return mod.ssrModule;\n    }\n    const result = mod.ssrTransformResult ||\n        (await transformRequest(url, server, { ssr: true }));\n    if (!result) {\n        // TODO more info? is this even necessary?\n        throw new Error(`failed to load module for ssr: ${url}`);\n    }\n    const ssrModule = {\n        [Symbol.toStringTag]: 'Module'\n    };\n    Object.defineProperty(ssrModule, '__esModule', { value: true });\n    // Tolerate circular imports by ensuring the module can be\n    // referenced before it's been instantiated.\n    mod.ssrModule = ssrModule;\n    const ssrImportMeta = {\n        // The filesystem URL, matching native Node.js modules\n        url: pathToFileURL(mod.file).toString()\n    };\n    urlStack = urlStack.concat(url);\n    const isCircular = (url) => urlStack.includes(url);\n    const { isProduction, resolve: { dedupe, preserveSymlinks }, root } = server.config;\n    // The `extensions` and `mainFields` options are used to ensure that\n    // CommonJS modules are preferred. We want to avoid ESM->ESM imports\n    // whenever possible, because `hookNodeResolve` can't intercept them.\n    const resolveOptions = {\n        dedupe,\n        extensions: ['.js', '.cjs', '.json'],\n        isBuild: true,\n        isProduction,\n        isRequire: true,\n        mainFields: ['main'],\n        preserveSymlinks,\n        root\n    };\n    // Since dynamic imports can happen in parallel, we need to\n    // account for multiple pending deps and duplicate imports.\n    const pendingDeps = [];\n    const ssrImport = async (dep) => {\n        if (dep[0] !== '.' && dep[0] !== '/') {\n            return nodeImport(dep, mod.file, resolveOptions);\n        }\n        // convert to rollup URL because `pendingImports`, `moduleGraph.urlToModuleMap` requires that\n        dep = unwrapId(dep).replace(NULL_BYTE_PLACEHOLDER, '\\0');\n        if (!isCircular(dep) && !pendingImports.get(dep)?.some(isCircular)) {\n            pendingDeps.push(dep);\n            if (pendingDeps.length === 1) {\n                pendingImports.set(url, pendingDeps);\n            }\n            const mod = await ssrLoadModule(dep, server, context, urlStack, fixStacktrace);\n            if (pendingDeps.length === 1) {\n                pendingImports.delete(url);\n            }\n            else {\n                pendingDeps.splice(pendingDeps.indexOf(dep), 1);\n            }\n            // return local module to avoid race condition #5470\n            return mod;\n        }\n        return moduleGraph.urlToModuleMap.get(dep)?.ssrModule;\n    };\n    const ssrDynamicImport = (dep) => {\n        // #3087 dynamic import vars is ignored at rewrite import path,\n        // so here need process relative path\n        if (dep[0] === '.') {\n            dep = path$n.posix.resolve(path$n.dirname(url), dep);\n        }\n        return ssrImport(dep);\n    };\n    function ssrExportAll(sourceModule) {\n        for (const key in sourceModule) {\n            if (key !== 'default') {\n                Object.defineProperty(ssrModule, key, {\n                    enumerable: true,\n                    configurable: true,\n                    get() {\n                        return sourceModule[key];\n                    }\n                });\n            }\n        }\n    }\n    try {\n        // eslint-disable-next-line @typescript-eslint/no-empty-function\n        const AsyncFunction = async function () { }.constructor;\n        const initModule = new AsyncFunction(`global`, ssrModuleExportsKey, ssrImportMetaKey, ssrImportKey, ssrDynamicImportKey, ssrExportAllKey, '\"use strict\";' + result.code + `\\n//# sourceURL=${mod.url}`);\n        await initModule(context.global, ssrModule, ssrImportMeta, ssrImport, ssrDynamicImport, ssrExportAll);\n    }\n    catch (e) {\n        mod.ssrError = e;\n        if (e.stack && fixStacktrace) {\n            const stacktrace = ssrRewriteStacktrace(e.stack, moduleGraph);\n            rebindErrorStacktrace(e, stacktrace);\n            server.config.logger.error(`Error when evaluating SSR module ${url}:\\n${stacktrace}`, {\n                timestamp: true,\n                clear: server.config.clearScreen,\n                error: e\n            });\n        }\n        throw e;\n    }\n    return Object.freeze(ssrModule);\n}\n// In node@12+ we can use dynamic import to load CJS and ESM\nasync function nodeImport(id, importer, resolveOptions) {\n    // Node's module resolution is hi-jacked so Vite can ensure the\n    // configured `resolve.dedupe` and `mode` options are respected.\n    const viteResolve = (id, importer, options = resolveOptions) => {\n        const resolved = tryNodeResolve(id, importer, options, false);\n        if (!resolved) {\n            const err = new Error(`Cannot find module '${id}' imported from '${importer}'`);\n            err.code = 'ERR_MODULE_NOT_FOUND';\n            throw err;\n        }\n        return resolved.id;\n    };\n    // When an ESM module imports an ESM dependency, this hook is *not* used.\n    const unhookNodeResolve = hookNodeResolve((nodeResolve) => (id, parent, isMain, options) => {\n        // Use the Vite resolver only for bare imports while skipping\n        // any absolute paths, built-in modules and binary modules.\n        if (!bareImportRE.test(id) ||\n            path$n.isAbsolute(id) ||\n            isBuiltin(id) ||\n            id.endsWith('.node')) {\n            return nodeResolve(id, parent, isMain, options);\n        }\n        if (parent) {\n            let resolved = viteResolve(id, parent.id);\n            if (resolved) {\n                // hookNodeResolve must use platform-specific path.normalize\n                // to be compatible with dynamicImport (#6080)\n                resolved = path$n.normalize(resolved);\n            }\n            return resolved;\n        }\n        // Importing a CJS module from an ESM module. In this case, the import\n        // specifier is already an absolute path, so this is a no-op.\n        // Options like `resolve.dedupe` and `mode` are not respected.\n        return id;\n    });\n    let url;\n    if (id.startsWith('node:') || isBuiltin(id)) {\n        url = id;\n    }\n    else {\n        url = viteResolve(id, importer, \n        // Non-external modules can import ESM-only modules, but only outside\n        // of test runs, because we use Node `require` in Jest to avoid segfault.\n        // @ts-expect-error\n        typeof jest === 'undefined'\n            ? { ...resolveOptions, tryEsmOnly: true }\n            : resolveOptions);\n        if (usingDynamicImport) {\n            url = pathToFileURL(url).toString();\n        }\n    }\n    try {\n        const mod = await dynamicImport(url);\n        return proxyESM(mod);\n    }\n    finally {\n        unhookNodeResolve();\n    }\n}\n// rollup-style default import interop for cjs\nfunction proxyESM(mod) {\n    // This is the only sensible option when the exports object is a primitive\n    if (isPrimitive(mod))\n        return { default: mod };\n    let defaultExport = 'default' in mod ? mod.default : mod;\n    if (!isPrimitive(defaultExport) && '__esModule' in defaultExport) {\n        mod = defaultExport;\n        if ('default' in defaultExport) {\n            defaultExport = defaultExport.default;\n        }\n    }\n    return new Proxy(mod, {\n        get(mod, prop) {\n            if (prop === 'default')\n                return defaultExport;\n            return mod[prop] ?? defaultExport?.[prop];\n        }\n    });\n}\nfunction isPrimitive(value) {\n    return !value || (typeof value !== 'object' && typeof value !== 'function');\n}\n\nvar bufferUtil$1 = {exports: {}};\n\nvar constants = {\n  BINARY_TYPES: ['nodebuffer', 'arraybuffer', 'fragments'],\n  EMPTY_BUFFER: Buffer.alloc(0),\n  GUID: '258EAFA5-E914-47DA-95CA-C5AB0DC85B11',\n  kForOnEventAttribute: Symbol('kIsForOnEventAttribute'),\n  kListener: Symbol('kListener'),\n  kStatusCode: Symbol('status-code'),\n  kWebSocket: Symbol('websocket'),\n  NOOP: () => {}\n};\n\nconst { EMPTY_BUFFER: EMPTY_BUFFER$3 } = constants;\n\n/**\n * Merges an array of buffers into a new buffer.\n *\n * @param {Buffer[]} list The array of buffers to concat\n * @param {Number} totalLength The total length of buffers in the list\n * @return {Buffer} The resulting buffer\n * @public\n */\nfunction concat$1(list, totalLength) {\n  if (list.length === 0) return EMPTY_BUFFER$3;\n  if (list.length === 1) return list[0];\n\n  const target = Buffer.allocUnsafe(totalLength);\n  let offset = 0;\n\n  for (let i = 0; i < list.length; i++) {\n    const buf = list[i];\n    target.set(buf, offset);\n    offset += buf.length;\n  }\n\n  if (offset < totalLength) return target.slice(0, offset);\n\n  return target;\n}\n\n/**\n * Masks a buffer using the given mask.\n *\n * @param {Buffer} source The buffer to mask\n * @param {Buffer} mask The mask to use\n * @param {Buffer} output The buffer where to store the result\n * @param {Number} offset The offset at which to start writing\n * @param {Number} length The number of bytes to mask.\n * @public\n */\nfunction _mask(source, mask, output, offset, length) {\n  for (let i = 0; i < length; i++) {\n    output[offset + i] = source[i] ^ mask[i & 3];\n  }\n}\n\n/**\n * Unmasks a buffer using the given mask.\n *\n * @param {Buffer} buffer The buffer to unmask\n * @param {Buffer} mask The mask to use\n * @public\n */\nfunction _unmask(buffer, mask) {\n  for (let i = 0; i < buffer.length; i++) {\n    buffer[i] ^= mask[i & 3];\n  }\n}\n\n/**\n * Converts a buffer to an `ArrayBuffer`.\n *\n * @param {Buffer} buf The buffer to convert\n * @return {ArrayBuffer} Converted buffer\n * @public\n */\nfunction toArrayBuffer$1(buf) {\n  if (buf.byteLength === buf.buffer.byteLength) {\n    return buf.buffer;\n  }\n\n  return buf.buffer.slice(buf.byteOffset, buf.byteOffset + buf.byteLength);\n}\n\n/**\n * Converts `data` to a `Buffer`.\n *\n * @param {*} data The data to convert\n * @return {Buffer} The buffer\n * @throws {TypeError}\n * @public\n */\nfunction toBuffer$2(data) {\n  toBuffer$2.readOnly = true;\n\n  if (Buffer.isBuffer(data)) return data;\n\n  let buf;\n\n  if (data instanceof ArrayBuffer) {\n    buf = Buffer.from(data);\n  } else if (ArrayBuffer.isView(data)) {\n    buf = Buffer.from(data.buffer, data.byteOffset, data.byteLength);\n  } else {\n    buf = Buffer.from(data);\n    toBuffer$2.readOnly = false;\n  }\n\n  return buf;\n}\n\nbufferUtil$1.exports = {\n  concat: concat$1,\n  mask: _mask,\n  toArrayBuffer: toArrayBuffer$1,\n  toBuffer: toBuffer$2,\n  unmask: _unmask\n};\n\n/* istanbul ignore else  */\nif (!process.env.WS_NO_BUFFER_UTIL) {\n  try {\n    const bufferUtil = require('bufferutil');\n\n    bufferUtil$1.exports.mask = function (source, mask, output, offset, length) {\n      if (length < 48) _mask(source, mask, output, offset, length);\n      else bufferUtil.mask(source, mask, output, offset, length);\n    };\n\n    bufferUtil$1.exports.unmask = function (buffer, mask) {\n      if (buffer.length < 32) _unmask(buffer, mask);\n      else bufferUtil.unmask(buffer, mask);\n    };\n  } catch (e) {\n    // Continue regardless of the error.\n  }\n}\n\nconst kDone = Symbol('kDone');\nconst kRun = Symbol('kRun');\n\n/**\n * A very simple job queue with adjustable concurrency. Adapted from\n * https://github.com/STRML/async-limiter\n */\nclass Limiter$1 {\n  /**\n   * Creates a new `Limiter`.\n   *\n   * @param {Number} [concurrency=Infinity] The maximum number of jobs allowed\n   *     to run concurrently\n   */\n  constructor(concurrency) {\n    this[kDone] = () => {\n      this.pending--;\n      this[kRun]();\n    };\n    this.concurrency = concurrency || Infinity;\n    this.jobs = [];\n    this.pending = 0;\n  }\n\n  /**\n   * Adds a job to the queue.\n   *\n   * @param {Function} job The job to run\n   * @public\n   */\n  add(job) {\n    this.jobs.push(job);\n    this[kRun]();\n  }\n\n  /**\n   * Removes a job from the queue and runs it if possible.\n   *\n   * @private\n   */\n  [kRun]() {\n    if (this.pending === this.concurrency) return;\n\n    if (this.jobs.length) {\n      const job = this.jobs.shift();\n\n      this.pending++;\n      job(this[kDone]);\n    }\n  }\n}\n\nvar limiter = Limiter$1;\n\nconst zlib = require$$0$b;\n\nconst bufferUtil = bufferUtil$1.exports;\nconst Limiter = limiter;\nconst { kStatusCode: kStatusCode$2 } = constants;\n\nconst TRAILER = Buffer.from([0x00, 0x00, 0xff, 0xff]);\nconst kPerMessageDeflate = Symbol('permessage-deflate');\nconst kTotalLength = Symbol('total-length');\nconst kCallback = Symbol('callback');\nconst kBuffers = Symbol('buffers');\nconst kError$1 = Symbol('error');\n\n//\n// We limit zlib concurrency, which prevents severe memory fragmentation\n// as documented in https://github.com/nodejs/node/issues/8871#issuecomment-250915913\n// and https://github.com/websockets/ws/issues/1202\n//\n// Intentionally global; it's the global thread pool that's an issue.\n//\nlet zlibLimiter;\n\n/**\n * permessage-deflate implementation.\n */\nclass PerMessageDeflate$4 {\n  /**\n   * Creates a PerMessageDeflate instance.\n   *\n   * @param {Object} [options] Configuration options\n   * @param {(Boolean|Number)} [options.clientMaxWindowBits] Advertise support\n   *     for, or request, a custom client window size\n   * @param {Boolean} [options.clientNoContextTakeover=false] Advertise/\n   *     acknowledge disabling of client context takeover\n   * @param {Number} [options.concurrencyLimit=10] The number of concurrent\n   *     calls to zlib\n   * @param {(Boolean|Number)} [options.serverMaxWindowBits] Request/confirm the\n   *     use of a custom server window size\n   * @param {Boolean} [options.serverNoContextTakeover=false] Request/accept\n   *     disabling of server context takeover\n   * @param {Number} [options.threshold=1024] Size (in bytes) below which\n   *     messages should not be compressed if context takeover is disabled\n   * @param {Object} [options.zlibDeflateOptions] Options to pass to zlib on\n   *     deflate\n   * @param {Object} [options.zlibInflateOptions] Options to pass to zlib on\n   *     inflate\n   * @param {Boolean} [isServer=false] Create the instance in either server or\n   *     client mode\n   * @param {Number} [maxPayload=0] The maximum allowed message length\n   */\n  constructor(options, isServer, maxPayload) {\n    this._maxPayload = maxPayload | 0;\n    this._options = options || {};\n    this._threshold =\n      this._options.threshold !== undefined ? this._options.threshold : 1024;\n    this._isServer = !!isServer;\n    this._deflate = null;\n    this._inflate = null;\n\n    this.params = null;\n\n    if (!zlibLimiter) {\n      const concurrency =\n        this._options.concurrencyLimit !== undefined\n          ? this._options.concurrencyLimit\n          : 10;\n      zlibLimiter = new Limiter(concurrency);\n    }\n  }\n\n  /**\n   * @type {String}\n   */\n  static get extensionName() {\n    return 'permessage-deflate';\n  }\n\n  /**\n   * Create an extension negotiation offer.\n   *\n   * @return {Object} Extension parameters\n   * @public\n   */\n  offer() {\n    const params = {};\n\n    if (this._options.serverNoContextTakeover) {\n      params.server_no_context_takeover = true;\n    }\n    if (this._options.clientNoContextTakeover) {\n      params.client_no_context_takeover = true;\n    }\n    if (this._options.serverMaxWindowBits) {\n      params.server_max_window_bits = this._options.serverMaxWindowBits;\n    }\n    if (this._options.clientMaxWindowBits) {\n      params.client_max_window_bits = this._options.clientMaxWindowBits;\n    } else if (this._options.clientMaxWindowBits == null) {\n      params.client_max_window_bits = true;\n    }\n\n    return params;\n  }\n\n  /**\n   * Accept an extension negotiation offer/response.\n   *\n   * @param {Array} configurations The extension negotiation offers/reponse\n   * @return {Object} Accepted configuration\n   * @public\n   */\n  accept(configurations) {\n    configurations = this.normalizeParams(configurations);\n\n    this.params = this._isServer\n      ? this.acceptAsServer(configurations)\n      : this.acceptAsClient(configurations);\n\n    return this.params;\n  }\n\n  /**\n   * Releases all resources used by the extension.\n   *\n   * @public\n   */\n  cleanup() {\n    if (this._inflate) {\n      this._inflate.close();\n      this._inflate = null;\n    }\n\n    if (this._deflate) {\n      const callback = this._deflate[kCallback];\n\n      this._deflate.close();\n      this._deflate = null;\n\n      if (callback) {\n        callback(\n          new Error(\n            'The deflate stream was closed while data was being processed'\n          )\n        );\n      }\n    }\n  }\n\n  /**\n   *  Accept an extension negotiation offer.\n   *\n   * @param {Array} offers The extension negotiation offers\n   * @return {Object} Accepted configuration\n   * @private\n   */\n  acceptAsServer(offers) {\n    const opts = this._options;\n    const accepted = offers.find((params) => {\n      if (\n        (opts.serverNoContextTakeover === false &&\n          params.server_no_context_takeover) ||\n        (params.server_max_window_bits &&\n          (opts.serverMaxWindowBits === false ||\n            (typeof opts.serverMaxWindowBits === 'number' &&\n              opts.serverMaxWindowBits > params.server_max_window_bits))) ||\n        (typeof opts.clientMaxWindowBits === 'number' &&\n          !params.client_max_window_bits)\n      ) {\n        return false;\n      }\n\n      return true;\n    });\n\n    if (!accepted) {\n      throw new Error('None of the extension offers can be accepted');\n    }\n\n    if (opts.serverNoContextTakeover) {\n      accepted.server_no_context_takeover = true;\n    }\n    if (opts.clientNoContextTakeover) {\n      accepted.client_no_context_takeover = true;\n    }\n    if (typeof opts.serverMaxWindowBits === 'number') {\n      accepted.server_max_window_bits = opts.serverMaxWindowBits;\n    }\n    if (typeof opts.clientMaxWindowBits === 'number') {\n      accepted.client_max_window_bits = opts.clientMaxWindowBits;\n    } else if (\n      accepted.client_max_window_bits === true ||\n      opts.clientMaxWindowBits === false\n    ) {\n      delete accepted.client_max_window_bits;\n    }\n\n    return accepted;\n  }\n\n  /**\n   * Accept the extension negotiation response.\n   *\n   * @param {Array} response The extension negotiation response\n   * @return {Object} Accepted configuration\n   * @private\n   */\n  acceptAsClient(response) {\n    const params = response[0];\n\n    if (\n      this._options.clientNoContextTakeover === false &&\n      params.client_no_context_takeover\n    ) {\n      throw new Error('Unexpected parameter \"client_no_context_takeover\"');\n    }\n\n    if (!params.client_max_window_bits) {\n      if (typeof this._options.clientMaxWindowBits === 'number') {\n        params.client_max_window_bits = this._options.clientMaxWindowBits;\n      }\n    } else if (\n      this._options.clientMaxWindowBits === false ||\n      (typeof this._options.clientMaxWindowBits === 'number' &&\n        params.client_max_window_bits > this._options.clientMaxWindowBits)\n    ) {\n      throw new Error(\n        'Unexpected or invalid parameter \"client_max_window_bits\"'\n      );\n    }\n\n    return params;\n  }\n\n  /**\n   * Normalize parameters.\n   *\n   * @param {Array} configurations The extension negotiation offers/reponse\n   * @return {Array} The offers/response with normalized parameters\n   * @private\n   */\n  normalizeParams(configurations) {\n    configurations.forEach((params) => {\n      Object.keys(params).forEach((key) => {\n        let value = params[key];\n\n        if (value.length > 1) {\n          throw new Error(`Parameter \"${key}\" must have only a single value`);\n        }\n\n        value = value[0];\n\n        if (key === 'client_max_window_bits') {\n          if (value !== true) {\n            const num = +value;\n            if (!Number.isInteger(num) || num < 8 || num > 15) {\n              throw new TypeError(\n                `Invalid value for parameter \"${key}\": ${value}`\n              );\n            }\n            value = num;\n          } else if (!this._isServer) {\n            throw new TypeError(\n              `Invalid value for parameter \"${key}\": ${value}`\n            );\n          }\n        } else if (key === 'server_max_window_bits') {\n          const num = +value;\n          if (!Number.isInteger(num) || num < 8 || num > 15) {\n            throw new TypeError(\n              `Invalid value for parameter \"${key}\": ${value}`\n            );\n          }\n          value = num;\n        } else if (\n          key === 'client_no_context_takeover' ||\n          key === 'server_no_context_takeover'\n        ) {\n          if (value !== true) {\n            throw new TypeError(\n              `Invalid value for parameter \"${key}\": ${value}`\n            );\n          }\n        } else {\n          throw new Error(`Unknown parameter \"${key}\"`);\n        }\n\n        params[key] = value;\n      });\n    });\n\n    return configurations;\n  }\n\n  /**\n   * Decompress data. Concurrency limited.\n   *\n   * @param {Buffer} data Compressed data\n   * @param {Boolean} fin Specifies whether or not this is the last fragment\n   * @param {Function} callback Callback\n   * @public\n   */\n  decompress(data, fin, callback) {\n    zlibLimiter.add((done) => {\n      this._decompress(data, fin, (err, result) => {\n        done();\n        callback(err, result);\n      });\n    });\n  }\n\n  /**\n   * Compress data. Concurrency limited.\n   *\n   * @param {(Buffer|String)} data Data to compress\n   * @param {Boolean} fin Specifies whether or not this is the last fragment\n   * @param {Function} callback Callback\n   * @public\n   */\n  compress(data, fin, callback) {\n    zlibLimiter.add((done) => {\n      this._compress(data, fin, (err, result) => {\n        done();\n        callback(err, result);\n      });\n    });\n  }\n\n  /**\n   * Decompress data.\n   *\n   * @param {Buffer} data Compressed data\n   * @param {Boolean} fin Specifies whether or not this is the last fragment\n   * @param {Function} callback Callback\n   * @private\n   */\n  _decompress(data, fin, callback) {\n    const endpoint = this._isServer ? 'client' : 'server';\n\n    if (!this._inflate) {\n      const key = `${endpoint}_max_window_bits`;\n      const windowBits =\n        typeof this.params[key] !== 'number'\n          ? zlib.Z_DEFAULT_WINDOWBITS\n          : this.params[key];\n\n      this._inflate = zlib.createInflateRaw({\n        ...this._options.zlibInflateOptions,\n        windowBits\n      });\n      this._inflate[kPerMessageDeflate] = this;\n      this._inflate[kTotalLength] = 0;\n      this._inflate[kBuffers] = [];\n      this._inflate.on('error', inflateOnError);\n      this._inflate.on('data', inflateOnData);\n    }\n\n    this._inflate[kCallback] = callback;\n\n    this._inflate.write(data);\n    if (fin) this._inflate.write(TRAILER);\n\n    this._inflate.flush(() => {\n      const err = this._inflate[kError$1];\n\n      if (err) {\n        this._inflate.close();\n        this._inflate = null;\n        callback(err);\n        return;\n      }\n\n      const data = bufferUtil.concat(\n        this._inflate[kBuffers],\n        this._inflate[kTotalLength]\n      );\n\n      if (this._inflate._readableState.endEmitted) {\n        this._inflate.close();\n        this._inflate = null;\n      } else {\n        this._inflate[kTotalLength] = 0;\n        this._inflate[kBuffers] = [];\n\n        if (fin && this.params[`${endpoint}_no_context_takeover`]) {\n          this._inflate.reset();\n        }\n      }\n\n      callback(null, data);\n    });\n  }\n\n  /**\n   * Compress data.\n   *\n   * @param {(Buffer|String)} data Data to compress\n   * @param {Boolean} fin Specifies whether or not this is the last fragment\n   * @param {Function} callback Callback\n   * @private\n   */\n  _compress(data, fin, callback) {\n    const endpoint = this._isServer ? 'server' : 'client';\n\n    if (!this._deflate) {\n      const key = `${endpoint}_max_window_bits`;\n      const windowBits =\n        typeof this.params[key] !== 'number'\n          ? zlib.Z_DEFAULT_WINDOWBITS\n          : this.params[key];\n\n      this._deflate = zlib.createDeflateRaw({\n        ...this._options.zlibDeflateOptions,\n        windowBits\n      });\n\n      this._deflate[kTotalLength] = 0;\n      this._deflate[kBuffers] = [];\n\n      this._deflate.on('data', deflateOnData);\n    }\n\n    this._deflate[kCallback] = callback;\n\n    this._deflate.write(data);\n    this._deflate.flush(zlib.Z_SYNC_FLUSH, () => {\n      if (!this._deflate) {\n        //\n        // The deflate stream was closed while data was being processed.\n        //\n        return;\n      }\n\n      let data = bufferUtil.concat(\n        this._deflate[kBuffers],\n        this._deflate[kTotalLength]\n      );\n\n      if (fin) data = data.slice(0, data.length - 4);\n\n      //\n      // Ensure that the callback will not be called again in\n      // `PerMessageDeflate#cleanup()`.\n      //\n      this._deflate[kCallback] = null;\n\n      this._deflate[kTotalLength] = 0;\n      this._deflate[kBuffers] = [];\n\n      if (fin && this.params[`${endpoint}_no_context_takeover`]) {\n        this._deflate.reset();\n      }\n\n      callback(null, data);\n    });\n  }\n}\n\nvar permessageDeflate = PerMessageDeflate$4;\n\n/**\n * The listener of the `zlib.DeflateRaw` stream `'data'` event.\n *\n * @param {Buffer} chunk A chunk of data\n * @private\n */\nfunction deflateOnData(chunk) {\n  this[kBuffers].push(chunk);\n  this[kTotalLength] += chunk.length;\n}\n\n/**\n * The listener of the `zlib.InflateRaw` stream `'data'` event.\n *\n * @param {Buffer} chunk A chunk of data\n * @private\n */\nfunction inflateOnData(chunk) {\n  this[kTotalLength] += chunk.length;\n\n  if (\n    this[kPerMessageDeflate]._maxPayload < 1 ||\n    this[kTotalLength] <= this[kPerMessageDeflate]._maxPayload\n  ) {\n    this[kBuffers].push(chunk);\n    return;\n  }\n\n  this[kError$1] = new RangeError('Max payload size exceeded');\n  this[kError$1].code = 'WS_ERR_UNSUPPORTED_MESSAGE_LENGTH';\n  this[kError$1][kStatusCode$2] = 1009;\n  this.removeListener('data', inflateOnData);\n  this.reset();\n}\n\n/**\n * The listener of the `zlib.InflateRaw` stream `'error'` event.\n *\n * @param {Error} err The emitted error\n * @private\n */\nfunction inflateOnError(err) {\n  //\n  // There is no need to call `Zlib#close()` as the handle is automatically\n  // closed when an error is emitted.\n  //\n  this[kPerMessageDeflate]._inflate = null;\n  err[kStatusCode$2] = 1007;\n  this[kCallback](err);\n}\n\nvar validation = {exports: {}};\n\n//\n// Allowed token characters:\n//\n// '!', '#', '$', '%', '&', ''', '*', '+', '-',\n// '.', 0-9, A-Z, '^', '_', '`', a-z, '|', '~'\n//\n// tokenChars[32] === 0 // ' '\n// tokenChars[33] === 1 // '!'\n// tokenChars[34] === 0 // '\"'\n// ...\n//\n// prettier-ignore\nconst tokenChars$2 = [\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, // 0 - 15\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, // 16 - 31\n  0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, // 32 - 47\n  1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, // 48 - 63\n  0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, // 64 - 79\n  1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, // 80 - 95\n  1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, // 96 - 111\n  1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0 // 112 - 127\n];\n\n/**\n * Checks if a status code is allowed in a close frame.\n *\n * @param {Number} code The status code\n * @return {Boolean} `true` if the status code is valid, else `false`\n * @public\n */\nfunction isValidStatusCode$2(code) {\n  return (\n    (code >= 1000 &&\n      code <= 1014 &&\n      code !== 1004 &&\n      code !== 1005 &&\n      code !== 1006) ||\n    (code >= 3000 && code <= 4999)\n  );\n}\n\n/**\n * Checks if a given buffer contains only correct UTF-8.\n * Ported from https://www.cl.cam.ac.uk/%7Emgk25/ucs/utf8_check.c by\n * Markus Kuhn.\n *\n * @param {Buffer} buf The buffer to check\n * @return {Boolean} `true` if `buf` contains only correct UTF-8, else `false`\n * @public\n */\nfunction _isValidUTF8(buf) {\n  const len = buf.length;\n  let i = 0;\n\n  while (i < len) {\n    if ((buf[i] & 0x80) === 0) {\n      // 0xxxxxxx\n      i++;\n    } else if ((buf[i] & 0xe0) === 0xc0) {\n      // 110xxxxx 10xxxxxx\n      if (\n        i + 1 === len ||\n        (buf[i + 1] & 0xc0) !== 0x80 ||\n        (buf[i] & 0xfe) === 0xc0 // Overlong\n      ) {\n        return false;\n      }\n\n      i += 2;\n    } else if ((buf[i] & 0xf0) === 0xe0) {\n      // 1110xxxx 10xxxxxx 10xxxxxx\n      if (\n        i + 2 >= len ||\n        (buf[i + 1] & 0xc0) !== 0x80 ||\n        (buf[i + 2] & 0xc0) !== 0x80 ||\n        (buf[i] === 0xe0 && (buf[i + 1] & 0xe0) === 0x80) || // Overlong\n        (buf[i] === 0xed && (buf[i + 1] & 0xe0) === 0xa0) // Surrogate (U+D800 - U+DFFF)\n      ) {\n        return false;\n      }\n\n      i += 3;\n    } else if ((buf[i] & 0xf8) === 0xf0) {\n      // 11110xxx 10xxxxxx 10xxxxxx 10xxxxxx\n      if (\n        i + 3 >= len ||\n        (buf[i + 1] & 0xc0) !== 0x80 ||\n        (buf[i + 2] & 0xc0) !== 0x80 ||\n        (buf[i + 3] & 0xc0) !== 0x80 ||\n        (buf[i] === 0xf0 && (buf[i + 1] & 0xf0) === 0x80) || // Overlong\n        (buf[i] === 0xf4 && buf[i + 1] > 0x8f) ||\n        buf[i] > 0xf4 // > U+10FFFF\n      ) {\n        return false;\n      }\n\n      i += 4;\n    } else {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nvalidation.exports = {\n  isValidStatusCode: isValidStatusCode$2,\n  isValidUTF8: _isValidUTF8,\n  tokenChars: tokenChars$2\n};\n\n/* istanbul ignore else  */\nif (!process.env.WS_NO_UTF_8_VALIDATE) {\n  try {\n    const isValidUTF8 = require('utf-8-validate');\n\n    validation.exports.isValidUTF8 = function (buf) {\n      return buf.length < 150 ? _isValidUTF8(buf) : isValidUTF8(buf);\n    };\n  } catch (e) {\n    // Continue regardless of the error.\n  }\n}\n\nconst { Writable: Writable$1 } = require$$0$7;\n\nconst PerMessageDeflate$3 = permessageDeflate;\nconst {\n  BINARY_TYPES: BINARY_TYPES$1,\n  EMPTY_BUFFER: EMPTY_BUFFER$2,\n  kStatusCode: kStatusCode$1,\n  kWebSocket: kWebSocket$2\n} = constants;\nconst { concat, toArrayBuffer, unmask } = bufferUtil$1.exports;\nconst { isValidStatusCode: isValidStatusCode$1, isValidUTF8 } = validation.exports;\n\nconst GET_INFO = 0;\nconst GET_PAYLOAD_LENGTH_16 = 1;\nconst GET_PAYLOAD_LENGTH_64 = 2;\nconst GET_MASK = 3;\nconst GET_DATA = 4;\nconst INFLATING = 5;\n\n/**\n * HyBi Receiver implementation.\n *\n * @extends Writable\n */\nclass Receiver$1 extends Writable$1 {\n  /**\n   * Creates a Receiver instance.\n   *\n   * @param {Object} [options] Options object\n   * @param {String} [options.binaryType=nodebuffer] The type for binary data\n   * @param {Object} [options.extensions] An object containing the negotiated\n   *     extensions\n   * @param {Boolean} [options.isServer=false] Specifies whether to operate in\n   *     client or server mode\n   * @param {Number} [options.maxPayload=0] The maximum allowed message length\n   * @param {Boolean} [options.skipUTF8Validation=false] Specifies whether or\n   *     not to skip UTF-8 validation for text and close messages\n   */\n  constructor(options = {}) {\n    super();\n\n    this._binaryType = options.binaryType || BINARY_TYPES$1[0];\n    this._extensions = options.extensions || {};\n    this._isServer = !!options.isServer;\n    this._maxPayload = options.maxPayload | 0;\n    this._skipUTF8Validation = !!options.skipUTF8Validation;\n    this[kWebSocket$2] = undefined;\n\n    this._bufferedBytes = 0;\n    this._buffers = [];\n\n    this._compressed = false;\n    this._payloadLength = 0;\n    this._mask = undefined;\n    this._fragmented = 0;\n    this._masked = false;\n    this._fin = false;\n    this._opcode = 0;\n\n    this._totalPayloadLength = 0;\n    this._messageLength = 0;\n    this._fragments = [];\n\n    this._state = GET_INFO;\n    this._loop = false;\n  }\n\n  /**\n   * Implements `Writable.prototype._write()`.\n   *\n   * @param {Buffer} chunk The chunk of data to write\n   * @param {String} encoding The character encoding of `chunk`\n   * @param {Function} cb Callback\n   * @private\n   */\n  _write(chunk, encoding, cb) {\n    if (this._opcode === 0x08 && this._state == GET_INFO) return cb();\n\n    this._bufferedBytes += chunk.length;\n    this._buffers.push(chunk);\n    this.startLoop(cb);\n  }\n\n  /**\n   * Consumes `n` bytes from the buffered data.\n   *\n   * @param {Number} n The number of bytes to consume\n   * @return {Buffer} The consumed bytes\n   * @private\n   */\n  consume(n) {\n    this._bufferedBytes -= n;\n\n    if (n === this._buffers[0].length) return this._buffers.shift();\n\n    if (n < this._buffers[0].length) {\n      const buf = this._buffers[0];\n      this._buffers[0] = buf.slice(n);\n      return buf.slice(0, n);\n    }\n\n    const dst = Buffer.allocUnsafe(n);\n\n    do {\n      const buf = this._buffers[0];\n      const offset = dst.length - n;\n\n      if (n >= buf.length) {\n        dst.set(this._buffers.shift(), offset);\n      } else {\n        dst.set(new Uint8Array(buf.buffer, buf.byteOffset, n), offset);\n        this._buffers[0] = buf.slice(n);\n      }\n\n      n -= buf.length;\n    } while (n > 0);\n\n    return dst;\n  }\n\n  /**\n   * Starts the parsing loop.\n   *\n   * @param {Function} cb Callback\n   * @private\n   */\n  startLoop(cb) {\n    let err;\n    this._loop = true;\n\n    do {\n      switch (this._state) {\n        case GET_INFO:\n          err = this.getInfo();\n          break;\n        case GET_PAYLOAD_LENGTH_16:\n          err = this.getPayloadLength16();\n          break;\n        case GET_PAYLOAD_LENGTH_64:\n          err = this.getPayloadLength64();\n          break;\n        case GET_MASK:\n          this.getMask();\n          break;\n        case GET_DATA:\n          err = this.getData(cb);\n          break;\n        default:\n          // `INFLATING`\n          this._loop = false;\n          return;\n      }\n    } while (this._loop);\n\n    cb(err);\n  }\n\n  /**\n   * Reads the first two bytes of a frame.\n   *\n   * @return {(RangeError|undefined)} A possible error\n   * @private\n   */\n  getInfo() {\n    if (this._bufferedBytes < 2) {\n      this._loop = false;\n      return;\n    }\n\n    const buf = this.consume(2);\n\n    if ((buf[0] & 0x30) !== 0x00) {\n      this._loop = false;\n      return error(\n        RangeError,\n        'RSV2 and RSV3 must be clear',\n        true,\n        1002,\n        'WS_ERR_UNEXPECTED_RSV_2_3'\n      );\n    }\n\n    const compressed = (buf[0] & 0x40) === 0x40;\n\n    if (compressed && !this._extensions[PerMessageDeflate$3.extensionName]) {\n      this._loop = false;\n      return error(\n        RangeError,\n        'RSV1 must be clear',\n        true,\n        1002,\n        'WS_ERR_UNEXPECTED_RSV_1'\n      );\n    }\n\n    this._fin = (buf[0] & 0x80) === 0x80;\n    this._opcode = buf[0] & 0x0f;\n    this._payloadLength = buf[1] & 0x7f;\n\n    if (this._opcode === 0x00) {\n      if (compressed) {\n        this._loop = false;\n        return error(\n          RangeError,\n          'RSV1 must be clear',\n          true,\n          1002,\n          'WS_ERR_UNEXPECTED_RSV_1'\n        );\n      }\n\n      if (!this._fragmented) {\n        this._loop = false;\n        return error(\n          RangeError,\n          'invalid opcode 0',\n          true,\n          1002,\n          'WS_ERR_INVALID_OPCODE'\n        );\n      }\n\n      this._opcode = this._fragmented;\n    } else if (this._opcode === 0x01 || this._opcode === 0x02) {\n      if (this._fragmented) {\n        this._loop = false;\n        return error(\n          RangeError,\n          `invalid opcode ${this._opcode}`,\n          true,\n          1002,\n          'WS_ERR_INVALID_OPCODE'\n        );\n      }\n\n      this._compressed = compressed;\n    } else if (this._opcode > 0x07 && this._opcode < 0x0b) {\n      if (!this._fin) {\n        this._loop = false;\n        return error(\n          RangeError,\n          'FIN must be set',\n          true,\n          1002,\n          'WS_ERR_EXPECTED_FIN'\n        );\n      }\n\n      if (compressed) {\n        this._loop = false;\n        return error(\n          RangeError,\n          'RSV1 must be clear',\n          true,\n          1002,\n          'WS_ERR_UNEXPECTED_RSV_1'\n        );\n      }\n\n      if (this._payloadLength > 0x7d) {\n        this._loop = false;\n        return error(\n          RangeError,\n          `invalid payload length ${this._payloadLength}`,\n          true,\n          1002,\n          'WS_ERR_INVALID_CONTROL_PAYLOAD_LENGTH'\n        );\n      }\n    } else {\n      this._loop = false;\n      return error(\n        RangeError,\n        `invalid opcode ${this._opcode}`,\n        true,\n        1002,\n        'WS_ERR_INVALID_OPCODE'\n      );\n    }\n\n    if (!this._fin && !this._fragmented) this._fragmented = this._opcode;\n    this._masked = (buf[1] & 0x80) === 0x80;\n\n    if (this._isServer) {\n      if (!this._masked) {\n        this._loop = false;\n        return error(\n          RangeError,\n          'MASK must be set',\n          true,\n          1002,\n          'WS_ERR_EXPECTED_MASK'\n        );\n      }\n    } else if (this._masked) {\n      this._loop = false;\n      return error(\n        RangeError,\n        'MASK must be clear',\n        true,\n        1002,\n        'WS_ERR_UNEXPECTED_MASK'\n      );\n    }\n\n    if (this._payloadLength === 126) this._state = GET_PAYLOAD_LENGTH_16;\n    else if (this._payloadLength === 127) this._state = GET_PAYLOAD_LENGTH_64;\n    else return this.haveLength();\n  }\n\n  /**\n   * Gets extended payload length (7+16).\n   *\n   * @return {(RangeError|undefined)} A possible error\n   * @private\n   */\n  getPayloadLength16() {\n    if (this._bufferedBytes < 2) {\n      this._loop = false;\n      return;\n    }\n\n    this._payloadLength = this.consume(2).readUInt16BE(0);\n    return this.haveLength();\n  }\n\n  /**\n   * Gets extended payload length (7+64).\n   *\n   * @return {(RangeError|undefined)} A possible error\n   * @private\n   */\n  getPayloadLength64() {\n    if (this._bufferedBytes < 8) {\n      this._loop = false;\n      return;\n    }\n\n    const buf = this.consume(8);\n    const num = buf.readUInt32BE(0);\n\n    //\n    // The maximum safe integer in JavaScript is 2^53 - 1. An error is returned\n    // if payload length is greater than this number.\n    //\n    if (num > Math.pow(2, 53 - 32) - 1) {\n      this._loop = false;\n      return error(\n        RangeError,\n        'Unsupported WebSocket frame: payload length > 2^53 - 1',\n        false,\n        1009,\n        'WS_ERR_UNSUPPORTED_DATA_PAYLOAD_LENGTH'\n      );\n    }\n\n    this._payloadLength = num * Math.pow(2, 32) + buf.readUInt32BE(4);\n    return this.haveLength();\n  }\n\n  /**\n   * Payload length has been read.\n   *\n   * @return {(RangeError|undefined)} A possible error\n   * @private\n   */\n  haveLength() {\n    if (this._payloadLength && this._opcode < 0x08) {\n      this._totalPayloadLength += this._payloadLength;\n      if (this._totalPayloadLength > this._maxPayload && this._maxPayload > 0) {\n        this._loop = false;\n        return error(\n          RangeError,\n          'Max payload size exceeded',\n          false,\n          1009,\n          'WS_ERR_UNSUPPORTED_MESSAGE_LENGTH'\n        );\n      }\n    }\n\n    if (this._masked) this._state = GET_MASK;\n    else this._state = GET_DATA;\n  }\n\n  /**\n   * Reads mask bytes.\n   *\n   * @private\n   */\n  getMask() {\n    if (this._bufferedBytes < 4) {\n      this._loop = false;\n      return;\n    }\n\n    this._mask = this.consume(4);\n    this._state = GET_DATA;\n  }\n\n  /**\n   * Reads data bytes.\n   *\n   * @param {Function} cb Callback\n   * @return {(Error|RangeError|undefined)} A possible error\n   * @private\n   */\n  getData(cb) {\n    let data = EMPTY_BUFFER$2;\n\n    if (this._payloadLength) {\n      if (this._bufferedBytes < this._payloadLength) {\n        this._loop = false;\n        return;\n      }\n\n      data = this.consume(this._payloadLength);\n\n      if (\n        this._masked &&\n        (this._mask[0] | this._mask[1] | this._mask[2] | this._mask[3]) !== 0\n      ) {\n        unmask(data, this._mask);\n      }\n    }\n\n    if (this._opcode > 0x07) return this.controlMessage(data);\n\n    if (this._compressed) {\n      this._state = INFLATING;\n      this.decompress(data, cb);\n      return;\n    }\n\n    if (data.length) {\n      //\n      // This message is not compressed so its length is the sum of the payload\n      // length of all fragments.\n      //\n      this._messageLength = this._totalPayloadLength;\n      this._fragments.push(data);\n    }\n\n    return this.dataMessage();\n  }\n\n  /**\n   * Decompresses data.\n   *\n   * @param {Buffer} data Compressed data\n   * @param {Function} cb Callback\n   * @private\n   */\n  decompress(data, cb) {\n    const perMessageDeflate = this._extensions[PerMessageDeflate$3.extensionName];\n\n    perMessageDeflate.decompress(data, this._fin, (err, buf) => {\n      if (err) return cb(err);\n\n      if (buf.length) {\n        this._messageLength += buf.length;\n        if (this._messageLength > this._maxPayload && this._maxPayload > 0) {\n          return cb(\n            error(\n              RangeError,\n              'Max payload size exceeded',\n              false,\n              1009,\n              'WS_ERR_UNSUPPORTED_MESSAGE_LENGTH'\n            )\n          );\n        }\n\n        this._fragments.push(buf);\n      }\n\n      const er = this.dataMessage();\n      if (er) return cb(er);\n\n      this.startLoop(cb);\n    });\n  }\n\n  /**\n   * Handles a data message.\n   *\n   * @return {(Error|undefined)} A possible error\n   * @private\n   */\n  dataMessage() {\n    if (this._fin) {\n      const messageLength = this._messageLength;\n      const fragments = this._fragments;\n\n      this._totalPayloadLength = 0;\n      this._messageLength = 0;\n      this._fragmented = 0;\n      this._fragments = [];\n\n      if (this._opcode === 2) {\n        let data;\n\n        if (this._binaryType === 'nodebuffer') {\n          data = concat(fragments, messageLength);\n        } else if (this._binaryType === 'arraybuffer') {\n          data = toArrayBuffer(concat(fragments, messageLength));\n        } else {\n          data = fragments;\n        }\n\n        this.emit('message', data, true);\n      } else {\n        const buf = concat(fragments, messageLength);\n\n        if (!this._skipUTF8Validation && !isValidUTF8(buf)) {\n          this._loop = false;\n          return error(\n            Error,\n            'invalid UTF-8 sequence',\n            true,\n            1007,\n            'WS_ERR_INVALID_UTF8'\n          );\n        }\n\n        this.emit('message', buf, false);\n      }\n    }\n\n    this._state = GET_INFO;\n  }\n\n  /**\n   * Handles a control message.\n   *\n   * @param {Buffer} data Data to handle\n   * @return {(Error|RangeError|undefined)} A possible error\n   * @private\n   */\n  controlMessage(data) {\n    if (this._opcode === 0x08) {\n      this._loop = false;\n\n      if (data.length === 0) {\n        this.emit('conclude', 1005, EMPTY_BUFFER$2);\n        this.end();\n      } else if (data.length === 1) {\n        return error(\n          RangeError,\n          'invalid payload length 1',\n          true,\n          1002,\n          'WS_ERR_INVALID_CONTROL_PAYLOAD_LENGTH'\n        );\n      } else {\n        const code = data.readUInt16BE(0);\n\n        if (!isValidStatusCode$1(code)) {\n          return error(\n            RangeError,\n            `invalid status code ${code}`,\n            true,\n            1002,\n            'WS_ERR_INVALID_CLOSE_CODE'\n          );\n        }\n\n        const buf = data.slice(2);\n\n        if (!this._skipUTF8Validation && !isValidUTF8(buf)) {\n          return error(\n            Error,\n            'invalid UTF-8 sequence',\n            true,\n            1007,\n            'WS_ERR_INVALID_UTF8'\n          );\n        }\n\n        this.emit('conclude', code, buf);\n        this.end();\n      }\n    } else if (this._opcode === 0x09) {\n      this.emit('ping', data);\n    } else {\n      this.emit('pong', data);\n    }\n\n    this._state = GET_INFO;\n  }\n}\n\nvar receiver = Receiver$1;\n\n/**\n * Builds an error object.\n *\n * @param {function(new:Error|RangeError)} ErrorCtor The error constructor\n * @param {String} message The error message\n * @param {Boolean} prefix Specifies whether or not to add a default prefix to\n *     `message`\n * @param {Number} statusCode The status code\n * @param {String} errorCode The exposed error code\n * @return {(Error|RangeError)} The error\n * @private\n */\nfunction error(ErrorCtor, message, prefix, statusCode, errorCode) {\n  const err = new ErrorCtor(\n    prefix ? `Invalid WebSocket frame: ${message}` : message\n  );\n\n  Error.captureStackTrace(err, error);\n  err.code = errorCode;\n  err[kStatusCode$1] = statusCode;\n  return err;\n}\n\n/* eslint no-unused-vars: [\"error\", { \"varsIgnorePattern\": \"^net|tls$\" }] */\nconst { randomFillSync } = require$$5;\n\nconst PerMessageDeflate$2 = permessageDeflate;\nconst { EMPTY_BUFFER: EMPTY_BUFFER$1 } = constants;\nconst { isValidStatusCode } = validation.exports;\nconst { mask: applyMask, toBuffer: toBuffer$1 } = bufferUtil$1.exports;\n\nconst kByteLength = Symbol('kByteLength');\nconst maskBuffer = Buffer.alloc(4);\n\n/**\n * HyBi Sender implementation.\n */\nclass Sender$1 {\n  /**\n   * Creates a Sender instance.\n   *\n   * @param {(net.Socket|tls.Socket)} socket The connection socket\n   * @param {Object} [extensions] An object containing the negotiated extensions\n   * @param {Function} [generateMask] The function used to generate the masking\n   *     key\n   */\n  constructor(socket, extensions, generateMask) {\n    this._extensions = extensions || {};\n\n    if (generateMask) {\n      this._generateMask = generateMask;\n      this._maskBuffer = Buffer.alloc(4);\n    }\n\n    this._socket = socket;\n\n    this._firstFragment = true;\n    this._compress = false;\n\n    this._bufferedBytes = 0;\n    this._deflating = false;\n    this._queue = [];\n  }\n\n  /**\n   * Frames a piece of data according to the HyBi WebSocket protocol.\n   *\n   * @param {(Buffer|String)} data The data to frame\n   * @param {Object} options Options object\n   * @param {Boolean} [options.fin=false] Specifies whether or not to set the\n   *     FIN bit\n   * @param {Function} [options.generateMask] The function used to generate the\n   *     masking key\n   * @param {Boolean} [options.mask=false] Specifies whether or not to mask\n   *     `data`\n   * @param {Buffer} [options.maskBuffer] The buffer used to store the masking\n   *     key\n   * @param {Number} options.opcode The opcode\n   * @param {Boolean} [options.readOnly=false] Specifies whether `data` can be\n   *     modified\n   * @param {Boolean} [options.rsv1=false] Specifies whether or not to set the\n   *     RSV1 bit\n   * @return {(Buffer|String)[]} The framed data\n   * @public\n   */\n  static frame(data, options) {\n    let mask;\n    let merge = false;\n    let offset = 2;\n    let skipMasking = false;\n\n    if (options.mask) {\n      mask = options.maskBuffer || maskBuffer;\n\n      if (options.generateMask) {\n        options.generateMask(mask);\n      } else {\n        randomFillSync(mask, 0, 4);\n      }\n\n      skipMasking = (mask[0] | mask[1] | mask[2] | mask[3]) === 0;\n      offset = 6;\n    }\n\n    let dataLength;\n\n    if (typeof data === 'string') {\n      if (\n        (!options.mask || skipMasking) &&\n        options[kByteLength] !== undefined\n      ) {\n        dataLength = options[kByteLength];\n      } else {\n        data = Buffer.from(data);\n        dataLength = data.length;\n      }\n    } else {\n      dataLength = data.length;\n      merge = options.mask && options.readOnly && !skipMasking;\n    }\n\n    let payloadLength = dataLength;\n\n    if (dataLength >= 65536) {\n      offset += 8;\n      payloadLength = 127;\n    } else if (dataLength > 125) {\n      offset += 2;\n      payloadLength = 126;\n    }\n\n    const target = Buffer.allocUnsafe(merge ? dataLength + offset : offset);\n\n    target[0] = options.fin ? options.opcode | 0x80 : options.opcode;\n    if (options.rsv1) target[0] |= 0x40;\n\n    target[1] = payloadLength;\n\n    if (payloadLength === 126) {\n      target.writeUInt16BE(dataLength, 2);\n    } else if (payloadLength === 127) {\n      target[2] = target[3] = 0;\n      target.writeUIntBE(dataLength, 4, 6);\n    }\n\n    if (!options.mask) return [target, data];\n\n    target[1] |= 0x80;\n    target[offset - 4] = mask[0];\n    target[offset - 3] = mask[1];\n    target[offset - 2] = mask[2];\n    target[offset - 1] = mask[3];\n\n    if (skipMasking) return [target, data];\n\n    if (merge) {\n      applyMask(data, mask, target, offset, dataLength);\n      return [target];\n    }\n\n    applyMask(data, mask, data, 0, dataLength);\n    return [target, data];\n  }\n\n  /**\n   * Sends a close message to the other peer.\n   *\n   * @param {Number} [code] The status code component of the body\n   * @param {(String|Buffer)} [data] The message component of the body\n   * @param {Boolean} [mask=false] Specifies whether or not to mask the message\n   * @param {Function} [cb] Callback\n   * @public\n   */\n  close(code, data, mask, cb) {\n    let buf;\n\n    if (code === undefined) {\n      buf = EMPTY_BUFFER$1;\n    } else if (typeof code !== 'number' || !isValidStatusCode(code)) {\n      throw new TypeError('First argument must be a valid error code number');\n    } else if (data === undefined || !data.length) {\n      buf = Buffer.allocUnsafe(2);\n      buf.writeUInt16BE(code, 0);\n    } else {\n      const length = Buffer.byteLength(data);\n\n      if (length > 123) {\n        throw new RangeError('The message must not be greater than 123 bytes');\n      }\n\n      buf = Buffer.allocUnsafe(2 + length);\n      buf.writeUInt16BE(code, 0);\n\n      if (typeof data === 'string') {\n        buf.write(data, 2);\n      } else {\n        buf.set(data, 2);\n      }\n    }\n\n    const options = {\n      [kByteLength]: buf.length,\n      fin: true,\n      generateMask: this._generateMask,\n      mask,\n      maskBuffer: this._maskBuffer,\n      opcode: 0x08,\n      readOnly: false,\n      rsv1: false\n    };\n\n    if (this._deflating) {\n      this.enqueue([this.dispatch, buf, false, options, cb]);\n    } else {\n      this.sendFrame(Sender$1.frame(buf, options), cb);\n    }\n  }\n\n  /**\n   * Sends a ping message to the other peer.\n   *\n   * @param {*} data The message to send\n   * @param {Boolean} [mask=false] Specifies whether or not to mask `data`\n   * @param {Function} [cb] Callback\n   * @public\n   */\n  ping(data, mask, cb) {\n    let byteLength;\n    let readOnly;\n\n    if (typeof data === 'string') {\n      byteLength = Buffer.byteLength(data);\n      readOnly = false;\n    } else {\n      data = toBuffer$1(data);\n      byteLength = data.length;\n      readOnly = toBuffer$1.readOnly;\n    }\n\n    if (byteLength > 125) {\n      throw new RangeError('The data size must not be greater than 125 bytes');\n    }\n\n    const options = {\n      [kByteLength]: byteLength,\n      fin: true,\n      generateMask: this._generateMask,\n      mask,\n      maskBuffer: this._maskBuffer,\n      opcode: 0x09,\n      readOnly,\n      rsv1: false\n    };\n\n    if (this._deflating) {\n      this.enqueue([this.dispatch, data, false, options, cb]);\n    } else {\n      this.sendFrame(Sender$1.frame(data, options), cb);\n    }\n  }\n\n  /**\n   * Sends a pong message to the other peer.\n   *\n   * @param {*} data The message to send\n   * @param {Boolean} [mask=false] Specifies whether or not to mask `data`\n   * @param {Function} [cb] Callback\n   * @public\n   */\n  pong(data, mask, cb) {\n    let byteLength;\n    let readOnly;\n\n    if (typeof data === 'string') {\n      byteLength = Buffer.byteLength(data);\n      readOnly = false;\n    } else {\n      data = toBuffer$1(data);\n      byteLength = data.length;\n      readOnly = toBuffer$1.readOnly;\n    }\n\n    if (byteLength > 125) {\n      throw new RangeError('The data size must not be greater than 125 bytes');\n    }\n\n    const options = {\n      [kByteLength]: byteLength,\n      fin: true,\n      generateMask: this._generateMask,\n      mask,\n      maskBuffer: this._maskBuffer,\n      opcode: 0x0a,\n      readOnly,\n      rsv1: false\n    };\n\n    if (this._deflating) {\n      this.enqueue([this.dispatch, data, false, options, cb]);\n    } else {\n      this.sendFrame(Sender$1.frame(data, options), cb);\n    }\n  }\n\n  /**\n   * Sends a data message to the other peer.\n   *\n   * @param {*} data The message to send\n   * @param {Object} options Options object\n   * @param {Boolean} [options.binary=false] Specifies whether `data` is binary\n   *     or text\n   * @param {Boolean} [options.compress=false] Specifies whether or not to\n   *     compress `data`\n   * @param {Boolean} [options.fin=false] Specifies whether the fragment is the\n   *     last one\n   * @param {Boolean} [options.mask=false] Specifies whether or not to mask\n   *     `data`\n   * @param {Function} [cb] Callback\n   * @public\n   */\n  send(data, options, cb) {\n    const perMessageDeflate = this._extensions[PerMessageDeflate$2.extensionName];\n    let opcode = options.binary ? 2 : 1;\n    let rsv1 = options.compress;\n\n    let byteLength;\n    let readOnly;\n\n    if (typeof data === 'string') {\n      byteLength = Buffer.byteLength(data);\n      readOnly = false;\n    } else {\n      data = toBuffer$1(data);\n      byteLength = data.length;\n      readOnly = toBuffer$1.readOnly;\n    }\n\n    if (this._firstFragment) {\n      this._firstFragment = false;\n      if (\n        rsv1 &&\n        perMessageDeflate &&\n        perMessageDeflate.params[\n          perMessageDeflate._isServer\n            ? 'server_no_context_takeover'\n            : 'client_no_context_takeover'\n        ]\n      ) {\n        rsv1 = byteLength >= perMessageDeflate._threshold;\n      }\n      this._compress = rsv1;\n    } else {\n      rsv1 = false;\n      opcode = 0;\n    }\n\n    if (options.fin) this._firstFragment = true;\n\n    if (perMessageDeflate) {\n      const opts = {\n        [kByteLength]: byteLength,\n        fin: options.fin,\n        generateMask: this._generateMask,\n        mask: options.mask,\n        maskBuffer: this._maskBuffer,\n        opcode,\n        readOnly,\n        rsv1\n      };\n\n      if (this._deflating) {\n        this.enqueue([this.dispatch, data, this._compress, opts, cb]);\n      } else {\n        this.dispatch(data, this._compress, opts, cb);\n      }\n    } else {\n      this.sendFrame(\n        Sender$1.frame(data, {\n          [kByteLength]: byteLength,\n          fin: options.fin,\n          generateMask: this._generateMask,\n          mask: options.mask,\n          maskBuffer: this._maskBuffer,\n          opcode,\n          readOnly,\n          rsv1: false\n        }),\n        cb\n      );\n    }\n  }\n\n  /**\n   * Dispatches a message.\n   *\n   * @param {(Buffer|String)} data The message to send\n   * @param {Boolean} [compress=false] Specifies whether or not to compress\n   *     `data`\n   * @param {Object} options Options object\n   * @param {Boolean} [options.fin=false] Specifies whether or not to set the\n   *     FIN bit\n   * @param {Function} [options.generateMask] The function used to generate the\n   *     masking key\n   * @param {Boolean} [options.mask=false] Specifies whether or not to mask\n   *     `data`\n   * @param {Buffer} [options.maskBuffer] The buffer used to store the masking\n   *     key\n   * @param {Number} options.opcode The opcode\n   * @param {Boolean} [options.readOnly=false] Specifies whether `data` can be\n   *     modified\n   * @param {Boolean} [options.rsv1=false] Specifies whether or not to set the\n   *     RSV1 bit\n   * @param {Function} [cb] Callback\n   * @private\n   */\n  dispatch(data, compress, options, cb) {\n    if (!compress) {\n      this.sendFrame(Sender$1.frame(data, options), cb);\n      return;\n    }\n\n    const perMessageDeflate = this._extensions[PerMessageDeflate$2.extensionName];\n\n    this._bufferedBytes += options[kByteLength];\n    this._deflating = true;\n    perMessageDeflate.compress(data, options.fin, (_, buf) => {\n      if (this._socket.destroyed) {\n        const err = new Error(\n          'The socket was closed while data was being compressed'\n        );\n\n        if (typeof cb === 'function') cb(err);\n\n        for (let i = 0; i < this._queue.length; i++) {\n          const params = this._queue[i];\n          const callback = params[params.length - 1];\n\n          if (typeof callback === 'function') callback(err);\n        }\n\n        return;\n      }\n\n      this._bufferedBytes -= options[kByteLength];\n      this._deflating = false;\n      options.readOnly = false;\n      this.sendFrame(Sender$1.frame(buf, options), cb);\n      this.dequeue();\n    });\n  }\n\n  /**\n   * Executes queued send operations.\n   *\n   * @private\n   */\n  dequeue() {\n    while (!this._deflating && this._queue.length) {\n      const params = this._queue.shift();\n\n      this._bufferedBytes -= params[3][kByteLength];\n      Reflect.apply(params[0], this, params.slice(1));\n    }\n  }\n\n  /**\n   * Enqueues a send operation.\n   *\n   * @param {Array} params Send operation parameters.\n   * @private\n   */\n  enqueue(params) {\n    this._bufferedBytes += params[3][kByteLength];\n    this._queue.push(params);\n  }\n\n  /**\n   * Sends a frame.\n   *\n   * @param {Buffer[]} list The frame to send\n   * @param {Function} [cb] Callback\n   * @private\n   */\n  sendFrame(list, cb) {\n    if (list.length === 2) {\n      this._socket.cork();\n      this._socket.write(list[0]);\n      this._socket.write(list[1], cb);\n      this._socket.uncork();\n    } else {\n      this._socket.write(list[0], cb);\n    }\n  }\n}\n\nvar sender = Sender$1;\n\nconst { kForOnEventAttribute: kForOnEventAttribute$1, kListener: kListener$1 } = constants;\n\nconst kCode = Symbol('kCode');\nconst kData = Symbol('kData');\nconst kError = Symbol('kError');\nconst kMessage = Symbol('kMessage');\nconst kReason = Symbol('kReason');\nconst kTarget = Symbol('kTarget');\nconst kType = Symbol('kType');\nconst kWasClean = Symbol('kWasClean');\n\n/**\n * Class representing an event.\n */\nclass Event {\n  /**\n   * Create a new `Event`.\n   *\n   * @param {String} type The name of the event\n   * @throws {TypeError} If the `type` argument is not specified\n   */\n  constructor(type) {\n    this[kTarget] = null;\n    this[kType] = type;\n  }\n\n  /**\n   * @type {*}\n   */\n  get target() {\n    return this[kTarget];\n  }\n\n  /**\n   * @type {String}\n   */\n  get type() {\n    return this[kType];\n  }\n}\n\nObject.defineProperty(Event.prototype, 'target', { enumerable: true });\nObject.defineProperty(Event.prototype, 'type', { enumerable: true });\n\n/**\n * Class representing a close event.\n *\n * @extends Event\n */\nclass CloseEvent extends Event {\n  /**\n   * Create a new `CloseEvent`.\n   *\n   * @param {String} type The name of the event\n   * @param {Object} [options] A dictionary object that allows for setting\n   *     attributes via object members of the same name\n   * @param {Number} [options.code=0] The status code explaining why the\n   *     connection was closed\n   * @param {String} [options.reason=''] A human-readable string explaining why\n   *     the connection was closed\n   * @param {Boolean} [options.wasClean=false] Indicates whether or not the\n   *     connection was cleanly closed\n   */\n  constructor(type, options = {}) {\n    super(type);\n\n    this[kCode] = options.code === undefined ? 0 : options.code;\n    this[kReason] = options.reason === undefined ? '' : options.reason;\n    this[kWasClean] = options.wasClean === undefined ? false : options.wasClean;\n  }\n\n  /**\n   * @type {Number}\n   */\n  get code() {\n    return this[kCode];\n  }\n\n  /**\n   * @type {String}\n   */\n  get reason() {\n    return this[kReason];\n  }\n\n  /**\n   * @type {Boolean}\n   */\n  get wasClean() {\n    return this[kWasClean];\n  }\n}\n\nObject.defineProperty(CloseEvent.prototype, 'code', { enumerable: true });\nObject.defineProperty(CloseEvent.prototype, 'reason', { enumerable: true });\nObject.defineProperty(CloseEvent.prototype, 'wasClean', { enumerable: true });\n\n/**\n * Class representing an error event.\n *\n * @extends Event\n */\nclass ErrorEvent extends Event {\n  /**\n   * Create a new `ErrorEvent`.\n   *\n   * @param {String} type The name of the event\n   * @param {Object} [options] A dictionary object that allows for setting\n   *     attributes via object members of the same name\n   * @param {*} [options.error=null] The error that generated this event\n   * @param {String} [options.message=''] The error message\n   */\n  constructor(type, options = {}) {\n    super(type);\n\n    this[kError] = options.error === undefined ? null : options.error;\n    this[kMessage] = options.message === undefined ? '' : options.message;\n  }\n\n  /**\n   * @type {*}\n   */\n  get error() {\n    return this[kError];\n  }\n\n  /**\n   * @type {String}\n   */\n  get message() {\n    return this[kMessage];\n  }\n}\n\nObject.defineProperty(ErrorEvent.prototype, 'error', { enumerable: true });\nObject.defineProperty(ErrorEvent.prototype, 'message', { enumerable: true });\n\n/**\n * Class representing a message event.\n *\n * @extends Event\n */\nclass MessageEvent extends Event {\n  /**\n   * Create a new `MessageEvent`.\n   *\n   * @param {String} type The name of the event\n   * @param {Object} [options] A dictionary object that allows for setting\n   *     attributes via object members of the same name\n   * @param {*} [options.data=null] The message content\n   */\n  constructor(type, options = {}) {\n    super(type);\n\n    this[kData] = options.data === undefined ? null : options.data;\n  }\n\n  /**\n   * @type {*}\n   */\n  get data() {\n    return this[kData];\n  }\n}\n\nObject.defineProperty(MessageEvent.prototype, 'data', { enumerable: true });\n\n/**\n * This provides methods for emulating the `EventTarget` interface. It's not\n * meant to be used directly.\n *\n * @mixin\n */\nconst EventTarget = {\n  /**\n   * Register an event listener.\n   *\n   * @param {String} type A string representing the event type to listen for\n   * @param {Function} listener The listener to add\n   * @param {Object} [options] An options object specifies characteristics about\n   *     the event listener\n   * @param {Boolean} [options.once=false] A `Boolean` indicating that the\n   *     listener should be invoked at most once after being added. If `true`,\n   *     the listener would be automatically removed when invoked.\n   * @public\n   */\n  addEventListener(type, listener, options = {}) {\n    let wrapper;\n\n    if (type === 'message') {\n      wrapper = function onMessage(data, isBinary) {\n        const event = new MessageEvent('message', {\n          data: isBinary ? data : data.toString()\n        });\n\n        event[kTarget] = this;\n        listener.call(this, event);\n      };\n    } else if (type === 'close') {\n      wrapper = function onClose(code, message) {\n        const event = new CloseEvent('close', {\n          code,\n          reason: message.toString(),\n          wasClean: this._closeFrameReceived && this._closeFrameSent\n        });\n\n        event[kTarget] = this;\n        listener.call(this, event);\n      };\n    } else if (type === 'error') {\n      wrapper = function onError(error) {\n        const event = new ErrorEvent('error', {\n          error,\n          message: error.message\n        });\n\n        event[kTarget] = this;\n        listener.call(this, event);\n      };\n    } else if (type === 'open') {\n      wrapper = function onOpen() {\n        const event = new Event('open');\n\n        event[kTarget] = this;\n        listener.call(this, event);\n      };\n    } else {\n      return;\n    }\n\n    wrapper[kForOnEventAttribute$1] = !!options[kForOnEventAttribute$1];\n    wrapper[kListener$1] = listener;\n\n    if (options.once) {\n      this.once(type, wrapper);\n    } else {\n      this.on(type, wrapper);\n    }\n  },\n\n  /**\n   * Remove an event listener.\n   *\n   * @param {String} type A string representing the event type to remove\n   * @param {Function} handler The listener to remove\n   * @public\n   */\n  removeEventListener(type, handler) {\n    for (const listener of this.listeners(type)) {\n      if (listener[kListener$1] === handler && !listener[kForOnEventAttribute$1]) {\n        this.removeListener(type, listener);\n        break;\n      }\n    }\n  }\n};\n\nvar eventTarget = {\n  CloseEvent,\n  ErrorEvent,\n  Event,\n  EventTarget,\n  MessageEvent\n};\n\nconst { tokenChars: tokenChars$1 } = validation.exports;\n\n/**\n * Adds an offer to the map of extension offers or a parameter to the map of\n * parameters.\n *\n * @param {Object} dest The map of extension offers or parameters\n * @param {String} name The extension or parameter name\n * @param {(Object|Boolean|String)} elem The extension parameters or the\n *     parameter value\n * @private\n */\nfunction push$1(dest, name, elem) {\n  if (dest[name] === undefined) dest[name] = [elem];\n  else dest[name].push(elem);\n}\n\n/**\n * Parses the `Sec-WebSocket-Extensions` header into an object.\n *\n * @param {String} header The field value of the header\n * @return {Object} The parsed object\n * @public\n */\nfunction parse$6(header) {\n  const offers = Object.create(null);\n  let params = Object.create(null);\n  let mustUnescape = false;\n  let isEscaping = false;\n  let inQuotes = false;\n  let extensionName;\n  let paramName;\n  let start = -1;\n  let code = -1;\n  let end = -1;\n  let i = 0;\n\n  for (; i < header.length; i++) {\n    code = header.charCodeAt(i);\n\n    if (extensionName === undefined) {\n      if (end === -1 && tokenChars$1[code] === 1) {\n        if (start === -1) start = i;\n      } else if (\n        i !== 0 &&\n        (code === 0x20 /* ' ' */ || code === 0x09) /* '\\t' */\n      ) {\n        if (end === -1 && start !== -1) end = i;\n      } else if (code === 0x3b /* ';' */ || code === 0x2c /* ',' */) {\n        if (start === -1) {\n          throw new SyntaxError(`Unexpected character at index ${i}`);\n        }\n\n        if (end === -1) end = i;\n        const name = header.slice(start, end);\n        if (code === 0x2c) {\n          push$1(offers, name, params);\n          params = Object.create(null);\n        } else {\n          extensionName = name;\n        }\n\n        start = end = -1;\n      } else {\n        throw new SyntaxError(`Unexpected character at index ${i}`);\n      }\n    } else if (paramName === undefined) {\n      if (end === -1 && tokenChars$1[code] === 1) {\n        if (start === -1) start = i;\n      } else if (code === 0x20 || code === 0x09) {\n        if (end === -1 && start !== -1) end = i;\n      } else if (code === 0x3b || code === 0x2c) {\n        if (start === -1) {\n          throw new SyntaxError(`Unexpected character at index ${i}`);\n        }\n\n        if (end === -1) end = i;\n        push$1(params, header.slice(start, end), true);\n        if (code === 0x2c) {\n          push$1(offers, extensionName, params);\n          params = Object.create(null);\n          extensionName = undefined;\n        }\n\n        start = end = -1;\n      } else if (code === 0x3d /* '=' */ && start !== -1 && end === -1) {\n        paramName = header.slice(start, i);\n        start = end = -1;\n      } else {\n        throw new SyntaxError(`Unexpected character at index ${i}`);\n      }\n    } else {\n      //\n      // The value of a quoted-string after unescaping must conform to the\n      // token ABNF, so only token characters are valid.\n      // Ref: https://tools.ietf.org/html/rfc6455#section-9.1\n      //\n      if (isEscaping) {\n        if (tokenChars$1[code] !== 1) {\n          throw new SyntaxError(`Unexpected character at index ${i}`);\n        }\n        if (start === -1) start = i;\n        else if (!mustUnescape) mustUnescape = true;\n        isEscaping = false;\n      } else if (inQuotes) {\n        if (tokenChars$1[code] === 1) {\n          if (start === -1) start = i;\n        } else if (code === 0x22 /* '\"' */ && start !== -1) {\n          inQuotes = false;\n          end = i;\n        } else if (code === 0x5c /* '\\' */) {\n          isEscaping = true;\n        } else {\n          throw new SyntaxError(`Unexpected character at index ${i}`);\n        }\n      } else if (code === 0x22 && header.charCodeAt(i - 1) === 0x3d) {\n        inQuotes = true;\n      } else if (end === -1 && tokenChars$1[code] === 1) {\n        if (start === -1) start = i;\n      } else if (start !== -1 && (code === 0x20 || code === 0x09)) {\n        if (end === -1) end = i;\n      } else if (code === 0x3b || code === 0x2c) {\n        if (start === -1) {\n          throw new SyntaxError(`Unexpected character at index ${i}`);\n        }\n\n        if (end === -1) end = i;\n        let value = header.slice(start, end);\n        if (mustUnescape) {\n          value = value.replace(/\\\\/g, '');\n          mustUnescape = false;\n        }\n        push$1(params, paramName, value);\n        if (code === 0x2c) {\n          push$1(offers, extensionName, params);\n          params = Object.create(null);\n          extensionName = undefined;\n        }\n\n        paramName = undefined;\n        start = end = -1;\n      } else {\n        throw new SyntaxError(`Unexpected character at index ${i}`);\n      }\n    }\n  }\n\n  if (start === -1 || inQuotes || code === 0x20 || code === 0x09) {\n    throw new SyntaxError('Unexpected end of input');\n  }\n\n  if (end === -1) end = i;\n  const token = header.slice(start, end);\n  if (extensionName === undefined) {\n    push$1(offers, token, params);\n  } else {\n    if (paramName === undefined) {\n      push$1(params, token, true);\n    } else if (mustUnescape) {\n      push$1(params, paramName, token.replace(/\\\\/g, ''));\n    } else {\n      push$1(params, paramName, token);\n    }\n    push$1(offers, extensionName, params);\n  }\n\n  return offers;\n}\n\n/**\n * Builds the `Sec-WebSocket-Extensions` header field value.\n *\n * @param {Object} extensions The map of extensions and parameters to format\n * @return {String} A string representing the given object\n * @public\n */\nfunction format$1(extensions) {\n  return Object.keys(extensions)\n    .map((extension) => {\n      let configurations = extensions[extension];\n      if (!Array.isArray(configurations)) configurations = [configurations];\n      return configurations\n        .map((params) => {\n          return [extension]\n            .concat(\n              Object.keys(params).map((k) => {\n                let values = params[k];\n                if (!Array.isArray(values)) values = [values];\n                return values\n                  .map((v) => (v === true ? k : `${k}=${v}`))\n                  .join('; ');\n              })\n            )\n            .join('; ');\n        })\n        .join(', ');\n    })\n    .join(', ');\n}\n\nvar extension$1 = { format: format$1, parse: parse$6 };\n\n/* eslint no-unused-vars: [\"error\", { \"varsIgnorePattern\": \"^Readable$\" }] */\n\nconst EventEmitter$1 = require$$0$5;\nconst https$2 = require$$1$3;\nconst http$3 = require$$1$2;\nconst net = require$$3$1;\nconst tls = require$$4;\nconst { randomBytes, createHash: createHash$1 } = require$$5;\nconst { URL: URL$2 } = require$$0$9;\n\nconst PerMessageDeflate$1 = permessageDeflate;\nconst Receiver = receiver;\nconst Sender = sender;\nconst {\n  BINARY_TYPES,\n  EMPTY_BUFFER,\n  GUID: GUID$1,\n  kForOnEventAttribute,\n  kListener,\n  kStatusCode,\n  kWebSocket: kWebSocket$1,\n  NOOP\n} = constants;\nconst {\n  EventTarget: { addEventListener, removeEventListener }\n} = eventTarget;\nconst { format, parse: parse$5 } = extension$1;\nconst { toBuffer } = bufferUtil$1.exports;\n\nconst closeTimeout = 30 * 1000;\nconst kAborted = Symbol('kAborted');\nconst protocolVersions = [8, 13];\nconst readyStates = ['CONNECTING', 'OPEN', 'CLOSING', 'CLOSED'];\nconst subprotocolRegex = /^[!#$%&'*+\\-.0-9A-Z^_`|a-z~]+$/;\n\n/**\n * Class representing a WebSocket.\n *\n * @extends EventEmitter\n */\nclass WebSocket$1 extends EventEmitter$1 {\n  /**\n   * Create a new `WebSocket`.\n   *\n   * @param {(String|URL)} address The URL to which to connect\n   * @param {(String|String[])} [protocols] The subprotocols\n   * @param {Object} [options] Connection options\n   */\n  constructor(address, protocols, options) {\n    super();\n\n    this._binaryType = BINARY_TYPES[0];\n    this._closeCode = 1006;\n    this._closeFrameReceived = false;\n    this._closeFrameSent = false;\n    this._closeMessage = EMPTY_BUFFER;\n    this._closeTimer = null;\n    this._extensions = {};\n    this._paused = false;\n    this._protocol = '';\n    this._readyState = WebSocket$1.CONNECTING;\n    this._receiver = null;\n    this._sender = null;\n    this._socket = null;\n\n    if (address !== null) {\n      this._bufferedAmount = 0;\n      this._isServer = false;\n      this._redirects = 0;\n\n      if (protocols === undefined) {\n        protocols = [];\n      } else if (!Array.isArray(protocols)) {\n        if (typeof protocols === 'object' && protocols !== null) {\n          options = protocols;\n          protocols = [];\n        } else {\n          protocols = [protocols];\n        }\n      }\n\n      initAsClient(this, address, protocols, options);\n    } else {\n      this._isServer = true;\n    }\n  }\n\n  /**\n   * This deviates from the WHATWG interface since ws doesn't support the\n   * required default \"blob\" type (instead we define a custom \"nodebuffer\"\n   * type).\n   *\n   * @type {String}\n   */\n  get binaryType() {\n    return this._binaryType;\n  }\n\n  set binaryType(type) {\n    if (!BINARY_TYPES.includes(type)) return;\n\n    this._binaryType = type;\n\n    //\n    // Allow to change `binaryType` on the fly.\n    //\n    if (this._receiver) this._receiver._binaryType = type;\n  }\n\n  /**\n   * @type {Number}\n   */\n  get bufferedAmount() {\n    if (!this._socket) return this._bufferedAmount;\n\n    return this._socket._writableState.length + this._sender._bufferedBytes;\n  }\n\n  /**\n   * @type {String}\n   */\n  get extensions() {\n    return Object.keys(this._extensions).join();\n  }\n\n  /**\n   * @type {Boolean}\n   */\n  get isPaused() {\n    return this._paused;\n  }\n\n  /**\n   * @type {Function}\n   */\n  /* istanbul ignore next */\n  get onclose() {\n    return null;\n  }\n\n  /**\n   * @type {Function}\n   */\n  /* istanbul ignore next */\n  get onerror() {\n    return null;\n  }\n\n  /**\n   * @type {Function}\n   */\n  /* istanbul ignore next */\n  get onopen() {\n    return null;\n  }\n\n  /**\n   * @type {Function}\n   */\n  /* istanbul ignore next */\n  get onmessage() {\n    return null;\n  }\n\n  /**\n   * @type {String}\n   */\n  get protocol() {\n    return this._protocol;\n  }\n\n  /**\n   * @type {Number}\n   */\n  get readyState() {\n    return this._readyState;\n  }\n\n  /**\n   * @type {String}\n   */\n  get url() {\n    return this._url;\n  }\n\n  /**\n   * Set up the socket and the internal resources.\n   *\n   * @param {(net.Socket|tls.Socket)} socket The network socket between the\n   *     server and client\n   * @param {Buffer} head The first packet of the upgraded stream\n   * @param {Object} options Options object\n   * @param {Function} [options.generateMask] The function used to generate the\n   *     masking key\n   * @param {Number} [options.maxPayload=0] The maximum allowed message size\n   * @param {Boolean} [options.skipUTF8Validation=false] Specifies whether or\n   *     not to skip UTF-8 validation for text and close messages\n   * @private\n   */\n  setSocket(socket, head, options) {\n    const receiver = new Receiver({\n      binaryType: this.binaryType,\n      extensions: this._extensions,\n      isServer: this._isServer,\n      maxPayload: options.maxPayload,\n      skipUTF8Validation: options.skipUTF8Validation\n    });\n\n    this._sender = new Sender(socket, this._extensions, options.generateMask);\n    this._receiver = receiver;\n    this._socket = socket;\n\n    receiver[kWebSocket$1] = this;\n    socket[kWebSocket$1] = this;\n\n    receiver.on('conclude', receiverOnConclude);\n    receiver.on('drain', receiverOnDrain);\n    receiver.on('error', receiverOnError);\n    receiver.on('message', receiverOnMessage);\n    receiver.on('ping', receiverOnPing);\n    receiver.on('pong', receiverOnPong);\n\n    socket.setTimeout(0);\n    socket.setNoDelay();\n\n    if (head.length > 0) socket.unshift(head);\n\n    socket.on('close', socketOnClose);\n    socket.on('data', socketOnData);\n    socket.on('end', socketOnEnd);\n    socket.on('error', socketOnError$1);\n\n    this._readyState = WebSocket$1.OPEN;\n    this.emit('open');\n  }\n\n  /**\n   * Emit the `'close'` event.\n   *\n   * @private\n   */\n  emitClose() {\n    if (!this._socket) {\n      this._readyState = WebSocket$1.CLOSED;\n      this.emit('close', this._closeCode, this._closeMessage);\n      return;\n    }\n\n    if (this._extensions[PerMessageDeflate$1.extensionName]) {\n      this._extensions[PerMessageDeflate$1.extensionName].cleanup();\n    }\n\n    this._receiver.removeAllListeners();\n    this._readyState = WebSocket$1.CLOSED;\n    this.emit('close', this._closeCode, this._closeMessage);\n  }\n\n  /**\n   * Start a closing handshake.\n   *\n   *          +----------+   +-----------+   +----------+\n   *     - - -|ws.close()|-->|close frame|-->|ws.close()|- - -\n   *    |     +----------+   +-----------+   +----------+     |\n   *          +----------+   +-----------+         |\n   * CLOSING  |ws.close()|<--|close frame|<--+-----+       CLOSING\n   *          +----------+   +-----------+   |\n   *    |           |                        |   +---+        |\n   *                +------------------------+-->|fin| - - - -\n   *    |         +---+                      |   +---+\n   *     - - - - -|fin|<---------------------+\n   *              +---+\n   *\n   * @param {Number} [code] Status code explaining why the connection is closing\n   * @param {(String|Buffer)} [data] The reason why the connection is\n   *     closing\n   * @public\n   */\n  close(code, data) {\n    if (this.readyState === WebSocket$1.CLOSED) return;\n    if (this.readyState === WebSocket$1.CONNECTING) {\n      const msg = 'WebSocket was closed before the connection was established';\n      return abortHandshake$1(this, this._req, msg);\n    }\n\n    if (this.readyState === WebSocket$1.CLOSING) {\n      if (\n        this._closeFrameSent &&\n        (this._closeFrameReceived || this._receiver._writableState.errorEmitted)\n      ) {\n        this._socket.end();\n      }\n\n      return;\n    }\n\n    this._readyState = WebSocket$1.CLOSING;\n    this._sender.close(code, data, !this._isServer, (err) => {\n      //\n      // This error is handled by the `'error'` listener on the socket. We only\n      // want to know if the close frame has been sent here.\n      //\n      if (err) return;\n\n      this._closeFrameSent = true;\n\n      if (\n        this._closeFrameReceived ||\n        this._receiver._writableState.errorEmitted\n      ) {\n        this._socket.end();\n      }\n    });\n\n    //\n    // Specify a timeout for the closing handshake to complete.\n    //\n    this._closeTimer = setTimeout(\n      this._socket.destroy.bind(this._socket),\n      closeTimeout\n    );\n  }\n\n  /**\n   * Pause the socket.\n   *\n   * @public\n   */\n  pause() {\n    if (\n      this.readyState === WebSocket$1.CONNECTING ||\n      this.readyState === WebSocket$1.CLOSED\n    ) {\n      return;\n    }\n\n    this._paused = true;\n    this._socket.pause();\n  }\n\n  /**\n   * Send a ping.\n   *\n   * @param {*} [data] The data to send\n   * @param {Boolean} [mask] Indicates whether or not to mask `data`\n   * @param {Function} [cb] Callback which is executed when the ping is sent\n   * @public\n   */\n  ping(data, mask, cb) {\n    if (this.readyState === WebSocket$1.CONNECTING) {\n      throw new Error('WebSocket is not open: readyState 0 (CONNECTING)');\n    }\n\n    if (typeof data === 'function') {\n      cb = data;\n      data = mask = undefined;\n    } else if (typeof mask === 'function') {\n      cb = mask;\n      mask = undefined;\n    }\n\n    if (typeof data === 'number') data = data.toString();\n\n    if (this.readyState !== WebSocket$1.OPEN) {\n      sendAfterClose(this, data, cb);\n      return;\n    }\n\n    if (mask === undefined) mask = !this._isServer;\n    this._sender.ping(data || EMPTY_BUFFER, mask, cb);\n  }\n\n  /**\n   * Send a pong.\n   *\n   * @param {*} [data] The data to send\n   * @param {Boolean} [mask] Indicates whether or not to mask `data`\n   * @param {Function} [cb] Callback which is executed when the pong is sent\n   * @public\n   */\n  pong(data, mask, cb) {\n    if (this.readyState === WebSocket$1.CONNECTING) {\n      throw new Error('WebSocket is not open: readyState 0 (CONNECTING)');\n    }\n\n    if (typeof data === 'function') {\n      cb = data;\n      data = mask = undefined;\n    } else if (typeof mask === 'function') {\n      cb = mask;\n      mask = undefined;\n    }\n\n    if (typeof data === 'number') data = data.toString();\n\n    if (this.readyState !== WebSocket$1.OPEN) {\n      sendAfterClose(this, data, cb);\n      return;\n    }\n\n    if (mask === undefined) mask = !this._isServer;\n    this._sender.pong(data || EMPTY_BUFFER, mask, cb);\n  }\n\n  /**\n   * Resume the socket.\n   *\n   * @public\n   */\n  resume() {\n    if (\n      this.readyState === WebSocket$1.CONNECTING ||\n      this.readyState === WebSocket$1.CLOSED\n    ) {\n      return;\n    }\n\n    this._paused = false;\n    if (!this._receiver._writableState.needDrain) this._socket.resume();\n  }\n\n  /**\n   * Send a data message.\n   *\n   * @param {*} data The message to send\n   * @param {Object} [options] Options object\n   * @param {Boolean} [options.binary] Specifies whether `data` is binary or\n   *     text\n   * @param {Boolean} [options.compress] Specifies whether or not to compress\n   *     `data`\n   * @param {Boolean} [options.fin=true] Specifies whether the fragment is the\n   *     last one\n   * @param {Boolean} [options.mask] Specifies whether or not to mask `data`\n   * @param {Function} [cb] Callback which is executed when data is written out\n   * @public\n   */\n  send(data, options, cb) {\n    if (this.readyState === WebSocket$1.CONNECTING) {\n      throw new Error('WebSocket is not open: readyState 0 (CONNECTING)');\n    }\n\n    if (typeof options === 'function') {\n      cb = options;\n      options = {};\n    }\n\n    if (typeof data === 'number') data = data.toString();\n\n    if (this.readyState !== WebSocket$1.OPEN) {\n      sendAfterClose(this, data, cb);\n      return;\n    }\n\n    const opts = {\n      binary: typeof data !== 'string',\n      mask: !this._isServer,\n      compress: true,\n      fin: true,\n      ...options\n    };\n\n    if (!this._extensions[PerMessageDeflate$1.extensionName]) {\n      opts.compress = false;\n    }\n\n    this._sender.send(data || EMPTY_BUFFER, opts, cb);\n  }\n\n  /**\n   * Forcibly close the connection.\n   *\n   * @public\n   */\n  terminate() {\n    if (this.readyState === WebSocket$1.CLOSED) return;\n    if (this.readyState === WebSocket$1.CONNECTING) {\n      const msg = 'WebSocket was closed before the connection was established';\n      return abortHandshake$1(this, this._req, msg);\n    }\n\n    if (this._socket) {\n      this._readyState = WebSocket$1.CLOSING;\n      this._socket.destroy();\n    }\n  }\n}\n\n/**\n * @constant {Number} CONNECTING\n * @memberof WebSocket\n */\nObject.defineProperty(WebSocket$1, 'CONNECTING', {\n  enumerable: true,\n  value: readyStates.indexOf('CONNECTING')\n});\n\n/**\n * @constant {Number} CONNECTING\n * @memberof WebSocket.prototype\n */\nObject.defineProperty(WebSocket$1.prototype, 'CONNECTING', {\n  enumerable: true,\n  value: readyStates.indexOf('CONNECTING')\n});\n\n/**\n * @constant {Number} OPEN\n * @memberof WebSocket\n */\nObject.defineProperty(WebSocket$1, 'OPEN', {\n  enumerable: true,\n  value: readyStates.indexOf('OPEN')\n});\n\n/**\n * @constant {Number} OPEN\n * @memberof WebSocket.prototype\n */\nObject.defineProperty(WebSocket$1.prototype, 'OPEN', {\n  enumerable: true,\n  value: readyStates.indexOf('OPEN')\n});\n\n/**\n * @constant {Number} CLOSING\n * @memberof WebSocket\n */\nObject.defineProperty(WebSocket$1, 'CLOSING', {\n  enumerable: true,\n  value: readyStates.indexOf('CLOSING')\n});\n\n/**\n * @constant {Number} CLOSING\n * @memberof WebSocket.prototype\n */\nObject.defineProperty(WebSocket$1.prototype, 'CLOSING', {\n  enumerable: true,\n  value: readyStates.indexOf('CLOSING')\n});\n\n/**\n * @constant {Number} CLOSED\n * @memberof WebSocket\n */\nObject.defineProperty(WebSocket$1, 'CLOSED', {\n  enumerable: true,\n  value: readyStates.indexOf('CLOSED')\n});\n\n/**\n * @constant {Number} CLOSED\n * @memberof WebSocket.prototype\n */\nObject.defineProperty(WebSocket$1.prototype, 'CLOSED', {\n  enumerable: true,\n  value: readyStates.indexOf('CLOSED')\n});\n\n[\n  'binaryType',\n  'bufferedAmount',\n  'extensions',\n  'isPaused',\n  'protocol',\n  'readyState',\n  'url'\n].forEach((property) => {\n  Object.defineProperty(WebSocket$1.prototype, property, { enumerable: true });\n});\n\n//\n// Add the `onopen`, `onerror`, `onclose`, and `onmessage` attributes.\n// See https://html.spec.whatwg.org/multipage/comms.html#the-websocket-interface\n//\n['open', 'error', 'close', 'message'].forEach((method) => {\n  Object.defineProperty(WebSocket$1.prototype, `on${method}`, {\n    enumerable: true,\n    get() {\n      for (const listener of this.listeners(method)) {\n        if (listener[kForOnEventAttribute]) return listener[kListener];\n      }\n\n      return null;\n    },\n    set(handler) {\n      for (const listener of this.listeners(method)) {\n        if (listener[kForOnEventAttribute]) {\n          this.removeListener(method, listener);\n          break;\n        }\n      }\n\n      if (typeof handler !== 'function') return;\n\n      this.addEventListener(method, handler, {\n        [kForOnEventAttribute]: true\n      });\n    }\n  });\n});\n\nWebSocket$1.prototype.addEventListener = addEventListener;\nWebSocket$1.prototype.removeEventListener = removeEventListener;\n\nvar websocket = WebSocket$1;\n\n/**\n * Initialize a WebSocket client.\n *\n * @param {WebSocket} websocket The client to initialize\n * @param {(String|URL)} address The URL to which to connect\n * @param {Array} protocols The subprotocols\n * @param {Object} [options] Connection options\n * @param {Boolean} [options.followRedirects=false] Whether or not to follow\n *     redirects\n * @param {Function} [options.generateMask] The function used to generate the\n *     masking key\n * @param {Number} [options.handshakeTimeout] Timeout in milliseconds for the\n *     handshake request\n * @param {Number} [options.maxPayload=104857600] The maximum allowed message\n *     size\n * @param {Number} [options.maxRedirects=10] The maximum number of redirects\n *     allowed\n * @param {String} [options.origin] Value of the `Origin` or\n *     `Sec-WebSocket-Origin` header\n * @param {(Boolean|Object)} [options.perMessageDeflate=true] Enable/disable\n *     permessage-deflate\n * @param {Number} [options.protocolVersion=13] Value of the\n *     `Sec-WebSocket-Version` header\n * @param {Boolean} [options.skipUTF8Validation=false] Specifies whether or\n *     not to skip UTF-8 validation for text and close messages\n * @private\n */\nfunction initAsClient(websocket, address, protocols, options) {\n  const opts = {\n    protocolVersion: protocolVersions[1],\n    maxPayload: 100 * 1024 * 1024,\n    skipUTF8Validation: false,\n    perMessageDeflate: true,\n    followRedirects: false,\n    maxRedirects: 10,\n    ...options,\n    createConnection: undefined,\n    socketPath: undefined,\n    hostname: undefined,\n    protocol: undefined,\n    timeout: undefined,\n    method: 'GET',\n    host: undefined,\n    path: undefined,\n    port: undefined\n  };\n\n  if (!protocolVersions.includes(opts.protocolVersion)) {\n    throw new RangeError(\n      `Unsupported protocol version: ${opts.protocolVersion} ` +\n        `(supported versions: ${protocolVersions.join(', ')})`\n    );\n  }\n\n  let parsedUrl;\n\n  if (address instanceof URL$2) {\n    parsedUrl = address;\n    websocket._url = address.href;\n  } else {\n    try {\n      parsedUrl = new URL$2(address);\n    } catch (e) {\n      throw new SyntaxError(`Invalid URL: ${address}`);\n    }\n\n    websocket._url = address;\n  }\n\n  const isSecure = parsedUrl.protocol === 'wss:';\n  const isUnixSocket = parsedUrl.protocol === 'ws+unix:';\n  let invalidURLMessage;\n\n  if (parsedUrl.protocol !== 'ws:' && !isSecure && !isUnixSocket) {\n    invalidURLMessage =\n      'The URL\\'s protocol must be one of \"ws:\", \"wss:\", or \"ws+unix:\"';\n  } else if (isUnixSocket && !parsedUrl.pathname) {\n    invalidURLMessage = \"The URL's pathname is empty\";\n  } else if (parsedUrl.hash) {\n    invalidURLMessage = 'The URL contains a fragment identifier';\n  }\n\n  if (invalidURLMessage) {\n    const err = new SyntaxError(invalidURLMessage);\n\n    if (websocket._redirects === 0) {\n      throw err;\n    } else {\n      emitErrorAndClose(websocket, err);\n      return;\n    }\n  }\n\n  const defaultPort = isSecure ? 443 : 80;\n  const key = randomBytes(16).toString('base64');\n  const request = isSecure ? https$2.request : http$3.request;\n  const protocolSet = new Set();\n  let perMessageDeflate;\n\n  opts.createConnection = isSecure ? tlsConnect : netConnect;\n  opts.defaultPort = opts.defaultPort || defaultPort;\n  opts.port = parsedUrl.port || defaultPort;\n  opts.host = parsedUrl.hostname.startsWith('[')\n    ? parsedUrl.hostname.slice(1, -1)\n    : parsedUrl.hostname;\n  opts.headers = {\n    ...opts.headers,\n    'Sec-WebSocket-Version': opts.protocolVersion,\n    'Sec-WebSocket-Key': key,\n    Connection: 'Upgrade',\n    Upgrade: 'websocket'\n  };\n  opts.path = parsedUrl.pathname + parsedUrl.search;\n  opts.timeout = opts.handshakeTimeout;\n\n  if (opts.perMessageDeflate) {\n    perMessageDeflate = new PerMessageDeflate$1(\n      opts.perMessageDeflate !== true ? opts.perMessageDeflate : {},\n      false,\n      opts.maxPayload\n    );\n    opts.headers['Sec-WebSocket-Extensions'] = format({\n      [PerMessageDeflate$1.extensionName]: perMessageDeflate.offer()\n    });\n  }\n  if (protocols.length) {\n    for (const protocol of protocols) {\n      if (\n        typeof protocol !== 'string' ||\n        !subprotocolRegex.test(protocol) ||\n        protocolSet.has(protocol)\n      ) {\n        throw new SyntaxError(\n          'An invalid or duplicated subprotocol was specified'\n        );\n      }\n\n      protocolSet.add(protocol);\n    }\n\n    opts.headers['Sec-WebSocket-Protocol'] = protocols.join(',');\n  }\n  if (opts.origin) {\n    if (opts.protocolVersion < 13) {\n      opts.headers['Sec-WebSocket-Origin'] = opts.origin;\n    } else {\n      opts.headers.Origin = opts.origin;\n    }\n  }\n  if (parsedUrl.username || parsedUrl.password) {\n    opts.auth = `${parsedUrl.username}:${parsedUrl.password}`;\n  }\n\n  if (isUnixSocket) {\n    const parts = opts.path.split(':');\n\n    opts.socketPath = parts[0];\n    opts.path = parts[1];\n  }\n\n  let req;\n\n  if (opts.followRedirects) {\n    if (websocket._redirects === 0) {\n      websocket._originalUnixSocket = isUnixSocket;\n      websocket._originalSecure = isSecure;\n      websocket._originalHostOrSocketPath = isUnixSocket\n        ? opts.socketPath\n        : parsedUrl.host;\n\n      const headers = options && options.headers;\n\n      //\n      // Shallow copy the user provided options so that headers can be changed\n      // without mutating the original object.\n      //\n      options = { ...options, headers: {} };\n\n      if (headers) {\n        for (const [key, value] of Object.entries(headers)) {\n          options.headers[key.toLowerCase()] = value;\n        }\n      }\n    } else if (websocket.listenerCount('redirect') === 0) {\n      const isSameHost = isUnixSocket\n        ? websocket._originalUnixSocket\n          ? opts.socketPath === websocket._originalHostOrSocketPath\n          : false\n        : websocket._originalUnixSocket\n        ? false\n        : parsedUrl.host === websocket._originalHostOrSocketPath;\n\n      if (!isSameHost || (websocket._originalSecure && !isSecure)) {\n        //\n        // Match curl 7.77.0 behavior and drop the following headers. These\n        // headers are also dropped when following a redirect to a subdomain.\n        //\n        delete opts.headers.authorization;\n        delete opts.headers.cookie;\n\n        if (!isSameHost) delete opts.headers.host;\n\n        opts.auth = undefined;\n      }\n    }\n\n    //\n    // Match curl 7.77.0 behavior and make the first `Authorization` header win.\n    // If the `Authorization` header is set, then there is nothing to do as it\n    // will take precedence.\n    //\n    if (opts.auth && !options.headers.authorization) {\n      options.headers.authorization =\n        'Basic ' + Buffer.from(opts.auth).toString('base64');\n    }\n\n    req = websocket._req = request(opts);\n\n    if (websocket._redirects) {\n      //\n      // Unlike what is done for the `'upgrade'` event, no early exit is\n      // triggered here if the user calls `websocket.close()` or\n      // `websocket.terminate()` from a listener of the `'redirect'` event. This\n      // is because the user can also call `request.destroy()` with an error\n      // before calling `websocket.close()` or `websocket.terminate()` and this\n      // would result in an error being emitted on the `request` object with no\n      // `'error'` event listeners attached.\n      //\n      websocket.emit('redirect', websocket.url, req);\n    }\n  } else {\n    req = websocket._req = request(opts);\n  }\n\n  if (opts.timeout) {\n    req.on('timeout', () => {\n      abortHandshake$1(websocket, req, 'Opening handshake has timed out');\n    });\n  }\n\n  req.on('error', (err) => {\n    if (req === null || req[kAborted]) return;\n\n    req = websocket._req = null;\n    emitErrorAndClose(websocket, err);\n  });\n\n  req.on('response', (res) => {\n    const location = res.headers.location;\n    const statusCode = res.statusCode;\n\n    if (\n      location &&\n      opts.followRedirects &&\n      statusCode >= 300 &&\n      statusCode < 400\n    ) {\n      if (++websocket._redirects > opts.maxRedirects) {\n        abortHandshake$1(websocket, req, 'Maximum redirects exceeded');\n        return;\n      }\n\n      req.abort();\n\n      let addr;\n\n      try {\n        addr = new URL$2(location, address);\n      } catch (e) {\n        const err = new SyntaxError(`Invalid URL: ${location}`);\n        emitErrorAndClose(websocket, err);\n        return;\n      }\n\n      initAsClient(websocket, addr, protocols, options);\n    } else if (!websocket.emit('unexpected-response', req, res)) {\n      abortHandshake$1(\n        websocket,\n        req,\n        `Unexpected server response: ${res.statusCode}`\n      );\n    }\n  });\n\n  req.on('upgrade', (res, socket, head) => {\n    websocket.emit('upgrade', res);\n\n    //\n    // The user may have closed the connection from a listener of the\n    // `'upgrade'` event.\n    //\n    if (websocket.readyState !== WebSocket$1.CONNECTING) return;\n\n    req = websocket._req = null;\n\n    if (res.headers.upgrade.toLowerCase() !== 'websocket') {\n      abortHandshake$1(websocket, socket, 'Invalid Upgrade header');\n      return;\n    }\n\n    const digest = createHash$1('sha1')\n      .update(key + GUID$1)\n      .digest('base64');\n\n    if (res.headers['sec-websocket-accept'] !== digest) {\n      abortHandshake$1(websocket, socket, 'Invalid Sec-WebSocket-Accept header');\n      return;\n    }\n\n    const serverProt = res.headers['sec-websocket-protocol'];\n    let protError;\n\n    if (serverProt !== undefined) {\n      if (!protocolSet.size) {\n        protError = 'Server sent a subprotocol but none was requested';\n      } else if (!protocolSet.has(serverProt)) {\n        protError = 'Server sent an invalid subprotocol';\n      }\n    } else if (protocolSet.size) {\n      protError = 'Server sent no subprotocol';\n    }\n\n    if (protError) {\n      abortHandshake$1(websocket, socket, protError);\n      return;\n    }\n\n    if (serverProt) websocket._protocol = serverProt;\n\n    const secWebSocketExtensions = res.headers['sec-websocket-extensions'];\n\n    if (secWebSocketExtensions !== undefined) {\n      if (!perMessageDeflate) {\n        const message =\n          'Server sent a Sec-WebSocket-Extensions header but no extension ' +\n          'was requested';\n        abortHandshake$1(websocket, socket, message);\n        return;\n      }\n\n      let extensions;\n\n      try {\n        extensions = parse$5(secWebSocketExtensions);\n      } catch (err) {\n        const message = 'Invalid Sec-WebSocket-Extensions header';\n        abortHandshake$1(websocket, socket, message);\n        return;\n      }\n\n      const extensionNames = Object.keys(extensions);\n\n      if (\n        extensionNames.length !== 1 ||\n        extensionNames[0] !== PerMessageDeflate$1.extensionName\n      ) {\n        const message = 'Server indicated an extension that was not requested';\n        abortHandshake$1(websocket, socket, message);\n        return;\n      }\n\n      try {\n        perMessageDeflate.accept(extensions[PerMessageDeflate$1.extensionName]);\n      } catch (err) {\n        const message = 'Invalid Sec-WebSocket-Extensions header';\n        abortHandshake$1(websocket, socket, message);\n        return;\n      }\n\n      websocket._extensions[PerMessageDeflate$1.extensionName] =\n        perMessageDeflate;\n    }\n\n    websocket.setSocket(socket, head, {\n      generateMask: opts.generateMask,\n      maxPayload: opts.maxPayload,\n      skipUTF8Validation: opts.skipUTF8Validation\n    });\n  });\n\n  req.end();\n}\n\n/**\n * Emit the `'error'` and `'close'` events.\n *\n * @param {WebSocket} websocket The WebSocket instance\n * @param {Error} The error to emit\n * @private\n */\nfunction emitErrorAndClose(websocket, err) {\n  websocket._readyState = WebSocket$1.CLOSING;\n  websocket.emit('error', err);\n  websocket.emitClose();\n}\n\n/**\n * Create a `net.Socket` and initiate a connection.\n *\n * @param {Object} options Connection options\n * @return {net.Socket} The newly created socket used to start the connection\n * @private\n */\nfunction netConnect(options) {\n  options.path = options.socketPath;\n  return net.connect(options);\n}\n\n/**\n * Create a `tls.TLSSocket` and initiate a connection.\n *\n * @param {Object} options Connection options\n * @return {tls.TLSSocket} The newly created socket used to start the connection\n * @private\n */\nfunction tlsConnect(options) {\n  options.path = undefined;\n\n  if (!options.servername && options.servername !== '') {\n    options.servername = net.isIP(options.host) ? '' : options.host;\n  }\n\n  return tls.connect(options);\n}\n\n/**\n * Abort the handshake and emit an error.\n *\n * @param {WebSocket} websocket The WebSocket instance\n * @param {(http.ClientRequest|net.Socket|tls.Socket)} stream The request to\n *     abort or the socket to destroy\n * @param {String} message The error message\n * @private\n */\nfunction abortHandshake$1(websocket, stream, message) {\n  websocket._readyState = WebSocket$1.CLOSING;\n\n  const err = new Error(message);\n  Error.captureStackTrace(err, abortHandshake$1);\n\n  if (stream.setHeader) {\n    stream[kAborted] = true;\n    stream.abort();\n\n    if (stream.socket && !stream.socket.destroyed) {\n      //\n      // On Node.js >= 14.3.0 `request.abort()` does not destroy the socket if\n      // called after the request completed. See\n      // https://github.com/websockets/ws/issues/1869.\n      //\n      stream.socket.destroy();\n    }\n\n    process.nextTick(emitErrorAndClose, websocket, err);\n  } else {\n    stream.destroy(err);\n    stream.once('error', websocket.emit.bind(websocket, 'error'));\n    stream.once('close', websocket.emitClose.bind(websocket));\n  }\n}\n\n/**\n * Handle cases where the `ping()`, `pong()`, or `send()` methods are called\n * when the `readyState` attribute is `CLOSING` or `CLOSED`.\n *\n * @param {WebSocket} websocket The WebSocket instance\n * @param {*} [data] The data to send\n * @param {Function} [cb] Callback\n * @private\n */\nfunction sendAfterClose(websocket, data, cb) {\n  if (data) {\n    const length = toBuffer(data).length;\n\n    //\n    // The `_bufferedAmount` property is used only when the peer is a client and\n    // the opening handshake fails. Under these circumstances, in fact, the\n    // `setSocket()` method is not called, so the `_socket` and `_sender`\n    // properties are set to `null`.\n    //\n    if (websocket._socket) websocket._sender._bufferedBytes += length;\n    else websocket._bufferedAmount += length;\n  }\n\n  if (cb) {\n    const err = new Error(\n      `WebSocket is not open: readyState ${websocket.readyState} ` +\n        `(${readyStates[websocket.readyState]})`\n    );\n    cb(err);\n  }\n}\n\n/**\n * The listener of the `Receiver` `'conclude'` event.\n *\n * @param {Number} code The status code\n * @param {Buffer} reason The reason for closing\n * @private\n */\nfunction receiverOnConclude(code, reason) {\n  const websocket = this[kWebSocket$1];\n\n  websocket._closeFrameReceived = true;\n  websocket._closeMessage = reason;\n  websocket._closeCode = code;\n\n  if (websocket._socket[kWebSocket$1] === undefined) return;\n\n  websocket._socket.removeListener('data', socketOnData);\n  process.nextTick(resume, websocket._socket);\n\n  if (code === 1005) websocket.close();\n  else websocket.close(code, reason);\n}\n\n/**\n * The listener of the `Receiver` `'drain'` event.\n *\n * @private\n */\nfunction receiverOnDrain() {\n  const websocket = this[kWebSocket$1];\n\n  if (!websocket.isPaused) websocket._socket.resume();\n}\n\n/**\n * The listener of the `Receiver` `'error'` event.\n *\n * @param {(RangeError|Error)} err The emitted error\n * @private\n */\nfunction receiverOnError(err) {\n  const websocket = this[kWebSocket$1];\n\n  if (websocket._socket[kWebSocket$1] !== undefined) {\n    websocket._socket.removeListener('data', socketOnData);\n\n    //\n    // On Node.js < 14.0.0 the `'error'` event is emitted synchronously. See\n    // https://github.com/websockets/ws/issues/1940.\n    //\n    process.nextTick(resume, websocket._socket);\n\n    websocket.close(err[kStatusCode]);\n  }\n\n  websocket.emit('error', err);\n}\n\n/**\n * The listener of the `Receiver` `'finish'` event.\n *\n * @private\n */\nfunction receiverOnFinish() {\n  this[kWebSocket$1].emitClose();\n}\n\n/**\n * The listener of the `Receiver` `'message'` event.\n *\n * @param {Buffer|ArrayBuffer|Buffer[])} data The message\n * @param {Boolean} isBinary Specifies whether the message is binary or not\n * @private\n */\nfunction receiverOnMessage(data, isBinary) {\n  this[kWebSocket$1].emit('message', data, isBinary);\n}\n\n/**\n * The listener of the `Receiver` `'ping'` event.\n *\n * @param {Buffer} data The data included in the ping frame\n * @private\n */\nfunction receiverOnPing(data) {\n  const websocket = this[kWebSocket$1];\n\n  websocket.pong(data, !websocket._isServer, NOOP);\n  websocket.emit('ping', data);\n}\n\n/**\n * The listener of the `Receiver` `'pong'` event.\n *\n * @param {Buffer} data The data included in the pong frame\n * @private\n */\nfunction receiverOnPong(data) {\n  this[kWebSocket$1].emit('pong', data);\n}\n\n/**\n * Resume a readable stream\n *\n * @param {Readable} stream The readable stream\n * @private\n */\nfunction resume(stream) {\n  stream.resume();\n}\n\n/**\n * The listener of the `net.Socket` `'close'` event.\n *\n * @private\n */\nfunction socketOnClose() {\n  const websocket = this[kWebSocket$1];\n\n  this.removeListener('close', socketOnClose);\n  this.removeListener('data', socketOnData);\n  this.removeListener('end', socketOnEnd);\n\n  websocket._readyState = WebSocket$1.CLOSING;\n\n  let chunk;\n\n  //\n  // The close frame might not have been received or the `'end'` event emitted,\n  // for example, if the socket was destroyed due to an error. Ensure that the\n  // `receiver` stream is closed after writing any remaining buffered data to\n  // it. If the readable side of the socket is in flowing mode then there is no\n  // buffered data as everything has been already written and `readable.read()`\n  // will return `null`. If instead, the socket is paused, any possible buffered\n  // data will be read as a single chunk.\n  //\n  if (\n    !this._readableState.endEmitted &&\n    !websocket._closeFrameReceived &&\n    !websocket._receiver._writableState.errorEmitted &&\n    (chunk = websocket._socket.read()) !== null\n  ) {\n    websocket._receiver.write(chunk);\n  }\n\n  websocket._receiver.end();\n\n  this[kWebSocket$1] = undefined;\n\n  clearTimeout(websocket._closeTimer);\n\n  if (\n    websocket._receiver._writableState.finished ||\n    websocket._receiver._writableState.errorEmitted\n  ) {\n    websocket.emitClose();\n  } else {\n    websocket._receiver.on('error', receiverOnFinish);\n    websocket._receiver.on('finish', receiverOnFinish);\n  }\n}\n\n/**\n * The listener of the `net.Socket` `'data'` event.\n *\n * @param {Buffer} chunk A chunk of data\n * @private\n */\nfunction socketOnData(chunk) {\n  if (!this[kWebSocket$1]._receiver.write(chunk)) {\n    this.pause();\n  }\n}\n\n/**\n * The listener of the `net.Socket` `'end'` event.\n *\n * @private\n */\nfunction socketOnEnd() {\n  const websocket = this[kWebSocket$1];\n\n  websocket._readyState = WebSocket$1.CLOSING;\n  websocket._receiver.end();\n  this.end();\n}\n\n/**\n * The listener of the `net.Socket` `'error'` event.\n *\n * @private\n */\nfunction socketOnError$1() {\n  const websocket = this[kWebSocket$1];\n\n  this.removeListener('error', socketOnError$1);\n  this.on('error', NOOP);\n\n  if (websocket) {\n    websocket._readyState = WebSocket$1.CLOSING;\n    this.destroy();\n  }\n}\n\nconst { tokenChars } = validation.exports;\n\n/**\n * Parses the `Sec-WebSocket-Protocol` header into a set of subprotocol names.\n *\n * @param {String} header The field value of the header\n * @return {Set} The subprotocol names\n * @public\n */\nfunction parse$4(header) {\n  const protocols = new Set();\n  let start = -1;\n  let end = -1;\n  let i = 0;\n\n  for (i; i < header.length; i++) {\n    const code = header.charCodeAt(i);\n\n    if (end === -1 && tokenChars[code] === 1) {\n      if (start === -1) start = i;\n    } else if (\n      i !== 0 &&\n      (code === 0x20 /* ' ' */ || code === 0x09) /* '\\t' */\n    ) {\n      if (end === -1 && start !== -1) end = i;\n    } else if (code === 0x2c /* ',' */) {\n      if (start === -1) {\n        throw new SyntaxError(`Unexpected character at index ${i}`);\n      }\n\n      if (end === -1) end = i;\n\n      const protocol = header.slice(start, end);\n\n      if (protocols.has(protocol)) {\n        throw new SyntaxError(`The \"${protocol}\" subprotocol is duplicated`);\n      }\n\n      protocols.add(protocol);\n      start = end = -1;\n    } else {\n      throw new SyntaxError(`Unexpected character at index ${i}`);\n    }\n  }\n\n  if (start === -1 || end !== -1) {\n    throw new SyntaxError('Unexpected end of input');\n  }\n\n  const protocol = header.slice(start, i);\n\n  if (protocols.has(protocol)) {\n    throw new SyntaxError(`The \"${protocol}\" subprotocol is duplicated`);\n  }\n\n  protocols.add(protocol);\n  return protocols;\n}\n\nvar subprotocol$1 = { parse: parse$4 };\n\n/* eslint no-unused-vars: [\"error\", { \"varsIgnorePattern\": \"^net|tls|https$\" }] */\n\nconst EventEmitter = require$$0$5;\nconst http$2 = require$$1$2;\nconst { createHash } = require$$5;\n\nconst extension = extension$1;\nconst PerMessageDeflate = permessageDeflate;\nconst subprotocol = subprotocol$1;\nconst WebSocket = websocket;\nconst { GUID, kWebSocket } = constants;\n\nconst keyRegex = /^[+/0-9A-Za-z]{22}==$/;\n\nconst RUNNING = 0;\nconst CLOSING = 1;\nconst CLOSED = 2;\n\n/**\n * Class representing a WebSocket server.\n *\n * @extends EventEmitter\n */\nclass WebSocketServer extends EventEmitter {\n  /**\n   * Create a `WebSocketServer` instance.\n   *\n   * @param {Object} options Configuration options\n   * @param {Number} [options.backlog=511] The maximum length of the queue of\n   *     pending connections\n   * @param {Boolean} [options.clientTracking=true] Specifies whether or not to\n   *     track clients\n   * @param {Function} [options.handleProtocols] A hook to handle protocols\n   * @param {String} [options.host] The hostname where to bind the server\n   * @param {Number} [options.maxPayload=104857600] The maximum allowed message\n   *     size\n   * @param {Boolean} [options.noServer=false] Enable no server mode\n   * @param {String} [options.path] Accept only connections matching this path\n   * @param {(Boolean|Object)} [options.perMessageDeflate=false] Enable/disable\n   *     permessage-deflate\n   * @param {Number} [options.port] The port where to bind the server\n   * @param {(http.Server|https.Server)} [options.server] A pre-created HTTP/S\n   *     server to use\n   * @param {Boolean} [options.skipUTF8Validation=false] Specifies whether or\n   *     not to skip UTF-8 validation for text and close messages\n   * @param {Function} [options.verifyClient] A hook to reject connections\n   * @param {Function} [options.WebSocket=WebSocket] Specifies the `WebSocket`\n   *     class to use. It must be the `WebSocket` class or class that extends it\n   * @param {Function} [callback] A listener for the `listening` event\n   */\n  constructor(options, callback) {\n    super();\n\n    options = {\n      maxPayload: 100 * 1024 * 1024,\n      skipUTF8Validation: false,\n      perMessageDeflate: false,\n      handleProtocols: null,\n      clientTracking: true,\n      verifyClient: null,\n      noServer: false,\n      backlog: null, // use default (511 as implemented in net.js)\n      server: null,\n      host: null,\n      path: null,\n      port: null,\n      WebSocket,\n      ...options\n    };\n\n    if (\n      (options.port == null && !options.server && !options.noServer) ||\n      (options.port != null && (options.server || options.noServer)) ||\n      (options.server && options.noServer)\n    ) {\n      throw new TypeError(\n        'One and only one of the \"port\", \"server\", or \"noServer\" options ' +\n          'must be specified'\n      );\n    }\n\n    if (options.port != null) {\n      this._server = http$2.createServer((req, res) => {\n        const body = http$2.STATUS_CODES[426];\n\n        res.writeHead(426, {\n          'Content-Length': body.length,\n          'Content-Type': 'text/plain'\n        });\n        res.end(body);\n      });\n      this._server.listen(\n        options.port,\n        options.host,\n        options.backlog,\n        callback\n      );\n    } else if (options.server) {\n      this._server = options.server;\n    }\n\n    if (this._server) {\n      const emitConnection = this.emit.bind(this, 'connection');\n\n      this._removeListeners = addListeners(this._server, {\n        listening: this.emit.bind(this, 'listening'),\n        error: this.emit.bind(this, 'error'),\n        upgrade: (req, socket, head) => {\n          this.handleUpgrade(req, socket, head, emitConnection);\n        }\n      });\n    }\n\n    if (options.perMessageDeflate === true) options.perMessageDeflate = {};\n    if (options.clientTracking) {\n      this.clients = new Set();\n      this._shouldEmitClose = false;\n    }\n\n    this.options = options;\n    this._state = RUNNING;\n  }\n\n  /**\n   * Returns the bound address, the address family name, and port of the server\n   * as reported by the operating system if listening on an IP socket.\n   * If the server is listening on a pipe or UNIX domain socket, the name is\n   * returned as a string.\n   *\n   * @return {(Object|String|null)} The address of the server\n   * @public\n   */\n  address() {\n    if (this.options.noServer) {\n      throw new Error('The server is operating in \"noServer\" mode');\n    }\n\n    if (!this._server) return null;\n    return this._server.address();\n  }\n\n  /**\n   * Stop the server from accepting new connections and emit the `'close'` event\n   * when all existing connections are closed.\n   *\n   * @param {Function} [cb] A one-time listener for the `'close'` event\n   * @public\n   */\n  close(cb) {\n    if (this._state === CLOSED) {\n      if (cb) {\n        this.once('close', () => {\n          cb(new Error('The server is not running'));\n        });\n      }\n\n      process.nextTick(emitClose, this);\n      return;\n    }\n\n    if (cb) this.once('close', cb);\n\n    if (this._state === CLOSING) return;\n    this._state = CLOSING;\n\n    if (this.options.noServer || this.options.server) {\n      if (this._server) {\n        this._removeListeners();\n        this._removeListeners = this._server = null;\n      }\n\n      if (this.clients) {\n        if (!this.clients.size) {\n          process.nextTick(emitClose, this);\n        } else {\n          this._shouldEmitClose = true;\n        }\n      } else {\n        process.nextTick(emitClose, this);\n      }\n    } else {\n      const server = this._server;\n\n      this._removeListeners();\n      this._removeListeners = this._server = null;\n\n      //\n      // The HTTP/S server was created internally. Close it, and rely on its\n      // `'close'` event.\n      //\n      server.close(() => {\n        emitClose(this);\n      });\n    }\n  }\n\n  /**\n   * See if a given request should be handled by this server instance.\n   *\n   * @param {http.IncomingMessage} req Request object to inspect\n   * @return {Boolean} `true` if the request is valid, else `false`\n   * @public\n   */\n  shouldHandle(req) {\n    if (this.options.path) {\n      const index = req.url.indexOf('?');\n      const pathname = index !== -1 ? req.url.slice(0, index) : req.url;\n\n      if (pathname !== this.options.path) return false;\n    }\n\n    return true;\n  }\n\n  /**\n   * Handle a HTTP Upgrade request.\n   *\n   * @param {http.IncomingMessage} req The request object\n   * @param {(net.Socket|tls.Socket)} socket The network socket between the\n   *     server and client\n   * @param {Buffer} head The first packet of the upgraded stream\n   * @param {Function} cb Callback\n   * @public\n   */\n  handleUpgrade(req, socket, head, cb) {\n    socket.on('error', socketOnError);\n\n    const key = req.headers['sec-websocket-key'];\n    const version = +req.headers['sec-websocket-version'];\n\n    if (req.method !== 'GET') {\n      const message = 'Invalid HTTP method';\n      abortHandshakeOrEmitwsClientError(this, req, socket, 405, message);\n      return;\n    }\n\n    if (req.headers.upgrade.toLowerCase() !== 'websocket') {\n      const message = 'Invalid Upgrade header';\n      abortHandshakeOrEmitwsClientError(this, req, socket, 400, message);\n      return;\n    }\n\n    if (!key || !keyRegex.test(key)) {\n      const message = 'Missing or invalid Sec-WebSocket-Key header';\n      abortHandshakeOrEmitwsClientError(this, req, socket, 400, message);\n      return;\n    }\n\n    if (version !== 8 && version !== 13) {\n      const message = 'Missing or invalid Sec-WebSocket-Version header';\n      abortHandshakeOrEmitwsClientError(this, req, socket, 400, message);\n      return;\n    }\n\n    if (!this.shouldHandle(req)) {\n      abortHandshake(socket, 400);\n      return;\n    }\n\n    const secWebSocketProtocol = req.headers['sec-websocket-protocol'];\n    let protocols = new Set();\n\n    if (secWebSocketProtocol !== undefined) {\n      try {\n        protocols = subprotocol.parse(secWebSocketProtocol);\n      } catch (err) {\n        const message = 'Invalid Sec-WebSocket-Protocol header';\n        abortHandshakeOrEmitwsClientError(this, req, socket, 400, message);\n        return;\n      }\n    }\n\n    const secWebSocketExtensions = req.headers['sec-websocket-extensions'];\n    const extensions = {};\n\n    if (\n      this.options.perMessageDeflate &&\n      secWebSocketExtensions !== undefined\n    ) {\n      const perMessageDeflate = new PerMessageDeflate(\n        this.options.perMessageDeflate,\n        true,\n        this.options.maxPayload\n      );\n\n      try {\n        const offers = extension.parse(secWebSocketExtensions);\n\n        if (offers[PerMessageDeflate.extensionName]) {\n          perMessageDeflate.accept(offers[PerMessageDeflate.extensionName]);\n          extensions[PerMessageDeflate.extensionName] = perMessageDeflate;\n        }\n      } catch (err) {\n        const message =\n          'Invalid or unacceptable Sec-WebSocket-Extensions header';\n        abortHandshakeOrEmitwsClientError(this, req, socket, 400, message);\n        return;\n      }\n    }\n\n    //\n    // Optionally call external client verification handler.\n    //\n    if (this.options.verifyClient) {\n      const info = {\n        origin:\n          req.headers[`${version === 8 ? 'sec-websocket-origin' : 'origin'}`],\n        secure: !!(req.socket.authorized || req.socket.encrypted),\n        req\n      };\n\n      if (this.options.verifyClient.length === 2) {\n        this.options.verifyClient(info, (verified, code, message, headers) => {\n          if (!verified) {\n            return abortHandshake(socket, code || 401, message, headers);\n          }\n\n          this.completeUpgrade(\n            extensions,\n            key,\n            protocols,\n            req,\n            socket,\n            head,\n            cb\n          );\n        });\n        return;\n      }\n\n      if (!this.options.verifyClient(info)) return abortHandshake(socket, 401);\n    }\n\n    this.completeUpgrade(extensions, key, protocols, req, socket, head, cb);\n  }\n\n  /**\n   * Upgrade the connection to WebSocket.\n   *\n   * @param {Object} extensions The accepted extensions\n   * @param {String} key The value of the `Sec-WebSocket-Key` header\n   * @param {Set} protocols The subprotocols\n   * @param {http.IncomingMessage} req The request object\n   * @param {(net.Socket|tls.Socket)} socket The network socket between the\n   *     server and client\n   * @param {Buffer} head The first packet of the upgraded stream\n   * @param {Function} cb Callback\n   * @throws {Error} If called more than once with the same socket\n   * @private\n   */\n  completeUpgrade(extensions, key, protocols, req, socket, head, cb) {\n    //\n    // Destroy the socket if the client has already sent a FIN packet.\n    //\n    if (!socket.readable || !socket.writable) return socket.destroy();\n\n    if (socket[kWebSocket]) {\n      throw new Error(\n        'server.handleUpgrade() was called more than once with the same ' +\n          'socket, possibly due to a misconfiguration'\n      );\n    }\n\n    if (this._state > RUNNING) return abortHandshake(socket, 503);\n\n    const digest = createHash('sha1')\n      .update(key + GUID)\n      .digest('base64');\n\n    const headers = [\n      'HTTP/1.1 101 Switching Protocols',\n      'Upgrade: websocket',\n      'Connection: Upgrade',\n      `Sec-WebSocket-Accept: ${digest}`\n    ];\n\n    const ws = new this.options.WebSocket(null);\n\n    if (protocols.size) {\n      //\n      // Optionally call external protocol selection handler.\n      //\n      const protocol = this.options.handleProtocols\n        ? this.options.handleProtocols(protocols, req)\n        : protocols.values().next().value;\n\n      if (protocol) {\n        headers.push(`Sec-WebSocket-Protocol: ${protocol}`);\n        ws._protocol = protocol;\n      }\n    }\n\n    if (extensions[PerMessageDeflate.extensionName]) {\n      const params = extensions[PerMessageDeflate.extensionName].params;\n      const value = extension.format({\n        [PerMessageDeflate.extensionName]: [params]\n      });\n      headers.push(`Sec-WebSocket-Extensions: ${value}`);\n      ws._extensions = extensions;\n    }\n\n    //\n    // Allow external modification/inspection of handshake headers.\n    //\n    this.emit('headers', headers, req);\n\n    socket.write(headers.concat('\\r\\n').join('\\r\\n'));\n    socket.removeListener('error', socketOnError);\n\n    ws.setSocket(socket, head, {\n      maxPayload: this.options.maxPayload,\n      skipUTF8Validation: this.options.skipUTF8Validation\n    });\n\n    if (this.clients) {\n      this.clients.add(ws);\n      ws.on('close', () => {\n        this.clients.delete(ws);\n\n        if (this._shouldEmitClose && !this.clients.size) {\n          process.nextTick(emitClose, this);\n        }\n      });\n    }\n\n    cb(ws, req);\n  }\n}\n\nvar websocketServer = WebSocketServer;\n\n/**\n * Add event listeners on an `EventEmitter` using a map of <event, listener>\n * pairs.\n *\n * @param {EventEmitter} server The event emitter\n * @param {Object.<String, Function>} map The listeners to add\n * @return {Function} A function that will remove the added listeners when\n *     called\n * @private\n */\nfunction addListeners(server, map) {\n  for (const event of Object.keys(map)) server.on(event, map[event]);\n\n  return function removeListeners() {\n    for (const event of Object.keys(map)) {\n      server.removeListener(event, map[event]);\n    }\n  };\n}\n\n/**\n * Emit a `'close'` event on an `EventEmitter`.\n *\n * @param {EventEmitter} server The event emitter\n * @private\n */\nfunction emitClose(server) {\n  server._state = CLOSED;\n  server.emit('close');\n}\n\n/**\n * Handle socket errors.\n *\n * @private\n */\nfunction socketOnError() {\n  this.destroy();\n}\n\n/**\n * Close the connection when preconditions are not fulfilled.\n *\n * @param {(net.Socket|tls.Socket)} socket The socket of the upgrade request\n * @param {Number} code The HTTP response status code\n * @param {String} [message] The HTTP response body\n * @param {Object} [headers] Additional HTTP response headers\n * @private\n */\nfunction abortHandshake(socket, code, message, headers) {\n  //\n  // The socket is writable unless the user destroyed or ended it before calling\n  // `server.handleUpgrade()` or in the `verifyClient` function, which is a user\n  // error. Handling this does not make much sense as the worst that can happen\n  // is that some of the data written by the user might be discarded due to the\n  // call to `socket.end()` below, which triggers an `'error'` event that in\n  // turn causes the socket to be destroyed.\n  //\n  message = message || http$2.STATUS_CODES[code];\n  headers = {\n    Connection: 'close',\n    'Content-Type': 'text/html',\n    'Content-Length': Buffer.byteLength(message),\n    ...headers\n  };\n\n  socket.once('finish', socket.destroy);\n\n  socket.end(\n    `HTTP/1.1 ${code} ${http$2.STATUS_CODES[code]}\\r\\n` +\n      Object.keys(headers)\n        .map((h) => `${h}: ${headers[h]}`)\n        .join('\\r\\n') +\n      '\\r\\n\\r\\n' +\n      message\n  );\n}\n\n/**\n * Emit a `'wsClientError'` event on a `WebSocketServer` if there is at least\n * one listener for it, otherwise call `abortHandshake()`.\n *\n * @param {WebSocketServer} server The WebSocket server\n * @param {http.IncomingMessage} req The request object\n * @param {(net.Socket|tls.Socket)} socket The socket of the upgrade request\n * @param {Number} code The HTTP response status code\n * @param {String} message The HTTP response body\n * @private\n */\nfunction abortHandshakeOrEmitwsClientError(server, req, socket, code, message) {\n  if (server.listenerCount('wsClientError')) {\n    const err = new Error(message);\n    Error.captureStackTrace(err, abortHandshakeOrEmitwsClientError);\n\n    server.emit('wsClientError', err, socket, req);\n  } else {\n    abortHandshake(socket, code, message);\n  }\n}\n\nconst HMR_HEADER = 'vite-hmr';\nconst wsServerEvents = [\n    'connection',\n    'error',\n    'headers',\n    'listening',\n    'message'\n];\nfunction createWebSocketServer(server, config, httpsOptions) {\n    let wss;\n    let httpsServer = undefined;\n    const hmr = isObject$2(config.server.hmr) && config.server.hmr;\n    const hmrServer = hmr && hmr.server;\n    const hmrPort = hmr && hmr.port;\n    // TODO: the main server port may not have been chosen yet as it may use the next available\n    const portsAreCompatible = !hmrPort || hmrPort === config.server.port;\n    const wsServer = hmrServer || (portsAreCompatible && server);\n    const customListeners = new Map();\n    const clientsMap = new WeakMap();\n    if (wsServer) {\n        wss = new websocketServer({ noServer: true });\n        wsServer.on('upgrade', (req, socket, head) => {\n            if (req.headers['sec-websocket-protocol'] === HMR_HEADER) {\n                wss.handleUpgrade(req, socket, head, (ws) => {\n                    wss.emit('connection', ws, req);\n                });\n            }\n        });\n    }\n    else {\n        const websocketServerOptions = {};\n        const port = hmrPort || 24678;\n        const host = (hmr && hmr.host) || undefined;\n        if (httpsOptions) {\n            // if we're serving the middlewares over https, the ws library doesn't support automatically creating an https server, so we need to do it ourselves\n            // create an inline https server and mount the websocket server to it\n            httpsServer = createServer$2(httpsOptions, (req, res) => {\n                const statusCode = 426;\n                const body = STATUS_CODES[statusCode];\n                if (!body)\n                    throw new Error(`No body text found for the ${statusCode} status code`);\n                res.writeHead(statusCode, {\n                    'Content-Length': body.length,\n                    'Content-Type': 'text/plain'\n                });\n                res.end(body);\n            });\n            httpsServer.listen(port, host);\n            websocketServerOptions.server = httpsServer;\n        }\n        else {\n            // we don't need to serve over https, just let ws handle its own server\n            websocketServerOptions.port = port;\n            if (host) {\n                websocketServerOptions.host = host;\n            }\n        }\n        // vite dev server in middleware mode\n        wss = new websocketServer(websocketServerOptions);\n    }\n    wss.on('connection', (socket) => {\n        socket.on('message', (raw) => {\n            if (!customListeners.size)\n                return;\n            let parsed;\n            try {\n                parsed = JSON.parse(String(raw));\n            }\n            catch { }\n            if (!parsed || parsed.type !== 'custom' || !parsed.event)\n                return;\n            const listeners = customListeners.get(parsed.event);\n            if (!listeners?.size)\n                return;\n            const client = getSocketClient(socket);\n            listeners.forEach((listener) => listener(parsed.data, client));\n        });\n        socket.send(JSON.stringify({ type: 'connected' }));\n        if (bufferedError) {\n            socket.send(JSON.stringify(bufferedError));\n            bufferedError = null;\n        }\n    });\n    wss.on('error', (e) => {\n        if (e.code === 'EADDRINUSE') {\n            config.logger.error(picocolors.exports.red(`WebSocket server error: Port is already in use`), { error: e });\n        }\n        else {\n            config.logger.error(picocolors.exports.red(`WebSocket server error:\\n${e.stack || e.message}`), { error: e });\n        }\n    });\n    // Provide a wrapper to the ws client so we can send messages in JSON format\n    // To be consistent with server.ws.send\n    function getSocketClient(socket) {\n        if (!clientsMap.has(socket)) {\n            clientsMap.set(socket, {\n                send: (...args) => {\n                    let payload;\n                    if (typeof args[0] === 'string') {\n                        payload = {\n                            type: 'custom',\n                            event: args[0],\n                            data: args[1]\n                        };\n                    }\n                    else {\n                        payload = args[0];\n                    }\n                    socket.send(JSON.stringify(payload));\n                },\n                socket\n            });\n        }\n        return clientsMap.get(socket);\n    }\n    // On page reloads, if a file fails to compile and returns 500, the server\n    // sends the error payload before the client connection is established.\n    // If we have no open clients, buffer the error and send it to the next\n    // connected client.\n    let bufferedError = null;\n    return {\n        on: ((event, fn) => {\n            if (wsServerEvents.includes(event))\n                wss.on(event, fn);\n            else {\n                if (!customListeners.has(event)) {\n                    customListeners.set(event, new Set());\n                }\n                customListeners.get(event).add(fn);\n            }\n        }),\n        off: ((event, fn) => {\n            if (wsServerEvents.includes(event)) {\n                wss.off(event, fn);\n            }\n            else {\n                customListeners.get(event)?.delete(fn);\n            }\n        }),\n        get clients() {\n            return new Set(Array.from(wss.clients).map(getSocketClient));\n        },\n        send(...args) {\n            let payload;\n            if (typeof args[0] === 'string') {\n                payload = {\n                    type: 'custom',\n                    event: args[0],\n                    data: args[1]\n                };\n            }\n            else {\n                payload = args[0];\n            }\n            if (payload.type === 'error' && !wss.clients.size) {\n                bufferedError = payload;\n                return;\n            }\n            const stringified = JSON.stringify(payload);\n            wss.clients.forEach((client) => {\n                // readyState 1 means the connection is open\n                if (client.readyState === 1) {\n                    client.send(stringified);\n                }\n            });\n        },\n        close() {\n            return new Promise((resolve, reject) => {\n                wss.clients.forEach((client) => {\n                    client.terminate();\n                });\n                wss.close((err) => {\n                    if (err) {\n                        reject(err);\n                    }\n                    else {\n                        if (httpsServer) {\n                            httpsServer.close((err) => {\n                                if (err) {\n                                    reject(err);\n                                }\n                                else {\n                                    resolve();\n                                }\n                            });\n                        }\n                        else {\n                            resolve();\n                        }\n                    }\n                });\n            });\n        }\n    };\n}\n\n// this middleware is only active when (config.base !== '/')\nfunction baseMiddleware({ config }) {\n    const devBase = config.base;\n    // Keep the named function. The name is visible in debug logs via `DEBUG=connect:dispatcher ...`\n    return function viteBaseMiddleware(req, res, next) {\n        const url = req.url;\n        const parsed = new URL(url, 'http://vitejs.dev');\n        const path = parsed.pathname || '/';\n        if (path.startsWith(devBase)) {\n            // rewrite url to remove base.. this ensures that other middleware does\n            // not need to consider base being prepended or not\n            req.url = url.replace(devBase, '/');\n            return next();\n        }\n        // skip redirect and error fallback on middleware mode, #4057\n        if (config.server.middlewareMode) {\n            return next();\n        }\n        if (path === '/' || path === '/index.html') {\n            // redirect root visit to based url with search and hash\n            res.writeHead(302, {\n                Location: devBase + (parsed.search || '') + (parsed.hash || '')\n            });\n            res.end();\n            return;\n        }\n        else if (req.headers.accept?.includes('text/html')) {\n            // non-based page visit\n            const redirectPath = devBase + url.slice(1);\n            res.writeHead(404, {\n                'Content-Type': 'text/html'\n            });\n            res.end(`The server is configured with a public base URL of ${devBase} - ` +\n                `did you mean to visit <a href=\"${redirectPath}\">${redirectPath}</a> instead?`);\n            return;\n        }\n        next();\n    };\n}\n\nvar httpProxy$3 = {exports: {}};\n\nvar httpProxy$2 = {exports: {}};\n\nvar eventemitter3 = {exports: {}};\n\n(function (module) {\n\n\tvar has = Object.prototype.hasOwnProperty\n\t  , prefix = '~';\n\n\t/**\n\t * Constructor to create a storage for our `EE` objects.\n\t * An `Events` instance is a plain object whose properties are event names.\n\t *\n\t * @constructor\n\t * @private\n\t */\n\tfunction Events() {}\n\n\t//\n\t// We try to not inherit from `Object.prototype`. In some engines creating an\n\t// instance in this way is faster than calling `Object.create(null)` directly.\n\t// If `Object.create(null)` is not supported we prefix the event names with a\n\t// character to make sure that the built-in object properties are not\n\t// overridden or used as an attack vector.\n\t//\n\tif (Object.create) {\n\t  Events.prototype = Object.create(null);\n\n\t  //\n\t  // This hack is needed because the `__proto__` property is still inherited in\n\t  // some old browsers like Android 4, iPhone 5.1, Opera 11 and Safari 5.\n\t  //\n\t  if (!new Events().__proto__) prefix = false;\n\t}\n\n\t/**\n\t * Representation of a single event listener.\n\t *\n\t * @param {Function} fn The listener function.\n\t * @param {*} context The context to invoke the listener with.\n\t * @param {Boolean} [once=false] Specify if the listener is a one-time listener.\n\t * @constructor\n\t * @private\n\t */\n\tfunction EE(fn, context, once) {\n\t  this.fn = fn;\n\t  this.context = context;\n\t  this.once = once || false;\n\t}\n\n\t/**\n\t * Add a listener for a given event.\n\t *\n\t * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n\t * @param {(String|Symbol)} event The event name.\n\t * @param {Function} fn The listener function.\n\t * @param {*} context The context to invoke the listener with.\n\t * @param {Boolean} once Specify if the listener is a one-time listener.\n\t * @returns {EventEmitter}\n\t * @private\n\t */\n\tfunction addListener(emitter, event, fn, context, once) {\n\t  if (typeof fn !== 'function') {\n\t    throw new TypeError('The listener must be a function');\n\t  }\n\n\t  var listener = new EE(fn, context || emitter, once)\n\t    , evt = prefix ? prefix + event : event;\n\n\t  if (!emitter._events[evt]) emitter._events[evt] = listener, emitter._eventsCount++;\n\t  else if (!emitter._events[evt].fn) emitter._events[evt].push(listener);\n\t  else emitter._events[evt] = [emitter._events[evt], listener];\n\n\t  return emitter;\n\t}\n\n\t/**\n\t * Clear event by name.\n\t *\n\t * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n\t * @param {(String|Symbol)} evt The Event name.\n\t * @private\n\t */\n\tfunction clearEvent(emitter, evt) {\n\t  if (--emitter._eventsCount === 0) emitter._events = new Events();\n\t  else delete emitter._events[evt];\n\t}\n\n\t/**\n\t * Minimal `EventEmitter` interface that is molded against the Node.js\n\t * `EventEmitter` interface.\n\t *\n\t * @constructor\n\t * @public\n\t */\n\tfunction EventEmitter() {\n\t  this._events = new Events();\n\t  this._eventsCount = 0;\n\t}\n\n\t/**\n\t * Return an array listing the events for which the emitter has registered\n\t * listeners.\n\t *\n\t * @returns {Array}\n\t * @public\n\t */\n\tEventEmitter.prototype.eventNames = function eventNames() {\n\t  var names = []\n\t    , events\n\t    , name;\n\n\t  if (this._eventsCount === 0) return names;\n\n\t  for (name in (events = this._events)) {\n\t    if (has.call(events, name)) names.push(prefix ? name.slice(1) : name);\n\t  }\n\n\t  if (Object.getOwnPropertySymbols) {\n\t    return names.concat(Object.getOwnPropertySymbols(events));\n\t  }\n\n\t  return names;\n\t};\n\n\t/**\n\t * Return the listeners registered for a given event.\n\t *\n\t * @param {(String|Symbol)} event The event name.\n\t * @returns {Array} The registered listeners.\n\t * @public\n\t */\n\tEventEmitter.prototype.listeners = function listeners(event) {\n\t  var evt = prefix ? prefix + event : event\n\t    , handlers = this._events[evt];\n\n\t  if (!handlers) return [];\n\t  if (handlers.fn) return [handlers.fn];\n\n\t  for (var i = 0, l = handlers.length, ee = new Array(l); i < l; i++) {\n\t    ee[i] = handlers[i].fn;\n\t  }\n\n\t  return ee;\n\t};\n\n\t/**\n\t * Return the number of listeners listening to a given event.\n\t *\n\t * @param {(String|Symbol)} event The event name.\n\t * @returns {Number} The number of listeners.\n\t * @public\n\t */\n\tEventEmitter.prototype.listenerCount = function listenerCount(event) {\n\t  var evt = prefix ? prefix + event : event\n\t    , listeners = this._events[evt];\n\n\t  if (!listeners) return 0;\n\t  if (listeners.fn) return 1;\n\t  return listeners.length;\n\t};\n\n\t/**\n\t * Calls each of the listeners registered for a given event.\n\t *\n\t * @param {(String|Symbol)} event The event name.\n\t * @returns {Boolean} `true` if the event had listeners, else `false`.\n\t * @public\n\t */\n\tEventEmitter.prototype.emit = function emit(event, a1, a2, a3, a4, a5) {\n\t  var evt = prefix ? prefix + event : event;\n\n\t  if (!this._events[evt]) return false;\n\n\t  var listeners = this._events[evt]\n\t    , len = arguments.length\n\t    , args\n\t    , i;\n\n\t  if (listeners.fn) {\n\t    if (listeners.once) this.removeListener(event, listeners.fn, undefined, true);\n\n\t    switch (len) {\n\t      case 1: return listeners.fn.call(listeners.context), true;\n\t      case 2: return listeners.fn.call(listeners.context, a1), true;\n\t      case 3: return listeners.fn.call(listeners.context, a1, a2), true;\n\t      case 4: return listeners.fn.call(listeners.context, a1, a2, a3), true;\n\t      case 5: return listeners.fn.call(listeners.context, a1, a2, a3, a4), true;\n\t      case 6: return listeners.fn.call(listeners.context, a1, a2, a3, a4, a5), true;\n\t    }\n\n\t    for (i = 1, args = new Array(len -1); i < len; i++) {\n\t      args[i - 1] = arguments[i];\n\t    }\n\n\t    listeners.fn.apply(listeners.context, args);\n\t  } else {\n\t    var length = listeners.length\n\t      , j;\n\n\t    for (i = 0; i < length; i++) {\n\t      if (listeners[i].once) this.removeListener(event, listeners[i].fn, undefined, true);\n\n\t      switch (len) {\n\t        case 1: listeners[i].fn.call(listeners[i].context); break;\n\t        case 2: listeners[i].fn.call(listeners[i].context, a1); break;\n\t        case 3: listeners[i].fn.call(listeners[i].context, a1, a2); break;\n\t        case 4: listeners[i].fn.call(listeners[i].context, a1, a2, a3); break;\n\t        default:\n\t          if (!args) for (j = 1, args = new Array(len -1); j < len; j++) {\n\t            args[j - 1] = arguments[j];\n\t          }\n\n\t          listeners[i].fn.apply(listeners[i].context, args);\n\t      }\n\t    }\n\t  }\n\n\t  return true;\n\t};\n\n\t/**\n\t * Add a listener for a given event.\n\t *\n\t * @param {(String|Symbol)} event The event name.\n\t * @param {Function} fn The listener function.\n\t * @param {*} [context=this] The context to invoke the listener with.\n\t * @returns {EventEmitter} `this`.\n\t * @public\n\t */\n\tEventEmitter.prototype.on = function on(event, fn, context) {\n\t  return addListener(this, event, fn, context, false);\n\t};\n\n\t/**\n\t * Add a one-time listener for a given event.\n\t *\n\t * @param {(String|Symbol)} event The event name.\n\t * @param {Function} fn The listener function.\n\t * @param {*} [context=this] The context to invoke the listener with.\n\t * @returns {EventEmitter} `this`.\n\t * @public\n\t */\n\tEventEmitter.prototype.once = function once(event, fn, context) {\n\t  return addListener(this, event, fn, context, true);\n\t};\n\n\t/**\n\t * Remove the listeners of a given event.\n\t *\n\t * @param {(String|Symbol)} event The event name.\n\t * @param {Function} fn Only remove the listeners that match this function.\n\t * @param {*} context Only remove the listeners that have this context.\n\t * @param {Boolean} once Only remove one-time listeners.\n\t * @returns {EventEmitter} `this`.\n\t * @public\n\t */\n\tEventEmitter.prototype.removeListener = function removeListener(event, fn, context, once) {\n\t  var evt = prefix ? prefix + event : event;\n\n\t  if (!this._events[evt]) return this;\n\t  if (!fn) {\n\t    clearEvent(this, evt);\n\t    return this;\n\t  }\n\n\t  var listeners = this._events[evt];\n\n\t  if (listeners.fn) {\n\t    if (\n\t      listeners.fn === fn &&\n\t      (!once || listeners.once) &&\n\t      (!context || listeners.context === context)\n\t    ) {\n\t      clearEvent(this, evt);\n\t    }\n\t  } else {\n\t    for (var i = 0, events = [], length = listeners.length; i < length; i++) {\n\t      if (\n\t        listeners[i].fn !== fn ||\n\t        (once && !listeners[i].once) ||\n\t        (context && listeners[i].context !== context)\n\t      ) {\n\t        events.push(listeners[i]);\n\t      }\n\t    }\n\n\t    //\n\t    // Reset the array, or remove it completely if we have no more listeners.\n\t    //\n\t    if (events.length) this._events[evt] = events.length === 1 ? events[0] : events;\n\t    else clearEvent(this, evt);\n\t  }\n\n\t  return this;\n\t};\n\n\t/**\n\t * Remove all listeners, or those of the specified event.\n\t *\n\t * @param {(String|Symbol)} [event] The event name.\n\t * @returns {EventEmitter} `this`.\n\t * @public\n\t */\n\tEventEmitter.prototype.removeAllListeners = function removeAllListeners(event) {\n\t  var evt;\n\n\t  if (event) {\n\t    evt = prefix ? prefix + event : event;\n\t    if (this._events[evt]) clearEvent(this, evt);\n\t  } else {\n\t    this._events = new Events();\n\t    this._eventsCount = 0;\n\t  }\n\n\t  return this;\n\t};\n\n\t//\n\t// Alias methods names because people roll like that.\n\t//\n\tEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\n\tEventEmitter.prototype.addListener = EventEmitter.prototype.on;\n\n\t//\n\t// Expose the prefix.\n\t//\n\tEventEmitter.prefixed = prefix;\n\n\t//\n\t// Allow `EventEmitter` to be imported as module namespace.\n\t//\n\tEventEmitter.EventEmitter = EventEmitter;\n\n\t//\n\t// Expose the module.\n\t//\n\t{\n\t  module.exports = EventEmitter;\n\t}\n} (eventemitter3));\n\nvar common$3 = {};\n\n/**\n * Check if we're required to add a port number.\n *\n * @see https://url.spec.whatwg.org/#default-port\n * @param {Number|String} port Port number we need to check\n * @param {String} protocol Protocol we need to check against.\n * @returns {Boolean} Is it a default port for the given protocol\n * @api private\n */\nvar requiresPort = function required(port, protocol) {\n  protocol = protocol.split(':')[0];\n  port = +port;\n\n  if (!port) return false;\n\n  switch (protocol) {\n    case 'http':\n    case 'ws':\n    return port !== 80;\n\n    case 'https':\n    case 'wss':\n    return port !== 443;\n\n    case 'ftp':\n    return port !== 21;\n\n    case 'gopher':\n    return port !== 70;\n\n    case 'file':\n    return false;\n  }\n\n  return port !== 0;\n};\n\n(function (exports) {\n\tvar common   = exports,\n\t    url      = require$$0$9,\n\t    extend   = require$$0$6._extend,\n\t    required = requiresPort;\n\n\tvar upgradeHeader = /(^|,)\\s*upgrade\\s*($|,)/i,\n\t    isSSL = /^https|wss/;\n\n\t/**\n\t * Simple Regex for testing if protocol is https\n\t */\n\tcommon.isSSL = isSSL;\n\t/**\n\t * Copies the right headers from `options` and `req` to\n\t * `outgoing` which is then used to fire the proxied\n\t * request.\n\t *\n\t * Examples:\n\t *\n\t *    common.setupOutgoing(outgoing, options, req)\n\t *    // => { host: ..., hostname: ...}\n\t *\n\t * @param {Object} Outgoing Base object to be filled with required properties\n\t * @param {Object} Options Config object passed to the proxy\n\t * @param {ClientRequest} Req Request Object\n\t * @param {String} Forward String to select forward or target\n\t *\u00A0\n\t * @return {Object} Outgoing Object with all required properties set\n\t *\n\t * @api private\n\t */\n\n\tcommon.setupOutgoing = function(outgoing, options, req, forward) {\n\t  outgoing.port = options[forward || 'target'].port ||\n\t                  (isSSL.test(options[forward || 'target'].protocol) ? 443 : 80);\n\n\t  ['host', 'hostname', 'socketPath', 'pfx', 'key',\n\t    'passphrase', 'cert', 'ca', 'ciphers', 'secureProtocol'].forEach(\n\t    function(e) { outgoing[e] = options[forward || 'target'][e]; }\n\t  );\n\n\t  outgoing.method = options.method || req.method;\n\t  outgoing.headers = extend({}, req.headers);\n\n\t  if (options.headers){\n\t    extend(outgoing.headers, options.headers);\n\t  }\n\n\t  if (options.auth) {\n\t    outgoing.auth = options.auth;\n\t  }\n\t  \n\t  if (options.ca) {\n\t      outgoing.ca = options.ca;\n\t  }\n\n\t  if (isSSL.test(options[forward || 'target'].protocol)) {\n\t    outgoing.rejectUnauthorized = (typeof options.secure === \"undefined\") ? true : options.secure;\n\t  }\n\n\n\t  outgoing.agent = options.agent || false;\n\t  outgoing.localAddress = options.localAddress;\n\n\t  //\n\t  // Remark: If we are false and not upgrading, set the connection: close. This is the right thing to do\n\t  // as node core doesn't handle this COMPLETELY properly yet.\n\t  //\n\t  if (!outgoing.agent) {\n\t    outgoing.headers = outgoing.headers || {};\n\t    if (typeof outgoing.headers.connection !== 'string'\n\t        || !upgradeHeader.test(outgoing.headers.connection)\n\t       ) { outgoing.headers.connection = 'close'; }\n\t  }\n\n\n\t  // the final path is target path + relative path requested by user:\n\t  var target = options[forward || 'target'];\n\t  var targetPath = target && options.prependPath !== false\n\t    ? (target.path || '')\n\t    : '';\n\n\t  //\n\t  // Remark: Can we somehow not use url.parse as a perf optimization?\n\t  //\n\t  var outgoingPath = !options.toProxy\n\t    ? (url.parse(req.url).path || '')\n\t    : req.url;\n\n\t  //\n\t  // Remark: ignorePath will just straight up ignore whatever the request's\n\t  // path is. This can be labeled as FOOT-GUN material if you do not know what\n\t  // you are doing and are using conflicting options.\n\t  //\n\t  outgoingPath = !options.ignorePath ? outgoingPath : '';\n\n\t  outgoing.path = common.urlJoin(targetPath, outgoingPath);\n\n\t  if (options.changeOrigin) {\n\t    outgoing.headers.host =\n\t      required(outgoing.port, options[forward || 'target'].protocol) && !hasPort(outgoing.host)\n\t        ? outgoing.host + ':' + outgoing.port\n\t        : outgoing.host;\n\t  }\n\t  return outgoing;\n\t};\n\n\t/**\n\t * Set the proper configuration for sockets,\n\t * set no delay and set keep alive, also set\n\t * the timeout to 0.\n\t *\n\t * Examples:\n\t *\n\t *    common.setupSocket(socket)\n\t *    // => Socket\n\t *\n\t * @param {Socket} Socket instance to setup\n\t *\u00A0\n\t * @return {Socket} Return the configured socket.\n\t *\n\t * @api private\n\t */\n\n\tcommon.setupSocket = function(socket) {\n\t  socket.setTimeout(0);\n\t  socket.setNoDelay(true);\n\n\t  socket.setKeepAlive(true, 0);\n\n\t  return socket;\n\t};\n\n\t/**\n\t * Get the port number from the host. Or guess it based on the connection type.\n\t *\n\t * @param {Request} req Incoming HTTP request.\n\t *\n\t * @return {String} The port number.\n\t *\n\t * @api private\n\t */\n\tcommon.getPort = function(req) {\n\t  var res = req.headers.host ? req.headers.host.match(/:(\\d+)/) : '';\n\n\t  return res ?\n\t    res[1] :\n\t    common.hasEncryptedConnection(req) ? '443' : '80';\n\t};\n\n\t/**\n\t * Check if the request has an encrypted connection.\n\t *\n\t * @param {Request} req Incoming HTTP request.\n\t *\n\t * @return {Boolean} Whether the connection is encrypted or not.\n\t *\n\t * @api private\n\t */\n\tcommon.hasEncryptedConnection = function(req) {\n\t  return Boolean(req.connection.encrypted || req.connection.pair);\n\t};\n\n\t/**\n\t * OS-agnostic join (doesn't break on URLs like path.join does on Windows)>\n\t *\n\t * @return {String} The generated path.\n\t *\n\t * @api private\n\t */\n\n\tcommon.urlJoin = function() {\n\t    //\n\t    // We do not want to mess with the query string. All we want to touch is the path.\n\t    //\n\t  var args = Array.prototype.slice.call(arguments),\n\t      lastIndex = args.length - 1,\n\t      last = args[lastIndex],\n\t      lastSegs = last.split('?'),\n\t      retSegs;\n\n\t  args[lastIndex] = lastSegs.shift();\n\n\t  //\n\t  // Join all strings, but remove empty strings so we don't get extra slashes from\n\t  // joining e.g. ['', 'am']\n\t  //\n\t  retSegs = [\n\t    args.filter(Boolean).join('/')\n\t        .replace(/\\/+/g, '/')\n\t        .replace('http:/', 'http://')\n\t        .replace('https:/', 'https://')\n\t  ];\n\n\t  // Only join the query string if it exists so we don't have trailing a '?'\n\t  // on every request\n\n\t  // Handle case where there could be multiple ? in the URL.\n\t  retSegs.push.apply(retSegs, lastSegs);\n\n\t  return retSegs.join('?')\n\t};\n\n\t/**\n\t * Rewrites or removes the domain of a cookie header\n\t *\n\t * @param {String|Array} Header\n\t * @param {Object} Config, mapping of domain to rewritten domain.\n\t *                 '*' key to match any domain, null value to remove the domain.\n\t *\n\t * @api private\n\t */\n\tcommon.rewriteCookieProperty = function rewriteCookieProperty(header, config, property) {\n\t  if (Array.isArray(header)) {\n\t    return header.map(function (headerElement) {\n\t      return rewriteCookieProperty(headerElement, config, property);\n\t    });\n\t  }\n\t  return header.replace(new RegExp(\"(;\\\\s*\" + property + \"=)([^;]+)\", 'i'), function(match, prefix, previousValue) {\n\t    var newValue;\n\t    if (previousValue in config) {\n\t      newValue = config[previousValue];\n\t    } else if ('*' in config) {\n\t      newValue = config['*'];\n\t    } else {\n\t      //no match, return previous value\n\t      return match;\n\t    }\n\t    if (newValue) {\n\t      //replace value\n\t      return prefix + newValue;\n\t    } else {\n\t      //remove value\n\t      return '';\n\t    }\n\t  });\n\t};\n\n\t/**\n\t * Check the host and see if it potentially has a port in it (keep it simple)\n\t *\n\t * @returns {Boolean} Whether we have one or not\n\t *\n\t * @api private\n\t */\n\tfunction hasPort(host) {\n\t  return !!~host.indexOf(':');\n\t}} (common$3));\n\nvar url$1    = require$$0$9,\n    common$2 = common$3;\n\n\nvar redirectRegex = /^201|30(1|2|7|8)$/;\n\n/*!\n * Array of passes.\n *\n * A `pass` is just a function that is executed on `req, res, options`\n * so that you can easily add new checks while still keeping the base\n * flexible.\n */\n\nvar webOutgoing = { // <--\n\n  /**\n   * If is a HTTP 1.0 request, remove chunk headers\n   *\n   * @param {ClientRequest} Req Request object\n   *\u00A0@param {IncomingMessage} Res Response object\n   * @param {proxyResponse} Res Response object from the proxy request\n   *\n   * @api private\n   */\n  removeChunked: function removeChunked(req, res, proxyRes) {\n    if (req.httpVersion === '1.0') {\n      delete proxyRes.headers['transfer-encoding'];\n    }\n  },\n\n  /**\n   * If is a HTTP 1.0 request, set the correct connection header\n   * or if connection header not present, then use `keep-alive`\n   *\n   * @param {ClientRequest} Req Request object\n   *\u00A0@param {IncomingMessage} Res Response object\n   * @param {proxyResponse} Res Response object from the proxy request\n   *\n   * @api private\n   */\n  setConnection: function setConnection(req, res, proxyRes) {\n    if (req.httpVersion === '1.0') {\n      proxyRes.headers.connection = req.headers.connection || 'close';\n    } else if (req.httpVersion !== '2.0' && !proxyRes.headers.connection) {\n      proxyRes.headers.connection = req.headers.connection || 'keep-alive';\n    }\n  },\n\n  setRedirectHostRewrite: function setRedirectHostRewrite(req, res, proxyRes, options) {\n    if ((options.hostRewrite || options.autoRewrite || options.protocolRewrite)\n        && proxyRes.headers['location']\n        && redirectRegex.test(proxyRes.statusCode)) {\n      var target = url$1.parse(options.target);\n      var u = url$1.parse(proxyRes.headers['location']);\n\n      // make sure the redirected host matches the target host before rewriting\n      if (target.host != u.host) {\n        return;\n      }\n\n      if (options.hostRewrite) {\n        u.host = options.hostRewrite;\n      } else if (options.autoRewrite) {\n        u.host = req.headers['host'];\n      }\n      if (options.protocolRewrite) {\n        u.protocol = options.protocolRewrite;\n      }\n\n      proxyRes.headers['location'] = u.format();\n    }\n  },\n  /**\n   * Copy headers from proxyResponse to response\n   * set each header in response object.\n   *\n   * @param {ClientRequest} Req Request object\n   *\u00A0@param {IncomingMessage} Res Response object\n   * @param {proxyResponse} Res Response object from the proxy request\n   * @param {Object} Options options.cookieDomainRewrite: Config to rewrite cookie domain\n   *\n   * @api private\n   */\n  writeHeaders: function writeHeaders(req, res, proxyRes, options) {\n    var rewriteCookieDomainConfig = options.cookieDomainRewrite,\n        rewriteCookiePathConfig = options.cookiePathRewrite,\n        preserveHeaderKeyCase = options.preserveHeaderKeyCase,\n        rawHeaderKeyMap,\n        setHeader = function(key, header) {\n          if (header == undefined) return;\n          if (rewriteCookieDomainConfig && key.toLowerCase() === 'set-cookie') {\n            header = common$2.rewriteCookieProperty(header, rewriteCookieDomainConfig, 'domain');\n          }\n          if (rewriteCookiePathConfig && key.toLowerCase() === 'set-cookie') {\n            header = common$2.rewriteCookieProperty(header, rewriteCookiePathConfig, 'path');\n          }\n          res.setHeader(String(key).trim(), header);\n        };\n\n    if (typeof rewriteCookieDomainConfig === 'string') { //also test for ''\n      rewriteCookieDomainConfig = { '*': rewriteCookieDomainConfig };\n    }\n\n    if (typeof rewriteCookiePathConfig === 'string') { //also test for ''\n      rewriteCookiePathConfig = { '*': rewriteCookiePathConfig };\n    }\n\n    // message.rawHeaders is added in: v0.11.6\n    // https://nodejs.org/api/http.html#http_message_rawheaders\n    if (preserveHeaderKeyCase && proxyRes.rawHeaders != undefined) {\n      rawHeaderKeyMap = {};\n      for (var i = 0; i < proxyRes.rawHeaders.length; i += 2) {\n        var key = proxyRes.rawHeaders[i];\n        rawHeaderKeyMap[key.toLowerCase()] = key;\n      }\n    }\n\n    Object.keys(proxyRes.headers).forEach(function(key) {\n      var header = proxyRes.headers[key];\n      if (preserveHeaderKeyCase && rawHeaderKeyMap) {\n        key = rawHeaderKeyMap[key] || key;\n      }\n      setHeader(key, header);\n    });\n  },\n\n  /**\n   * Set the statusCode from the proxyResponse\n   *\n   * @param {ClientRequest} Req Request object\n   *\u00A0@param {IncomingMessage} Res Response object\n   * @param {proxyResponse} Res Response object from the proxy request\n   *\n   * @api private\n   */\n  writeStatusCode: function writeStatusCode(req, res, proxyRes) {\n    // From Node.js docs: response.writeHead(statusCode[, statusMessage][, headers])\n    if(proxyRes.statusMessage) {\n      res.statusCode = proxyRes.statusCode;\n      res.statusMessage = proxyRes.statusMessage;\n    } else {\n      res.statusCode = proxyRes.statusCode;\n    }\n  }\n\n};\n\nvar followRedirects$1 = {exports: {}};\n\nvar debug$3;\n\nvar debug_1 = function () {\n  if (!debug$3) {\n    try {\n      /* eslint global-require: off */\n      debug$3 = require(\"debug\")(\"follow-redirects\");\n    }\n    catch (error) { /* */ }\n    if (typeof debug$3 !== \"function\") {\n      debug$3 = function () { /* */ };\n    }\n  }\n  debug$3.apply(null, arguments);\n};\n\nvar url = require$$0$9;\nvar URL$1 = url.URL;\nvar http$1 = require$$1$2;\nvar https$1 = require$$1$3;\nvar Writable = require$$0$7.Writable;\nvar assert = assert$1;\nvar debug$2 = debug_1;\n\n// Create handlers that pass events from native requests\nvar events = [\"abort\", \"aborted\", \"connect\", \"error\", \"socket\", \"timeout\"];\nvar eventHandlers = Object.create(null);\nevents.forEach(function (event) {\n  eventHandlers[event] = function (arg1, arg2, arg3) {\n    this._redirectable.emit(event, arg1, arg2, arg3);\n  };\n});\n\n// Error types with codes\nvar RedirectionError = createErrorType(\n  \"ERR_FR_REDIRECTION_FAILURE\",\n  \"Redirected request failed\"\n);\nvar TooManyRedirectsError = createErrorType(\n  \"ERR_FR_TOO_MANY_REDIRECTS\",\n  \"Maximum number of redirects exceeded\"\n);\nvar MaxBodyLengthExceededError = createErrorType(\n  \"ERR_FR_MAX_BODY_LENGTH_EXCEEDED\",\n  \"Request body larger than maxBodyLength limit\"\n);\nvar WriteAfterEndError = createErrorType(\n  \"ERR_STREAM_WRITE_AFTER_END\",\n  \"write after end\"\n);\n\n// An HTTP(S) request that can be redirected\nfunction RedirectableRequest(options, responseCallback) {\n  // Initialize the request\n  Writable.call(this);\n  this._sanitizeOptions(options);\n  this._options = options;\n  this._ended = false;\n  this._ending = false;\n  this._redirectCount = 0;\n  this._redirects = [];\n  this._requestBodyLength = 0;\n  this._requestBodyBuffers = [];\n\n  // Attach a callback if passed\n  if (responseCallback) {\n    this.on(\"response\", responseCallback);\n  }\n\n  // React to responses of native requests\n  var self = this;\n  this._onNativeResponse = function (response) {\n    self._processResponse(response);\n  };\n\n  // Perform the first request\n  this._performRequest();\n}\nRedirectableRequest.prototype = Object.create(Writable.prototype);\n\nRedirectableRequest.prototype.abort = function () {\n  abortRequest(this._currentRequest);\n  this.emit(\"abort\");\n};\n\n// Writes buffered data to the current native request\nRedirectableRequest.prototype.write = function (data, encoding, callback) {\n  // Writing is not allowed if end has been called\n  if (this._ending) {\n    throw new WriteAfterEndError();\n  }\n\n  // Validate input and shift parameters if necessary\n  if (!(typeof data === \"string\" || typeof data === \"object\" && (\"length\" in data))) {\n    throw new TypeError(\"data should be a string, Buffer or Uint8Array\");\n  }\n  if (typeof encoding === \"function\") {\n    callback = encoding;\n    encoding = null;\n  }\n\n  // Ignore empty buffers, since writing them doesn't invoke the callback\n  // https://github.com/nodejs/node/issues/22066\n  if (data.length === 0) {\n    if (callback) {\n      callback();\n    }\n    return;\n  }\n  // Only write when we don't exceed the maximum body length\n  if (this._requestBodyLength + data.length <= this._options.maxBodyLength) {\n    this._requestBodyLength += data.length;\n    this._requestBodyBuffers.push({ data: data, encoding: encoding });\n    this._currentRequest.write(data, encoding, callback);\n  }\n  // Error when we exceed the maximum body length\n  else {\n    this.emit(\"error\", new MaxBodyLengthExceededError());\n    this.abort();\n  }\n};\n\n// Ends the current native request\nRedirectableRequest.prototype.end = function (data, encoding, callback) {\n  // Shift parameters if necessary\n  if (typeof data === \"function\") {\n    callback = data;\n    data = encoding = null;\n  }\n  else if (typeof encoding === \"function\") {\n    callback = encoding;\n    encoding = null;\n  }\n\n  // Write data if needed and end\n  if (!data) {\n    this._ended = this._ending = true;\n    this._currentRequest.end(null, null, callback);\n  }\n  else {\n    var self = this;\n    var currentRequest = this._currentRequest;\n    this.write(data, encoding, function () {\n      self._ended = true;\n      currentRequest.end(null, null, callback);\n    });\n    this._ending = true;\n  }\n};\n\n// Sets a header value on the current native request\nRedirectableRequest.prototype.setHeader = function (name, value) {\n  this._options.headers[name] = value;\n  this._currentRequest.setHeader(name, value);\n};\n\n// Clears a header value on the current native request\nRedirectableRequest.prototype.removeHeader = function (name) {\n  delete this._options.headers[name];\n  this._currentRequest.removeHeader(name);\n};\n\n// Global timeout for all underlying requests\nRedirectableRequest.prototype.setTimeout = function (msecs, callback) {\n  var self = this;\n\n  // Destroys the socket on timeout\n  function destroyOnTimeout(socket) {\n    socket.setTimeout(msecs);\n    socket.removeListener(\"timeout\", socket.destroy);\n    socket.addListener(\"timeout\", socket.destroy);\n  }\n\n  // Sets up a timer to trigger a timeout event\n  function startTimer(socket) {\n    if (self._timeout) {\n      clearTimeout(self._timeout);\n    }\n    self._timeout = setTimeout(function () {\n      self.emit(\"timeout\");\n      clearTimer();\n    }, msecs);\n    destroyOnTimeout(socket);\n  }\n\n  // Stops a timeout from triggering\n  function clearTimer() {\n    // Clear the timeout\n    if (self._timeout) {\n      clearTimeout(self._timeout);\n      self._timeout = null;\n    }\n\n    // Clean up all attached listeners\n    self.removeListener(\"abort\", clearTimer);\n    self.removeListener(\"error\", clearTimer);\n    self.removeListener(\"response\", clearTimer);\n    if (callback) {\n      self.removeListener(\"timeout\", callback);\n    }\n    if (!self.socket) {\n      self._currentRequest.removeListener(\"socket\", startTimer);\n    }\n  }\n\n  // Attach callback if passed\n  if (callback) {\n    this.on(\"timeout\", callback);\n  }\n\n  // Start the timer if or when the socket is opened\n  if (this.socket) {\n    startTimer(this.socket);\n  }\n  else {\n    this._currentRequest.once(\"socket\", startTimer);\n  }\n\n  // Clean up on events\n  this.on(\"socket\", destroyOnTimeout);\n  this.on(\"abort\", clearTimer);\n  this.on(\"error\", clearTimer);\n  this.on(\"response\", clearTimer);\n\n  return this;\n};\n\n// Proxy all other public ClientRequest methods\n[\n  \"flushHeaders\", \"getHeader\",\n  \"setNoDelay\", \"setSocketKeepAlive\",\n].forEach(function (method) {\n  RedirectableRequest.prototype[method] = function (a, b) {\n    return this._currentRequest[method](a, b);\n  };\n});\n\n// Proxy all public ClientRequest properties\n[\"aborted\", \"connection\", \"socket\"].forEach(function (property) {\n  Object.defineProperty(RedirectableRequest.prototype, property, {\n    get: function () { return this._currentRequest[property]; },\n  });\n});\n\nRedirectableRequest.prototype._sanitizeOptions = function (options) {\n  // Ensure headers are always present\n  if (!options.headers) {\n    options.headers = {};\n  }\n\n  // Since http.request treats host as an alias of hostname,\n  // but the url module interprets host as hostname plus port,\n  // eliminate the host property to avoid confusion.\n  if (options.host) {\n    // Use hostname if set, because it has precedence\n    if (!options.hostname) {\n      options.hostname = options.host;\n    }\n    delete options.host;\n  }\n\n  // Complete the URL object when necessary\n  if (!options.pathname && options.path) {\n    var searchPos = options.path.indexOf(\"?\");\n    if (searchPos < 0) {\n      options.pathname = options.path;\n    }\n    else {\n      options.pathname = options.path.substring(0, searchPos);\n      options.search = options.path.substring(searchPos);\n    }\n  }\n};\n\n\n// Executes the next native request (initial or redirect)\nRedirectableRequest.prototype._performRequest = function () {\n  // Load the native protocol\n  var protocol = this._options.protocol;\n  var nativeProtocol = this._options.nativeProtocols[protocol];\n  if (!nativeProtocol) {\n    this.emit(\"error\", new TypeError(\"Unsupported protocol \" + protocol));\n    return;\n  }\n\n  // If specified, use the agent corresponding to the protocol\n  // (HTTP and HTTPS use different types of agents)\n  if (this._options.agents) {\n    var scheme = protocol.slice(0, -1);\n    this._options.agent = this._options.agents[scheme];\n  }\n\n  // Create the native request\n  var request = this._currentRequest =\n        nativeProtocol.request(this._options, this._onNativeResponse);\n  this._currentUrl = url.format(this._options);\n\n  // Set up event handlers\n  request._redirectable = this;\n  for (var e = 0; e < events.length; e++) {\n    request.on(events[e], eventHandlers[events[e]]);\n  }\n\n  // End a redirected request\n  // (The first request must be ended explicitly with RedirectableRequest#end)\n  if (this._isRedirect) {\n    // Write the request entity and end.\n    var i = 0;\n    var self = this;\n    var buffers = this._requestBodyBuffers;\n    (function writeNext(error) {\n      // Only write if this request has not been redirected yet\n      /* istanbul ignore else */\n      if (request === self._currentRequest) {\n        // Report any write errors\n        /* istanbul ignore if */\n        if (error) {\n          self.emit(\"error\", error);\n        }\n        // Write the next buffer if there are still left\n        else if (i < buffers.length) {\n          var buffer = buffers[i++];\n          /* istanbul ignore else */\n          if (!request.finished) {\n            request.write(buffer.data, buffer.encoding, writeNext);\n          }\n        }\n        // End the request if `end` has been called on us\n        else if (self._ended) {\n          request.end();\n        }\n      }\n    }());\n  }\n};\n\n// Processes a response from the current native request\nRedirectableRequest.prototype._processResponse = function (response) {\n  // Store the redirected response\n  var statusCode = response.statusCode;\n  if (this._options.trackRedirects) {\n    this._redirects.push({\n      url: this._currentUrl,\n      headers: response.headers,\n      statusCode: statusCode,\n    });\n  }\n\n  // RFC7231\u00A76.4: The 3xx (Redirection) class of status code indicates\n  // that further action needs to be taken by the user agent in order to\n  // fulfill the request. If a Location header field is provided,\n  // the user agent MAY automatically redirect its request to the URI\n  // referenced by the Location field value,\n  // even if the specific status code is not understood.\n\n  // If the response is not a redirect; return it as-is\n  var location = response.headers.location;\n  if (!location || this._options.followRedirects === false ||\n      statusCode < 300 || statusCode >= 400) {\n    response.responseUrl = this._currentUrl;\n    response.redirects = this._redirects;\n    this.emit(\"response\", response);\n\n    // Clean up\n    this._requestBodyBuffers = [];\n    return;\n  }\n\n  // The response is a redirect, so abort the current request\n  abortRequest(this._currentRequest);\n  // Discard the remainder of the response to avoid waiting for data\n  response.destroy();\n\n  // RFC7231\u00A76.4: A client SHOULD detect and intervene\n  // in cyclical redirections (i.e., \"infinite\" redirection loops).\n  if (++this._redirectCount > this._options.maxRedirects) {\n    this.emit(\"error\", new TooManyRedirectsError());\n    return;\n  }\n\n  // Store the request headers if applicable\n  var requestHeaders;\n  var beforeRedirect = this._options.beforeRedirect;\n  if (beforeRedirect) {\n    requestHeaders = Object.assign({\n      // The Host header was set by nativeProtocol.request\n      Host: response.req.getHeader(\"host\"),\n    }, this._options.headers);\n  }\n\n  // RFC7231\u00A76.4: Automatic redirection needs to done with\n  // care for methods not known to be safe, [\u2026]\n  // RFC7231\u00A76.4.2\u20133: For historical reasons, a user agent MAY change\n  // the request method from POST to GET for the subsequent request.\n  var method = this._options.method;\n  if ((statusCode === 301 || statusCode === 302) && this._options.method === \"POST\" ||\n      // RFC7231\u00A76.4.4: The 303 (See Other) status code indicates that\n      // the server is redirecting the user agent to a different resource [\u2026]\n      // A user agent can perform a retrieval request targeting that URI\n      // (a GET or HEAD request if using HTTP) [\u2026]\n      (statusCode === 303) && !/^(?:GET|HEAD)$/.test(this._options.method)) {\n    this._options.method = \"GET\";\n    // Drop a possible entity and headers related to it\n    this._requestBodyBuffers = [];\n    removeMatchingHeaders(/^content-/i, this._options.headers);\n  }\n\n  // Drop the Host header, as the redirect might lead to a different host\n  var currentHostHeader = removeMatchingHeaders(/^host$/i, this._options.headers);\n\n  // If the redirect is relative, carry over the host of the last request\n  var currentUrlParts = url.parse(this._currentUrl);\n  var currentHost = currentHostHeader || currentUrlParts.host;\n  var currentUrl = /^\\w+:/.test(location) ? this._currentUrl :\n    url.format(Object.assign(currentUrlParts, { host: currentHost }));\n\n  // Determine the URL of the redirection\n  var redirectUrl;\n  try {\n    redirectUrl = url.resolve(currentUrl, location);\n  }\n  catch (cause) {\n    this.emit(\"error\", new RedirectionError(cause));\n    return;\n  }\n\n  // Create the redirected request\n  debug$2(\"redirecting to\", redirectUrl);\n  this._isRedirect = true;\n  var redirectUrlParts = url.parse(redirectUrl);\n  Object.assign(this._options, redirectUrlParts);\n\n  // Drop confidential headers when redirecting to a less secure protocol\n  // or to a different domain that is not a superdomain\n  if (redirectUrlParts.protocol !== currentUrlParts.protocol &&\n     redirectUrlParts.protocol !== \"https:\" ||\n     redirectUrlParts.host !== currentHost &&\n     !isSubdomain(redirectUrlParts.host, currentHost)) {\n    removeMatchingHeaders(/^(?:authorization|cookie)$/i, this._options.headers);\n  }\n\n  // Evaluate the beforeRedirect callback\n  if (typeof beforeRedirect === \"function\") {\n    var responseDetails = {\n      headers: response.headers,\n      statusCode: statusCode,\n    };\n    var requestDetails = {\n      url: currentUrl,\n      method: method,\n      headers: requestHeaders,\n    };\n    try {\n      beforeRedirect(this._options, responseDetails, requestDetails);\n    }\n    catch (err) {\n      this.emit(\"error\", err);\n      return;\n    }\n    this._sanitizeOptions(this._options);\n  }\n\n  // Perform the redirected request\n  try {\n    this._performRequest();\n  }\n  catch (cause) {\n    this.emit(\"error\", new RedirectionError(cause));\n  }\n};\n\n// Wraps the key/value object of protocols with redirect functionality\nfunction wrap(protocols) {\n  // Default settings\n  var exports = {\n    maxRedirects: 21,\n    maxBodyLength: 10 * 1024 * 1024,\n  };\n\n  // Wrap each protocol\n  var nativeProtocols = {};\n  Object.keys(protocols).forEach(function (scheme) {\n    var protocol = scheme + \":\";\n    var nativeProtocol = nativeProtocols[protocol] = protocols[scheme];\n    var wrappedProtocol = exports[scheme] = Object.create(nativeProtocol);\n\n    // Executes a request, following redirects\n    function request(input, options, callback) {\n      // Parse parameters\n      if (typeof input === \"string\") {\n        var urlStr = input;\n        try {\n          input = urlToOptions(new URL$1(urlStr));\n        }\n        catch (err) {\n          /* istanbul ignore next */\n          input = url.parse(urlStr);\n        }\n      }\n      else if (URL$1 && (input instanceof URL$1)) {\n        input = urlToOptions(input);\n      }\n      else {\n        callback = options;\n        options = input;\n        input = { protocol: protocol };\n      }\n      if (typeof options === \"function\") {\n        callback = options;\n        options = null;\n      }\n\n      // Set defaults\n      options = Object.assign({\n        maxRedirects: exports.maxRedirects,\n        maxBodyLength: exports.maxBodyLength,\n      }, input, options);\n      options.nativeProtocols = nativeProtocols;\n\n      assert.equal(options.protocol, protocol, \"protocol mismatch\");\n      debug$2(\"options\", options);\n      return new RedirectableRequest(options, callback);\n    }\n\n    // Executes a GET request, following redirects\n    function get(input, options, callback) {\n      var wrappedRequest = wrappedProtocol.request(input, options, callback);\n      wrappedRequest.end();\n      return wrappedRequest;\n    }\n\n    // Expose the properties on the wrapped protocol\n    Object.defineProperties(wrappedProtocol, {\n      request: { value: request, configurable: true, enumerable: true, writable: true },\n      get: { value: get, configurable: true, enumerable: true, writable: true },\n    });\n  });\n  return exports;\n}\n\n/* istanbul ignore next */\nfunction noop$1() { /* empty */ }\n\n// from https://github.com/nodejs/node/blob/master/lib/internal/url.js\nfunction urlToOptions(urlObject) {\n  var options = {\n    protocol: urlObject.protocol,\n    hostname: urlObject.hostname.startsWith(\"[\") ?\n      /* istanbul ignore next */\n      urlObject.hostname.slice(1, -1) :\n      urlObject.hostname,\n    hash: urlObject.hash,\n    search: urlObject.search,\n    pathname: urlObject.pathname,\n    path: urlObject.pathname + urlObject.search,\n    href: urlObject.href,\n  };\n  if (urlObject.port !== \"\") {\n    options.port = Number(urlObject.port);\n  }\n  return options;\n}\n\nfunction removeMatchingHeaders(regex, headers) {\n  var lastValue;\n  for (var header in headers) {\n    if (regex.test(header)) {\n      lastValue = headers[header];\n      delete headers[header];\n    }\n  }\n  return (lastValue === null || typeof lastValue === \"undefined\") ?\n    undefined : String(lastValue).trim();\n}\n\nfunction createErrorType(code, defaultMessage) {\n  function CustomError(cause) {\n    Error.captureStackTrace(this, this.constructor);\n    if (!cause) {\n      this.message = defaultMessage;\n    }\n    else {\n      this.message = defaultMessage + \": \" + cause.message;\n      this.cause = cause;\n    }\n  }\n  CustomError.prototype = new Error();\n  CustomError.prototype.constructor = CustomError;\n  CustomError.prototype.name = \"Error [\" + code + \"]\";\n  CustomError.prototype.code = code;\n  return CustomError;\n}\n\nfunction abortRequest(request) {\n  for (var e = 0; e < events.length; e++) {\n    request.removeListener(events[e], eventHandlers[events[e]]);\n  }\n  request.on(\"error\", noop$1);\n  request.abort();\n}\n\nfunction isSubdomain(subdomain, domain) {\n  const dot = subdomain.length - domain.length - 1;\n  return dot > 0 && subdomain[dot] === \".\" && subdomain.endsWith(domain);\n}\n\n// Exports\nfollowRedirects$1.exports = wrap({ http: http$1, https: https$1 });\nfollowRedirects$1.exports.wrap = wrap;\n\nvar httpNative   = require$$1$2,\n    httpsNative  = require$$1$3,\n    web_o  = webOutgoing,\n    common$1 = common$3,\n    followRedirects = followRedirects$1.exports;\n\nweb_o = Object.keys(web_o).map(function(pass) {\n  return web_o[pass];\n});\n\nvar nativeAgents = { http: httpNative, https: httpsNative };\n\n/*!\n * Array of passes.\n *\n * A `pass` is just a function that is executed on `req, res, options`\n * so that you can easily add new checks while still keeping the base\n * flexible.\n */\n\n\nvar webIncoming = {\n\n  /**\n   * Sets `content-length` to '0' if request is of DELETE type.\n   *\n   * @param {ClientRequest} Req Request object\n   *\u00A0@param {IncomingMessage} Res Response object\n   * @param {Object} Options Config object passed to the proxy\n   *\n   * @api private\n   */\n\n  deleteLength: function deleteLength(req, res, options) {\n    if((req.method === 'DELETE' || req.method === 'OPTIONS')\n       && !req.headers['content-length']) {\n      req.headers['content-length'] = '0';\n      delete req.headers['transfer-encoding'];\n    }\n  },\n\n  /**\n   * Sets timeout in request socket if it was specified in options.\n   *\n   * @param {ClientRequest} Req Request object\n   *\u00A0@param {IncomingMessage} Res Response object\n   * @param {Object} Options Config object passed to the proxy\n   *\n   * @api private\n   */\n\n  timeout: function timeout(req, res, options) {\n    if(options.timeout) {\n      req.socket.setTimeout(options.timeout);\n    }\n  },\n\n  /**\n   * Sets `x-forwarded-*` headers if specified in config.\n   *\n   * @param {ClientRequest} Req Request object\n   *\u00A0@param {IncomingMessage} Res Response object\n   * @param {Object} Options Config object passed to the proxy\n   *\n   * @api private\n   */\n\n  XHeaders: function XHeaders(req, res, options) {\n    if(!options.xfwd) return;\n\n    var encrypted = req.isSpdy || common$1.hasEncryptedConnection(req);\n    var values = {\n      for  : req.connection.remoteAddress || req.socket.remoteAddress,\n      port : common$1.getPort(req),\n      proto: encrypted ? 'https' : 'http'\n    };\n\n    ['for', 'port', 'proto'].forEach(function(header) {\n      req.headers['x-forwarded-' + header] =\n        (req.headers['x-forwarded-' + header] || '') +\n        (req.headers['x-forwarded-' + header] ? ',' : '') +\n        values[header];\n    });\n\n    req.headers['x-forwarded-host'] = req.headers['x-forwarded-host'] || req.headers['host'] || '';\n  },\n\n  /**\n   * Does the actual proxying. If `forward` is enabled fires up\n   * a ForwardStream, same happens for ProxyStream. The request\n   * just dies otherwise.\n   *\n   * @param {ClientRequest} Req Request object\n   *\u00A0@param {IncomingMessage} Res Response object\n   * @param {Object} Options Config object passed to the proxy\n   *\n   * @api private\n   */\n\n  stream: function stream(req, res, options, _, server, clb) {\n\n    // And we begin!\n    server.emit('start', req, res, options.target || options.forward);\n\n    var agents = options.followRedirects ? followRedirects : nativeAgents;\n    var http = agents.http;\n    var https = agents.https;\n\n    if(options.forward) {\n      // If forward enable, so just pipe the request\n      var forwardReq = (options.forward.protocol === 'https:' ? https : http).request(\n        common$1.setupOutgoing(options.ssl || {}, options, req, 'forward')\n      );\n\n      // error handler (e.g. ECONNRESET, ECONNREFUSED)\n      // Handle errors on incoming request as well as it makes sense to\n      var forwardError = createErrorHandler(forwardReq, options.forward);\n      req.on('error', forwardError);\n      forwardReq.on('error', forwardError);\n\n      (options.buffer || req).pipe(forwardReq);\n      if(!options.target) { return res.end(); }\n    }\n\n    // Request initalization\n    var proxyReq = (options.target.protocol === 'https:' ? https : http).request(\n      common$1.setupOutgoing(options.ssl || {}, options, req)\n    );\n\n    // Enable developers to modify the proxyReq before headers are sent\n    proxyReq.on('socket', function(socket) {\n      if(server && !proxyReq.getHeader('expect')) {\n        server.emit('proxyReq', proxyReq, req, res, options);\n      }\n    });\n\n    // allow outgoing socket to timeout so that we could\n    // show an error page at the initial request\n    if(options.proxyTimeout) {\n      proxyReq.setTimeout(options.proxyTimeout, function() {\n         proxyReq.abort();\n      });\n    }\n\n    // Ensure we abort proxy if request is aborted\n    req.on('aborted', function () {\n      proxyReq.abort();\n    });\n\n    // handle errors in proxy and incoming request, just like for forward proxy\n    var proxyError = createErrorHandler(proxyReq, options.target);\n    req.on('error', proxyError);\n    proxyReq.on('error', proxyError);\n\n    function createErrorHandler(proxyReq, url) {\n      return function proxyError(err) {\n        if (req.socket.destroyed && err.code === 'ECONNRESET') {\n          server.emit('econnreset', err, req, res, url);\n          return proxyReq.abort();\n        }\n\n        if (clb) {\n          clb(err, req, res, url);\n        } else {\n          server.emit('error', err, req, res, url);\n        }\n      }\n    }\n\n    (options.buffer || req).pipe(proxyReq);\n\n    proxyReq.on('response', function(proxyRes) {\n      if(server) { server.emit('proxyRes', proxyRes, req, res); }\n\n      if(!res.headersSent && !options.selfHandleResponse) {\n        for(var i=0; i < web_o.length; i++) {\n          if(web_o[i](req, res, proxyRes, options)) { break; }\n        }\n      }\n\n      if (!res.finished) {\n        // Allow us to listen when the proxy has completed\n        proxyRes.on('end', function () {\n          if (server) server.emit('end', req, res, proxyRes);\n        });\n        // We pipe to the response unless its expected to be handled by the user\n        if (!options.selfHandleResponse) proxyRes.pipe(res);\n      } else {\n        if (server) server.emit('end', req, res, proxyRes);\n      }\n    });\n  }\n\n};\n\nvar http   = require$$1$2,\n    https  = require$$1$3,\n    common = common$3;\n\n/*!\n * Array of passes.\n *\n * A `pass` is just a function that is executed on `req, socket, options`\n * so that you can easily add new checks while still keeping the base\n * flexible.\n */\n\n/*\n * Websockets Passes\n *\n */\n\n\nvar wsIncoming = {\n  /**\n   * WebSocket requests must have the `GET` method and\n   * the `upgrade:websocket` header\n   *\n   * @param {ClientRequest} Req Request object\n   *\u00A0@param {Socket} Websocket\n   *\n   * @api private\n   */\n\n  checkMethodAndHeader : function checkMethodAndHeader(req, socket) {\n    if (req.method !== 'GET' || !req.headers.upgrade) {\n      socket.destroy();\n      return true;\n    }\n\n    if (req.headers.upgrade.toLowerCase() !== 'websocket') {\n      socket.destroy();\n      return true;\n    }\n  },\n\n  /**\n   * Sets `x-forwarded-*` headers if specified in config.\n   *\n   * @param {ClientRequest} Req Request object\n   *\u00A0@param {Socket} Websocket\n   * @param {Object} Options Config object passed to the proxy\n   *\n   * @api private\n   */\n\n  XHeaders : function XHeaders(req, socket, options) {\n    if(!options.xfwd) return;\n\n    var values = {\n      for  : req.connection.remoteAddress || req.socket.remoteAddress,\n      port : common.getPort(req),\n      proto: common.hasEncryptedConnection(req) ? 'wss' : 'ws'\n    };\n\n    ['for', 'port', 'proto'].forEach(function(header) {\n      req.headers['x-forwarded-' + header] =\n        (req.headers['x-forwarded-' + header] || '') +\n        (req.headers['x-forwarded-' + header] ? ',' : '') +\n        values[header];\n    });\n  },\n\n  /**\n   * Does the actual proxying. Make the request and upgrade it\n   * send the Switching Protocols request and pipe the sockets.\n   *\n   * @param {ClientRequest} Req Request object\n   *\u00A0@param {Socket} Websocket\n   * @param {Object} Options Config object passed to the proxy\n   *\n   * @api private\n   */\n  stream : function stream(req, socket, options, head, server, clb) {\n\n    var createHttpHeader = function(line, headers) {\n      return Object.keys(headers).reduce(function (head, key) {\n        var value = headers[key];\n\n        if (!Array.isArray(value)) {\n          head.push(key + ': ' + value);\n          return head;\n        }\n\n        for (var i = 0; i < value.length; i++) {\n          head.push(key + ': ' + value[i]);\n        }\n        return head;\n      }, [line])\n      .join('\\r\\n') + '\\r\\n\\r\\n';\n    };\n\n    common.setupSocket(socket);\n\n    if (head && head.length) socket.unshift(head);\n\n\n    var proxyReq = (common.isSSL.test(options.target.protocol) ? https : http).request(\n      common.setupOutgoing(options.ssl || {}, options, req)\n    );\n\n    // Enable developers to modify the proxyReq before headers are sent\n    if (server) { server.emit('proxyReqWs', proxyReq, req, socket, options, head); }\n\n    // Error Handler\n    proxyReq.on('error', onOutgoingError);\n    proxyReq.on('response', function (res) {\n      // if upgrade event isn't going to happen, close the socket\n      if (!res.upgrade) {\n        socket.write(createHttpHeader('HTTP/' + res.httpVersion + ' ' + res.statusCode + ' ' + res.statusMessage, res.headers));\n        res.pipe(socket);\n      }\n    });\n\n    proxyReq.on('upgrade', function(proxyRes, proxySocket, proxyHead) {\n      proxySocket.on('error', onOutgoingError);\n\n      // Allow us to listen when the websocket has completed\n      proxySocket.on('end', function () {\n        server.emit('close', proxyRes, proxySocket, proxyHead);\n      });\n\n      // The pipe below will end proxySocket if socket closes cleanly, but not\n      // if it errors (eg, vanishes from the net and starts returning\n      // EHOSTUNREACH). We need to do that explicitly.\n      socket.on('error', function () {\n        proxySocket.end();\n      });\n\n      common.setupSocket(proxySocket);\n\n      if (proxyHead && proxyHead.length) proxySocket.unshift(proxyHead);\n\n      //\n      // Remark: Handle writing the headers to the socket when switching protocols\n      // Also handles when a header is an array\n      //\n      socket.write(createHttpHeader('HTTP/1.1 101 Switching Protocols', proxyRes.headers));\n\n      proxySocket.pipe(socket).pipe(proxySocket);\n\n      server.emit('open', proxySocket);\n      server.emit('proxySocket', proxySocket);  //DEPRECATED.\n    });\n\n    return proxyReq.end(); // XXX: CHECK IF THIS IS THIS CORRECT\n\n    function onOutgoingError(err) {\n      if (clb) {\n        clb(err, req, socket);\n      } else {\n        server.emit('error', err, req, socket);\n      }\n      socket.end();\n    }\n  }\n};\n\n(function (module) {\n\tvar httpProxy = module.exports,\n\t    extend    = require$$0$6._extend,\n\t    parse_url = require$$0$9.parse,\n\t    EE3       = eventemitter3.exports,\n\t    http      = require$$1$2,\n\t    https     = require$$1$3,\n\t    web       = webIncoming,\n\t    ws        = wsIncoming;\n\n\thttpProxy.Server = ProxyServer;\n\n\t/**\n\t * Returns a function that creates the loader for\n\t * either `ws` or `web`'s  passes.\n\t *\n\t * Examples:\n\t *\n\t *    httpProxy.createRightProxy('ws')\n\t *    // => [Function]\n\t *\n\t * @param {String} Type Either 'ws' or 'web'\n\t *\u00A0\n\t * @return {Function} Loader Function that when called returns an iterator for the right passes\n\t *\n\t * @api private\n\t */\n\n\tfunction createRightProxy(type) {\n\n\t  return function(options) {\n\t    return function(req, res /*, [head], [opts] */) {\n\t      var passes = (type === 'ws') ? this.wsPasses : this.webPasses,\n\t          args = [].slice.call(arguments),\n\t          cntr = args.length - 1,\n\t          head, cbl;\n\n\t      /* optional args parse begin */\n\t      if(typeof args[cntr] === 'function') {\n\t        cbl = args[cntr];\n\n\t        cntr--;\n\t      }\n\n\t      var requestOptions = options;\n\t      if(\n\t        !(args[cntr] instanceof Buffer) &&\n\t        args[cntr] !== res\n\t      ) {\n\t        //Copy global options\n\t        requestOptions = extend({}, options);\n\t        //Overwrite with request options\n\t        extend(requestOptions, args[cntr]);\n\n\t        cntr--;\n\t      }\n\n\t      if(args[cntr] instanceof Buffer) {\n\t        head = args[cntr];\n\t      }\n\n\t      /* optional args parse end */\n\n\t      ['target', 'forward'].forEach(function(e) {\n\t        if (typeof requestOptions[e] === 'string')\n\t          requestOptions[e] = parse_url(requestOptions[e]);\n\t      });\n\n\t      if (!requestOptions.target && !requestOptions.forward) {\n\t        return this.emit('error', new Error('Must provide a proper URL as target'));\n\t      }\n\n\t      for(var i=0; i < passes.length; i++) {\n\t        /**\n\t         * Call of passes functions\n\t         * pass(req, res, options, head)\n\t         *\n\t         * In WebSockets case the `res` variable\n\t         * refer to the connection socket\n\t         * pass(req, socket, options, head)\n\t         */\n\t        if(passes[i](req, res, requestOptions, head, this, cbl)) { // passes can return a truthy value to halt the loop\n\t          break;\n\t        }\n\t      }\n\t    };\n\t  };\n\t}\n\thttpProxy.createRightProxy = createRightProxy;\n\n\tfunction ProxyServer(options) {\n\t  EE3.call(this);\n\n\t  options = options || {};\n\t  options.prependPath = options.prependPath === false ? false : true;\n\n\t  this.web = this.proxyRequest           = createRightProxy('web')(options);\n\t  this.ws  = this.proxyWebsocketRequest  = createRightProxy('ws')(options);\n\t  this.options = options;\n\n\t  this.webPasses = Object.keys(web).map(function(pass) {\n\t    return web[pass];\n\t  });\n\n\t  this.wsPasses = Object.keys(ws).map(function(pass) {\n\t    return ws[pass];\n\t  });\n\n\t  this.on('error', this.onError, this);\n\n\t}\n\n\trequire$$0$6.inherits(ProxyServer, EE3);\n\n\tProxyServer.prototype.onError = function (err) {\n\t  //\n\t  // Remark: Replicate node core behavior using EE3\n\t  // so we force people to handle their own errors\n\t  //\n\t  if(this.listeners('error').length === 1) {\n\t    throw err;\n\t  }\n\t};\n\n\tProxyServer.prototype.listen = function(port, hostname) {\n\t  var self    = this,\n\t      closure = function(req, res) { self.web(req, res); };\n\n\t  this._server  = this.options.ssl ?\n\t    https.createServer(this.options.ssl, closure) :\n\t    http.createServer(closure);\n\n\t  if(this.options.ws) {\n\t    this._server.on('upgrade', function(req, socket, head) { self.ws(req, socket, head); });\n\t  }\n\n\t  this._server.listen(port, hostname);\n\n\t  return this;\n\t};\n\n\tProxyServer.prototype.close = function(callback) {\n\t  var self = this;\n\t  if (this._server) {\n\t    this._server.close(done);\n\t  }\n\n\t  // Wrap callback to nullify server after all open connections are closed.\n\t  function done() {\n\t    self._server = null;\n\t    if (callback) {\n\t      callback.apply(null, arguments);\n\t    }\n\t  }\t};\n\n\tProxyServer.prototype.before = function(type, passName, callback) {\n\t  if (type !== 'ws' && type !== 'web') {\n\t    throw new Error('type must be `web` or `ws`');\n\t  }\n\t  var passes = (type === 'ws') ? this.wsPasses : this.webPasses,\n\t      i = false;\n\n\t  passes.forEach(function(v, idx) {\n\t    if(v.name === passName) i = idx;\n\t  });\n\n\t  if(i === false) throw new Error('No such pass');\n\n\t  passes.splice(i, 0, callback);\n\t};\n\tProxyServer.prototype.after = function(type, passName, callback) {\n\t  if (type !== 'ws' && type !== 'web') {\n\t    throw new Error('type must be `web` or `ws`');\n\t  }\n\t  var passes = (type === 'ws') ? this.wsPasses : this.webPasses,\n\t      i = false;\n\n\t  passes.forEach(function(v, idx) {\n\t    if(v.name === passName) i = idx;\n\t  });\n\n\t  if(i === false) throw new Error('No such pass');\n\n\t  passes.splice(i++, 0, callback);\n\t};\n} (httpProxy$2));\n\n// Use explicit /index.js to help browserify negociation in require '/lib/http-proxy' (!)\nvar ProxyServer = httpProxy$2.exports.Server;\n\n\n/**\n * Creates the proxy server.\n *\n * Examples:\n *\n *    httpProxy.createProxyServer({ .. }, 8000)\n *    // => '{ web: [Function], ws: [Function] ... }'\n *\n * @param {Object} Options Config object passed to the proxy\n *\n * @return {Object} Proxy Proxy object with handlers for `ws` and `web` requests\n *\n * @api public\n */\n\n\nfunction createProxyServer(options) {\n  /*\n   *  `options` is needed and it must have the following layout:\n   *\n   *  {\n   *    target : <url string to be parsed with the url module>\n   *    forward: <url string to be parsed with the url module>\n   *    agent  : <object to be passed to http(s).request>\n   *    ssl    : <object to be passed to https.createServer()>\n   *    ws     : <true/false, if you want to proxy websockets>\n   *    xfwd   : <true/false, adds x-forward headers>\n   *    secure : <true/false, verify SSL certificate>\n   *    toProxy: <true/false, explicitly specify if we are proxying to another proxy>\n   *    prependPath: <true/false, Default: true - specify whether you want to prepend the target's path to the proxy path>\n   *    ignorePath: <true/false, Default: false - specify whether you want to ignore the proxy path of the incoming request>\n   *    localAddress : <Local interface string to bind for outgoing connections>\n   *    changeOrigin: <true/false, Default: false - changes the origin of the host header to the target URL>\n   *    preserveHeaderKeyCase: <true/false, Default: false - specify whether you want to keep letter case of response header key >\n   *    auth   : Basic authentication i.e. 'user:password' to compute an Authorization header.\n   *    hostRewrite: rewrites the location hostname on (201/301/302/307/308) redirects, Default: null.\n   *    autoRewrite: rewrites the location host/port on (201/301/302/307/308) redirects based on requested host/port. Default: false.\n   *    protocolRewrite: rewrites the location protocol on (201/301/302/307/308) redirects to 'http' or 'https'. Default: null.\n   *  }\n   *\n   *  NOTE: `options.ws` and `options.ssl` are optional.\n   *    `options.target and `options.forward` cannot be\n   *    both missing\n   *  }\n   */\n\n  return new ProxyServer(options);\n}\n\n\nProxyServer.createProxyServer = createProxyServer;\nProxyServer.createServer      = createProxyServer;\nProxyServer.createProxy       = createProxyServer;\n\n\n\n\n/**\n * Export the proxy \"Server\" as the main export.\n */\nvar httpProxy$1 = ProxyServer;\n\n/*!\n * Caron dimonio, con occhi di bragia\n * loro accennando, tutte le raccoglie;\n * batte col remo qualunque s\u2019adagia \n *\n * Charon the demon, with the eyes of glede,\n * Beckoning to them, collects them all together,\n * Beats with his oar whoever lags behind\n *          \n *          Dante - The Divine Comedy (Canto III)\n */\n\n(function (module) {\n\tmodule.exports = httpProxy$1;\n} (httpProxy$3));\n\nvar httpProxy = /*@__PURE__*/getDefaultExportFromCjs(httpProxy$3.exports);\n\nconst debug$1 = createDebugger('vite:proxy');\nfunction proxyMiddleware(httpServer, options, config) {\n    // lazy require only when proxy is used\n    const proxies = {};\n    Object.keys(options).forEach((context) => {\n        let opts = options[context];\n        if (!opts) {\n            return;\n        }\n        if (typeof opts === 'string') {\n            opts = { target: opts, changeOrigin: true };\n        }\n        const proxy = httpProxy.createProxyServer(opts);\n        proxy.on('error', (err, req, originalRes) => {\n            // When it is ws proxy, res is net.Socket\n            const res = originalRes;\n            if ('req' in res) {\n                config.logger.error(`${picocolors.exports.red(`http proxy error:`)}\\n${err.stack}`, {\n                    timestamp: true,\n                    error: err\n                });\n                if (!res.headersSent && !res.writableEnded) {\n                    res\n                        .writeHead(500, {\n                        'Content-Type': 'text/plain'\n                    })\n                        .end();\n                }\n            }\n            else {\n                config.logger.error(`${picocolors.exports.red(`ws proxy error:`)}\\n${err.stack}`, {\n                    timestamp: true,\n                    error: err\n                });\n                res.end();\n            }\n        });\n        if (opts.configure) {\n            opts.configure(proxy, opts);\n        }\n        // clone before saving because http-proxy mutates the options\n        proxies[context] = [proxy, { ...opts }];\n    });\n    if (httpServer) {\n        httpServer.on('upgrade', (req, socket, head) => {\n            const url = req.url;\n            for (const context in proxies) {\n                if (doesProxyContextMatchUrl(context, url)) {\n                    const [proxy, opts] = proxies[context];\n                    if ((opts.ws || opts.target?.toString().startsWith('ws:')) &&\n                        req.headers['sec-websocket-protocol'] !== HMR_HEADER) {\n                        if (opts.rewrite) {\n                            req.url = opts.rewrite(url);\n                        }\n                        debug$1(`${req.url} -> ws ${opts.target}`);\n                        proxy.ws(req, socket, head);\n                        return;\n                    }\n                }\n            }\n        });\n    }\n    // Keep the named function. The name is visible in debug logs via `DEBUG=connect:dispatcher ...`\n    return function viteProxyMiddleware(req, res, next) {\n        const url = req.url;\n        for (const context in proxies) {\n            if (doesProxyContextMatchUrl(context, url)) {\n                const [proxy, opts] = proxies[context];\n                const options = {};\n                if (opts.bypass) {\n                    const bypassResult = opts.bypass(req, res, opts);\n                    if (typeof bypassResult === 'string') {\n                        req.url = bypassResult;\n                        debug$1(`bypass: ${req.url} -> ${bypassResult}`);\n                        return next();\n                    }\n                    else if (isObject$2(bypassResult)) {\n                        Object.assign(options, bypassResult);\n                        debug$1(`bypass: ${req.url} use modified options: %O`, options);\n                        return next();\n                    }\n                    else if (bypassResult === false) {\n                        debug$1(`bypass: ${req.url} -> 404`);\n                        return res.end(404);\n                    }\n                }\n                debug$1(`${req.url} -> ${opts.target || opts.forward}`);\n                if (opts.rewrite) {\n                    req.url = opts.rewrite(req.url);\n                }\n                proxy.web(req, res, options);\n                return;\n            }\n        }\n        next();\n    };\n}\nfunction doesProxyContextMatchUrl(context, url) {\n    return ((context.startsWith('^') && new RegExp(context).test(url)) ||\n        url.startsWith(context));\n}\n\nvar lib$1 = {exports: {}};\n\n(function (module, exports) {\n\n\tvar url = require$$0$9;\n\n\tmodule.exports = function historyApiFallback(options) {\n\t  options = options || {};\n\t  var logger = getLogger(options);\n\n\t  return function(req, res, next) {\n\t    var headers = req.headers;\n\t    if (req.method !== 'GET' && req.method !== 'HEAD') {\n\t      logger(\n\t        'Not rewriting',\n\t        req.method,\n\t        req.url,\n\t        'because the method is not GET or HEAD.'\n\t      );\n\t      return next();\n\t    } else if (!headers || typeof headers.accept !== 'string') {\n\t      logger(\n\t        'Not rewriting',\n\t        req.method,\n\t        req.url,\n\t        'because the client did not send an HTTP accept header.'\n\t      );\n\t      return next();\n\t    } else if (headers.accept.indexOf('application/json') === 0) {\n\t      logger(\n\t        'Not rewriting',\n\t        req.method,\n\t        req.url,\n\t        'because the client prefers JSON.'\n\t      );\n\t      return next();\n\t    } else if (!acceptsHtml(headers.accept, options)) {\n\t      logger(\n\t        'Not rewriting',\n\t        req.method,\n\t        req.url,\n\t        'because the client does not accept HTML.'\n\t      );\n\t      return next();\n\t    }\n\n\t    var parsedUrl = url.parse(req.url);\n\t    var rewriteTarget;\n\t    options.rewrites = options.rewrites || [];\n\t    for (var i = 0; i < options.rewrites.length; i++) {\n\t      var rewrite = options.rewrites[i];\n\t      var match = parsedUrl.pathname.match(rewrite.from);\n\t      if (match !== null) {\n\t        rewriteTarget = evaluateRewriteRule(parsedUrl, match, rewrite.to, req);\n\n\t        if(rewriteTarget.charAt(0) !== '/') {\n\t          logger(\n\t            'We recommend using an absolute path for the rewrite target.',\n\t            'Received a non-absolute rewrite target',\n\t            rewriteTarget,\n\t            'for URL',\n\t            req.url\n\t          );\n\t        }\n\n\t        logger('Rewriting', req.method, req.url, 'to', rewriteTarget);\n\t        req.url = rewriteTarget;\n\t        return next();\n\t      }\n\t    }\n\n\t    var pathname = parsedUrl.pathname;\n\t    if (pathname.lastIndexOf('.') > pathname.lastIndexOf('/') &&\n\t        options.disableDotRule !== true) {\n\t      logger(\n\t        'Not rewriting',\n\t        req.method,\n\t        req.url,\n\t        'because the path includes a dot (.) character.'\n\t      );\n\t      return next();\n\t    }\n\n\t    rewriteTarget = options.index || '/index.html';\n\t    logger('Rewriting', req.method, req.url, 'to', rewriteTarget);\n\t    req.url = rewriteTarget;\n\t    next();\n\t  };\n\t};\n\n\tfunction evaluateRewriteRule(parsedUrl, match, rule, req) {\n\t  if (typeof rule === 'string') {\n\t    return rule;\n\t  } else if (typeof rule !== 'function') {\n\t    throw new Error('Rewrite rule can only be of type string or function.');\n\t  }\n\n\t  return rule({\n\t    parsedUrl: parsedUrl,\n\t    match: match,\n\t    request: req\n\t  });\n\t}\n\n\tfunction acceptsHtml(header, options) {\n\t  options.htmlAcceptHeaders = options.htmlAcceptHeaders || ['text/html', '*/*'];\n\t  for (var i = 0; i < options.htmlAcceptHeaders.length; i++) {\n\t    if (header.indexOf(options.htmlAcceptHeaders[i]) !== -1) {\n\t      return true;\n\t    }\n\t  }\n\t  return false;\n\t}\n\n\tfunction getLogger(options) {\n\t  if (options && options.logger) {\n\t    return options.logger;\n\t  } else if (options && options.verbose) {\n\t    // eslint-disable-next-line no-console\n\t    return console.log.bind(console);\n\t  }\n\t  return function(){};\n\t}\n} (lib$1));\n\nvar history = lib$1.exports;\n\nfunction spaFallbackMiddleware(root) {\n    const historySpaFallbackMiddleware = history({\n        logger: createDebugger('vite:spa-fallback'),\n        // support /dir/ without explicit index.html\n        rewrites: [\n            {\n                from: /\\/$/,\n                to({ parsedUrl }) {\n                    const rewritten = decodeURIComponent(parsedUrl.pathname) + 'index.html';\n                    if (fs$l.existsSync(path$n.join(root, rewritten))) {\n                        return rewritten;\n                    }\n                    else {\n                        return `/index.html`;\n                    }\n                }\n            }\n        ]\n    });\n    // Keep the named function. The name is visible in debug logs via `DEBUG=connect:dispatcher ...`\n    return function viteSpaFallbackMiddleware(req, res, next) {\n        return historySpaFallbackMiddleware(req, res, next);\n    };\n}\n\nconst alias = {\n    js: 'application/javascript',\n    css: 'text/css',\n    html: 'text/html',\n    json: 'application/json'\n};\nfunction send(req, res, content, type, options) {\n    const { etag = etag_1(content, { weak: true }), cacheControl = 'no-cache', headers, map } = options;\n    if (res.writableEnded) {\n        return;\n    }\n    if (req.headers['if-none-match'] === etag) {\n        res.statusCode = 304;\n        res.end();\n        return;\n    }\n    res.setHeader('Content-Type', alias[type] || type);\n    res.setHeader('Cache-Control', cacheControl);\n    res.setHeader('Etag', etag);\n    if (headers) {\n        for (const name in headers) {\n            res.setHeader(name, headers[name]);\n        }\n    }\n    // inject source map reference\n    if (map && map.mappings) {\n        if (type === 'js' || type === 'css') {\n            content = getCodeWithSourcemap(type, content.toString(), map);\n        }\n    }\n    res.statusCode = 200;\n    res.end(content);\n    return;\n}\n\nconst debugCache = createDebugger('vite:cache');\nconst isDebug = !!process.env.DEBUG;\nconst knownIgnoreList = new Set(['/', '/favicon.ico']);\nfunction transformMiddleware(server) {\n    const { config: { root, logger }, moduleGraph } = server;\n    // Keep the named function. The name is visible in debug logs via `DEBUG=connect:dispatcher ...`\n    return async function viteTransformMiddleware(req, res, next) {\n        if (req.method !== 'GET' || knownIgnoreList.has(req.url)) {\n            return next();\n        }\n        let url;\n        try {\n            url = decodeURI(removeTimestampQuery(req.url)).replace(NULL_BYTE_PLACEHOLDER, '\\0');\n        }\n        catch (e) {\n            return next(e);\n        }\n        const withoutQuery = cleanUrl(url);\n        try {\n            const isSourceMap = withoutQuery.endsWith('.map');\n            // since we generate source map references, handle those requests here\n            if (isSourceMap) {\n                const depsOptimizer = getDepsOptimizer(server.config, false); // non-ssr\n                if (depsOptimizer?.isOptimizedDepUrl(url)) {\n                    // If the browser is requesting a source map for an optimized dep, it\n                    // means that the dependency has already been pre-bundled and loaded\n                    const mapFile = url.startsWith(FS_PREFIX)\n                        ? fsPathFromId(url)\n                        : normalizePath$3(ensureVolumeInPath(path$n.resolve(root, url.slice(1))));\n                    try {\n                        const map = await promises$2.readFile(mapFile, 'utf-8');\n                        return send(req, res, map, 'json', {\n                            headers: server.config.server.headers\n                        });\n                    }\n                    catch (e) {\n                        // Outdated source map request for optimized deps, this isn't an error\n                        // but part of the normal flow when re-optimizing after missing deps\n                        // Send back an empty source map so the browser doesn't issue warnings\n                        const dummySourceMap = {\n                            version: 3,\n                            file: mapFile.replace(/\\.map$/, ''),\n                            sources: [],\n                            sourcesContent: [],\n                            names: [],\n                            mappings: ';;;;;;;;;'\n                        };\n                        return send(req, res, JSON.stringify(dummySourceMap), 'json', {\n                            cacheControl: 'no-cache',\n                            headers: server.config.server.headers\n                        });\n                    }\n                }\n                else {\n                    const originalUrl = url.replace(/\\.map($|\\?)/, '$1');\n                    const map = (await moduleGraph.getModuleByUrl(originalUrl, false))\n                        ?.transformResult?.map;\n                    if (map) {\n                        return send(req, res, JSON.stringify(map), 'json', {\n                            headers: server.config.server.headers\n                        });\n                    }\n                    else {\n                        return next();\n                    }\n                }\n            }\n            // check if public dir is inside root dir\n            const publicDir = normalizePath$3(server.config.publicDir);\n            const rootDir = normalizePath$3(server.config.root);\n            if (publicDir.startsWith(rootDir)) {\n                const publicPath = `${publicDir.slice(rootDir.length)}/`;\n                // warn explicit public paths\n                if (url.startsWith(publicPath)) {\n                    let warning;\n                    if (isImportRequest(url)) {\n                        const rawUrl = removeImportQuery(url);\n                        warning =\n                            'Assets in public cannot be imported from JavaScript.\\n' +\n                                `Instead of ${picocolors.exports.cyan(rawUrl)}, put the file in the src directory, and use ${picocolors.exports.cyan(rawUrl.replace(publicPath, '/src/'))} instead.`;\n                    }\n                    else {\n                        warning =\n                            `files in the public directory are served at the root path.\\n` +\n                                `Instead of ${picocolors.exports.cyan(url)}, use ${picocolors.exports.cyan(url.replace(publicPath, '/'))}.`;\n                    }\n                    logger.warn(picocolors.exports.yellow(warning));\n                }\n            }\n            if (isJSRequest(url) ||\n                isImportRequest(url) ||\n                isCSSRequest(url) ||\n                isHTMLProxy(url)) {\n                // strip ?import\n                url = removeImportQuery(url);\n                // Strip valid id prefix. This is prepended to resolved Ids that are\n                // not valid browser import specifiers by the importAnalysis plugin.\n                url = unwrapId(url);\n                // for CSS, we need to differentiate between normal CSS requests and\n                // imports\n                if (isCSSRequest(url) &&\n                    !isDirectRequest(url) &&\n                    req.headers.accept?.includes('text/css')) {\n                    url = injectQuery(url, 'direct');\n                }\n                // check if we can return 304 early\n                const ifNoneMatch = req.headers['if-none-match'];\n                if (ifNoneMatch &&\n                    (await moduleGraph.getModuleByUrl(url, false))?.transformResult\n                        ?.etag === ifNoneMatch) {\n                    isDebug && debugCache(`[304] ${prettifyUrl(url, root)}`);\n                    res.statusCode = 304;\n                    return res.end();\n                }\n                // resolve, load and transform using the plugin container\n                const result = await transformRequest(url, server, {\n                    html: req.headers.accept?.includes('text/html')\n                });\n                if (result) {\n                    const depsOptimizer = getDepsOptimizer(server.config, false); // non-ssr\n                    const type = isDirectCSSRequest(url) ? 'css' : 'js';\n                    const isDep = DEP_VERSION_RE.test(url) || depsOptimizer?.isOptimizedDepUrl(url);\n                    return send(req, res, result.code, type, {\n                        etag: result.etag,\n                        // allow browser to cache npm deps!\n                        cacheControl: isDep ? 'max-age=31536000,immutable' : 'no-cache',\n                        headers: server.config.server.headers,\n                        map: result.map\n                    });\n                }\n            }\n        }\n        catch (e) {\n            if (e?.code === ERR_OPTIMIZE_DEPS_PROCESSING_ERROR) {\n                // Skip if response has already been sent\n                if (!res.writableEnded) {\n                    res.statusCode = 504; // status code request timeout\n                    res.end();\n                }\n                // This timeout is unexpected\n                logger.error(e.message);\n                return;\n            }\n            if (e?.code === ERR_OUTDATED_OPTIMIZED_DEP) {\n                // Skip if response has already been sent\n                if (!res.writableEnded) {\n                    res.statusCode = 504; // status code request timeout\n                    res.end();\n                }\n                // We don't need to log an error in this case, the request\n                // is outdated because new dependencies were discovered and\n                // the new pre-bundle dependencies have changed.\n                // A full-page reload has been issued, and these old requests\n                // can't be properly fulfilled. This isn't an unexpected\n                // error but a normal part of the missing deps discovery flow\n                return;\n            }\n            return next(e);\n        }\n        next();\n    };\n}\n\nfunction createDevHtmlTransformFn(server) {\n    const [preHooks, postHooks] = resolveHtmlTransforms(server.config.plugins);\n    return (url, html, originalUrl) => {\n        return applyHtmlTransforms(html, [...preHooks, devHtmlHook, ...postHooks], {\n            path: url,\n            filename: getHtmlFilename(url, server),\n            server,\n            originalUrl\n        });\n    };\n}\nfunction getHtmlFilename(url, server) {\n    if (url.startsWith(FS_PREFIX)) {\n        return decodeURIComponent(fsPathFromId(url));\n    }\n    else {\n        return decodeURIComponent(normalizePath$3(path$n.join(server.config.root, url.slice(1))));\n    }\n}\nconst startsWithSingleSlashRE = /^\\/(?!\\/)/;\nconst processNodeUrl = (node, s, config, htmlPath, originalUrl, moduleGraph) => {\n    let url = node.value?.content || '';\n    if (moduleGraph) {\n        const mod = moduleGraph.urlToModuleMap.get(url);\n        if (mod && mod.lastHMRTimestamp > 0) {\n            url = injectQuery(url, `t=${mod.lastHMRTimestamp}`);\n        }\n    }\n    const devBase = config.base;\n    if (startsWithSingleSlashRE.test(url)) {\n        // prefix with base (dev only, base is never relative)\n        s.overwrite(node.value.loc.start.offset, node.value.loc.end.offset, `\"${devBase + url.slice(1)}\"`, { contentOnly: true });\n    }\n    else if (url.startsWith('.') &&\n        originalUrl &&\n        originalUrl !== '/' &&\n        htmlPath === '/index.html') {\n        const replacer = (url) => path$n.posix.join(devBase, path$n.posix.relative(originalUrl, devBase), url.slice(1));\n        // #3230 if some request url (localhost:3000/a/b) return to fallback html, the relative assets\n        // path will add `/a/` prefix, it will caused 404.\n        // rewrite before `./index.js` -> `localhost:5173/a/index.js`.\n        // rewrite after `../index.js` -> `localhost:5173/index.js`.\n        s.overwrite(node.value.loc.start.offset, node.value.loc.end.offset, node.name === 'srcset'\n            ? `\"${processSrcSetSync(url, ({ url }) => replacer(url))}\"`\n            : `\"${replacer(url)}\"`);\n    }\n};\nconst devHtmlHook = async (html, { path: htmlPath, filename, server, originalUrl }) => {\n    const { config, moduleGraph, watcher } = server;\n    const base = config.base || '/';\n    let proxyModulePath;\n    let proxyModuleUrl;\n    const trailingSlash = htmlPath.endsWith('/');\n    if (!trailingSlash && fs$l.existsSync(filename)) {\n        proxyModulePath = htmlPath;\n        proxyModuleUrl = base + htmlPath.slice(1);\n    }\n    else {\n        // There are users of vite.transformIndexHtml calling it with url '/'\n        // for SSR integrations #7993, filename is root for this case\n        // A user may also use a valid name for a virtual html file\n        // Mark the path as virtual in both cases so sourcemaps aren't processed\n        // and ids are properly handled\n        const validPath = `${htmlPath}${trailingSlash ? 'index.html' : ''}`;\n        proxyModulePath = `\\0${validPath}`;\n        proxyModuleUrl = `${VALID_ID_PREFIX}${NULL_BYTE_PLACEHOLDER}${validPath}`;\n    }\n    const s = new MagicString(html);\n    let inlineModuleIndex = -1;\n    const proxyCacheUrl = cleanUrl(proxyModulePath).replace(normalizePath$3(config.root), '');\n    const styleUrl = [];\n    const addInlineModule = (node, ext) => {\n        inlineModuleIndex++;\n        const contentNode = node.children[0];\n        const code = contentNode.content;\n        let map;\n        if (!proxyModulePath.startsWith('\\0')) {\n            map = new MagicString(html)\n                .snip(contentNode.loc.start.offset, contentNode.loc.end.offset)\n                .generateMap({ hires: true });\n            map.sources = [filename];\n            map.file = filename;\n        }\n        // add HTML Proxy to Map\n        addToHTMLProxyCache(config, proxyCacheUrl, inlineModuleIndex, { code, map });\n        // inline js module. convert to src=\"proxy\" (dev only, base is never relative)\n        const modulePath = `${proxyModuleUrl}?html-proxy&index=${inlineModuleIndex}.${ext}`;\n        // invalidate the module so the newly cached contents will be served\n        const module = server?.moduleGraph.getModuleById(modulePath);\n        if (module) {\n            server?.moduleGraph.invalidateModule(module);\n        }\n        s.overwrite(node.loc.start.offset, node.loc.end.offset, `<script type=\"module\" src=\"${modulePath}\"></script>`, { contentOnly: true });\n    };\n    await traverseHtml(html, htmlPath, (node) => {\n        if (node.type !== 1 /* ELEMENT */) {\n            return;\n        }\n        // script tags\n        if (node.tag === 'script') {\n            const { src, isModule } = getScriptInfo(node);\n            if (src) {\n                processNodeUrl(src, s, config, htmlPath, originalUrl, moduleGraph);\n            }\n            else if (isModule && node.children.length) {\n                addInlineModule(node, 'js');\n            }\n        }\n        if (node.tag === 'style' && node.children.length) {\n            const children = node.children[0];\n            styleUrl.push({\n                start: children.loc.start.offset,\n                end: children.loc.end.offset,\n                code: children.content\n            });\n        }\n        // elements with [href/src] attrs\n        const assetAttrs = assetAttrsConfig[node.tag];\n        if (assetAttrs) {\n            for (const p of node.props) {\n                if (p.type === 6 /* ATTRIBUTE */ &&\n                    p.value &&\n                    assetAttrs.includes(p.name)) {\n                    processNodeUrl(p, s, config, htmlPath, originalUrl);\n                }\n            }\n        }\n    });\n    await Promise.all(styleUrl.map(async ({ start, end, code }, index) => {\n        const url = `${proxyModulePath}?html-proxy&direct&index=${index}.css`;\n        // ensure module in graph after successful load\n        const mod = await moduleGraph.ensureEntryFromUrl(url, false);\n        ensureWatchedFile(watcher, mod.file, config.root);\n        const result = await server.pluginContainer.transform(code, mod.id);\n        s.overwrite(start, end, result?.code || '');\n    }));\n    html = s.toString();\n    return {\n        html,\n        tags: [\n            {\n                tag: 'script',\n                attrs: {\n                    type: 'module',\n                    src: path$n.posix.join(base, CLIENT_PUBLIC_PATH)\n                },\n                injectTo: 'head-prepend'\n            }\n        ]\n    };\n};\nfunction indexHtmlMiddleware(server) {\n    // Keep the named function. The name is visible in debug logs via `DEBUG=connect:dispatcher ...`\n    return async function viteIndexHtmlMiddleware(req, res, next) {\n        if (res.writableEnded) {\n            return next();\n        }\n        const url = req.url && cleanUrl(req.url);\n        // spa-fallback always redirects to /index.html\n        if (url?.endsWith('.html') && req.headers['sec-fetch-dest'] !== 'script') {\n            const filename = getHtmlFilename(url, server);\n            if (fs$l.existsSync(filename)) {\n                try {\n                    let html = fs$l.readFileSync(filename, 'utf-8');\n                    html = await server.transformIndexHtml(url, html, req.originalUrl);\n                    return send(req, res, html, 'html', {\n                        headers: server.config.server.headers\n                    });\n                }\n                catch (e) {\n                    return next(e);\n                }\n            }\n        }\n        next();\n    };\n}\n\nconst logTime = createDebugger('vite:time');\nfunction timeMiddleware(root) {\n    // Keep the named function. The name is visible in debug logs via `DEBUG=connect:dispatcher ...`\n    return function viteTimeMiddleware(req, res, next) {\n        const start = performance.now();\n        const end = res.end;\n        res.end = (...args) => {\n            logTime(`${timeFrom(start)} ${prettifyUrl(req.url, root)}`);\n            // @ts-ignore\n            return end.call(res, ...args);\n        };\n        next();\n    };\n}\n\nclass ModuleNode {\n    /**\n     * @param setIsSelfAccepting - set `false` to set `isSelfAccepting` later. e.g. #7870\n     */\n    constructor(url, setIsSelfAccepting = true) {\n        /**\n         * Resolved file system path + query\n         */\n        this.id = null;\n        this.file = null;\n        this.importers = new Set();\n        this.importedModules = new Set();\n        this.acceptedHmrDeps = new Set();\n        this.acceptedHmrExports = null;\n        this.importedBindings = null;\n        this.transformResult = null;\n        this.ssrTransformResult = null;\n        this.ssrModule = null;\n        this.ssrError = null;\n        this.lastHMRTimestamp = 0;\n        this.lastInvalidationTimestamp = 0;\n        this.url = url;\n        this.type = isDirectCSSRequest(url) ? 'css' : 'js';\n        if (setIsSelfAccepting) {\n            this.isSelfAccepting = false;\n        }\n    }\n}\nfunction invalidateSSRModule(mod, seen) {\n    if (seen.has(mod)) {\n        return;\n    }\n    seen.add(mod);\n    mod.ssrModule = null;\n    mod.ssrError = null;\n    mod.importers.forEach((importer) => invalidateSSRModule(importer, seen));\n}\nclass ModuleGraph {\n    constructor(resolveId) {\n        this.resolveId = resolveId;\n        this.urlToModuleMap = new Map();\n        this.idToModuleMap = new Map();\n        // a single file may corresponds to multiple modules with different queries\n        this.fileToModulesMap = new Map();\n        this.safeModulesPath = new Set();\n    }\n    async getModuleByUrl(rawUrl, ssr) {\n        const [url] = await this.resolveUrl(rawUrl, ssr);\n        return this.urlToModuleMap.get(url);\n    }\n    getModuleById(id) {\n        return this.idToModuleMap.get(removeTimestampQuery(id));\n    }\n    getModulesByFile(file) {\n        return this.fileToModulesMap.get(file);\n    }\n    onFileChange(file) {\n        const mods = this.getModulesByFile(file);\n        if (mods) {\n            const seen = new Set();\n            mods.forEach((mod) => {\n                this.invalidateModule(mod, seen);\n            });\n        }\n    }\n    invalidateModule(mod, seen = new Set(), timestamp = Date.now()) {\n        // Save the timestamp for this invalidation, so we can avoid caching the result of possible already started\n        // processing being done for this module\n        mod.lastInvalidationTimestamp = timestamp;\n        // Don't invalidate mod.info and mod.meta, as they are part of the processing pipeline\n        // Invalidating the transform result is enough to ensure this module is re-processed next time it is requested\n        mod.transformResult = null;\n        mod.ssrTransformResult = null;\n        invalidateSSRModule(mod, seen);\n    }\n    invalidateAll() {\n        const timestamp = Date.now();\n        const seen = new Set();\n        this.idToModuleMap.forEach((mod) => {\n            this.invalidateModule(mod, seen, timestamp);\n        });\n    }\n    /**\n     * Update the module graph based on a module's updated imports information\n     * If there are dependencies that no longer have any importers, they are\n     * returned as a Set.\n     */\n    async updateModuleInfo(mod, importedModules, importedBindings, acceptedModules, acceptedExports, isSelfAccepting, ssr) {\n        mod.isSelfAccepting = isSelfAccepting;\n        const prevImports = mod.importedModules;\n        const nextImports = (mod.importedModules = new Set());\n        let noLongerImported;\n        // update import graph\n        for (const imported of importedModules) {\n            const dep = typeof imported === 'string'\n                ? await this.ensureEntryFromUrl(imported, ssr)\n                : imported;\n            dep.importers.add(mod);\n            nextImports.add(dep);\n        }\n        // remove the importer from deps that were imported but no longer are.\n        prevImports.forEach((dep) => {\n            if (!nextImports.has(dep)) {\n                dep.importers.delete(mod);\n                if (!dep.importers.size) {\n                    (noLongerImported || (noLongerImported = new Set())).add(dep);\n                }\n            }\n        });\n        // update accepted hmr deps\n        const deps = (mod.acceptedHmrDeps = new Set());\n        for (const accepted of acceptedModules) {\n            const dep = typeof accepted === 'string'\n                ? await this.ensureEntryFromUrl(accepted, ssr)\n                : accepted;\n            deps.add(dep);\n        }\n        // update accepted hmr exports\n        mod.acceptedHmrExports = acceptedExports;\n        mod.importedBindings = importedBindings;\n        return noLongerImported;\n    }\n    async ensureEntryFromUrl(rawUrl, ssr, setIsSelfAccepting = true) {\n        const [url, resolvedId, meta] = await this.resolveUrl(rawUrl, ssr);\n        let mod = this.urlToModuleMap.get(url);\n        if (!mod) {\n            mod = new ModuleNode(url, setIsSelfAccepting);\n            if (meta)\n                mod.meta = meta;\n            this.urlToModuleMap.set(url, mod);\n            mod.id = resolvedId;\n            this.idToModuleMap.set(resolvedId, mod);\n            const file = (mod.file = cleanUrl(resolvedId));\n            let fileMappedModules = this.fileToModulesMap.get(file);\n            if (!fileMappedModules) {\n                fileMappedModules = new Set();\n                this.fileToModulesMap.set(file, fileMappedModules);\n            }\n            fileMappedModules.add(mod);\n        }\n        return mod;\n    }\n    // some deps, like a css file referenced via @import, don't have its own\n    // url because they are inlined into the main css import. But they still\n    // need to be represented in the module graph so that they can trigger\n    // hmr in the importing css file.\n    createFileOnlyEntry(file) {\n        file = normalizePath$3(file);\n        let fileMappedModules = this.fileToModulesMap.get(file);\n        if (!fileMappedModules) {\n            fileMappedModules = new Set();\n            this.fileToModulesMap.set(file, fileMappedModules);\n        }\n        const url = `${FS_PREFIX}${file}`;\n        for (const m of fileMappedModules) {\n            if (m.url === url || m.id === file) {\n                return m;\n            }\n        }\n        const mod = new ModuleNode(url);\n        mod.file = file;\n        fileMappedModules.add(mod);\n        return mod;\n    }\n    // for incoming urls, it is important to:\n    // 1. remove the HMR timestamp query (?t=xxxx)\n    // 2. resolve its extension so that urls with or without extension all map to\n    // the same module\n    async resolveUrl(url, ssr) {\n        url = removeImportQuery(removeTimestampQuery(url));\n        const resolved = await this.resolveId(url, !!ssr);\n        const resolvedId = resolved?.id || url;\n        if (url !== resolvedId &&\n            !url.includes('\\0') &&\n            !url.startsWith(`virtual:`)) {\n            const ext = extname$1(cleanUrl(resolvedId));\n            const { pathname, search, hash } = new URL(url, 'relative://');\n            if (ext && !pathname.endsWith(ext)) {\n                url = pathname + ext + search + hash;\n            }\n        }\n        return [url, resolvedId, resolved?.meta];\n    }\n}\n\nvar isWsl$2 = {exports: {}};\n\nconst fs$4 = require$$0__default;\n\nlet isDocker$2;\n\nfunction hasDockerEnv() {\n\ttry {\n\t\tfs$4.statSync('/.dockerenv');\n\t\treturn true;\n\t} catch (_) {\n\t\treturn false;\n\t}\n}\n\nfunction hasDockerCGroup() {\n\ttry {\n\t\treturn fs$4.readFileSync('/proc/self/cgroup', 'utf8').includes('docker');\n\t} catch (_) {\n\t\treturn false;\n\t}\n}\n\nvar isDocker_1 = () => {\n\tif (isDocker$2 === undefined) {\n\t\tisDocker$2 = hasDockerEnv() || hasDockerCGroup();\n\t}\n\n\treturn isDocker$2;\n};\n\nconst os$1 = require$$1;\nconst fs$3 = require$$0__default;\nconst isDocker$1 = isDocker_1;\n\nconst isWsl$1 = () => {\n\tif (process.platform !== 'linux') {\n\t\treturn false;\n\t}\n\n\tif (os$1.release().toLowerCase().includes('microsoft')) {\n\t\tif (isDocker$1()) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\ttry {\n\t\treturn fs$3.readFileSync('/proc/version', 'utf8').toLowerCase().includes('microsoft') ?\n\t\t\t!isDocker$1() : false;\n\t} catch (_) {\n\t\treturn false;\n\t}\n};\n\nif (process.env.__IS_WSL_TEST__) {\n\tisWsl$2.exports = isWsl$1;\n} else {\n\tisWsl$2.exports = isWsl$1();\n}\n\nvar defineLazyProp = (object, propertyName, fn) => {\n\tconst define = value => Object.defineProperty(object, propertyName, {value, enumerable: true, writable: true});\n\n\tObject.defineProperty(object, propertyName, {\n\t\tconfigurable: true,\n\t\tenumerable: true,\n\t\tget() {\n\t\t\tconst result = fn();\n\t\t\tdefine(result);\n\t\t\treturn result;\n\t\t},\n\t\tset(value) {\n\t\t\tdefine(value);\n\t\t}\n\t});\n\n\treturn object;\n};\n\nconst path$4 = require$$0$4;\nconst childProcess = require$$2;\nconst {promises: fs$2, constants: fsConstants} = require$$0__default;\nconst isWsl = isWsl$2.exports;\nconst isDocker = isDocker_1;\nconst defineLazyProperty = defineLazyProp;\n\n// Path to included `xdg-open`.\nconst localXdgOpenPath = path$4.join(__dirname, 'xdg-open');\n\nconst {platform, arch} = process;\n\n/**\nGet the mount point for fixed drives in WSL.\n\n@inner\n@returns {string} The mount point.\n*/\nconst getWslDrivesMountPoint = (() => {\n\t// Default value for \"root\" param\n\t// according to https://docs.microsoft.com/en-us/windows/wsl/wsl-config\n\tconst defaultMountPoint = '/mnt/';\n\n\tlet mountPoint;\n\n\treturn async function () {\n\t\tif (mountPoint) {\n\t\t\t// Return memoized mount point value\n\t\t\treturn mountPoint;\n\t\t}\n\n\t\tconst configFilePath = '/etc/wsl.conf';\n\n\t\tlet isConfigFileExists = false;\n\t\ttry {\n\t\t\tawait fs$2.access(configFilePath, fsConstants.F_OK);\n\t\t\tisConfigFileExists = true;\n\t\t} catch {}\n\n\t\tif (!isConfigFileExists) {\n\t\t\treturn defaultMountPoint;\n\t\t}\n\n\t\tconst configContent = await fs$2.readFile(configFilePath, {encoding: 'utf8'});\n\t\tconst configMountPoint = /(?<!#.*)root\\s*=\\s*(?<mountPoint>.*)/g.exec(configContent);\n\n\t\tif (!configMountPoint) {\n\t\t\treturn defaultMountPoint;\n\t\t}\n\n\t\tmountPoint = configMountPoint.groups.mountPoint.trim();\n\t\tmountPoint = mountPoint.endsWith('/') ? mountPoint : `${mountPoint}/`;\n\n\t\treturn mountPoint;\n\t};\n})();\n\nconst pTryEach = async (array, mapper) => {\n\tlet latestError;\n\n\tfor (const item of array) {\n\t\ttry {\n\t\t\treturn await mapper(item); // eslint-disable-line no-await-in-loop\n\t\t} catch (error) {\n\t\t\tlatestError = error;\n\t\t}\n\t}\n\n\tthrow latestError;\n};\n\nconst baseOpen = async options => {\n\toptions = {\n\t\twait: false,\n\t\tbackground: false,\n\t\tnewInstance: false,\n\t\tallowNonzeroExitCode: false,\n\t\t...options\n\t};\n\n\tif (Array.isArray(options.app)) {\n\t\treturn pTryEach(options.app, singleApp => baseOpen({\n\t\t\t...options,\n\t\t\tapp: singleApp\n\t\t}));\n\t}\n\n\tlet {name: app, arguments: appArguments = []} = options.app || {};\n\tappArguments = [...appArguments];\n\n\tif (Array.isArray(app)) {\n\t\treturn pTryEach(app, appName => baseOpen({\n\t\t\t...options,\n\t\t\tapp: {\n\t\t\t\tname: appName,\n\t\t\t\targuments: appArguments\n\t\t\t}\n\t\t}));\n\t}\n\n\tlet command;\n\tconst cliArguments = [];\n\tconst childProcessOptions = {};\n\n\tif (platform === 'darwin') {\n\t\tcommand = 'open';\n\n\t\tif (options.wait) {\n\t\t\tcliArguments.push('--wait-apps');\n\t\t}\n\n\t\tif (options.background) {\n\t\t\tcliArguments.push('--background');\n\t\t}\n\n\t\tif (options.newInstance) {\n\t\t\tcliArguments.push('--new');\n\t\t}\n\n\t\tif (app) {\n\t\t\tcliArguments.push('-a', app);\n\t\t}\n\t} else if (platform === 'win32' || (isWsl && !isDocker())) {\n\t\tconst mountPoint = await getWslDrivesMountPoint();\n\n\t\tcommand = isWsl ?\n\t\t\t`${mountPoint}c/Windows/System32/WindowsPowerShell/v1.0/powershell.exe` :\n\t\t\t`${process.env.SYSTEMROOT}\\\\System32\\\\WindowsPowerShell\\\\v1.0\\\\powershell`;\n\n\t\tcliArguments.push(\n\t\t\t'-NoProfile',\n\t\t\t'-NonInteractive',\n\t\t\t'\u2013ExecutionPolicy',\n\t\t\t'Bypass',\n\t\t\t'-EncodedCommand'\n\t\t);\n\n\t\tif (!isWsl) {\n\t\t\tchildProcessOptions.windowsVerbatimArguments = true;\n\t\t}\n\n\t\tconst encodedArguments = ['Start'];\n\n\t\tif (options.wait) {\n\t\t\tencodedArguments.push('-Wait');\n\t\t}\n\n\t\tif (app) {\n\t\t\t// Double quote with double quotes to ensure the inner quotes are passed through.\n\t\t\t// Inner quotes are delimited for PowerShell interpretation with backticks.\n\t\t\tencodedArguments.push(`\"\\`\"${app}\\`\"\"`, '-ArgumentList');\n\t\t\tif (options.target) {\n\t\t\t\tappArguments.unshift(options.target);\n\t\t\t}\n\t\t} else if (options.target) {\n\t\t\tencodedArguments.push(`\"${options.target}\"`);\n\t\t}\n\n\t\tif (appArguments.length > 0) {\n\t\t\tappArguments = appArguments.map(arg => `\"\\`\"${arg}\\`\"\"`);\n\t\t\tencodedArguments.push(appArguments.join(','));\n\t\t}\n\n\t\t// Using Base64-encoded command, accepted by PowerShell, to allow special characters.\n\t\toptions.target = Buffer.from(encodedArguments.join(' '), 'utf16le').toString('base64');\n\t} else {\n\t\tif (app) {\n\t\t\tcommand = app;\n\t\t} else {\n\t\t\t// When bundled by Webpack, there's no actual package file path and no local `xdg-open`.\n\t\t\tconst isBundled = !__dirname || __dirname === '/';\n\n\t\t\t// Check if local `xdg-open` exists and is executable.\n\t\t\tlet exeLocalXdgOpen = false;\n\t\t\ttry {\n\t\t\t\tawait fs$2.access(localXdgOpenPath, fsConstants.X_OK);\n\t\t\t\texeLocalXdgOpen = true;\n\t\t\t} catch {}\n\n\t\t\tconst useSystemXdgOpen = process.versions.electron ||\n\t\t\t\tplatform === 'android' || isBundled || !exeLocalXdgOpen;\n\t\t\tcommand = useSystemXdgOpen ? 'xdg-open' : localXdgOpenPath;\n\t\t}\n\n\t\tif (appArguments.length > 0) {\n\t\t\tcliArguments.push(...appArguments);\n\t\t}\n\n\t\tif (!options.wait) {\n\t\t\t// `xdg-open` will block the process unless stdio is ignored\n\t\t\t// and it's detached from the parent even if it's unref'd.\n\t\t\tchildProcessOptions.stdio = 'ignore';\n\t\t\tchildProcessOptions.detached = true;\n\t\t}\n\t}\n\n\tif (options.target) {\n\t\tcliArguments.push(options.target);\n\t}\n\n\tif (platform === 'darwin' && appArguments.length > 0) {\n\t\tcliArguments.push('--args', ...appArguments);\n\t}\n\n\tconst subprocess = childProcess.spawn(command, cliArguments, childProcessOptions);\n\n\tif (options.wait) {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tsubprocess.once('error', reject);\n\n\t\t\tsubprocess.once('close', exitCode => {\n\t\t\t\tif (options.allowNonzeroExitCode && exitCode > 0) {\n\t\t\t\t\treject(new Error(`Exited with code ${exitCode}`));\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tresolve(subprocess);\n\t\t\t});\n\t\t});\n\t}\n\n\tsubprocess.unref();\n\n\treturn subprocess;\n};\n\nconst open = (target, options) => {\n\tif (typeof target !== 'string') {\n\t\tthrow new TypeError('Expected a `target`');\n\t}\n\n\treturn baseOpen({\n\t\t...options,\n\t\ttarget\n\t});\n};\n\nconst openApp = (name, options) => {\n\tif (typeof name !== 'string') {\n\t\tthrow new TypeError('Expected a `name`');\n\t}\n\n\tconst {arguments: appArguments = []} = options || {};\n\tif (appArguments !== undefined && appArguments !== null && !Array.isArray(appArguments)) {\n\t\tthrow new TypeError('Expected `appArguments` as Array type');\n\t}\n\n\treturn baseOpen({\n\t\t...options,\n\t\tapp: {\n\t\t\tname,\n\t\t\targuments: appArguments\n\t\t}\n\t});\n};\n\nfunction detectArchBinary(binary) {\n\tif (typeof binary === 'string' || Array.isArray(binary)) {\n\t\treturn binary;\n\t}\n\n\tconst {[arch]: archBinary} = binary;\n\n\tif (!archBinary) {\n\t\tthrow new Error(`${arch} is not supported`);\n\t}\n\n\treturn archBinary;\n}\n\nfunction detectPlatformBinary({[platform]: platformBinary}, {wsl}) {\n\tif (wsl && isWsl) {\n\t\treturn detectArchBinary(wsl);\n\t}\n\n\tif (!platformBinary) {\n\t\tthrow new Error(`${platform} is not supported`);\n\t}\n\n\treturn detectArchBinary(platformBinary);\n}\n\nconst apps = {};\n\ndefineLazyProperty(apps, 'chrome', () => detectPlatformBinary({\n\tdarwin: 'google chrome',\n\twin32: 'chrome',\n\tlinux: ['google-chrome', 'google-chrome-stable', 'chromium']\n}, {\n\twsl: {\n\t\tia32: '/mnt/c/Program Files (x86)/Google/Chrome/Application/chrome.exe',\n\t\tx64: ['/mnt/c/Program Files/Google/Chrome/Application/chrome.exe', '/mnt/c/Program Files (x86)/Google/Chrome/Application/chrome.exe']\n\t}\n}));\n\ndefineLazyProperty(apps, 'firefox', () => detectPlatformBinary({\n\tdarwin: 'firefox',\n\twin32: 'C:\\\\Program Files\\\\Mozilla Firefox\\\\firefox.exe',\n\tlinux: 'firefox'\n}, {\n\twsl: '/mnt/c/Program Files/Mozilla Firefox/firefox.exe'\n}));\n\ndefineLazyProperty(apps, 'edge', () => detectPlatformBinary({\n\tdarwin: 'microsoft edge',\n\twin32: 'msedge',\n\tlinux: ['microsoft-edge', 'microsoft-edge-dev']\n}, {\n\twsl: '/mnt/c/Program Files (x86)/Microsoft/Edge/Application/msedge.exe'\n}));\n\nopen.apps = apps;\nopen.openApp = openApp;\n\nvar open_1 = open;\n\nvar crossSpawn = {exports: {}};\n\nvar windows;\nvar hasRequiredWindows;\n\nfunction requireWindows () {\n\tif (hasRequiredWindows) return windows;\n\thasRequiredWindows = 1;\n\twindows = isexe;\n\tisexe.sync = sync;\n\n\tvar fs = require$$0__default;\n\n\tfunction checkPathExt (path, options) {\n\t  var pathext = options.pathExt !== undefined ?\n\t    options.pathExt : process.env.PATHEXT;\n\n\t  if (!pathext) {\n\t    return true\n\t  }\n\n\t  pathext = pathext.split(';');\n\t  if (pathext.indexOf('') !== -1) {\n\t    return true\n\t  }\n\t  for (var i = 0; i < pathext.length; i++) {\n\t    var p = pathext[i].toLowerCase();\n\t    if (p && path.substr(-p.length).toLowerCase() === p) {\n\t      return true\n\t    }\n\t  }\n\t  return false\n\t}\n\n\tfunction checkStat (stat, path, options) {\n\t  if (!stat.isSymbolicLink() && !stat.isFile()) {\n\t    return false\n\t  }\n\t  return checkPathExt(path, options)\n\t}\n\n\tfunction isexe (path, options, cb) {\n\t  fs.stat(path, function (er, stat) {\n\t    cb(er, er ? false : checkStat(stat, path, options));\n\t  });\n\t}\n\n\tfunction sync (path, options) {\n\t  return checkStat(fs.statSync(path), path, options)\n\t}\n\treturn windows;\n}\n\nvar mode;\nvar hasRequiredMode;\n\nfunction requireMode () {\n\tif (hasRequiredMode) return mode;\n\thasRequiredMode = 1;\n\tmode = isexe;\n\tisexe.sync = sync;\n\n\tvar fs = require$$0__default;\n\n\tfunction isexe (path, options, cb) {\n\t  fs.stat(path, function (er, stat) {\n\t    cb(er, er ? false : checkStat(stat, options));\n\t  });\n\t}\n\n\tfunction sync (path, options) {\n\t  return checkStat(fs.statSync(path), options)\n\t}\n\n\tfunction checkStat (stat, options) {\n\t  return stat.isFile() && checkMode(stat, options)\n\t}\n\n\tfunction checkMode (stat, options) {\n\t  var mod = stat.mode;\n\t  var uid = stat.uid;\n\t  var gid = stat.gid;\n\n\t  var myUid = options.uid !== undefined ?\n\t    options.uid : process.getuid && process.getuid();\n\t  var myGid = options.gid !== undefined ?\n\t    options.gid : process.getgid && process.getgid();\n\n\t  var u = parseInt('100', 8);\n\t  var g = parseInt('010', 8);\n\t  var o = parseInt('001', 8);\n\t  var ug = u | g;\n\n\t  var ret = (mod & o) ||\n\t    (mod & g) && gid === myGid ||\n\t    (mod & u) && uid === myUid ||\n\t    (mod & ug) && myUid === 0;\n\n\t  return ret\n\t}\n\treturn mode;\n}\n\nvar core;\nif (process.platform === 'win32' || commonjsGlobal.TESTING_WINDOWS) {\n  core = requireWindows();\n} else {\n  core = requireMode();\n}\n\nvar isexe_1 = isexe$1;\nisexe$1.sync = sync;\n\nfunction isexe$1 (path, options, cb) {\n  if (typeof options === 'function') {\n    cb = options;\n    options = {};\n  }\n\n  if (!cb) {\n    if (typeof Promise !== 'function') {\n      throw new TypeError('callback not provided')\n    }\n\n    return new Promise(function (resolve, reject) {\n      isexe$1(path, options || {}, function (er, is) {\n        if (er) {\n          reject(er);\n        } else {\n          resolve(is);\n        }\n      });\n    })\n  }\n\n  core(path, options || {}, function (er, is) {\n    // ignore EACCES because that just means we aren't allowed to run it\n    if (er) {\n      if (er.code === 'EACCES' || options && options.ignoreErrors) {\n        er = null;\n        is = false;\n      }\n    }\n    cb(er, is);\n  });\n}\n\nfunction sync (path, options) {\n  // my kingdom for a filtered catch\n  try {\n    return core.sync(path, options || {})\n  } catch (er) {\n    if (options && options.ignoreErrors || er.code === 'EACCES') {\n      return false\n    } else {\n      throw er\n    }\n  }\n}\n\nconst isWindows = process.platform === 'win32' ||\n    process.env.OSTYPE === 'cygwin' ||\n    process.env.OSTYPE === 'msys';\n\nconst path$3 = require$$0$4;\nconst COLON = isWindows ? ';' : ':';\nconst isexe = isexe_1;\n\nconst getNotFoundError = (cmd) =>\n  Object.assign(new Error(`not found: ${cmd}`), { code: 'ENOENT' });\n\nconst getPathInfo = (cmd, opt) => {\n  const colon = opt.colon || COLON;\n\n  // If it has a slash, then we don't bother searching the pathenv.\n  // just check the file itself, and that's it.\n  const pathEnv = cmd.match(/\\//) || isWindows && cmd.match(/\\\\/) ? ['']\n    : (\n      [\n        // windows always checks the cwd first\n        ...(isWindows ? [process.cwd()] : []),\n        ...(opt.path || process.env.PATH ||\n          /* istanbul ignore next: very unusual */ '').split(colon),\n      ]\n    );\n  const pathExtExe = isWindows\n    ? opt.pathExt || process.env.PATHEXT || '.EXE;.CMD;.BAT;.COM'\n    : '';\n  const pathExt = isWindows ? pathExtExe.split(colon) : [''];\n\n  if (isWindows) {\n    if (cmd.indexOf('.') !== -1 && pathExt[0] !== '')\n      pathExt.unshift('');\n  }\n\n  return {\n    pathEnv,\n    pathExt,\n    pathExtExe,\n  }\n};\n\nconst which$1 = (cmd, opt, cb) => {\n  if (typeof opt === 'function') {\n    cb = opt;\n    opt = {};\n  }\n  if (!opt)\n    opt = {};\n\n  const { pathEnv, pathExt, pathExtExe } = getPathInfo(cmd, opt);\n  const found = [];\n\n  const step = i => new Promise((resolve, reject) => {\n    if (i === pathEnv.length)\n      return opt.all && found.length ? resolve(found)\n        : reject(getNotFoundError(cmd))\n\n    const ppRaw = pathEnv[i];\n    const pathPart = /^\".*\"$/.test(ppRaw) ? ppRaw.slice(1, -1) : ppRaw;\n\n    const pCmd = path$3.join(pathPart, cmd);\n    const p = !pathPart && /^\\.[\\\\\\/]/.test(cmd) ? cmd.slice(0, 2) + pCmd\n      : pCmd;\n\n    resolve(subStep(p, i, 0));\n  });\n\n  const subStep = (p, i, ii) => new Promise((resolve, reject) => {\n    if (ii === pathExt.length)\n      return resolve(step(i + 1))\n    const ext = pathExt[ii];\n    isexe(p + ext, { pathExt: pathExtExe }, (er, is) => {\n      if (!er && is) {\n        if (opt.all)\n          found.push(p + ext);\n        else\n          return resolve(p + ext)\n      }\n      return resolve(subStep(p, i, ii + 1))\n    });\n  });\n\n  return cb ? step(0).then(res => cb(null, res), cb) : step(0)\n};\n\nconst whichSync = (cmd, opt) => {\n  opt = opt || {};\n\n  const { pathEnv, pathExt, pathExtExe } = getPathInfo(cmd, opt);\n  const found = [];\n\n  for (let i = 0; i < pathEnv.length; i ++) {\n    const ppRaw = pathEnv[i];\n    const pathPart = /^\".*\"$/.test(ppRaw) ? ppRaw.slice(1, -1) : ppRaw;\n\n    const pCmd = path$3.join(pathPart, cmd);\n    const p = !pathPart && /^\\.[\\\\\\/]/.test(cmd) ? cmd.slice(0, 2) + pCmd\n      : pCmd;\n\n    for (let j = 0; j < pathExt.length; j ++) {\n      const cur = p + pathExt[j];\n      try {\n        const is = isexe.sync(cur, { pathExt: pathExtExe });\n        if (is) {\n          if (opt.all)\n            found.push(cur);\n          else\n            return cur\n        }\n      } catch (ex) {}\n    }\n  }\n\n  if (opt.all && found.length)\n    return found\n\n  if (opt.nothrow)\n    return null\n\n  throw getNotFoundError(cmd)\n};\n\nvar which_1 = which$1;\nwhich$1.sync = whichSync;\n\nvar pathKey$1 = {exports: {}};\n\nconst pathKey = (options = {}) => {\n\tconst environment = options.env || process.env;\n\tconst platform = options.platform || process.platform;\n\n\tif (platform !== 'win32') {\n\t\treturn 'PATH';\n\t}\n\n\treturn Object.keys(environment).reverse().find(key => key.toUpperCase() === 'PATH') || 'Path';\n};\n\npathKey$1.exports = pathKey;\n// TODO: Remove this for the next major release\npathKey$1.exports.default = pathKey;\n\nconst path$2 = require$$0$4;\nconst which = which_1;\nconst getPathKey = pathKey$1.exports;\n\nfunction resolveCommandAttempt(parsed, withoutPathExt) {\n    const env = parsed.options.env || process.env;\n    const cwd = process.cwd();\n    const hasCustomCwd = parsed.options.cwd != null;\n    // Worker threads do not have process.chdir()\n    const shouldSwitchCwd = hasCustomCwd && process.chdir !== undefined && !process.chdir.disabled;\n\n    // If a custom `cwd` was specified, we need to change the process cwd\n    // because `which` will do stat calls but does not support a custom cwd\n    if (shouldSwitchCwd) {\n        try {\n            process.chdir(parsed.options.cwd);\n        } catch (err) {\n            /* Empty */\n        }\n    }\n\n    let resolved;\n\n    try {\n        resolved = which.sync(parsed.command, {\n            path: env[getPathKey({ env })],\n            pathExt: withoutPathExt ? path$2.delimiter : undefined,\n        });\n    } catch (e) {\n        /* Empty */\n    } finally {\n        if (shouldSwitchCwd) {\n            process.chdir(cwd);\n        }\n    }\n\n    // If we successfully resolved, ensure that an absolute path is returned\n    // Note that when a custom `cwd` was used, we need to resolve to an absolute path based on it\n    if (resolved) {\n        resolved = path$2.resolve(hasCustomCwd ? parsed.options.cwd : '', resolved);\n    }\n\n    return resolved;\n}\n\nfunction resolveCommand$1(parsed) {\n    return resolveCommandAttempt(parsed) || resolveCommandAttempt(parsed, true);\n}\n\nvar resolveCommand_1 = resolveCommand$1;\n\nvar _escape = {};\n\n// See http://www.robvanderwoude.com/escapechars.php\nconst metaCharsRegExp = /([()\\][%!^\"`<>&|;, *?])/g;\n\nfunction escapeCommand(arg) {\n    // Escape meta chars\n    arg = arg.replace(metaCharsRegExp, '^$1');\n\n    return arg;\n}\n\nfunction escapeArgument(arg, doubleEscapeMetaChars) {\n    // Convert to string\n    arg = `${arg}`;\n\n    // Algorithm below is based on https://qntm.org/cmd\n\n    // Sequence of backslashes followed by a double quote:\n    // double up all the backslashes and escape the double quote\n    arg = arg.replace(/(\\\\*)\"/g, '$1$1\\\\\"');\n\n    // Sequence of backslashes followed by the end of the string\n    // (which will become a double quote later):\n    // double up all the backslashes\n    arg = arg.replace(/(\\\\*)$/, '$1$1');\n\n    // All other backslashes occur literally\n\n    // Quote the whole thing:\n    arg = `\"${arg}\"`;\n\n    // Escape meta chars\n    arg = arg.replace(metaCharsRegExp, '^$1');\n\n    // Double escape meta chars if necessary\n    if (doubleEscapeMetaChars) {\n        arg = arg.replace(metaCharsRegExp, '^$1');\n    }\n\n    return arg;\n}\n\n_escape.command = escapeCommand;\n_escape.argument = escapeArgument;\n\nvar shebangRegex$1 = /^#!(.*)/;\n\nconst shebangRegex = shebangRegex$1;\n\nvar shebangCommand$1 = (string = '') => {\n\tconst match = string.match(shebangRegex);\n\n\tif (!match) {\n\t\treturn null;\n\t}\n\n\tconst [path, argument] = match[0].replace(/#! ?/, '').split(' ');\n\tconst binary = path.split('/').pop();\n\n\tif (binary === 'env') {\n\t\treturn argument;\n\t}\n\n\treturn argument ? `${binary} ${argument}` : binary;\n};\n\nconst fs$1 = require$$0__default;\nconst shebangCommand = shebangCommand$1;\n\nfunction readShebang$1(command) {\n    // Read the first 150 bytes from the file\n    const size = 150;\n    const buffer = Buffer.alloc(size);\n\n    let fd;\n\n    try {\n        fd = fs$1.openSync(command, 'r');\n        fs$1.readSync(fd, buffer, 0, size, 0);\n        fs$1.closeSync(fd);\n    } catch (e) { /* Empty */ }\n\n    // Attempt to extract shebang (null is returned if not a shebang)\n    return shebangCommand(buffer.toString());\n}\n\nvar readShebang_1 = readShebang$1;\n\nconst path$1 = require$$0$4;\nconst resolveCommand = resolveCommand_1;\nconst escape$1 = _escape;\nconst readShebang = readShebang_1;\n\nconst isWin$1 = process.platform === 'win32';\nconst isExecutableRegExp = /\\.(?:com|exe)$/i;\nconst isCmdShimRegExp = /node_modules[\\\\/].bin[\\\\/][^\\\\/]+\\.cmd$/i;\n\nfunction detectShebang(parsed) {\n    parsed.file = resolveCommand(parsed);\n\n    const shebang = parsed.file && readShebang(parsed.file);\n\n    if (shebang) {\n        parsed.args.unshift(parsed.file);\n        parsed.command = shebang;\n\n        return resolveCommand(parsed);\n    }\n\n    return parsed.file;\n}\n\nfunction parseNonShell(parsed) {\n    if (!isWin$1) {\n        return parsed;\n    }\n\n    // Detect & add support for shebangs\n    const commandFile = detectShebang(parsed);\n\n    // We don't need a shell if the command filename is an executable\n    const needsShell = !isExecutableRegExp.test(commandFile);\n\n    // If a shell is required, use cmd.exe and take care of escaping everything correctly\n    // Note that `forceShell` is an hidden option used only in tests\n    if (parsed.options.forceShell || needsShell) {\n        // Need to double escape meta chars if the command is a cmd-shim located in `node_modules/.bin/`\n        // The cmd-shim simply calls execute the package bin file with NodeJS, proxying any argument\n        // Because the escape of metachars with ^ gets interpreted when the cmd.exe is first called,\n        // we need to double escape them\n        const needsDoubleEscapeMetaChars = isCmdShimRegExp.test(commandFile);\n\n        // Normalize posix paths into OS compatible paths (e.g.: foo/bar -> foo\\bar)\n        // This is necessary otherwise it will always fail with ENOENT in those cases\n        parsed.command = path$1.normalize(parsed.command);\n\n        // Escape command & arguments\n        parsed.command = escape$1.command(parsed.command);\n        parsed.args = parsed.args.map((arg) => escape$1.argument(arg, needsDoubleEscapeMetaChars));\n\n        const shellCommand = [parsed.command].concat(parsed.args).join(' ');\n\n        parsed.args = ['/d', '/s', '/c', `\"${shellCommand}\"`];\n        parsed.command = process.env.comspec || 'cmd.exe';\n        parsed.options.windowsVerbatimArguments = true; // Tell node's spawn that the arguments are already escaped\n    }\n\n    return parsed;\n}\n\nfunction parse$3(command, args, options) {\n    // Normalize arguments, similar to nodejs\n    if (args && !Array.isArray(args)) {\n        options = args;\n        args = null;\n    }\n\n    args = args ? args.slice(0) : []; // Clone array to avoid changing the original\n    options = Object.assign({}, options); // Clone object to avoid changing the original\n\n    // Build our parsed object\n    const parsed = {\n        command,\n        args,\n        options,\n        file: undefined,\n        original: {\n            command,\n            args,\n        },\n    };\n\n    // Delegate further parsing to shell or non-shell\n    return options.shell ? parsed : parseNonShell(parsed);\n}\n\nvar parse_1 = parse$3;\n\nconst isWin = process.platform === 'win32';\n\nfunction notFoundError(original, syscall) {\n    return Object.assign(new Error(`${syscall} ${original.command} ENOENT`), {\n        code: 'ENOENT',\n        errno: 'ENOENT',\n        syscall: `${syscall} ${original.command}`,\n        path: original.command,\n        spawnargs: original.args,\n    });\n}\n\nfunction hookChildProcess(cp, parsed) {\n    if (!isWin) {\n        return;\n    }\n\n    const originalEmit = cp.emit;\n\n    cp.emit = function (name, arg1) {\n        // If emitting \"exit\" event and exit code is 1, we need to check if\n        // the command exists and emit an \"error\" instead\n        // See https://github.com/IndigoUnited/node-cross-spawn/issues/16\n        if (name === 'exit') {\n            const err = verifyENOENT(arg1, parsed);\n\n            if (err) {\n                return originalEmit.call(cp, 'error', err);\n            }\n        }\n\n        return originalEmit.apply(cp, arguments); // eslint-disable-line prefer-rest-params\n    };\n}\n\nfunction verifyENOENT(status, parsed) {\n    if (isWin && status === 1 && !parsed.file) {\n        return notFoundError(parsed.original, 'spawn');\n    }\n\n    return null;\n}\n\nfunction verifyENOENTSync(status, parsed) {\n    if (isWin && status === 1 && !parsed.file) {\n        return notFoundError(parsed.original, 'spawnSync');\n    }\n\n    return null;\n}\n\nvar enoent$1 = {\n    hookChildProcess,\n    verifyENOENT,\n    verifyENOENTSync,\n    notFoundError,\n};\n\nconst cp = require$$2;\nconst parse$2 = parse_1;\nconst enoent = enoent$1;\n\nfunction spawn(command, args, options) {\n    // Parse the arguments\n    const parsed = parse$2(command, args, options);\n\n    // Spawn the child process\n    const spawned = cp.spawn(parsed.command, parsed.args, parsed.options);\n\n    // Hook into child process \"exit\" event to emit an error if the command\n    // does not exists, see: https://github.com/IndigoUnited/node-cross-spawn/issues/16\n    enoent.hookChildProcess(spawned, parsed);\n\n    return spawned;\n}\n\nfunction spawnSync(command, args, options) {\n    // Parse the arguments\n    const parsed = parse$2(command, args, options);\n\n    // Spawn the child process\n    const result = cp.spawnSync(parsed.command, parsed.args, parsed.options);\n\n    // Analyze if the command does not exist, see: https://github.com/IndigoUnited/node-cross-spawn/issues/16\n    result.error = result.error || enoent.verifyENOENTSync(result.status, parsed);\n\n    return result;\n}\n\ncrossSpawn.exports = spawn;\ncrossSpawn.exports.spawn = spawn;\ncrossSpawn.exports.sync = spawnSync;\n\ncrossSpawn.exports._parse = parse$2;\ncrossSpawn.exports._enoent = enoent;\n\n/**\n * The following is modified based on source found in\n * https://github.com/facebook/create-react-app\n *\n * MIT Licensed\n * Copyright (c) 2015-present, Facebook, Inc.\n * https://github.com/facebook/create-react-app/blob/master/LICENSE\n *\n */\n// https://github.com/sindresorhus/open#app\nconst OSX_CHROME = 'google chrome';\n/**\n * Reads the BROWSER environment variable and decides what to do with it.\n * Returns true if it opened a browser or ran a node.js script, otherwise false.\n */\nfunction openBrowser(url, opt, logger) {\n    // The browser executable to open.\n    // See https://github.com/sindresorhus/open#app for documentation.\n    const browser = typeof opt === 'string' ? opt : process.env.BROWSER || '';\n    if (browser.toLowerCase().endsWith('.js')) {\n        return executeNodeScript(browser, url, logger);\n    }\n    else if (browser.toLowerCase() !== 'none') {\n        return startBrowserProcess(browser, url);\n    }\n    return false;\n}\nfunction executeNodeScript(scriptPath, url, logger) {\n    const extraArgs = process.argv.slice(2);\n    const child = crossSpawn.exports(process.execPath, [scriptPath, ...extraArgs, url], {\n        stdio: 'inherit'\n    });\n    child.on('close', (code) => {\n        if (code !== 0) {\n            logger.error(picocolors.exports.red(`\\nThe script specified as BROWSER environment variable failed.\\n\\n${picocolors.exports.cyan(scriptPath)} exited with code ${code}.`), { error: null });\n        }\n    });\n    return true;\n}\nfunction startBrowserProcess(browser, url) {\n    // If we're on OS X, the user hasn't specifically\n    // requested a different browser, we can try opening\n    // Chrome with AppleScript. This lets us reuse an\n    // existing tab when possible instead of creating a new one.\n    const shouldTryOpenChromeWithAppleScript = process.platform === 'darwin' && (browser === '' || browser === OSX_CHROME);\n    if (shouldTryOpenChromeWithAppleScript) {\n        try {\n            // Try our best to reuse existing tab\n            // on OS X Google Chrome with AppleScript\n            execSync('ps cax | grep \"Google Chrome\"');\n            execSync('osascript openChrome.applescript \"' + encodeURI(url) + '\"', {\n                cwd: join$2(VITE_PACKAGE_DIR, 'bin'),\n                stdio: 'ignore'\n            });\n            return true;\n        }\n        catch (err) {\n            // Ignore errors\n        }\n    }\n    // Another special case: on OS X, check if BROWSER has been set to \"open\".\n    // In this case, instead of passing the string `open` to `open` function (which won't work),\n    // just ignore it (thus ensuring the intended behavior, i.e. opening the system browser):\n    // https://github.com/facebook/create-react-app/pull/1690#issuecomment-283518768\n    if (process.platform === 'darwin' && browser === 'open') {\n        browser = undefined;\n    }\n    // Fallback to open\n    // (It will always open new tab)\n    try {\n        const options = browser ? { app: { name: browser } } : {};\n        open_1(url, options).catch(() => { }); // Prevent `unhandledRejection` error.\n        return true;\n    }\n    catch (err) {\n        return false;\n    }\n}\n\n// https://github.com/vitejs/vite/issues/2820#issuecomment-812495079\nconst ROOT_FILES = [\n    // '.git',\n    // https://pnpm.js.org/workspaces/\n    'pnpm-workspace.yaml',\n    // https://rushjs.io/pages/advanced/config_files/\n    // 'rush.json',\n    // https://nx.dev/latest/react/getting-started/nx-setup\n    // 'workspace.json',\n    // 'nx.json',\n    // https://github.com/lerna/lerna#lernajson\n    'lerna.json'\n];\n// npm: https://docs.npmjs.com/cli/v7/using-npm/workspaces#installing-workspaces\n// yarn: https://classic.yarnpkg.com/en/docs/workspaces/#toc-how-to-use-it\nfunction hasWorkspacePackageJSON(root) {\n    const path = join$2(root, 'package.json');\n    if (!isFileReadable(path)) {\n        return false;\n    }\n    const content = JSON.parse(fs$l.readFileSync(path, 'utf-8')) || {};\n    return !!content.workspaces;\n}\nfunction hasRootFile(root) {\n    return ROOT_FILES.some((file) => fs$l.existsSync(join$2(root, file)));\n}\nfunction hasPackageJSON(root) {\n    const path = join$2(root, 'package.json');\n    return fs$l.existsSync(path);\n}\n/**\n * Search up for the nearest `package.json`\n */\nfunction searchForPackageRoot(current, root = current) {\n    if (hasPackageJSON(current))\n        return current;\n    const dir = dirname$2(current);\n    // reach the fs root\n    if (!dir || dir === current)\n        return root;\n    return searchForPackageRoot(dir, root);\n}\n/**\n * Search up for the nearest workspace root\n */\nfunction searchForWorkspaceRoot(current, root = searchForPackageRoot(current)) {\n    if (hasRootFile(current))\n        return current;\n    if (hasWorkspacePackageJSON(current))\n        return current;\n    const dir = dirname$2(current);\n    // reach the fs root\n    if (!dir || dir === current)\n        return root;\n    return searchForWorkspaceRoot(dir, root);\n}\n\nasync function createServer(inlineConfig = {}) {\n    const config = await resolveConfig(inlineConfig, 'serve', 'development');\n    const { root, server: serverConfig } = config;\n    const httpsOptions = await resolveHttpsConfig(config.server.https);\n    const { middlewareMode } = serverConfig;\n    const resolvedWatchOptions = resolveChokidarOptions({\n        disableGlobbing: true,\n        ...serverConfig.watch\n    });\n    const middlewares = connect();\n    const httpServer = middlewareMode\n        ? null\n        : await resolveHttpServer(serverConfig, middlewares, httpsOptions);\n    const ws = createWebSocketServer(httpServer, config, httpsOptions);\n    if (httpServer) {\n        setClientErrorHandler(httpServer, config.logger);\n    }\n    const watcher = chokidar.watch(path$n.resolve(root), resolvedWatchOptions);\n    const moduleGraph = new ModuleGraph((url, ssr) => container.resolveId(url, undefined, { ssr }));\n    const container = await createPluginContainer(config, moduleGraph, watcher);\n    const closeHttpServer = createServerCloseFn(httpServer);\n    let exitProcess;\n    const server = {\n        config,\n        middlewares,\n        httpServer,\n        watcher,\n        pluginContainer: container,\n        ws,\n        moduleGraph,\n        resolvedUrls: null,\n        ssrTransform(code, inMap, url) {\n            return ssrTransform(code, inMap, url, code, server.config);\n        },\n        transformRequest(url, options) {\n            return transformRequest(url, server, options);\n        },\n        transformIndexHtml: null,\n        async ssrLoadModule(url, opts) {\n            if (isDepsOptimizerEnabled(config, true)) {\n                await initDevSsrDepsOptimizer(config, server);\n            }\n            await updateCjsSsrExternals(server);\n            return ssrLoadModule(url, server, undefined, undefined, opts?.fixStacktrace);\n        },\n        ssrFixStacktrace(e) {\n            if (e.stack) {\n                const stacktrace = ssrRewriteStacktrace(e.stack, moduleGraph);\n                rebindErrorStacktrace(e, stacktrace);\n            }\n        },\n        ssrRewriteStacktrace(stack) {\n            return ssrRewriteStacktrace(stack, moduleGraph);\n        },\n        async listen(port, isRestart) {\n            await startServer(server, port, isRestart);\n            if (httpServer) {\n                server.resolvedUrls = await resolveServerUrls(httpServer, config.server, config);\n            }\n            return server;\n        },\n        async close() {\n            if (!middlewareMode) {\n                process.off('SIGTERM', exitProcess);\n                if (process.env.CI !== 'true') {\n                    process.stdin.off('end', exitProcess);\n                }\n            }\n            await Promise.all([\n                watcher.close(),\n                ws.close(),\n                container.close(),\n                closeHttpServer()\n            ]);\n            server.resolvedUrls = null;\n        },\n        printUrls() {\n            if (server.resolvedUrls) {\n                printServerUrls(server.resolvedUrls, serverConfig.host, config.logger.info);\n            }\n            else if (middlewareMode) {\n                throw new Error('cannot print server URLs in middleware mode.');\n            }\n            else {\n                throw new Error('cannot print server URLs before server.listen is called.');\n            }\n        },\n        async restart(forceOptimize) {\n            if (!server._restartPromise) {\n                server._forceOptimizeOnRestart = !!forceOptimize;\n                server._restartPromise = restartServer(server).finally(() => {\n                    server._restartPromise = null;\n                    server._forceOptimizeOnRestart = false;\n                });\n            }\n            return server._restartPromise;\n        },\n        _ssrExternals: null,\n        _restartPromise: null,\n        _importGlobMap: new Map(),\n        _forceOptimizeOnRestart: false,\n        _pendingRequests: new Map()\n    };\n    server.transformIndexHtml = createDevHtmlTransformFn(server);\n    if (!middlewareMode) {\n        exitProcess = async () => {\n            try {\n                await server.close();\n            }\n            finally {\n                process.exit();\n            }\n        };\n        process.once('SIGTERM', exitProcess);\n        if (process.env.CI !== 'true') {\n            process.stdin.on('end', exitProcess);\n        }\n    }\n    const { packageCache } = config;\n    const setPackageData = packageCache.set.bind(packageCache);\n    packageCache.set = (id, pkg) => {\n        if (id.endsWith('.json')) {\n            watcher.add(id);\n        }\n        return setPackageData(id, pkg);\n    };\n    watcher.on('change', async (file) => {\n        file = normalizePath$3(file);\n        if (file.endsWith('/package.json')) {\n            return invalidatePackageData(packageCache, file);\n        }\n        // invalidate module graph cache on file change\n        moduleGraph.onFileChange(file);\n        if (serverConfig.hmr !== false) {\n            try {\n                await handleHMRUpdate(file, server);\n            }\n            catch (err) {\n                ws.send({\n                    type: 'error',\n                    err: prepareError(err)\n                });\n            }\n        }\n    });\n    watcher.on('add', (file) => {\n        handleFileAddUnlink(normalizePath$3(file), server);\n    });\n    watcher.on('unlink', (file) => {\n        handleFileAddUnlink(normalizePath$3(file), server);\n    });\n    if (!middlewareMode && httpServer) {\n        httpServer.once('listening', () => {\n            // update actual port since this may be different from initial value\n            serverConfig.port = httpServer.address().port;\n        });\n    }\n    // apply server configuration hooks from plugins\n    const postHooks = [];\n    for (const plugin of config.plugins) {\n        if (plugin.configureServer) {\n            postHooks.push(await plugin.configureServer(server));\n        }\n    }\n    // Internal middlewares ------------------------------------------------------\n    // request timer\n    if (process.env.DEBUG) {\n        middlewares.use(timeMiddleware(root));\n    }\n    // cors (enabled by default)\n    const { cors } = serverConfig;\n    if (cors !== false) {\n        middlewares.use(lib$2.exports(typeof cors === 'boolean' ? {} : cors));\n    }\n    // proxy\n    const { proxy } = serverConfig;\n    if (proxy) {\n        middlewares.use(proxyMiddleware(httpServer, proxy, config));\n    }\n    // base\n    const devBase = config.base;\n    if (devBase !== '/') {\n        middlewares.use(baseMiddleware(server));\n    }\n    // open in editor support\n    middlewares.use('/__open-in-editor', launchEditorMiddleware());\n    // serve static files under /public\n    // this applies before the transform middleware so that these files are served\n    // as-is without transforms.\n    if (config.publicDir) {\n        middlewares.use(servePublicMiddleware(config.publicDir, config.server.headers));\n    }\n    // main transform middleware\n    middlewares.use(transformMiddleware(server));\n    // serve static files\n    middlewares.use(serveRawFsMiddleware(server));\n    middlewares.use(serveStaticMiddleware(root, server));\n    // spa fallback\n    if (config.appType === 'spa') {\n        middlewares.use(spaFallbackMiddleware(root));\n    }\n    // run post config hooks\n    // This is applied before the html middleware so that user middleware can\n    // serve custom content instead of index.html.\n    postHooks.forEach((fn) => fn && fn());\n    if (config.appType === 'spa' || config.appType === 'mpa') {\n        // transform index.html\n        middlewares.use(indexHtmlMiddleware(server));\n        // handle 404s\n        // Keep the named function. The name is visible in debug logs via `DEBUG=connect:dispatcher ...`\n        middlewares.use(function vite404Middleware(_, res) {\n            res.statusCode = 404;\n            res.end();\n        });\n    }\n    // error handler\n    middlewares.use(errorMiddleware(server, middlewareMode));\n    let initingServer;\n    let serverInited = false;\n    const initServer = async () => {\n        if (serverInited) {\n            return;\n        }\n        if (initingServer) {\n            return initingServer;\n        }\n        initingServer = (async function () {\n            await container.buildStart({});\n            if (isDepsOptimizerEnabled(config, false)) {\n                // non-ssr\n                await initDepsOptimizer(config, server);\n            }\n            initingServer = undefined;\n            serverInited = true;\n        })();\n        return initingServer;\n    };\n    if (!middlewareMode && httpServer) {\n        // overwrite listen to init optimizer before server start\n        const listen = httpServer.listen.bind(httpServer);\n        httpServer.listen = (async (port, ...args) => {\n            try {\n                await initServer();\n            }\n            catch (e) {\n                httpServer.emit('error', e);\n                return;\n            }\n            return listen(port, ...args);\n        });\n    }\n    else {\n        await initServer();\n    }\n    return server;\n}\nasync function startServer(server, inlinePort, isRestart = false) {\n    const httpServer = server.httpServer;\n    if (!httpServer) {\n        throw new Error('Cannot call server.listen in middleware mode.');\n    }\n    const options = server.config.server;\n    const port = inlinePort ?? options.port ?? 5173;\n    const hostname = await resolveHostname(options.host);\n    const protocol = options.https ? 'https' : 'http';\n    const info = server.config.logger.info;\n    const devBase = server.config.base;\n    const serverPort = await httpServerStart(httpServer, {\n        port,\n        strictPort: options.strictPort,\n        host: hostname.host,\n        logger: server.config.logger\n    });\n    // @ts-ignore\n    const profileSession = global.__vite_profile_session;\n    if (profileSession) {\n        profileSession.post('Profiler.stop', (err, { profile }) => {\n            // Write profile to disk, upload, etc.\n            if (!err) {\n                const outPath = path$n.resolve('./vite-profile.cpuprofile');\n                fs$l.writeFileSync(outPath, JSON.stringify(profile));\n                info(picocolors.exports.yellow(`  CPU profile written to ${picocolors.exports.white(picocolors.exports.dim(outPath))}\\n`));\n            }\n            else {\n                throw err;\n            }\n        });\n    }\n    if (options.open && !isRestart) {\n        const path = typeof options.open === 'string' ? options.open : devBase;\n        openBrowser(path.startsWith('http')\n            ? path\n            : `${protocol}://${hostname.name}:${serverPort}${path}`, true, server.config.logger);\n    }\n}\nfunction createServerCloseFn(server) {\n    if (!server) {\n        return () => { };\n    }\n    let hasListened = false;\n    const openSockets = new Set();\n    server.on('connection', (socket) => {\n        openSockets.add(socket);\n        socket.on('close', () => {\n            openSockets.delete(socket);\n        });\n    });\n    server.once('listening', () => {\n        hasListened = true;\n    });\n    return () => new Promise((resolve, reject) => {\n        openSockets.forEach((s) => s.destroy());\n        if (hasListened) {\n            server.close((err) => {\n                if (err) {\n                    reject(err);\n                }\n                else {\n                    resolve();\n                }\n            });\n        }\n        else {\n            resolve();\n        }\n    });\n}\nfunction resolvedAllowDir(root, dir) {\n    return normalizePath$3(path$n.resolve(root, dir));\n}\nfunction resolveServerOptions(root, raw, logger) {\n    const server = {\n        preTransformRequests: true,\n        ...raw,\n        middlewareMode: !!raw?.middlewareMode\n    };\n    let allowDirs = server.fs?.allow;\n    const deny = server.fs?.deny || ['.env', '.env.*', '*.{crt,pem}'];\n    if (!allowDirs) {\n        allowDirs = [searchForWorkspaceRoot(root)];\n    }\n    allowDirs = allowDirs.map((i) => resolvedAllowDir(root, i));\n    // only push client dir when vite itself is outside-of-root\n    const resolvedClientDir = resolvedAllowDir(root, CLIENT_DIR);\n    if (!allowDirs.some((dir) => isParentDirectory(dir, resolvedClientDir))) {\n        allowDirs.push(resolvedClientDir);\n    }\n    server.fs = {\n        strict: server.fs?.strict ?? true,\n        allow: allowDirs,\n        deny\n    };\n    if (server.origin?.endsWith('/')) {\n        server.origin = server.origin.slice(0, -1);\n        logger.warn(picocolors.exports.yellow(`${picocolors.exports.bold('(!)')} server.origin should not end with \"/\". Using \"${server.origin}\" instead.`));\n    }\n    return server;\n}\nasync function restartServer(server) {\n    // @ts-ignore\n    global.__vite_start_time = performance.now();\n    const { port: prevPort, host: prevHost } = server.config.server;\n    await server.close();\n    let inlineConfig = server.config.inlineConfig;\n    if (server._forceOptimizeOnRestart) {\n        inlineConfig = mergeConfig(inlineConfig, {\n            optimizeDeps: {\n                force: true\n            }\n        });\n    }\n    let newServer = null;\n    try {\n        newServer = await createServer(inlineConfig);\n    }\n    catch (err) {\n        server.config.logger.error(err.message, {\n            timestamp: true\n        });\n        return;\n    }\n    for (const key in newServer) {\n        if (key === '_restartPromise') {\n            // prevent new server `restart` function from calling\n            // @ts-ignore\n            newServer[key] = server[key];\n        }\n        else {\n            // @ts-ignore\n            server[key] = newServer[key];\n        }\n    }\n    const { logger, server: { port, host, middlewareMode } } = server.config;\n    if (!middlewareMode) {\n        await server.listen(port, true);\n        logger.info('server restarted.', { timestamp: true });\n        if (port !== prevPort || host !== prevHost) {\n            logger.info('');\n            server.printUrls();\n        }\n    }\n    else {\n        logger.info('server restarted.', { timestamp: true });\n    }\n    // new server (the current server) can restart now\n    newServer._restartPromise = null;\n}\nasync function updateCjsSsrExternals(server) {\n    if (!server._ssrExternals) {\n        let knownImports = [];\n        // Important! We use the non-ssr optimized deps to find known imports\n        // Only the explicitly defined deps are optimized during dev SSR, so\n        // we use the generated list from the scanned deps in regular dev.\n        // This is part of the v2 externalization heuristics and it is kept\n        // for backwards compatibility in case user needs to fallback to the\n        // legacy scheme. It may be removed in a future v3 minor.\n        const depsOptimizer = getDepsOptimizer(server.config, false); // non-ssr\n        if (depsOptimizer) {\n            await depsOptimizer.scanProcessing;\n            knownImports = [\n                ...Object.keys(depsOptimizer.metadata.optimized),\n                ...Object.keys(depsOptimizer.metadata.discovered)\n            ];\n        }\n        server._ssrExternals = cjsSsrResolveExternals(server.config, knownImports);\n    }\n}\n\nvar index = {\n\t__proto__: null,\n\tcreateServer: createServer,\n\tresolveServerOptions: resolveServerOptions,\n\tsearchForWorkspaceRoot: searchForWorkspaceRoot\n};\n\n//@ts-nocheck\n/* global Buffer */\nconst noop = () => { };\nconst mimes = /text|javascript|\\/json|xml/i;\nconst threshold = 1024;\nconst level = -1;\nlet brotli = false;\nconst getChunkSize = (chunk, enc) => (chunk ? Buffer.byteLength(chunk, enc) : 0);\nfunction compression() {\n    const brotliOpts = (typeof brotli === 'object' && brotli) || {};\n    const gzipOpts = {};\n    // disable Brotli on Node<12.7 where it is unsupported:\n    if (!zlib$1.createBrotliCompress)\n        brotli = false;\n    return (req, res, next = noop) => {\n        const accept = req.headers['accept-encoding'] + '';\n        const encoding = ((brotli && accept.match(/\\bbr\\b/)) ||\n            (accept.match(/\\bgzip\\b/)) ||\n            [])[0];\n        // skip if no response body or no supported encoding:\n        if (req.method === 'HEAD' || !encoding)\n            return next();\n        /** @type {zlib.Gzip | zlib.BrotliCompress} */\n        let compress;\n        let pendingStatus;\n        /** @type {[string, function][]?} */\n        let pendingListeners = [];\n        let started = false;\n        let size = 0;\n        function start() {\n            started = true;\n            // @ts-ignore\n            size = res.getHeader('Content-Length') | 0 || size;\n            const compressible = mimes.test(String(res.getHeader('Content-Type') || 'text/plain'));\n            const cleartext = !res.getHeader('Content-Encoding');\n            const listeners = pendingListeners || [];\n            if (compressible && cleartext && size >= threshold) {\n                res.setHeader('Content-Encoding', encoding);\n                res.removeHeader('Content-Length');\n                if (encoding === 'br') {\n                    const params = {\n                        [zlib$1.constants.BROTLI_PARAM_QUALITY]: level,\n                        [zlib$1.constants.BROTLI_PARAM_SIZE_HINT]: size\n                    };\n                    compress = zlib$1.createBrotliCompress({\n                        params: Object.assign(params, brotliOpts)\n                    });\n                }\n                else {\n                    compress = zlib$1.createGzip(Object.assign({ level }, gzipOpts));\n                }\n                // backpressure\n                compress.on('data', (chunk) => write.call(res, chunk) === false && compress.pause());\n                on.call(res, 'drain', () => compress.resume());\n                compress.on('end', () => end.call(res));\n                listeners.forEach((p) => compress.on.apply(compress, p));\n            }\n            else {\n                pendingListeners = null;\n                listeners.forEach((p) => on.apply(res, p));\n            }\n            writeHead.call(res, pendingStatus || res.statusCode);\n        }\n        const { end, write, on, writeHead } = res;\n        res.writeHead = function (status, reason, headers) {\n            if (typeof reason !== 'string')\n                [headers, reason] = [reason, headers];\n            if (headers)\n                for (let i in headers)\n                    res.setHeader(i, headers[i]);\n            pendingStatus = status;\n            return this;\n        };\n        res.write = function (chunk, enc, cb) {\n            size += getChunkSize(chunk, enc);\n            if (!started)\n                start();\n            if (!compress)\n                return write.apply(this, arguments);\n            return compress.write.apply(compress, arguments);\n        };\n        res.end = function (chunk, enc, cb) {\n            if (arguments.length > 0 && typeof chunk !== 'function') {\n                size += getChunkSize(chunk, enc);\n            }\n            if (!started)\n                start();\n            if (!compress)\n                return end.apply(this, arguments);\n            return compress.end.apply(compress, arguments);\n        };\n        res.on = function (type, listener) {\n            if (!pendingListeners || type !== 'drain')\n                on.call(this, type, listener);\n            else if (compress)\n                compress.on(type, listener);\n            else\n                pendingListeners.push([type, listener]);\n            return this;\n        };\n        next();\n    };\n}\n\nfunction resolvePreviewOptions(preview, server) {\n    // The preview server inherits every CommonServerOption from the `server` config\n    // except for the port to enable having both the dev and preview servers running\n    // at the same time without extra configuration\n    return {\n        port: preview?.port,\n        strictPort: preview?.strictPort ?? server.strictPort,\n        host: preview?.host ?? server.host,\n        https: preview?.https ?? server.https,\n        open: preview?.open ?? server.open,\n        proxy: preview?.proxy ?? server.proxy,\n        cors: preview?.cors ?? server.cors,\n        headers: preview?.headers ?? server.headers\n    };\n}\n/**\n * Starts the Vite server in preview mode, to simulate a production deployment\n */\nasync function preview(inlineConfig = {}) {\n    const config = await resolveConfig(inlineConfig, 'serve', 'production');\n    const app = connect();\n    const httpServer = await resolveHttpServer(config.preview, app, await resolveHttpsConfig(config.preview?.https));\n    setClientErrorHandler(httpServer, config.logger);\n    // apply server hooks from plugins\n    const postHooks = [];\n    for (const plugin of config.plugins) {\n        if (plugin.configurePreviewServer) {\n            postHooks.push(await plugin.configurePreviewServer({ middlewares: app, httpServer }));\n        }\n    }\n    // cors\n    const { cors } = config.preview;\n    if (cors !== false) {\n        app.use(lib$2.exports(typeof cors === 'boolean' ? {} : cors));\n    }\n    // proxy\n    const { proxy } = config.preview;\n    if (proxy) {\n        app.use(proxyMiddleware(httpServer, proxy, config));\n    }\n    app.use(compression());\n    const previewBase = config.base === './' || config.base === '' ? '/' : config.base;\n    // static assets\n    const distDir = path$n.resolve(config.root, config.build.outDir);\n    app.use(previewBase, sirv(distDir, {\n        etag: true,\n        dev: true,\n        single: config.appType === 'spa'\n    }));\n    // apply post server hooks from plugins\n    postHooks.forEach((fn) => fn && fn());\n    const options = config.preview;\n    const hostname = await resolveHostname(options.host);\n    const port = options.port ?? 4173;\n    const protocol = options.https ? 'https' : 'http';\n    const logger = config.logger;\n    const serverPort = await httpServerStart(httpServer, {\n        port,\n        strictPort: options.strictPort,\n        host: hostname.host,\n        logger\n    });\n    const resolvedUrls = await resolveServerUrls(httpServer, config.preview, config);\n    if (options.open) {\n        const path = typeof options.open === 'string' ? options.open : previewBase;\n        openBrowser(path.startsWith('http')\n            ? path\n            : `${protocol}://${hostname.name}:${serverPort}${path}`, true, logger);\n    }\n    return {\n        config,\n        httpServer,\n        resolvedUrls,\n        printUrls() {\n            printServerUrls(resolvedUrls, options.host, logger.info);\n        }\n    };\n}\n\nvar preview$1 = {\n\t__proto__: null,\n\tresolvePreviewOptions: resolvePreviewOptions,\n\tpreview: preview\n};\n\n// ids in transform are normalized to unix style\nconst normalizedClientEntry = normalizePath$3(CLIENT_ENTRY);\nconst normalizedEnvEntry = normalizePath$3(ENV_ENTRY);\n/**\n * some values used by the client needs to be dynamically injected by the server\n * @server-only\n */\nfunction clientInjectionsPlugin(config) {\n    return {\n        name: 'vite:client-inject',\n        async transform(code, id, options) {\n            if (id === normalizedClientEntry || id === normalizedEnvEntry) {\n                const resolvedServerHostname = (await resolveHostname(config.server.host)).name;\n                const resolvedServerPort = config.server.port;\n                const devBase = config.base;\n                const serverHost = `${resolvedServerHostname}:${resolvedServerPort}${devBase}`;\n                let hmrConfig = config.server.hmr;\n                hmrConfig = isObject$2(hmrConfig) ? hmrConfig : undefined;\n                const host = hmrConfig?.host || null;\n                const protocol = hmrConfig?.protocol || null;\n                const timeout = hmrConfig?.timeout || 30000;\n                const overlay = hmrConfig?.overlay !== false;\n                // hmr.clientPort -> hmr.port\n                // -> (24678 if middleware mode) -> new URL(import.meta.url).port\n                let port = hmrConfig?.clientPort || hmrConfig?.port || null;\n                if (config.server.middlewareMode) {\n                    port || (port = 24678);\n                }\n                let directTarget = hmrConfig?.host || resolvedServerHostname;\n                directTarget += `:${hmrConfig?.port || resolvedServerPort}`;\n                directTarget += devBase;\n                let hmrBase = devBase;\n                if (hmrConfig?.path) {\n                    hmrBase = path$n.posix.join(hmrBase, hmrConfig.path);\n                }\n                return code\n                    .replace(`__MODE__`, JSON.stringify(config.mode))\n                    .replace(`__BASE__`, JSON.stringify(devBase))\n                    .replace(`__DEFINES__`, serializeDefine(config.define || {}))\n                    .replace(`__SERVER_HOST__`, JSON.stringify(serverHost))\n                    .replace(`__HMR_PROTOCOL__`, JSON.stringify(protocol))\n                    .replace(`__HMR_HOSTNAME__`, JSON.stringify(host))\n                    .replace(`__HMR_PORT__`, JSON.stringify(port))\n                    .replace(`__HMR_DIRECT_TARGET__`, JSON.stringify(directTarget))\n                    .replace(`__HMR_BASE__`, JSON.stringify(hmrBase))\n                    .replace(`__HMR_TIMEOUT__`, JSON.stringify(timeout))\n                    .replace(`__HMR_ENABLE_OVERLAY__`, JSON.stringify(overlay));\n            }\n            else if (!options?.ssr && code.includes('process.env.NODE_ENV')) {\n                // replace process.env.NODE_ENV instead of defining a global\n                // for it to avoid shimming a `process` object during dev,\n                // avoiding inconsistencies between dev and build\n                return code.replace(/\\bprocess\\.env\\.NODE_ENV\\b/g, config.define?.['process.env.NODE_ENV'] ||\n                    JSON.stringify(process.env.NODE_ENV || config.mode));\n            }\n        }\n    };\n}\nfunction serializeDefine(define) {\n    let res = `{`;\n    for (const key in define) {\n        const val = define[key];\n        res += `${JSON.stringify(key)}: ${typeof val === 'string' ? `(${val})` : JSON.stringify(val)}, `;\n    }\n    return res + `}`;\n}\n\nconst wasmHelperId = '/__vite-wasm-helper';\nconst wasmHelper = async (opts = {}, url) => {\n    let result;\n    if (url.startsWith('data:')) {\n        const urlContent = url.replace(/^data:.*?base64,/, '');\n        let bytes;\n        if (typeof Buffer === 'function' && typeof Buffer.from === 'function') {\n            bytes = Buffer.from(urlContent, 'base64');\n        }\n        else if (typeof atob === 'function') {\n            // @ts-ignore\n            const binaryString = atob(urlContent);\n            bytes = new Uint8Array(binaryString.length);\n            for (let i = 0; i < binaryString.length; i++) {\n                bytes[i] = binaryString.charCodeAt(i);\n            }\n        }\n        else {\n            throw new Error('Failed to decode base64-encoded data URL, Buffer and atob are not supported');\n        }\n        // @ts-ignore\n        result = await WebAssembly.instantiate(bytes, opts);\n    }\n    else {\n        // https://github.com/mdn/webassembly-examples/issues/5\n        // WebAssembly.instantiateStreaming requires the server to provide the\n        // correct MIME type for .wasm files, which unfortunately doesn't work for\n        // a lot of static file servers, so we just work around it by getting the\n        // raw buffer.\n        // @ts-ignore\n        const response = await fetch(url);\n        const contentType = response.headers.get('Content-Type') || '';\n        if (\n        // @ts-ignore\n        'instantiateStreaming' in WebAssembly &&\n            contentType.startsWith('application/wasm')) {\n            // @ts-ignore\n            result = await WebAssembly.instantiateStreaming(response, opts);\n        }\n        else {\n            const buffer = await response.arrayBuffer();\n            // @ts-ignore\n            result = await WebAssembly.instantiate(buffer, opts);\n        }\n    }\n    return result.instance;\n};\nconst wasmHelperCode = wasmHelper.toString();\nconst wasmHelperPlugin = (config) => {\n    return {\n        name: 'vite:wasm-helper',\n        resolveId(id) {\n            if (id === wasmHelperId) {\n                return id;\n            }\n        },\n        async load(id) {\n            if (id === wasmHelperId) {\n                return `export default ${wasmHelperCode}`;\n            }\n            if (!id.endsWith('.wasm?init')) {\n                return;\n            }\n            const url = await fileToUrl(id, config, this);\n            return `\nimport initWasm from \"${wasmHelperId}\"\nexport default opts => initWasm(opts, ${JSON.stringify(url)})\n`;\n        }\n    };\n};\nconst wasmFallbackPlugin = () => {\n    return {\n        name: 'vite:wasm-fallback',\n        async load(id) {\n            if (!id.endsWith('.wasm')) {\n                return;\n            }\n            throw new Error('\"ESM integration proposal for Wasm\" is not supported currently. ' +\n                'Use vite-plugin-wasm or other community plugins to handle this. ' +\n                'Alternatively, you can use `.wasm?init` or `.wasm?url`. ' +\n                'See https://vitejs.dev/guide/features.html#webassembly for more details.');\n        }\n    };\n};\n\nconst WORKER_FILE_ID = 'worker_file';\nconst workerCache = new WeakMap();\nfunction saveEmitWorkerAsset(config, asset) {\n    const fileName = asset.fileName;\n    const workerMap = workerCache.get(config.mainConfig || config);\n    workerMap.assets.set(fileName, asset);\n}\nasync function bundleWorkerEntry(config, id, query) {\n    // bundle the file as entry to support imports\n    const { rollup } = await import('rollup');\n    const { plugins, rollupOptions, format } = config.worker;\n    const bundle = await rollup({\n        ...rollupOptions,\n        input: cleanUrl(id),\n        plugins,\n        onwarn(warning, warn) {\n            onRollupWarning(warning, warn, config);\n        },\n        preserveEntrySignatures: false\n    });\n    let chunk;\n    try {\n        const workerOutputConfig = config.worker.rollupOptions.output;\n        const workerConfig = workerOutputConfig\n            ? Array.isArray(workerOutputConfig)\n                ? workerOutputConfig[0] || {}\n                : workerOutputConfig\n            : {};\n        const { output: [outputChunk, ...outputChunks] } = await bundle.generate({\n            entryFileNames: path$n.posix.join(config.build.assetsDir, '[name].[hash].js'),\n            chunkFileNames: path$n.posix.join(config.build.assetsDir, '[name].[hash].js'),\n            assetFileNames: path$n.posix.join(config.build.assetsDir, '[name].[hash].[ext]'),\n            ...workerConfig,\n            format,\n            sourcemap: config.build.sourcemap\n        });\n        chunk = outputChunk;\n        outputChunks.forEach((outputChunk) => {\n            if (outputChunk.type === 'asset') {\n                saveEmitWorkerAsset(config, outputChunk);\n            }\n            else if (outputChunk.type === 'chunk') {\n                saveEmitWorkerAsset(config, {\n                    fileName: outputChunk.fileName,\n                    source: outputChunk.code,\n                    type: 'asset'\n                });\n            }\n        });\n    }\n    finally {\n        await bundle.close();\n    }\n    return emitSourcemapForWorkerEntry(config, query, chunk);\n}\nfunction emitSourcemapForWorkerEntry(config, query, chunk) {\n    const { map: sourcemap } = chunk;\n    if (sourcemap) {\n        if (config.build.sourcemap === 'inline') {\n            // Manually add the sourcemap to the code if configured for inline sourcemaps.\n            // TODO: Remove when https://github.com/rollup/rollup/issues/3913 is resolved\n            // Currently seems that it won't be resolved until Rollup 3\n            const dataUrl = sourcemap.toUrl();\n            chunk.code += `//# sourceMappingURL=${dataUrl}`;\n        }\n        else if (config.build.sourcemap === 'hidden' ||\n            config.build.sourcemap === true) {\n            const data = sourcemap.toString();\n            const mapFileName = chunk.fileName + '.map';\n            saveEmitWorkerAsset(config, {\n                fileName: mapFileName,\n                type: 'asset',\n                source: data\n            });\n            // Emit the comment that tells the JS debugger where it can find the\n            // sourcemap file.\n            // 'hidden' causes the sourcemap file to be created but\n            // the comment in the file to be omitted.\n            if (config.build.sourcemap === true) {\n                // inline web workers need to use the full sourcemap path\n                // non-inline web workers can use a relative path\n                const sourceMapUrl = query?.inline != null\n                    ? mapFileName\n                    : path$n.relative(config.build.assetsDir, mapFileName);\n                chunk.code += `//# sourceMappingURL=${sourceMapUrl}`;\n            }\n        }\n    }\n    return chunk;\n}\nconst workerAssetUrlRE = /__VITE_WORKER_ASSET__([a-z\\d]{8})__/g;\nfunction encodeWorkerAssetFileName(fileName, workerCache) {\n    const { fileNameHash } = workerCache;\n    const hash = getHash(fileName);\n    if (!fileNameHash.get(hash)) {\n        fileNameHash.set(hash, fileName);\n    }\n    return `__VITE_WORKER_ASSET__${hash}__`;\n}\nasync function workerFileToUrl(config, id, query) {\n    const workerMap = workerCache.get(config.mainConfig || config);\n    let fileName = workerMap.bundle.get(id);\n    if (!fileName) {\n        const outputChunk = await bundleWorkerEntry(config, id, query);\n        fileName = outputChunk.fileName;\n        saveEmitWorkerAsset(config, {\n            fileName,\n            source: outputChunk.code,\n            type: 'asset'\n        });\n        workerMap.bundle.set(id, fileName);\n    }\n    return encodeWorkerAssetFileName(fileName, workerMap);\n}\nfunction webWorkerPlugin(config) {\n    const isBuild = config.command === 'build';\n    let server;\n    const isWorker = config.isWorker;\n    return {\n        name: 'vite:worker',\n        configureServer(_server) {\n            server = _server;\n        },\n        buildStart() {\n            if (isWorker) {\n                return;\n            }\n            workerCache.set(config, {\n                assets: new Map(),\n                bundle: new Map(),\n                fileNameHash: new Map()\n            });\n        },\n        load(id) {\n            if (isBuild) {\n                const parsedQuery = parseRequest(id);\n                if (parsedQuery &&\n                    (parsedQuery.worker ?? parsedQuery.sharedworker) != null) {\n                    return '';\n                }\n            }\n        },\n        async transform(raw, id, options) {\n            const ssr = options?.ssr === true;\n            const query = parseRequest(id);\n            if (query && query[WORKER_FILE_ID] != null) {\n                // if import worker by worker constructor will had query.type\n                // other type will be import worker by esm\n                const workerType = query['type'];\n                let injectEnv = '';\n                if (workerType === 'classic') {\n                    injectEnv = `importScripts('${ENV_PUBLIC_PATH}')\\n`;\n                }\n                else if (workerType === 'module') {\n                    injectEnv = `import '${ENV_PUBLIC_PATH}'\\n`;\n                }\n                else if (workerType === 'ignore') {\n                    if (isBuild) {\n                        injectEnv = '';\n                    }\n                    else if (server) {\n                        // dynamic worker type we can't know how import the env\n                        // so we copy /@vite/env code of server transform result into file header\n                        const { moduleGraph } = server;\n                        const module = moduleGraph.getModuleById(ENV_ENTRY);\n                        injectEnv = module?.transformResult?.code || '';\n                    }\n                }\n                return {\n                    code: injectEnv + raw\n                };\n            }\n            if (query == null ||\n                (query && (query.worker ?? query.sharedworker) == null)) {\n                return;\n            }\n            // stringified url or `new URL(...)`\n            let url;\n            const { format } = config.worker;\n            const workerConstructor = query.sharedworker != null ? 'SharedWorker' : 'Worker';\n            const workerType = isBuild\n                ? format === 'es'\n                    ? 'module'\n                    : 'classic'\n                : 'module';\n            const workerOptions = workerType === 'classic' ? '' : ',{type: \"module\"}';\n            if (isBuild) {\n                getDepsOptimizer(config, ssr)?.registerWorkersSource(id);\n                if (query.inline != null) {\n                    const chunk = await bundleWorkerEntry(config, id, query);\n                    // inline as blob data url\n                    return {\n                        code: `const encodedJs = \"${Buffer.from(chunk.code).toString('base64')}\";\n            const blob = typeof window !== \"undefined\" && window.Blob && new Blob([atob(encodedJs)], { type: \"text/javascript;charset=utf-8\" });\n            export default function WorkerWrapper() {\n              const objURL = blob && (window.URL || window.webkitURL).createObjectURL(blob);\n              try {\n                return objURL ? new ${workerConstructor}(objURL) : new ${workerConstructor}(\"data:application/javascript;base64,\" + encodedJs${workerOptions});\n              } finally {\n                objURL && (window.URL || window.webkitURL).revokeObjectURL(objURL);\n              }\n            }`,\n                        // Empty sourcemap to suppress Rollup warning\n                        map: { mappings: '' }\n                    };\n                }\n                else {\n                    url = await workerFileToUrl(config, id, query);\n                }\n            }\n            else {\n                url = await fileToUrl(cleanUrl(id), config, this);\n                url = injectQuery(url, WORKER_FILE_ID);\n                url = injectQuery(url, `type=${workerType}`);\n            }\n            if (query.url != null) {\n                return {\n                    code: `export default ${JSON.stringify(url)}`,\n                    map: { mappings: '' } // Empty sourcemap to suppress Rollup warning\n                };\n            }\n            return {\n                code: `export default function WorkerWrapper() {\n          return new ${workerConstructor}(${JSON.stringify(url)}${workerOptions})\n        }`,\n                map: { mappings: '' } // Empty sourcemap to suppress Rollup warning\n            };\n        },\n        renderChunk(code, chunk, outputOptions) {\n            let s;\n            const result = () => {\n                return (s && {\n                    code: s.toString(),\n                    map: config.build.sourcemap ? s.generateMap({ hires: true }) : null\n                });\n            };\n            if (code.match(workerAssetUrlRE) || code.includes('import.meta.url')) {\n                let match;\n                s = new MagicString(code);\n                // Replace \"__VITE_WORKER_ASSET__5aa0ddc0__\" using relative paths\n                const workerMap = workerCache.get(config.mainConfig || config);\n                const { fileNameHash } = workerMap;\n                while ((match = workerAssetUrlRE.exec(code))) {\n                    const [full, hash] = match;\n                    const filename = fileNameHash.get(hash);\n                    const replacement = toOutputFilePathInString(filename, 'asset', chunk.fileName, 'js', config, outputOptions.format);\n                    const replacementString = typeof replacement === 'string'\n                        ? JSON.stringify(replacement).slice(1, -1)\n                        : `\"+${replacement.runtime}+\"`;\n                    s.overwrite(match.index, match.index + full.length, replacementString, {\n                        contentOnly: true\n                    });\n                }\n            }\n            return result();\n        },\n        generateBundle(opts) {\n            // @ts-ignore asset emits are skipped in legacy bundle\n            if (opts.__vite_skip_asset_emit__ || isWorker) {\n                return;\n            }\n            const workerMap = workerCache.get(config);\n            workerMap.assets.forEach((asset) => {\n                this.emitFile(asset);\n                workerMap.assets.delete(asset.fileName);\n            });\n        }\n    };\n}\n\n/**\n * A plugin to avoid an aliased AND optimized dep from being aliased in src\n */\nfunction preAliasPlugin(config) {\n    const findPatterns = getAliasPatterns(config.resolve.alias);\n    const isConfiguredAsExternal = createIsConfiguredAsSsrExternal(config);\n    const isBuild = config.command === 'build';\n    return {\n        name: 'vite:pre-alias',\n        async resolveId(id, importer, options) {\n            const ssr = options?.ssr === true;\n            const depsOptimizer = getDepsOptimizer(config, ssr);\n            if (importer &&\n                depsOptimizer &&\n                bareImportRE.test(id) &&\n                !options?.scan &&\n                id !== '@vite/client' &&\n                id !== '@vite/env') {\n                if (findPatterns.find((pattern) => matches(pattern, id))) {\n                    const optimizedId = await tryOptimizedResolve(depsOptimizer, id, importer);\n                    if (optimizedId) {\n                        return optimizedId; // aliased dep already optimized\n                    }\n                    const resolved = await this.resolve(id, importer, {\n                        skipSelf: true,\n                        ...options\n                    });\n                    if (resolved && !depsOptimizer.isOptimizedDepFile(resolved.id)) {\n                        const optimizeDeps = depsOptimizer.options;\n                        const resolvedId = resolved.id;\n                        const isVirtual = resolvedId === id || resolvedId.includes('\\0');\n                        if (!isVirtual &&\n                            fs$l.existsSync(resolvedId) &&\n                            !moduleListContains(optimizeDeps.exclude, id) &&\n                            path$n.isAbsolute(resolvedId) &&\n                            (resolvedId.includes('node_modules') ||\n                                optimizeDeps.include?.includes(id)) &&\n                            isOptimizable(resolvedId, optimizeDeps) &&\n                            !(isBuild && ssr && isConfiguredAsExternal(id)) &&\n                            (!ssr || optimizeAliasReplacementForSSR(resolvedId, optimizeDeps))) {\n                            // aliased dep has not yet been optimized\n                            const optimizedInfo = depsOptimizer.registerMissingImport(id, resolvedId);\n                            return { id: depsOptimizer.getOptimizedDepId(optimizedInfo) };\n                        }\n                    }\n                    return resolved;\n                }\n            }\n        }\n    };\n}\nfunction optimizeAliasReplacementForSSR(id, optimizeDeps) {\n    if (optimizeDeps.include?.includes(id)) {\n        return true;\n    }\n    // In the regular resolution, the default for non-external modules is to\n    // be optimized if they are CJS. Here, we don't have the package id but\n    // only the replacement file path. We could find the package.json from\n    // the id and respect the same default in the future.\n    // Default to not optimize an aliased replacement for now, forcing the\n    // user to explicitly add it to the ssr.optimizeDeps.include list.\n    return false;\n}\n// In sync with rollup plugin alias logic\nfunction matches(pattern, importee) {\n    if (pattern instanceof RegExp) {\n        return pattern.test(importee);\n    }\n    if (importee.length < pattern.length) {\n        return false;\n    }\n    if (importee === pattern) {\n        return true;\n    }\n    return importee.startsWith(pattern + '/');\n}\nfunction getAliasPatterns(entries) {\n    if (!entries) {\n        return [];\n    }\n    if (Array.isArray(entries)) {\n        return entries.map((entry) => entry.find);\n    }\n    return Object.entries(entries).map(([find]) => find);\n}\n\nconst nonJsRe = /\\.(json)($|\\?)/;\nconst isNonJsRequest = (request) => nonJsRe.test(request);\nfunction definePlugin(config) {\n    const isBuild = config.command === 'build';\n    const isBuildLib = isBuild && config.build.lib;\n    // ignore replace process.env in lib build\n    const processEnv = {};\n    const processNodeEnv = {};\n    if (!isBuildLib) {\n        const nodeEnv = process.env.NODE_ENV || config.mode;\n        Object.assign(processEnv, {\n            'process.env.': `({}).`,\n            'global.process.env.': `({}).`,\n            'globalThis.process.env.': `({}).`\n        });\n        Object.assign(processNodeEnv, {\n            'process.env.NODE_ENV': JSON.stringify(nodeEnv),\n            'global.process.env.NODE_ENV': JSON.stringify(nodeEnv),\n            'globalThis.process.env.NODE_ENV': JSON.stringify(nodeEnv),\n            __vite_process_env_NODE_ENV: JSON.stringify(nodeEnv)\n        });\n    }\n    const userDefine = {};\n    for (const key in config.define) {\n        const val = config.define[key];\n        userDefine[key] = typeof val === 'string' ? val : JSON.stringify(val);\n    }\n    // during dev, import.meta properties are handled by importAnalysis plugin.\n    // ignore replace import.meta.env in lib build\n    const importMetaKeys = {};\n    const importMetaFallbackKeys = {};\n    if (isBuild) {\n        const env = {\n            ...config.env,\n            SSR: !!config.build.ssr\n        };\n        for (const key in env) {\n            importMetaKeys[`import.meta.env.${key}`] = JSON.stringify(env[key]);\n        }\n        Object.assign(importMetaFallbackKeys, {\n            'import.meta.env.': `({}).`,\n            'import.meta.env': JSON.stringify(config.env),\n            'import.meta.hot': `false`\n        });\n    }\n    function generatePattern(ssr) {\n        const replaceProcessEnv = !ssr || config.ssr?.target === 'webworker';\n        const replacements = {\n            ...(replaceProcessEnv ? processNodeEnv : {}),\n            ...importMetaKeys,\n            ...userDefine,\n            ...importMetaFallbackKeys,\n            ...(replaceProcessEnv ? processEnv : {})\n        };\n        if (isBuild && !replaceProcessEnv) {\n            replacements['__vite_process_env_NODE_ENV'] = 'process.env.NODE_ENV';\n        }\n        const replacementsKeys = Object.keys(replacements);\n        const pattern = replacementsKeys.length\n            ? new RegExp(\n            // Mustn't be preceded by a char that can be part of an identifier\n            // or a '.' that isn't part of a spread operator\n            '(?<![\\\\p{L}\\\\p{N}_$]|(?<!\\\\.\\\\.)\\\\.)(' +\n                replacementsKeys\n                    .map((str) => {\n                    return str.replace(/[-[\\]/{}()*+?.\\\\^$|]/g, '\\\\$&');\n                })\n                    .join('|') +\n                // Mustn't be followed by a char that can be part of an identifier\n                // or an assignment (but allow equality operators)\n                ')(?![\\\\p{L}\\\\p{N}_$]|\\\\s*?=[^=])', 'gu')\n            : null;\n        return [replacements, pattern];\n    }\n    const defaultPattern = generatePattern(false);\n    const ssrPattern = generatePattern(true);\n    return {\n        name: 'vite:define',\n        transform(code, id, options) {\n            const ssr = options?.ssr === true;\n            if (!ssr && !isBuild) {\n                // for dev we inject actual global defines in the vite client to\n                // avoid the transform cost.\n                return;\n            }\n            if (\n            // exclude html, css and static assets for performance\n            isHTMLRequest(id) ||\n                isCSSRequest(id) ||\n                isNonJsRequest(id) ||\n                config.assetsInclude(id)) {\n                return;\n            }\n            const [replacements, pattern] = ssr ? ssrPattern : defaultPattern;\n            if (!pattern) {\n                return null;\n            }\n            if (ssr && !isBuild) {\n                // ssr + dev, simple replace\n                return code.replace(pattern, (_, match) => {\n                    return '' + replacements[match];\n                });\n            }\n            const s = new MagicString(code);\n            let hasReplaced = false;\n            let match;\n            while ((match = pattern.exec(code))) {\n                hasReplaced = true;\n                const start = match.index;\n                const end = start + match[0].length;\n                const replacement = '' + replacements[match[1]];\n                s.overwrite(start, end, replacement, { contentOnly: true });\n            }\n            if (!hasReplaced) {\n                return null;\n            }\n            return transformStableResult(s, id, config);\n        }\n    };\n}\n\n// This is a generated file. Do not edit.\nvar Space_Separator = /[\\u1680\\u2000-\\u200A\\u202F\\u205F\\u3000]/;\nvar ID_Start = /[\\xAA\\xB5\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0370-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0620-\\u064A\\u066E\\u066F\\u0671-\\u06D3\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07CA-\\u07EA\\u07F4\\u07F5\\u07FA\\u0800-\\u0815\\u081A\\u0824\\u0828\\u0840-\\u0858\\u0860-\\u086A\\u08A0-\\u08B4\\u08B6-\\u08BD\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC\\u09DD\\u09DF-\\u09E1\\u09F0\\u09F1\\u09FC\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0AE1\\u0AF9\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B71\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D\\u0C58-\\u0C5A\\u0C60\\u0C61\\u0C80\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD\\u0CDE\\u0CE0\\u0CE1\\u0CF1\\u0CF2\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D\\u0D4E\\u0D54-\\u0D56\\u0D5F-\\u0D61\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EDC-\\u0EDF\\u0F00\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8C\\u1000-\\u102A\\u103F\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065\\u1066\\u106E-\\u1070\\u1075-\\u1081\\u108E\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1380-\\u138F\\u13A0-\\u13F5\\u13F8-\\u13FD\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16EE-\\u16F8\\u1700-\\u170C\\u170E-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17D7\\u17DC\\u1820-\\u1877\\u1880-\\u1884\\u1887-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1950-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u1A00-\\u1A16\\u1A20-\\u1A54\\u1AA7\\u1B05-\\u1B33\\u1B45-\\u1B4B\\u1B83-\\u1BA0\\u1BAE\\u1BAF\\u1BBA-\\u1BE5\\u1C00-\\u1C23\\u1C4D-\\u1C4F\\u1C5A-\\u1C7D\\u1C80-\\u1C88\\u1CE9-\\u1CEC\\u1CEE-\\u1CF1\\u1CF5\\u1CF6\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2071\\u207F\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2160-\\u2188\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2E2F\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312E\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FEA\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA61F\\uA62A\\uA62B\\uA640-\\uA66E\\uA67F-\\uA69D\\uA6A0-\\uA6EF\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA7AE\\uA7B0-\\uA7B7\\uA7F7-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA840-\\uA873\\uA882-\\uA8B3\\uA8F2-\\uA8F7\\uA8FB\\uA8FD\\uA90A-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9CF\\uA9E0-\\uA9E4\\uA9E6-\\uA9EF\\uA9FA-\\uA9FE\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA60-\\uAA76\\uAA7A\\uAA7E-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEA\\uAAF2-\\uAAF4\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB65\\uAB70-\\uABE2\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]|\\uD800[\\uDC00-\\uDC0B\\uDC0D-\\uDC26\\uDC28-\\uDC3A\\uDC3C\\uDC3D\\uDC3F-\\uDC4D\\uDC50-\\uDC5D\\uDC80-\\uDCFA\\uDD40-\\uDD74\\uDE80-\\uDE9C\\uDEA0-\\uDED0\\uDF00-\\uDF1F\\uDF2D-\\uDF4A\\uDF50-\\uDF75\\uDF80-\\uDF9D\\uDFA0-\\uDFC3\\uDFC8-\\uDFCF\\uDFD1-\\uDFD5]|\\uD801[\\uDC00-\\uDC9D\\uDCB0-\\uDCD3\\uDCD8-\\uDCFB\\uDD00-\\uDD27\\uDD30-\\uDD63\\uDE00-\\uDF36\\uDF40-\\uDF55\\uDF60-\\uDF67]|\\uD802[\\uDC00-\\uDC05\\uDC08\\uDC0A-\\uDC35\\uDC37\\uDC38\\uDC3C\\uDC3F-\\uDC55\\uDC60-\\uDC76\\uDC80-\\uDC9E\\uDCE0-\\uDCF2\\uDCF4\\uDCF5\\uDD00-\\uDD15\\uDD20-\\uDD39\\uDD80-\\uDDB7\\uDDBE\\uDDBF\\uDE00\\uDE10-\\uDE13\\uDE15-\\uDE17\\uDE19-\\uDE33\\uDE60-\\uDE7C\\uDE80-\\uDE9C\\uDEC0-\\uDEC7\\uDEC9-\\uDEE4\\uDF00-\\uDF35\\uDF40-\\uDF55\\uDF60-\\uDF72\\uDF80-\\uDF91]|\\uD803[\\uDC00-\\uDC48\\uDC80-\\uDCB2\\uDCC0-\\uDCF2]|\\uD804[\\uDC03-\\uDC37\\uDC83-\\uDCAF\\uDCD0-\\uDCE8\\uDD03-\\uDD26\\uDD50-\\uDD72\\uDD76\\uDD83-\\uDDB2\\uDDC1-\\uDDC4\\uDDDA\\uDDDC\\uDE00-\\uDE11\\uDE13-\\uDE2B\\uDE80-\\uDE86\\uDE88\\uDE8A-\\uDE8D\\uDE8F-\\uDE9D\\uDE9F-\\uDEA8\\uDEB0-\\uDEDE\\uDF05-\\uDF0C\\uDF0F\\uDF10\\uDF13-\\uDF28\\uDF2A-\\uDF30\\uDF32\\uDF33\\uDF35-\\uDF39\\uDF3D\\uDF50\\uDF5D-\\uDF61]|\\uD805[\\uDC00-\\uDC34\\uDC47-\\uDC4A\\uDC80-\\uDCAF\\uDCC4\\uDCC5\\uDCC7\\uDD80-\\uDDAE\\uDDD8-\\uDDDB\\uDE00-\\uDE2F\\uDE44\\uDE80-\\uDEAA\\uDF00-\\uDF19]|\\uD806[\\uDCA0-\\uDCDF\\uDCFF\\uDE00\\uDE0B-\\uDE32\\uDE3A\\uDE50\\uDE5C-\\uDE83\\uDE86-\\uDE89\\uDEC0-\\uDEF8]|\\uD807[\\uDC00-\\uDC08\\uDC0A-\\uDC2E\\uDC40\\uDC72-\\uDC8F\\uDD00-\\uDD06\\uDD08\\uDD09\\uDD0B-\\uDD30\\uDD46]|\\uD808[\\uDC00-\\uDF99]|\\uD809[\\uDC00-\\uDC6E\\uDC80-\\uDD43]|[\\uD80C\\uD81C-\\uD820\\uD840-\\uD868\\uD86A-\\uD86C\\uD86F-\\uD872\\uD874-\\uD879][\\uDC00-\\uDFFF]|\\uD80D[\\uDC00-\\uDC2E]|\\uD811[\\uDC00-\\uDE46]|\\uD81A[\\uDC00-\\uDE38\\uDE40-\\uDE5E\\uDED0-\\uDEED\\uDF00-\\uDF2F\\uDF40-\\uDF43\\uDF63-\\uDF77\\uDF7D-\\uDF8F]|\\uD81B[\\uDF00-\\uDF44\\uDF50\\uDF93-\\uDF9F\\uDFE0\\uDFE1]|\\uD821[\\uDC00-\\uDFEC]|\\uD822[\\uDC00-\\uDEF2]|\\uD82C[\\uDC00-\\uDD1E\\uDD70-\\uDEFB]|\\uD82F[\\uDC00-\\uDC6A\\uDC70-\\uDC7C\\uDC80-\\uDC88\\uDC90-\\uDC99]|\\uD835[\\uDC00-\\uDC54\\uDC56-\\uDC9C\\uDC9E\\uDC9F\\uDCA2\\uDCA5\\uDCA6\\uDCA9-\\uDCAC\\uDCAE-\\uDCB9\\uDCBB\\uDCBD-\\uDCC3\\uDCC5-\\uDD05\\uDD07-\\uDD0A\\uDD0D-\\uDD14\\uDD16-\\uDD1C\\uDD1E-\\uDD39\\uDD3B-\\uDD3E\\uDD40-\\uDD44\\uDD46\\uDD4A-\\uDD50\\uDD52-\\uDEA5\\uDEA8-\\uDEC0\\uDEC2-\\uDEDA\\uDEDC-\\uDEFA\\uDEFC-\\uDF14\\uDF16-\\uDF34\\uDF36-\\uDF4E\\uDF50-\\uDF6E\\uDF70-\\uDF88\\uDF8A-\\uDFA8\\uDFAA-\\uDFC2\\uDFC4-\\uDFCB]|\\uD83A[\\uDC00-\\uDCC4\\uDD00-\\uDD43]|\\uD83B[\\uDE00-\\uDE03\\uDE05-\\uDE1F\\uDE21\\uDE22\\uDE24\\uDE27\\uDE29-\\uDE32\\uDE34-\\uDE37\\uDE39\\uDE3B\\uDE42\\uDE47\\uDE49\\uDE4B\\uDE4D-\\uDE4F\\uDE51\\uDE52\\uDE54\\uDE57\\uDE59\\uDE5B\\uDE5D\\uDE5F\\uDE61\\uDE62\\uDE64\\uDE67-\\uDE6A\\uDE6C-\\uDE72\\uDE74-\\uDE77\\uDE79-\\uDE7C\\uDE7E\\uDE80-\\uDE89\\uDE8B-\\uDE9B\\uDEA1-\\uDEA3\\uDEA5-\\uDEA9\\uDEAB-\\uDEBB]|\\uD869[\\uDC00-\\uDED6\\uDF00-\\uDFFF]|\\uD86D[\\uDC00-\\uDF34\\uDF40-\\uDFFF]|\\uD86E[\\uDC00-\\uDC1D\\uDC20-\\uDFFF]|\\uD873[\\uDC00-\\uDEA1\\uDEB0-\\uDFFF]|\\uD87A[\\uDC00-\\uDFE0]|\\uD87E[\\uDC00-\\uDE1D]/;\nvar ID_Continue = /[\\xAA\\xB5\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0300-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u0483-\\u0487\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u0591-\\u05BD\\u05BF\\u05C1\\u05C2\\u05C4\\u05C5\\u05C7\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0610-\\u061A\\u0620-\\u0669\\u066E-\\u06D3\\u06D5-\\u06DC\\u06DF-\\u06E8\\u06EA-\\u06FC\\u06FF\\u0710-\\u074A\\u074D-\\u07B1\\u07C0-\\u07F5\\u07FA\\u0800-\\u082D\\u0840-\\u085B\\u0860-\\u086A\\u08A0-\\u08B4\\u08B6-\\u08BD\\u08D4-\\u08E1\\u08E3-\\u0963\\u0966-\\u096F\\u0971-\\u0983\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BC-\\u09C4\\u09C7\\u09C8\\u09CB-\\u09CE\\u09D7\\u09DC\\u09DD\\u09DF-\\u09E3\\u09E6-\\u09F1\\u09FC\\u0A01-\\u0A03\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A3C\\u0A3E-\\u0A42\\u0A47\\u0A48\\u0A4B-\\u0A4D\\u0A51\\u0A59-\\u0A5C\\u0A5E\\u0A66-\\u0A75\\u0A81-\\u0A83\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABC-\\u0AC5\\u0AC7-\\u0AC9\\u0ACB-\\u0ACD\\u0AD0\\u0AE0-\\u0AE3\\u0AE6-\\u0AEF\\u0AF9-\\u0AFF\\u0B01-\\u0B03\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3C-\\u0B44\\u0B47\\u0B48\\u0B4B-\\u0B4D\\u0B56\\u0B57\\u0B5C\\u0B5D\\u0B5F-\\u0B63\\u0B66-\\u0B6F\\u0B71\\u0B82\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BBE-\\u0BC2\\u0BC6-\\u0BC8\\u0BCA-\\u0BCD\\u0BD0\\u0BD7\\u0BE6-\\u0BEF\\u0C00-\\u0C03\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D-\\u0C44\\u0C46-\\u0C48\\u0C4A-\\u0C4D\\u0C55\\u0C56\\u0C58-\\u0C5A\\u0C60-\\u0C63\\u0C66-\\u0C6F\\u0C80-\\u0C83\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBC-\\u0CC4\\u0CC6-\\u0CC8\\u0CCA-\\u0CCD\\u0CD5\\u0CD6\\u0CDE\\u0CE0-\\u0CE3\\u0CE6-\\u0CEF\\u0CF1\\u0CF2\\u0D00-\\u0D03\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D44\\u0D46-\\u0D48\\u0D4A-\\u0D4E\\u0D54-\\u0D57\\u0D5F-\\u0D63\\u0D66-\\u0D6F\\u0D7A-\\u0D7F\\u0D82\\u0D83\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0DCA\\u0DCF-\\u0DD4\\u0DD6\\u0DD8-\\u0DDF\\u0DE6-\\u0DEF\\u0DF2\\u0DF3\\u0E01-\\u0E3A\\u0E40-\\u0E4E\\u0E50-\\u0E59\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB9\\u0EBB-\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EC8-\\u0ECD\\u0ED0-\\u0ED9\\u0EDC-\\u0EDF\\u0F00\\u0F18\\u0F19\\u0F20-\\u0F29\\u0F35\\u0F37\\u0F39\\u0F3E-\\u0F47\\u0F49-\\u0F6C\\u0F71-\\u0F84\\u0F86-\\u0F97\\u0F99-\\u0FBC\\u0FC6\\u1000-\\u1049\\u1050-\\u109D\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u135D-\\u135F\\u1380-\\u138F\\u13A0-\\u13F5\\u13F8-\\u13FD\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16EE-\\u16F8\\u1700-\\u170C\\u170E-\\u1714\\u1720-\\u1734\\u1740-\\u1753\\u1760-\\u176C\\u176E-\\u1770\\u1772\\u1773\\u1780-\\u17D3\\u17D7\\u17DC\\u17DD\\u17E0-\\u17E9\\u180B-\\u180D\\u1810-\\u1819\\u1820-\\u1877\\u1880-\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1920-\\u192B\\u1930-\\u193B\\u1946-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u19D0-\\u19D9\\u1A00-\\u1A1B\\u1A20-\\u1A5E\\u1A60-\\u1A7C\\u1A7F-\\u1A89\\u1A90-\\u1A99\\u1AA7\\u1AB0-\\u1ABD\\u1B00-\\u1B4B\\u1B50-\\u1B59\\u1B6B-\\u1B73\\u1B80-\\u1BF3\\u1C00-\\u1C37\\u1C40-\\u1C49\\u1C4D-\\u1C7D\\u1C80-\\u1C88\\u1CD0-\\u1CD2\\u1CD4-\\u1CF9\\u1D00-\\u1DF9\\u1DFB-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u203F\\u2040\\u2054\\u2071\\u207F\\u2090-\\u209C\\u20D0-\\u20DC\\u20E1\\u20E5-\\u20F0\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2160-\\u2188\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D7F-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2DE0-\\u2DFF\\u2E2F\\u3005-\\u3007\\u3021-\\u302F\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u3099\\u309A\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312E\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FEA\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA62B\\uA640-\\uA66F\\uA674-\\uA67D\\uA67F-\\uA6F1\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA7AE\\uA7B0-\\uA7B7\\uA7F7-\\uA827\\uA840-\\uA873\\uA880-\\uA8C5\\uA8D0-\\uA8D9\\uA8E0-\\uA8F7\\uA8FB\\uA8FD\\uA900-\\uA92D\\uA930-\\uA953\\uA960-\\uA97C\\uA980-\\uA9C0\\uA9CF-\\uA9D9\\uA9E0-\\uA9FE\\uAA00-\\uAA36\\uAA40-\\uAA4D\\uAA50-\\uAA59\\uAA60-\\uAA76\\uAA7A-\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEF\\uAAF2-\\uAAF6\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB65\\uAB70-\\uABEA\\uABEC\\uABED\\uABF0-\\uABF9\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE00-\\uFE0F\\uFE20-\\uFE2F\\uFE33\\uFE34\\uFE4D-\\uFE4F\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF10-\\uFF19\\uFF21-\\uFF3A\\uFF3F\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]|\\uD800[\\uDC00-\\uDC0B\\uDC0D-\\uDC26\\uDC28-\\uDC3A\\uDC3C\\uDC3D\\uDC3F-\\uDC4D\\uDC50-\\uDC5D\\uDC80-\\uDCFA\\uDD40-\\uDD74\\uDDFD\\uDE80-\\uDE9C\\uDEA0-\\uDED0\\uDEE0\\uDF00-\\uDF1F\\uDF2D-\\uDF4A\\uDF50-\\uDF7A\\uDF80-\\uDF9D\\uDFA0-\\uDFC3\\uDFC8-\\uDFCF\\uDFD1-\\uDFD5]|\\uD801[\\uDC00-\\uDC9D\\uDCA0-\\uDCA9\\uDCB0-\\uDCD3\\uDCD8-\\uDCFB\\uDD00-\\uDD27\\uDD30-\\uDD63\\uDE00-\\uDF36\\uDF40-\\uDF55\\uDF60-\\uDF67]|\\uD802[\\uDC00-\\uDC05\\uDC08\\uDC0A-\\uDC35\\uDC37\\uDC38\\uDC3C\\uDC3F-\\uDC55\\uDC60-\\uDC76\\uDC80-\\uDC9E\\uDCE0-\\uDCF2\\uDCF4\\uDCF5\\uDD00-\\uDD15\\uDD20-\\uDD39\\uDD80-\\uDDB7\\uDDBE\\uDDBF\\uDE00-\\uDE03\\uDE05\\uDE06\\uDE0C-\\uDE13\\uDE15-\\uDE17\\uDE19-\\uDE33\\uDE38-\\uDE3A\\uDE3F\\uDE60-\\uDE7C\\uDE80-\\uDE9C\\uDEC0-\\uDEC7\\uDEC9-\\uDEE6\\uDF00-\\uDF35\\uDF40-\\uDF55\\uDF60-\\uDF72\\uDF80-\\uDF91]|\\uD803[\\uDC00-\\uDC48\\uDC80-\\uDCB2\\uDCC0-\\uDCF2]|\\uD804[\\uDC00-\\uDC46\\uDC66-\\uDC6F\\uDC7F-\\uDCBA\\uDCD0-\\uDCE8\\uDCF0-\\uDCF9\\uDD00-\\uDD34\\uDD36-\\uDD3F\\uDD50-\\uDD73\\uDD76\\uDD80-\\uDDC4\\uDDCA-\\uDDCC\\uDDD0-\\uDDDA\\uDDDC\\uDE00-\\uDE11\\uDE13-\\uDE37\\uDE3E\\uDE80-\\uDE86\\uDE88\\uDE8A-\\uDE8D\\uDE8F-\\uDE9D\\uDE9F-\\uDEA8\\uDEB0-\\uDEEA\\uDEF0-\\uDEF9\\uDF00-\\uDF03\\uDF05-\\uDF0C\\uDF0F\\uDF10\\uDF13-\\uDF28\\uDF2A-\\uDF30\\uDF32\\uDF33\\uDF35-\\uDF39\\uDF3C-\\uDF44\\uDF47\\uDF48\\uDF4B-\\uDF4D\\uDF50\\uDF57\\uDF5D-\\uDF63\\uDF66-\\uDF6C\\uDF70-\\uDF74]|\\uD805[\\uDC00-\\uDC4A\\uDC50-\\uDC59\\uDC80-\\uDCC5\\uDCC7\\uDCD0-\\uDCD9\\uDD80-\\uDDB5\\uDDB8-\\uDDC0\\uDDD8-\\uDDDD\\uDE00-\\uDE40\\uDE44\\uDE50-\\uDE59\\uDE80-\\uDEB7\\uDEC0-\\uDEC9\\uDF00-\\uDF19\\uDF1D-\\uDF2B\\uDF30-\\uDF39]|\\uD806[\\uDCA0-\\uDCE9\\uDCFF\\uDE00-\\uDE3E\\uDE47\\uDE50-\\uDE83\\uDE86-\\uDE99\\uDEC0-\\uDEF8]|\\uD807[\\uDC00-\\uDC08\\uDC0A-\\uDC36\\uDC38-\\uDC40\\uDC50-\\uDC59\\uDC72-\\uDC8F\\uDC92-\\uDCA7\\uDCA9-\\uDCB6\\uDD00-\\uDD06\\uDD08\\uDD09\\uDD0B-\\uDD36\\uDD3A\\uDD3C\\uDD3D\\uDD3F-\\uDD47\\uDD50-\\uDD59]|\\uD808[\\uDC00-\\uDF99]|\\uD809[\\uDC00-\\uDC6E\\uDC80-\\uDD43]|[\\uD80C\\uD81C-\\uD820\\uD840-\\uD868\\uD86A-\\uD86C\\uD86F-\\uD872\\uD874-\\uD879][\\uDC00-\\uDFFF]|\\uD80D[\\uDC00-\\uDC2E]|\\uD811[\\uDC00-\\uDE46]|\\uD81A[\\uDC00-\\uDE38\\uDE40-\\uDE5E\\uDE60-\\uDE69\\uDED0-\\uDEED\\uDEF0-\\uDEF4\\uDF00-\\uDF36\\uDF40-\\uDF43\\uDF50-\\uDF59\\uDF63-\\uDF77\\uDF7D-\\uDF8F]|\\uD81B[\\uDF00-\\uDF44\\uDF50-\\uDF7E\\uDF8F-\\uDF9F\\uDFE0\\uDFE1]|\\uD821[\\uDC00-\\uDFEC]|\\uD822[\\uDC00-\\uDEF2]|\\uD82C[\\uDC00-\\uDD1E\\uDD70-\\uDEFB]|\\uD82F[\\uDC00-\\uDC6A\\uDC70-\\uDC7C\\uDC80-\\uDC88\\uDC90-\\uDC99\\uDC9D\\uDC9E]|\\uD834[\\uDD65-\\uDD69\\uDD6D-\\uDD72\\uDD7B-\\uDD82\\uDD85-\\uDD8B\\uDDAA-\\uDDAD\\uDE42-\\uDE44]|\\uD835[\\uDC00-\\uDC54\\uDC56-\\uDC9C\\uDC9E\\uDC9F\\uDCA2\\uDCA5\\uDCA6\\uDCA9-\\uDCAC\\uDCAE-\\uDCB9\\uDCBB\\uDCBD-\\uDCC3\\uDCC5-\\uDD05\\uDD07-\\uDD0A\\uDD0D-\\uDD14\\uDD16-\\uDD1C\\uDD1E-\\uDD39\\uDD3B-\\uDD3E\\uDD40-\\uDD44\\uDD46\\uDD4A-\\uDD50\\uDD52-\\uDEA5\\uDEA8-\\uDEC0\\uDEC2-\\uDEDA\\uDEDC-\\uDEFA\\uDEFC-\\uDF14\\uDF16-\\uDF34\\uDF36-\\uDF4E\\uDF50-\\uDF6E\\uDF70-\\uDF88\\uDF8A-\\uDFA8\\uDFAA-\\uDFC2\\uDFC4-\\uDFCB\\uDFCE-\\uDFFF]|\\uD836[\\uDE00-\\uDE36\\uDE3B-\\uDE6C\\uDE75\\uDE84\\uDE9B-\\uDE9F\\uDEA1-\\uDEAF]|\\uD838[\\uDC00-\\uDC06\\uDC08-\\uDC18\\uDC1B-\\uDC21\\uDC23\\uDC24\\uDC26-\\uDC2A]|\\uD83A[\\uDC00-\\uDCC4\\uDCD0-\\uDCD6\\uDD00-\\uDD4A\\uDD50-\\uDD59]|\\uD83B[\\uDE00-\\uDE03\\uDE05-\\uDE1F\\uDE21\\uDE22\\uDE24\\uDE27\\uDE29-\\uDE32\\uDE34-\\uDE37\\uDE39\\uDE3B\\uDE42\\uDE47\\uDE49\\uDE4B\\uDE4D-\\uDE4F\\uDE51\\uDE52\\uDE54\\uDE57\\uDE59\\uDE5B\\uDE5D\\uDE5F\\uDE61\\uDE62\\uDE64\\uDE67-\\uDE6A\\uDE6C-\\uDE72\\uDE74-\\uDE77\\uDE79-\\uDE7C\\uDE7E\\uDE80-\\uDE89\\uDE8B-\\uDE9B\\uDEA1-\\uDEA3\\uDEA5-\\uDEA9\\uDEAB-\\uDEBB]|\\uD869[\\uDC00-\\uDED6\\uDF00-\\uDFFF]|\\uD86D[\\uDC00-\\uDF34\\uDF40-\\uDFFF]|\\uD86E[\\uDC00-\\uDC1D\\uDC20-\\uDFFF]|\\uD873[\\uDC00-\\uDEA1\\uDEB0-\\uDFFF]|\\uD87A[\\uDC00-\\uDFE0]|\\uD87E[\\uDC00-\\uDE1D]|\\uDB40[\\uDD00-\\uDDEF]/;\n\nvar unicode = {\n\tSpace_Separator: Space_Separator,\n\tID_Start: ID_Start,\n\tID_Continue: ID_Continue\n};\n\nvar util = {\n    isSpaceSeparator (c) {\n        return typeof c === 'string' && unicode.Space_Separator.test(c)\n    },\n\n    isIdStartChar (c) {\n        return typeof c === 'string' && (\n            (c >= 'a' && c <= 'z') ||\n        (c >= 'A' && c <= 'Z') ||\n        (c === '$') || (c === '_') ||\n        unicode.ID_Start.test(c)\n        )\n    },\n\n    isIdContinueChar (c) {\n        return typeof c === 'string' && (\n            (c >= 'a' && c <= 'z') ||\n        (c >= 'A' && c <= 'Z') ||\n        (c >= '0' && c <= '9') ||\n        (c === '$') || (c === '_') ||\n        (c === '\\u200C') || (c === '\\u200D') ||\n        unicode.ID_Continue.test(c)\n        )\n    },\n\n    isDigit (c) {\n        return typeof c === 'string' && /[0-9]/.test(c)\n    },\n\n    isHexDigit (c) {\n        return typeof c === 'string' && /[0-9A-Fa-f]/.test(c)\n    },\n};\n\nlet source;\nlet parseState;\nlet stack;\nlet pos;\nlet line;\nlet column;\nlet token;\nlet key;\nlet root;\n\nvar parse$1 = function parse (text, reviver) {\n    source = String(text);\n    parseState = 'start';\n    stack = [];\n    pos = 0;\n    line = 1;\n    column = 0;\n    token = undefined;\n    key = undefined;\n    root = undefined;\n\n    do {\n        token = lex();\n\n        // This code is unreachable.\n        // if (!parseStates[parseState]) {\n        //     throw invalidParseState()\n        // }\n\n        parseStates[parseState]();\n    } while (token.type !== 'eof')\n\n    if (typeof reviver === 'function') {\n        return internalize({'': root}, '', reviver)\n    }\n\n    return root\n};\n\nfunction internalize (holder, name, reviver) {\n    const value = holder[name];\n    if (value != null && typeof value === 'object') {\n        for (const key in value) {\n            const replacement = internalize(value, key, reviver);\n            if (replacement === undefined) {\n                delete value[key];\n            } else {\n                value[key] = replacement;\n            }\n        }\n    }\n\n    return reviver.call(holder, name, value)\n}\n\nlet lexState;\nlet buffer;\nlet doubleQuote;\nlet sign;\nlet c;\n\nfunction lex () {\n    lexState = 'default';\n    buffer = '';\n    doubleQuote = false;\n    sign = 1;\n\n    for (;;) {\n        c = peek();\n\n        // This code is unreachable.\n        // if (!lexStates[lexState]) {\n        //     throw invalidLexState(lexState)\n        // }\n\n        const token = lexStates[lexState]();\n        if (token) {\n            return token\n        }\n    }\n}\n\nfunction peek () {\n    if (source[pos]) {\n        return String.fromCodePoint(source.codePointAt(pos))\n    }\n}\n\nfunction read () {\n    const c = peek();\n\n    if (c === '\\n') {\n        line++;\n        column = 0;\n    } else if (c) {\n        column += c.length;\n    } else {\n        column++;\n    }\n\n    if (c) {\n        pos += c.length;\n    }\n\n    return c\n}\n\nconst lexStates = {\n    default () {\n        switch (c) {\n        case '\\t':\n        case '\\v':\n        case '\\f':\n        case ' ':\n        case '\\u00A0':\n        case '\\uFEFF':\n        case '\\n':\n        case '\\r':\n        case '\\u2028':\n        case '\\u2029':\n            read();\n            return\n\n        case '/':\n            read();\n            lexState = 'comment';\n            return\n\n        case undefined:\n            read();\n            return newToken('eof')\n        }\n\n        if (util.isSpaceSeparator(c)) {\n            read();\n            return\n        }\n\n        // This code is unreachable.\n        // if (!lexStates[parseState]) {\n        //     throw invalidLexState(parseState)\n        // }\n\n        return lexStates[parseState]()\n    },\n\n    comment () {\n        switch (c) {\n        case '*':\n            read();\n            lexState = 'multiLineComment';\n            return\n\n        case '/':\n            read();\n            lexState = 'singleLineComment';\n            return\n        }\n\n        throw invalidChar(read())\n    },\n\n    multiLineComment () {\n        switch (c) {\n        case '*':\n            read();\n            lexState = 'multiLineCommentAsterisk';\n            return\n\n        case undefined:\n            throw invalidChar(read())\n        }\n\n        read();\n    },\n\n    multiLineCommentAsterisk () {\n        switch (c) {\n        case '*':\n            read();\n            return\n\n        case '/':\n            read();\n            lexState = 'default';\n            return\n\n        case undefined:\n            throw invalidChar(read())\n        }\n\n        read();\n        lexState = 'multiLineComment';\n    },\n\n    singleLineComment () {\n        switch (c) {\n        case '\\n':\n        case '\\r':\n        case '\\u2028':\n        case '\\u2029':\n            read();\n            lexState = 'default';\n            return\n\n        case undefined:\n            read();\n            return newToken('eof')\n        }\n\n        read();\n    },\n\n    value () {\n        switch (c) {\n        case '{':\n        case '[':\n            return newToken('punctuator', read())\n\n        case 'n':\n            read();\n            literal('ull');\n            return newToken('null', null)\n\n        case 't':\n            read();\n            literal('rue');\n            return newToken('boolean', true)\n\n        case 'f':\n            read();\n            literal('alse');\n            return newToken('boolean', false)\n\n        case '-':\n        case '+':\n            if (read() === '-') {\n                sign = -1;\n            }\n\n            lexState = 'sign';\n            return\n\n        case '.':\n            buffer = read();\n            lexState = 'decimalPointLeading';\n            return\n\n        case '0':\n            buffer = read();\n            lexState = 'zero';\n            return\n\n        case '1':\n        case '2':\n        case '3':\n        case '4':\n        case '5':\n        case '6':\n        case '7':\n        case '8':\n        case '9':\n            buffer = read();\n            lexState = 'decimalInteger';\n            return\n\n        case 'I':\n            read();\n            literal('nfinity');\n            return newToken('numeric', Infinity)\n\n        case 'N':\n            read();\n            literal('aN');\n            return newToken('numeric', NaN)\n\n        case '\"':\n        case \"'\":\n            doubleQuote = (read() === '\"');\n            buffer = '';\n            lexState = 'string';\n            return\n        }\n\n        throw invalidChar(read())\n    },\n\n    identifierNameStartEscape () {\n        if (c !== 'u') {\n            throw invalidChar(read())\n        }\n\n        read();\n        const u = unicodeEscape();\n        switch (u) {\n        case '$':\n        case '_':\n            break\n\n        default:\n            if (!util.isIdStartChar(u)) {\n                throw invalidIdentifier()\n            }\n\n            break\n        }\n\n        buffer += u;\n        lexState = 'identifierName';\n    },\n\n    identifierName () {\n        switch (c) {\n        case '$':\n        case '_':\n        case '\\u200C':\n        case '\\u200D':\n            buffer += read();\n            return\n\n        case '\\\\':\n            read();\n            lexState = 'identifierNameEscape';\n            return\n        }\n\n        if (util.isIdContinueChar(c)) {\n            buffer += read();\n            return\n        }\n\n        return newToken('identifier', buffer)\n    },\n\n    identifierNameEscape () {\n        if (c !== 'u') {\n            throw invalidChar(read())\n        }\n\n        read();\n        const u = unicodeEscape();\n        switch (u) {\n        case '$':\n        case '_':\n        case '\\u200C':\n        case '\\u200D':\n            break\n\n        default:\n            if (!util.isIdContinueChar(u)) {\n                throw invalidIdentifier()\n            }\n\n            break\n        }\n\n        buffer += u;\n        lexState = 'identifierName';\n    },\n\n    sign () {\n        switch (c) {\n        case '.':\n            buffer = read();\n            lexState = 'decimalPointLeading';\n            return\n\n        case '0':\n            buffer = read();\n            lexState = 'zero';\n            return\n\n        case '1':\n        case '2':\n        case '3':\n        case '4':\n        case '5':\n        case '6':\n        case '7':\n        case '8':\n        case '9':\n            buffer = read();\n            lexState = 'decimalInteger';\n            return\n\n        case 'I':\n            read();\n            literal('nfinity');\n            return newToken('numeric', sign * Infinity)\n\n        case 'N':\n            read();\n            literal('aN');\n            return newToken('numeric', NaN)\n        }\n\n        throw invalidChar(read())\n    },\n\n    zero () {\n        switch (c) {\n        case '.':\n            buffer += read();\n            lexState = 'decimalPoint';\n            return\n\n        case 'e':\n        case 'E':\n            buffer += read();\n            lexState = 'decimalExponent';\n            return\n\n        case 'x':\n        case 'X':\n            buffer += read();\n            lexState = 'hexadecimal';\n            return\n        }\n\n        return newToken('numeric', sign * 0)\n    },\n\n    decimalInteger () {\n        switch (c) {\n        case '.':\n            buffer += read();\n            lexState = 'decimalPoint';\n            return\n\n        case 'e':\n        case 'E':\n            buffer += read();\n            lexState = 'decimalExponent';\n            return\n        }\n\n        if (util.isDigit(c)) {\n            buffer += read();\n            return\n        }\n\n        return newToken('numeric', sign * Number(buffer))\n    },\n\n    decimalPointLeading () {\n        if (util.isDigit(c)) {\n            buffer += read();\n            lexState = 'decimalFraction';\n            return\n        }\n\n        throw invalidChar(read())\n    },\n\n    decimalPoint () {\n        switch (c) {\n        case 'e':\n        case 'E':\n            buffer += read();\n            lexState = 'decimalExponent';\n            return\n        }\n\n        if (util.isDigit(c)) {\n            buffer += read();\n            lexState = 'decimalFraction';\n            return\n        }\n\n        return newToken('numeric', sign * Number(buffer))\n    },\n\n    decimalFraction () {\n        switch (c) {\n        case 'e':\n        case 'E':\n            buffer += read();\n            lexState = 'decimalExponent';\n            return\n        }\n\n        if (util.isDigit(c)) {\n            buffer += read();\n            return\n        }\n\n        return newToken('numeric', sign * Number(buffer))\n    },\n\n    decimalExponent () {\n        switch (c) {\n        case '+':\n        case '-':\n            buffer += read();\n            lexState = 'decimalExponentSign';\n            return\n        }\n\n        if (util.isDigit(c)) {\n            buffer += read();\n            lexState = 'decimalExponentInteger';\n            return\n        }\n\n        throw invalidChar(read())\n    },\n\n    decimalExponentSign () {\n        if (util.isDigit(c)) {\n            buffer += read();\n            lexState = 'decimalExponentInteger';\n            return\n        }\n\n        throw invalidChar(read())\n    },\n\n    decimalExponentInteger () {\n        if (util.isDigit(c)) {\n            buffer += read();\n            return\n        }\n\n        return newToken('numeric', sign * Number(buffer))\n    },\n\n    hexadecimal () {\n        if (util.isHexDigit(c)) {\n            buffer += read();\n            lexState = 'hexadecimalInteger';\n            return\n        }\n\n        throw invalidChar(read())\n    },\n\n    hexadecimalInteger () {\n        if (util.isHexDigit(c)) {\n            buffer += read();\n            return\n        }\n\n        return newToken('numeric', sign * Number(buffer))\n    },\n\n    string () {\n        switch (c) {\n        case '\\\\':\n            read();\n            buffer += escape();\n            return\n\n        case '\"':\n            if (doubleQuote) {\n                read();\n                return newToken('string', buffer)\n            }\n\n            buffer += read();\n            return\n\n        case \"'\":\n            if (!doubleQuote) {\n                read();\n                return newToken('string', buffer)\n            }\n\n            buffer += read();\n            return\n\n        case '\\n':\n        case '\\r':\n            throw invalidChar(read())\n\n        case '\\u2028':\n        case '\\u2029':\n            separatorChar(c);\n            break\n\n        case undefined:\n            throw invalidChar(read())\n        }\n\n        buffer += read();\n    },\n\n    start () {\n        switch (c) {\n        case '{':\n        case '[':\n            return newToken('punctuator', read())\n\n        // This code is unreachable since the default lexState handles eof.\n        // case undefined:\n        //     return newToken('eof')\n        }\n\n        lexState = 'value';\n    },\n\n    beforePropertyName () {\n        switch (c) {\n        case '$':\n        case '_':\n            buffer = read();\n            lexState = 'identifierName';\n            return\n\n        case '\\\\':\n            read();\n            lexState = 'identifierNameStartEscape';\n            return\n\n        case '}':\n            return newToken('punctuator', read())\n\n        case '\"':\n        case \"'\":\n            doubleQuote = (read() === '\"');\n            lexState = 'string';\n            return\n        }\n\n        if (util.isIdStartChar(c)) {\n            buffer += read();\n            lexState = 'identifierName';\n            return\n        }\n\n        throw invalidChar(read())\n    },\n\n    afterPropertyName () {\n        if (c === ':') {\n            return newToken('punctuator', read())\n        }\n\n        throw invalidChar(read())\n    },\n\n    beforePropertyValue () {\n        lexState = 'value';\n    },\n\n    afterPropertyValue () {\n        switch (c) {\n        case ',':\n        case '}':\n            return newToken('punctuator', read())\n        }\n\n        throw invalidChar(read())\n    },\n\n    beforeArrayValue () {\n        if (c === ']') {\n            return newToken('punctuator', read())\n        }\n\n        lexState = 'value';\n    },\n\n    afterArrayValue () {\n        switch (c) {\n        case ',':\n        case ']':\n            return newToken('punctuator', read())\n        }\n\n        throw invalidChar(read())\n    },\n\n    end () {\n        // This code is unreachable since it's handled by the default lexState.\n        // if (c === undefined) {\n        //     read()\n        //     return newToken('eof')\n        // }\n\n        throw invalidChar(read())\n    },\n};\n\nfunction newToken (type, value) {\n    return {\n        type,\n        value,\n        line,\n        column,\n    }\n}\n\nfunction literal (s) {\n    for (const c of s) {\n        const p = peek();\n\n        if (p !== c) {\n            throw invalidChar(read())\n        }\n\n        read();\n    }\n}\n\nfunction escape () {\n    const c = peek();\n    switch (c) {\n    case 'b':\n        read();\n        return '\\b'\n\n    case 'f':\n        read();\n        return '\\f'\n\n    case 'n':\n        read();\n        return '\\n'\n\n    case 'r':\n        read();\n        return '\\r'\n\n    case 't':\n        read();\n        return '\\t'\n\n    case 'v':\n        read();\n        return '\\v'\n\n    case '0':\n        read();\n        if (util.isDigit(peek())) {\n            throw invalidChar(read())\n        }\n\n        return '\\0'\n\n    case 'x':\n        read();\n        return hexEscape()\n\n    case 'u':\n        read();\n        return unicodeEscape()\n\n    case '\\n':\n    case '\\u2028':\n    case '\\u2029':\n        read();\n        return ''\n\n    case '\\r':\n        read();\n        if (peek() === '\\n') {\n            read();\n        }\n\n        return ''\n\n    case '1':\n    case '2':\n    case '3':\n    case '4':\n    case '5':\n    case '6':\n    case '7':\n    case '8':\n    case '9':\n        throw invalidChar(read())\n\n    case undefined:\n        throw invalidChar(read())\n    }\n\n    return read()\n}\n\nfunction hexEscape () {\n    let buffer = '';\n    let c = peek();\n\n    if (!util.isHexDigit(c)) {\n        throw invalidChar(read())\n    }\n\n    buffer += read();\n\n    c = peek();\n    if (!util.isHexDigit(c)) {\n        throw invalidChar(read())\n    }\n\n    buffer += read();\n\n    return String.fromCodePoint(parseInt(buffer, 16))\n}\n\nfunction unicodeEscape () {\n    let buffer = '';\n    let count = 4;\n\n    while (count-- > 0) {\n        const c = peek();\n        if (!util.isHexDigit(c)) {\n            throw invalidChar(read())\n        }\n\n        buffer += read();\n    }\n\n    return String.fromCodePoint(parseInt(buffer, 16))\n}\n\nconst parseStates = {\n    start () {\n        if (token.type === 'eof') {\n            throw invalidEOF()\n        }\n\n        push();\n    },\n\n    beforePropertyName () {\n        switch (token.type) {\n        case 'identifier':\n        case 'string':\n            key = token.value;\n            parseState = 'afterPropertyName';\n            return\n\n        case 'punctuator':\n            // This code is unreachable since it's handled by the lexState.\n            // if (token.value !== '}') {\n            //     throw invalidToken()\n            // }\n\n            pop();\n            return\n\n        case 'eof':\n            throw invalidEOF()\n        }\n\n        // This code is unreachable since it's handled by the lexState.\n        // throw invalidToken()\n    },\n\n    afterPropertyName () {\n        // This code is unreachable since it's handled by the lexState.\n        // if (token.type !== 'punctuator' || token.value !== ':') {\n        //     throw invalidToken()\n        // }\n\n        if (token.type === 'eof') {\n            throw invalidEOF()\n        }\n\n        parseState = 'beforePropertyValue';\n    },\n\n    beforePropertyValue () {\n        if (token.type === 'eof') {\n            throw invalidEOF()\n        }\n\n        push();\n    },\n\n    beforeArrayValue () {\n        if (token.type === 'eof') {\n            throw invalidEOF()\n        }\n\n        if (token.type === 'punctuator' && token.value === ']') {\n            pop();\n            return\n        }\n\n        push();\n    },\n\n    afterPropertyValue () {\n        // This code is unreachable since it's handled by the lexState.\n        // if (token.type !== 'punctuator') {\n        //     throw invalidToken()\n        // }\n\n        if (token.type === 'eof') {\n            throw invalidEOF()\n        }\n\n        switch (token.value) {\n        case ',':\n            parseState = 'beforePropertyName';\n            return\n\n        case '}':\n            pop();\n        }\n\n        // This code is unreachable since it's handled by the lexState.\n        // throw invalidToken()\n    },\n\n    afterArrayValue () {\n        // This code is unreachable since it's handled by the lexState.\n        // if (token.type !== 'punctuator') {\n        //     throw invalidToken()\n        // }\n\n        if (token.type === 'eof') {\n            throw invalidEOF()\n        }\n\n        switch (token.value) {\n        case ',':\n            parseState = 'beforeArrayValue';\n            return\n\n        case ']':\n            pop();\n        }\n\n        // This code is unreachable since it's handled by the lexState.\n        // throw invalidToken()\n    },\n\n    end () {\n        // This code is unreachable since it's handled by the lexState.\n        // if (token.type !== 'eof') {\n        //     throw invalidToken()\n        // }\n    },\n};\n\nfunction push () {\n    let value;\n\n    switch (token.type) {\n    case 'punctuator':\n        switch (token.value) {\n        case '{':\n            value = {};\n            break\n\n        case '[':\n            value = [];\n            break\n        }\n\n        break\n\n    case 'null':\n    case 'boolean':\n    case 'numeric':\n    case 'string':\n        value = token.value;\n        break\n\n    // This code is unreachable.\n    // default:\n    //     throw invalidToken()\n    }\n\n    if (root === undefined) {\n        root = value;\n    } else {\n        const parent = stack[stack.length - 1];\n        if (Array.isArray(parent)) {\n            parent.push(value);\n        } else {\n            parent[key] = value;\n        }\n    }\n\n    if (value !== null && typeof value === 'object') {\n        stack.push(value);\n\n        if (Array.isArray(value)) {\n            parseState = 'beforeArrayValue';\n        } else {\n            parseState = 'beforePropertyName';\n        }\n    } else {\n        const current = stack[stack.length - 1];\n        if (current == null) {\n            parseState = 'end';\n        } else if (Array.isArray(current)) {\n            parseState = 'afterArrayValue';\n        } else {\n            parseState = 'afterPropertyValue';\n        }\n    }\n}\n\nfunction pop () {\n    stack.pop();\n\n    const current = stack[stack.length - 1];\n    if (current == null) {\n        parseState = 'end';\n    } else if (Array.isArray(current)) {\n        parseState = 'afterArrayValue';\n    } else {\n        parseState = 'afterPropertyValue';\n    }\n}\n\n// This code is unreachable.\n// function invalidParseState () {\n//     return new Error(`JSON5: invalid parse state '${parseState}'`)\n// }\n\n// This code is unreachable.\n// function invalidLexState (state) {\n//     return new Error(`JSON5: invalid lex state '${state}'`)\n// }\n\nfunction invalidChar (c) {\n    if (c === undefined) {\n        return syntaxError(`JSON5: invalid end of input at ${line}:${column}`)\n    }\n\n    return syntaxError(`JSON5: invalid character '${formatChar(c)}' at ${line}:${column}`)\n}\n\nfunction invalidEOF () {\n    return syntaxError(`JSON5: invalid end of input at ${line}:${column}`)\n}\n\n// This code is unreachable.\n// function invalidToken () {\n//     if (token.type === 'eof') {\n//         return syntaxError(`JSON5: invalid end of input at ${line}:${column}`)\n//     }\n\n//     const c = String.fromCodePoint(token.value.codePointAt(0))\n//     return syntaxError(`JSON5: invalid character '${formatChar(c)}' at ${line}:${column}`)\n// }\n\nfunction invalidIdentifier () {\n    column -= 5;\n    return syntaxError(`JSON5: invalid identifier character at ${line}:${column}`)\n}\n\nfunction separatorChar (c) {\n    console.warn(`JSON5: '${formatChar(c)}' in strings is not valid ECMAScript; consider escaping`);\n}\n\nfunction formatChar (c) {\n    const replacements = {\n        \"'\": \"\\\\'\",\n        '\"': '\\\\\"',\n        '\\\\': '\\\\\\\\',\n        '\\b': '\\\\b',\n        '\\f': '\\\\f',\n        '\\n': '\\\\n',\n        '\\r': '\\\\r',\n        '\\t': '\\\\t',\n        '\\v': '\\\\v',\n        '\\0': '\\\\0',\n        '\\u2028': '\\\\u2028',\n        '\\u2029': '\\\\u2029',\n    };\n\n    if (replacements[c]) {\n        return replacements[c]\n    }\n\n    if (c < ' ') {\n        const hexString = c.charCodeAt(0).toString(16);\n        return '\\\\x' + ('00' + hexString).substring(hexString.length)\n    }\n\n    return c\n}\n\nfunction syntaxError (message) {\n    const err = new SyntaxError(message);\n    err.lineNumber = line;\n    err.columnNumber = column;\n    return err\n}\n\nvar stringify = function stringify (value, replacer, space) {\n    const stack = [];\n    let indent = '';\n    let propertyList;\n    let replacerFunc;\n    let gap = '';\n    let quote;\n\n    if (\n        replacer != null &&\n        typeof replacer === 'object' &&\n        !Array.isArray(replacer)\n    ) {\n        space = replacer.space;\n        quote = replacer.quote;\n        replacer = replacer.replacer;\n    }\n\n    if (typeof replacer === 'function') {\n        replacerFunc = replacer;\n    } else if (Array.isArray(replacer)) {\n        propertyList = [];\n        for (const v of replacer) {\n            let item;\n\n            if (typeof v === 'string') {\n                item = v;\n            } else if (\n                typeof v === 'number' ||\n                v instanceof String ||\n                v instanceof Number\n            ) {\n                item = String(v);\n            }\n\n            if (item !== undefined && propertyList.indexOf(item) < 0) {\n                propertyList.push(item);\n            }\n        }\n    }\n\n    if (space instanceof Number) {\n        space = Number(space);\n    } else if (space instanceof String) {\n        space = String(space);\n    }\n\n    if (typeof space === 'number') {\n        if (space > 0) {\n            space = Math.min(10, Math.floor(space));\n            gap = '          '.substr(0, space);\n        }\n    } else if (typeof space === 'string') {\n        gap = space.substr(0, 10);\n    }\n\n    return serializeProperty('', {'': value})\n\n    function serializeProperty (key, holder) {\n        let value = holder[key];\n        if (value != null) {\n            if (typeof value.toJSON5 === 'function') {\n                value = value.toJSON5(key);\n            } else if (typeof value.toJSON === 'function') {\n                value = value.toJSON(key);\n            }\n        }\n\n        if (replacerFunc) {\n            value = replacerFunc.call(holder, key, value);\n        }\n\n        if (value instanceof Number) {\n            value = Number(value);\n        } else if (value instanceof String) {\n            value = String(value);\n        } else if (value instanceof Boolean) {\n            value = value.valueOf();\n        }\n\n        switch (value) {\n        case null: return 'null'\n        case true: return 'true'\n        case false: return 'false'\n        }\n\n        if (typeof value === 'string') {\n            return quoteString(value)\n        }\n\n        if (typeof value === 'number') {\n            return String(value)\n        }\n\n        if (typeof value === 'object') {\n            return Array.isArray(value) ? serializeArray(value) : serializeObject(value)\n        }\n\n        return undefined\n    }\n\n    function quoteString (value) {\n        const quotes = {\n            \"'\": 0.1,\n            '\"': 0.2,\n        };\n\n        const replacements = {\n            \"'\": \"\\\\'\",\n            '\"': '\\\\\"',\n            '\\\\': '\\\\\\\\',\n            '\\b': '\\\\b',\n            '\\f': '\\\\f',\n            '\\n': '\\\\n',\n            '\\r': '\\\\r',\n            '\\t': '\\\\t',\n            '\\v': '\\\\v',\n            '\\0': '\\\\0',\n            '\\u2028': '\\\\u2028',\n            '\\u2029': '\\\\u2029',\n        };\n\n        let product = '';\n\n        for (let i = 0; i < value.length; i++) {\n            const c = value[i];\n            switch (c) {\n            case \"'\":\n            case '\"':\n                quotes[c]++;\n                product += c;\n                continue\n\n            case '\\0':\n                if (util.isDigit(value[i + 1])) {\n                    product += '\\\\x00';\n                    continue\n                }\n            }\n\n            if (replacements[c]) {\n                product += replacements[c];\n                continue\n            }\n\n            if (c < ' ') {\n                let hexString = c.charCodeAt(0).toString(16);\n                product += '\\\\x' + ('00' + hexString).substring(hexString.length);\n                continue\n            }\n\n            product += c;\n        }\n\n        const quoteChar = quote || Object.keys(quotes).reduce((a, b) => (quotes[a] < quotes[b]) ? a : b);\n\n        product = product.replace(new RegExp(quoteChar, 'g'), replacements[quoteChar]);\n\n        return quoteChar + product + quoteChar\n    }\n\n    function serializeObject (value) {\n        if (stack.indexOf(value) >= 0) {\n            throw TypeError('Converting circular structure to JSON5')\n        }\n\n        stack.push(value);\n\n        let stepback = indent;\n        indent = indent + gap;\n\n        let keys = propertyList || Object.keys(value);\n        let partial = [];\n        for (const key of keys) {\n            const propertyString = serializeProperty(key, value);\n            if (propertyString !== undefined) {\n                let member = serializeKey(key) + ':';\n                if (gap !== '') {\n                    member += ' ';\n                }\n                member += propertyString;\n                partial.push(member);\n            }\n        }\n\n        let final;\n        if (partial.length === 0) {\n            final = '{}';\n        } else {\n            let properties;\n            if (gap === '') {\n                properties = partial.join(',');\n                final = '{' + properties + '}';\n            } else {\n                let separator = ',\\n' + indent;\n                properties = partial.join(separator);\n                final = '{\\n' + indent + properties + ',\\n' + stepback + '}';\n            }\n        }\n\n        stack.pop();\n        indent = stepback;\n        return final\n    }\n\n    function serializeKey (key) {\n        if (key.length === 0) {\n            return quoteString(key)\n        }\n\n        const firstChar = String.fromCodePoint(key.codePointAt(0));\n        if (!util.isIdStartChar(firstChar)) {\n            return quoteString(key)\n        }\n\n        for (let i = firstChar.length; i < key.length; i++) {\n            if (!util.isIdContinueChar(String.fromCodePoint(key.codePointAt(i)))) {\n                return quoteString(key)\n            }\n        }\n\n        return key\n    }\n\n    function serializeArray (value) {\n        if (stack.indexOf(value) >= 0) {\n            throw TypeError('Converting circular structure to JSON5')\n        }\n\n        stack.push(value);\n\n        let stepback = indent;\n        indent = indent + gap;\n\n        let partial = [];\n        for (let i = 0; i < value.length; i++) {\n            const propertyString = serializeProperty(String(i), value);\n            partial.push((propertyString !== undefined) ? propertyString : 'null');\n        }\n\n        let final;\n        if (partial.length === 0) {\n            final = '[]';\n        } else {\n            if (gap === '') {\n                let properties = partial.join(',');\n                final = '[' + properties + ']';\n            } else {\n                let separator = ',\\n' + indent;\n                let properties = partial.join(separator);\n                final = '[\\n' + indent + properties + ',\\n' + stepback + ']';\n            }\n        }\n\n        stack.pop();\n        indent = stepback;\n        return final\n    }\n};\n\nconst JSON5 = {\n    parse: parse$1,\n    stringify,\n};\n\nvar lib = JSON5;\n\nconst ignoreFlagRE = /\\/\\*\\s*@vite-ignore\\s*\\*\\//;\nfunction getWorkerType(raw, clean, i) {\n    function err(e, pos) {\n        const error = new Error(e);\n        error.pos = pos;\n        throw error;\n    }\n    const commaIndex = clean.indexOf(',', i);\n    if (commaIndex === -1) {\n        return 'classic';\n    }\n    const endIndex = clean.indexOf(')', i);\n    // case: ') ... ,' mean no worker options params\n    if (commaIndex > endIndex) {\n        return 'classic';\n    }\n    // need to find in comment code\n    const workerOptString = raw.substring(commaIndex + 1, endIndex);\n    const hasViteIgnore = ignoreFlagRE.test(workerOptString);\n    if (hasViteIgnore) {\n        return 'ignore';\n    }\n    // need to find in no comment code\n    const cleanWorkerOptString = clean.substring(commaIndex + 1, endIndex);\n    if (!cleanWorkerOptString.trim().length) {\n        return 'classic';\n    }\n    let workerOpts = { type: 'classic' };\n    try {\n        workerOpts = lib.parse(workerOptString);\n    }\n    catch (e) {\n        // can't parse by JSON5, so the worker options had unexpect char.\n        err('Vite is unable to parse the worker options as the value is not static.' +\n            'To ignore this error, please use /* @vite-ignore */ in the worker options.', commaIndex + 1);\n    }\n    if (['classic', 'module'].includes(workerOpts.type)) {\n        return workerOpts.type;\n    }\n    return 'classic';\n}\nfunction workerImportMetaUrlPlugin(config) {\n    const isBuild = config.command === 'build';\n    return {\n        name: 'vite:worker-import-meta-url',\n        async transform(code, id, options) {\n            const ssr = options?.ssr === true;\n            if (!options?.ssr &&\n                (code.includes('new Worker') || code.includes('new SharedWorker')) &&\n                code.includes('new URL') &&\n                code.includes(`import.meta.url`)) {\n                const query = parseRequest(id);\n                let s;\n                const cleanString = stripLiteral(code);\n                const workerImportMetaUrlRE = /\\bnew\\s+(Worker|SharedWorker)\\s*\\(\\s*(new\\s+URL\\s*\\(\\s*('[^']+'|\"[^\"]+\"|`[^`]+`)\\s*,\\s*import\\.meta\\.url\\s*\\))/g;\n                let match;\n                while ((match = workerImportMetaUrlRE.exec(cleanString))) {\n                    const { 0: allExp, 2: exp, 3: emptyUrl, index } = match;\n                    const urlIndex = allExp.indexOf(exp) + index;\n                    const urlStart = cleanString.indexOf(emptyUrl, index);\n                    const urlEnd = urlStart + emptyUrl.length;\n                    const rawUrl = code.slice(urlStart, urlEnd);\n                    // potential dynamic template string\n                    if (rawUrl[0] === '`' && /\\$\\{/.test(rawUrl)) {\n                        this.error(`\\`new URL(url, import.meta.url)\\` is not supported in dynamic template string.`, urlIndex);\n                    }\n                    s || (s = new MagicString(code));\n                    const workerType = getWorkerType(code, cleanString, index + allExp.length);\n                    const file = normalizePath$3(path$n.resolve(path$n.dirname(id), rawUrl.slice(1, -1)));\n                    let url;\n                    if (isBuild) {\n                        getDepsOptimizer(config, ssr)?.registerWorkersSource(id);\n                        url = await workerFileToUrl(config, file, query);\n                    }\n                    else {\n                        url = await fileToUrl(cleanUrl(file), config, this);\n                        url = injectQuery(url, WORKER_FILE_ID);\n                        url = injectQuery(url, `type=${workerType}`);\n                    }\n                    s.overwrite(urlIndex, urlIndex + exp.length, JSON.stringify(url), {\n                        contentOnly: true\n                    });\n                }\n                if (s) {\n                    return transformStableResult(s, id, config);\n                }\n                return null;\n            }\n        }\n    };\n}\n\n/**\n * Prepares the rendered chunks to contain additional metadata during build.\n */\nfunction metadataPlugin() {\n    return {\n        name: 'vite:build-metadata',\n        async renderChunk(_code, chunk) {\n            chunk.viteMetadata = {\n                importedAssets: new Set(),\n                importedCss: new Set()\n            };\n            return null;\n        }\n    };\n}\n\nclass VariableDynamicImportError extends Error {}\n\n/* eslint-disable-next-line no-template-curly-in-string */\nconst example = 'For example: import(`./foo/${bar}.js`).';\n\nfunction sanitizeString(str) {\n  if (str.includes('*')) {\n    throw new VariableDynamicImportError('A dynamic import cannot contain * characters.');\n  }\n  return str;\n}\n\nfunction templateLiteralToGlob(node) {\n  let glob = '';\n\n  for (let i = 0; i < node.quasis.length; i += 1) {\n    glob += sanitizeString(node.quasis[i].value.raw);\n    if (node.expressions[i]) {\n      glob += expressionToGlob(node.expressions[i]);\n    }\n  }\n\n  return glob;\n}\n\nfunction callExpressionToGlob(node) {\n  const { callee } = node;\n  if (\n    callee.type === 'MemberExpression' &&\n    callee.property.type === 'Identifier' &&\n    callee.property.name === 'concat'\n  ) {\n    return `${expressionToGlob(callee.object)}${node.arguments.map(expressionToGlob).join('')}`;\n  }\n  return '*';\n}\n\nfunction binaryExpressionToGlob(node) {\n  if (node.operator !== '+') {\n    throw new VariableDynamicImportError(`${node.operator} operator is not supported.`);\n  }\n\n  return `${expressionToGlob(node.left)}${expressionToGlob(node.right)}`;\n}\n\nfunction expressionToGlob(node) {\n  switch (node.type) {\n    case 'TemplateLiteral':\n      return templateLiteralToGlob(node);\n    case 'CallExpression':\n      return callExpressionToGlob(node);\n    case 'BinaryExpression':\n      return binaryExpressionToGlob(node);\n    case 'Literal': {\n      return sanitizeString(node.value);\n    }\n    default:\n      return '*';\n  }\n}\n\nconst defaultProtocol = 'file:';\nconst ignoredProtocols = ['data:', 'http:', 'https:'];\n\nfunction shouldIgnore(glob) {\n  const containsAsterisk = glob.includes('*');\n\n  const globURL = new URL(glob, defaultProtocol);\n\n  const containsIgnoredProtocol = ignoredProtocols.some(\n    (ignoredProtocol) => ignoredProtocol === globURL.protocol\n  );\n\n  return !containsAsterisk || containsIgnoredProtocol;\n}\n\nfunction dynamicImportToGlob(node, sourceString) {\n  let glob = expressionToGlob(node);\n\n  if (shouldIgnore(glob)) {\n    return null;\n  }\n\n  glob = glob.replace(/\\*\\*/g, '*');\n\n  if (glob.startsWith('*')) {\n    throw new VariableDynamicImportError(\n      `invalid import \"${sourceString}\". It cannot be statically analyzed. Variable dynamic imports must start with ./ and be limited to a specific directory. ${example}`\n    );\n  }\n\n  if (glob.startsWith('/')) {\n    throw new VariableDynamicImportError(\n      `invalid import \"${sourceString}\". Variable absolute imports are not supported, imports must start with ./ in the static part of the import. ${example}`\n    );\n  }\n\n  if (!glob.startsWith('./') && !glob.startsWith('../')) {\n    throw new VariableDynamicImportError(\n      `invalid import \"${sourceString}\". Variable bare imports are not supported, imports must start with ./ in the static part of the import. ${example}`\n    );\n  }\n\n  // Disallow ./*.ext\n  const ownDirectoryStarExtension = /^\\.\\/\\*\\.[\\w]+$/;\n  if (ownDirectoryStarExtension.test(glob)) {\n    throw new VariableDynamicImportError(\n      `${\n        `invalid import \"${sourceString}\". Variable imports cannot import their own directory, ` +\n        'place imports in a separate directory or make the import filename more specific. '\n      }${example}`\n    );\n  }\n\n  if (require$$0$4.extname(glob) === '') {\n    throw new VariableDynamicImportError(\n      `invalid import \"${sourceString}\". A file extension must be included in the static part of the import. ${example}`\n    );\n  }\n\n  return glob;\n}\n\nconst dynamicImportHelperId = '/@vite/dynamic-import-helper';\nconst dynamicImportHelper = (glob, path) => {\n    const v = glob[path];\n    if (v) {\n        return typeof v === 'function' ? v() : Promise.resolve(v);\n    }\n    return new Promise((_, reject) => {\n        (typeof queueMicrotask === 'function' ? queueMicrotask : setTimeout)(reject.bind(null, new Error('Unknown variable dynamic import: ' + path)));\n    });\n};\nfunction parseDynamicImportPattern(strings) {\n    const filename = strings.slice(1, -1);\n    const rawQuery = parseRequest(filename);\n    let globParams = null;\n    const ast = parse$c(strings, {\n        ecmaVersion: 'latest',\n        sourceType: 'module'\n    }).body[0].expression;\n    const userPatternQuery = dynamicImportToGlob(ast, filename);\n    if (!userPatternQuery) {\n        return null;\n    }\n    const [userPattern] = userPatternQuery.split(requestQuerySplitRE, 2);\n    const [rawPattern] = filename.split(requestQuerySplitRE, 2);\n    if (rawQuery?.raw !== undefined) {\n        globParams = { as: 'raw' };\n    }\n    return {\n        globParams,\n        userPattern,\n        rawPattern\n    };\n}\nasync function transformDynamicImport(importSource, importer, resolve, root) {\n    if (importSource[1] !== '.' && importSource[1] !== '/') {\n        const resolvedFileName = await resolve(importSource.slice(1, -1), importer);\n        if (!resolvedFileName) {\n            return null;\n        }\n        const relativeFileName = posix$2.relative(posix$2.dirname(normalizePath$3(importer)), normalizePath$3(resolvedFileName));\n        importSource = normalizePath$3('`' + (relativeFileName[0] === '.' ? '' : './') + relativeFileName + '`');\n    }\n    const dynamicImportPattern = parseDynamicImportPattern(importSource);\n    if (!dynamicImportPattern) {\n        return null;\n    }\n    const { globParams, rawPattern, userPattern } = dynamicImportPattern;\n    const params = globParams\n        ? `, ${JSON.stringify({ ...globParams, import: '*' })}`\n        : '';\n    let newRawPattern = posix$2.relative(posix$2.dirname(importer), await toAbsoluteGlob(rawPattern, root, importer, resolve));\n    if (!/^\\.{1,2}\\//.test(newRawPattern)) {\n        newRawPattern = `./${newRawPattern}`;\n    }\n    const exp = `(import.meta.glob(${JSON.stringify(userPattern)}${params}))`;\n    return {\n        rawPattern: newRawPattern,\n        pattern: userPattern,\n        glob: exp\n    };\n}\nfunction dynamicImportVarsPlugin(config) {\n    const resolve = config.createResolver({\n        preferRelative: true,\n        tryIndex: false,\n        extensions: []\n    });\n    const { include, exclude, warnOnError } = config.build.dynamicImportVarsOptions;\n    const filter = createFilter(include, exclude);\n    return {\n        name: 'vite:dynamic-import-vars',\n        resolveId(id) {\n            if (id === dynamicImportHelperId) {\n                return id;\n            }\n        },\n        load(id) {\n            if (id === dynamicImportHelperId) {\n                return 'export default ' + dynamicImportHelper.toString();\n            }\n        },\n        async transform(source, importer) {\n            if (!filter(importer)) {\n                return;\n            }\n            await init;\n            let imports = [];\n            try {\n                imports = parse$b(source)[0];\n            }\n            catch (e) {\n                // ignore as it might not be a JS file, the subsequent plugins will catch the error\n                return null;\n            }\n            if (!imports.length) {\n                return null;\n            }\n            let s;\n            let needDynamicImportHelper = false;\n            for (let index = 0; index < imports.length; index++) {\n                const { s: start, e: end, ss: expStart, se: expEnd, d: dynamicIndex } = imports[index];\n                if (dynamicIndex === -1 || source[start] !== '`') {\n                    continue;\n                }\n                s || (s = new MagicString(source));\n                let result;\n                try {\n                    // When import string is using backticks, es-module-lexer `end` captures\n                    // until the closing parenthesis, instead of the closing backtick.\n                    // There may be inline comments between the backtick and the closing\n                    // parenthesis, so we manually remove them for now.\n                    // See https://github.com/guybedford/es-module-lexer/issues/118\n                    const importSource = removeComments(source.slice(start, end)).trim();\n                    result = await transformDynamicImport(importSource, importer, resolve, config.root);\n                }\n                catch (error) {\n                    if (warnOnError) {\n                        this.warn(error);\n                    }\n                    else {\n                        this.error(error);\n                    }\n                }\n                if (!result) {\n                    continue;\n                }\n                const { rawPattern, glob } = result;\n                needDynamicImportHelper = true;\n                s.overwrite(expStart, expEnd, `__variableDynamicImportRuntimeHelper(${glob}, \\`${rawPattern}\\`)`);\n            }\n            if (s) {\n                if (needDynamicImportHelper) {\n                    s.prepend(`import __variableDynamicImportRuntimeHelper from \"${dynamicImportHelperId}\";`);\n                }\n                return transformStableResult(s, importer, config);\n            }\n        }\n    };\n}\n\nasync function resolvePlugins(config, prePlugins, normalPlugins, postPlugins) {\n    const isBuild = config.command === 'build';\n    const isWatch = isBuild && !!config.build.watch;\n    const buildPlugins = isBuild\n        ? (await Promise.resolve().then(function () { return build$1; })).resolveBuildPlugins(config)\n        : { pre: [], post: [] };\n    return [\n        isWatch ? ensureWatchPlugin() : null,\n        isBuild ? metadataPlugin() : null,\n        preAliasPlugin(config),\n        alias$1({ entries: config.resolve.alias }),\n        ...prePlugins,\n        config.build.polyfillModulePreload\n            ? modulePreloadPolyfillPlugin(config)\n            : null,\n        ...(isDepsOptimizerEnabled(config, false) ||\n            isDepsOptimizerEnabled(config, true)\n            ? [\n                isBuild\n                    ? optimizedDepsBuildPlugin(config)\n                    : optimizedDepsPlugin(config)\n            ]\n            : []),\n        resolvePlugin({\n            ...config.resolve,\n            root: config.root,\n            isProduction: config.isProduction,\n            isBuild,\n            packageCache: config.packageCache,\n            ssrConfig: config.ssr,\n            asSrc: true,\n            getDepsOptimizer: (ssr) => getDepsOptimizer(config, ssr),\n            shouldExternalize: isBuild && config.build.ssr && config.ssr?.format !== 'cjs'\n                ? (id) => shouldExternalizeForSSR(id, config)\n                : undefined\n        }),\n        htmlInlineProxyPlugin(config),\n        cssPlugin(config),\n        config.esbuild !== false ? esbuildPlugin(config.esbuild) : null,\n        jsonPlugin({\n            namedExports: true,\n            ...config.json\n        }, isBuild),\n        wasmHelperPlugin(config),\n        webWorkerPlugin(config),\n        assetPlugin(config),\n        ...normalPlugins,\n        wasmFallbackPlugin(),\n        definePlugin(config),\n        cssPostPlugin(config),\n        isBuild && config.build.ssr ? ssrRequireHookPlugin(config) : null,\n        isBuild && buildHtmlPlugin(config),\n        workerImportMetaUrlPlugin(config),\n        ...buildPlugins.pre,\n        dynamicImportVarsPlugin(config),\n        importGlobPlugin(config),\n        ...postPlugins,\n        ...buildPlugins.post,\n        // internal server-only plugins are always applied after everything else\n        ...(isBuild\n            ? []\n            : [clientInjectionsPlugin(config), importAnalysisPlugin(config)])\n    ].filter(Boolean);\n}\n\nvar main$1 = {exports: {}};\n\nconst fs = require$$0__default;\nconst path = require$$0$4;\nconst os = require$$1;\n\nfunction log (message) {\n  console.log(`[dotenv][DEBUG] ${message}`);\n}\n\nconst NEWLINE = '\\n';\nconst RE_INI_KEY_VAL = /^\\s*([\\w.-]+)\\s*=\\s*(\"[^\"]*\"|'[^']*'|.*?)(\\s+#.*)?$/;\nconst RE_NEWLINES = /\\\\n/g;\nconst NEWLINES_MATCH = /\\r\\n|\\n|\\r/;\n\n// Parses src into an Object\nfunction parse (src, options) {\n  const debug = Boolean(options && options.debug);\n  const multiline = Boolean(options && options.multiline);\n  const obj = {};\n\n  // convert Buffers before splitting into lines and processing\n  const lines = src.toString().split(NEWLINES_MATCH);\n\n  for (let idx = 0; idx < lines.length; idx++) {\n    let line = lines[idx];\n\n    // matching \"KEY' and 'VAL' in 'KEY=VAL'\n    const keyValueArr = line.match(RE_INI_KEY_VAL);\n    // matched?\n    if (keyValueArr != null) {\n      const key = keyValueArr[1];\n      // default undefined or missing values to empty string\n      let val = (keyValueArr[2] || '');\n      let end = val.length - 1;\n      const isDoubleQuoted = val[0] === '\"' && val[end] === '\"';\n      const isSingleQuoted = val[0] === \"'\" && val[end] === \"'\";\n\n      const isMultilineDoubleQuoted = val[0] === '\"' && val[end] !== '\"';\n      const isMultilineSingleQuoted = val[0] === \"'\" && val[end] !== \"'\";\n\n      // if parsing line breaks and the value starts with a quote\n      if (multiline && (isMultilineDoubleQuoted || isMultilineSingleQuoted)) {\n        const quoteChar = isMultilineDoubleQuoted ? '\"' : \"'\";\n\n        val = val.substring(1);\n\n        while (idx++ < lines.length - 1) {\n          line = lines[idx];\n          end = line.length - 1;\n          if (line[end] === quoteChar) {\n            val += NEWLINE + line.substring(0, end);\n            break\n          }\n          val += NEWLINE + line;\n        }\n      // if single or double quoted, remove quotes\n      } else if (isSingleQuoted || isDoubleQuoted) {\n        val = val.substring(1, end);\n\n        // if double quoted, expand newlines\n        if (isDoubleQuoted) {\n          val = val.replace(RE_NEWLINES, NEWLINE);\n        }\n      } else {\n        // remove surrounding whitespace\n        val = val.trim();\n      }\n\n      obj[key] = val;\n    } else if (debug) {\n      const trimmedLine = line.trim();\n\n      // ignore empty and commented lines\n      if (trimmedLine.length && trimmedLine[0] !== '#') {\n        log(`Failed to match key and value when parsing line ${idx + 1}: ${line}`);\n      }\n    }\n  }\n\n  return obj\n}\n\nfunction resolveHome (envPath) {\n  return envPath[0] === '~' ? path.join(os.homedir(), envPath.slice(1)) : envPath\n}\n\n// Populates process.env from .env file\nfunction config (options) {\n  let dotenvPath = path.resolve(process.cwd(), '.env');\n  let encoding = 'utf8';\n  const debug = Boolean(options && options.debug);\n  const override = Boolean(options && options.override);\n  const multiline = Boolean(options && options.multiline);\n\n  if (options) {\n    if (options.path != null) {\n      dotenvPath = resolveHome(options.path);\n    }\n    if (options.encoding != null) {\n      encoding = options.encoding;\n    }\n  }\n\n  try {\n    // specifying an encoding returns a string instead of a buffer\n    const parsed = DotenvModule.parse(fs.readFileSync(dotenvPath, { encoding }), { debug, multiline });\n\n    Object.keys(parsed).forEach(function (key) {\n      if (!Object.prototype.hasOwnProperty.call(process.env, key)) {\n        process.env[key] = parsed[key];\n      } else {\n        if (override === true) {\n          process.env[key] = parsed[key];\n        }\n\n        if (debug) {\n          if (override === true) {\n            log(`\"${key}\" is already defined in \\`process.env\\` and WAS overwritten`);\n          } else {\n            log(`\"${key}\" is already defined in \\`process.env\\` and was NOT overwritten`);\n          }\n        }\n      }\n    });\n\n    return { parsed }\n  } catch (e) {\n    if (debug) {\n      log(`Failed to load ${dotenvPath} ${e.message}`);\n    }\n\n    return { error: e }\n  }\n}\n\nconst DotenvModule = {\n  config,\n  parse\n};\n\nmain$1.exports.config = DotenvModule.config;\nmain$1.exports.parse = DotenvModule.parse;\nmain$1.exports = DotenvModule;\n\nvar dotenvExpand = function (config) {\n  // if ignoring process.env, use a blank object\n  var environment = config.ignoreProcessEnv ? {} : process.env;\n\n  var interpolate = function (envValue) {\n    var matches = envValue.match(/(.?\\${?(?:[a-zA-Z0-9_]+)?}?)/g) || [];\n\n    return matches.reduce(function (newEnv, match) {\n      var parts = /(.?)\\${?([a-zA-Z0-9_]+)?}?/g.exec(match);\n      var prefix = parts[1];\n\n      var value, replacePart;\n\n      if (prefix === '\\\\') {\n        replacePart = parts[0];\n        value = replacePart.replace('\\\\$', '$');\n      } else {\n        var key = parts[2];\n        replacePart = parts[0].substring(prefix.length);\n        // process.env value 'wins' over .env file's value\n        value = environment.hasOwnProperty(key) ? environment[key] : (config.parsed[key] || '');\n\n        // Resolve recursive interpolations\n        value = interpolate(value);\n      }\n\n      return newEnv.replace(replacePart, value)\n    }, envValue)\n  };\n\n  for (var configKey in config.parsed) {\n    var value = environment.hasOwnProperty(configKey) ? environment[configKey] : config.parsed[configKey];\n\n    config.parsed[configKey] = interpolate(value);\n  }\n\n  for (var processKey in config.parsed) {\n    environment[processKey] = config.parsed[processKey];\n  }\n\n  return config\n};\n\nvar main = dotenvExpand;\n\nfunction loadEnv(mode, envDir, prefixes = 'VITE_') {\n    if (mode === 'local') {\n        throw new Error(`\"local\" cannot be used as a mode name because it conflicts with ` +\n            `the .local postfix for .env files.`);\n    }\n    prefixes = arraify(prefixes);\n    const env = {};\n    const envFiles = [\n        /** mode local file */ `.env.${mode}.local`,\n        /** mode file */ `.env.${mode}`,\n        /** local file */ `.env.local`,\n        /** default file */ `.env`\n    ];\n    // check if there are actual env variables starting with VITE_*\n    // these are typically provided inline and should be prioritized\n    for (const key in process.env) {\n        if (prefixes.some((prefix) => key.startsWith(prefix)) &&\n            env[key] === undefined) {\n            env[key] = process.env[key];\n        }\n    }\n    for (const file of envFiles) {\n        const path = lookupFile(envDir, [file], { pathOnly: true, rootDir: envDir });\n        if (path) {\n            const parsed = main$1.exports.parse(fs$l.readFileSync(path), {\n                debug: process.env.DEBUG?.includes('vite:dotenv') || undefined\n            });\n            // let environment variables use each other\n            main({\n                parsed,\n                // prevent process.env mutation\n                ignoreProcessEnv: true\n            });\n            // only keys that start with prefix are exposed to client\n            for (const [key, value] of Object.entries(parsed)) {\n                if (prefixes.some((prefix) => key.startsWith(prefix)) &&\n                    env[key] === undefined) {\n                    env[key] = value;\n                }\n                else if (key === 'NODE_ENV' &&\n                    process.env.VITE_USER_NODE_ENV === undefined) {\n                    // NODE_ENV override in .env file\n                    process.env.VITE_USER_NODE_ENV = value;\n                }\n            }\n        }\n    }\n    return env;\n}\nfunction resolveEnvPrefix({ envPrefix = 'VITE_' }) {\n    envPrefix = arraify(envPrefix);\n    if (envPrefix.some((prefix) => prefix === '')) {\n        throw new Error(`envPrefix option contains value '', which could lead unexpected exposure of sensitive information.`);\n    }\n    return envPrefix;\n}\n\nfunction resolveSSROptions(ssr, buildSsrCjsExternalHeuristics, preserveSymlinks) {\n    ssr ?? (ssr = {});\n    const optimizeDeps = ssr.optimizeDeps ?? {};\n    let format = 'esm';\n    let target = 'node';\n    if (buildSsrCjsExternalHeuristics) {\n        if (ssr) {\n            format = 'cjs';\n        }\n        else {\n            target = 'node';\n            format = 'cjs';\n        }\n    }\n    return {\n        format,\n        target,\n        ...ssr,\n        optimizeDeps: {\n            disabled: true,\n            ...optimizeDeps,\n            esbuildOptions: {\n                preserveSymlinks,\n                ...optimizeDeps.esbuildOptions\n            }\n        }\n    };\n}\n\nconst debug = createDebugger('vite:config');\n/**\n * Type helper to make it easier to use vite.config.ts\n * accepts a direct {@link UserConfig} object, or a function that returns it.\n * The function receives a {@link ConfigEnv} object that exposes two properties:\n * `command` (either `'build'` or `'serve'`), and `mode`.\n */\nfunction defineConfig(config) {\n    return config;\n}\nasync function resolveConfig(inlineConfig, command, defaultMode = 'development') {\n    let config = inlineConfig;\n    let configFileDependencies = [];\n    let mode = inlineConfig.mode || defaultMode;\n    // some dependencies e.g. @vue/compiler-* relies on NODE_ENV for getting\n    // production-specific behavior, so set it here even though we haven't\n    // resolve the final mode yet\n    if (mode === 'production') {\n        process.env.NODE_ENV = 'production';\n    }\n    // production env would not work in serve, fallback to development\n    if (command === 'serve' && process.env.NODE_ENV === 'production') {\n        process.env.NODE_ENV = 'development';\n    }\n    const configEnv = {\n        mode,\n        command,\n        ssrBuild: !!config.build?.ssr\n    };\n    let { configFile } = config;\n    if (configFile !== false) {\n        const loadResult = await loadConfigFromFile(configEnv, configFile, config.root, config.logLevel);\n        if (loadResult) {\n            config = mergeConfig(loadResult.config, config);\n            configFile = loadResult.path;\n            configFileDependencies = loadResult.dependencies;\n        }\n    }\n    // Define logger\n    const logger = createLogger(config.logLevel, {\n        allowClearScreen: config.clearScreen,\n        customLogger: config.customLogger\n    });\n    // user config may provide an alternative mode. But --mode has a higher priority\n    mode = inlineConfig.mode || config.mode || mode;\n    configEnv.mode = mode;\n    // Some plugins that aren't intended to work in the bundling of workers (doing post-processing at build time for example).\n    // And Plugins may also have cached that could be corrupted by being used in these extra rollup calls.\n    // So we need to separate the worker plugin from the plugin that vite needs to run.\n    const rawWorkerUserPlugins = (await asyncFlatten(config.worker?.plugins || [])).filter((p) => {\n        if (!p) {\n            return false;\n        }\n        else if (!p.apply) {\n            return true;\n        }\n        else if (typeof p.apply === 'function') {\n            return p.apply({ ...config, mode }, configEnv);\n        }\n        else {\n            return p.apply === command;\n        }\n    });\n    // resolve plugins\n    const rawUserPlugins = (await asyncFlatten(config.plugins || [])).filter((p) => {\n        if (!p) {\n            return false;\n        }\n        else if (!p.apply) {\n            return true;\n        }\n        else if (typeof p.apply === 'function') {\n            return p.apply({ ...config, mode }, configEnv);\n        }\n        else {\n            return p.apply === command;\n        }\n    });\n    const [prePlugins, normalPlugins, postPlugins] = sortUserPlugins(rawUserPlugins);\n    // run config hooks\n    const userPlugins = [...prePlugins, ...normalPlugins, ...postPlugins];\n    for (const p of userPlugins) {\n        if (p.config) {\n            const res = await p.config(config, configEnv);\n            if (res) {\n                config = mergeConfig(config, res);\n            }\n        }\n    }\n    if (process.env.VITE_TEST_WITHOUT_PLUGIN_COMMONJS) {\n        config = mergeConfig(config, {\n            optimizeDeps: { disabled: false },\n            ssr: { optimizeDeps: { disabled: false } }\n        });\n        config.build ?? (config.build = {});\n        config.build.commonjsOptions = { include: [] };\n    }\n    // resolve root\n    const resolvedRoot = normalizePath$3(config.root ? path$n.resolve(config.root) : process.cwd());\n    const clientAlias = [\n        { find: /^[\\/]?@vite\\/env/, replacement: () => ENV_ENTRY },\n        { find: /^[\\/]?@vite\\/client/, replacement: () => CLIENT_ENTRY }\n    ];\n    // resolve alias with internal client alias\n    const resolvedAlias = normalizeAlias(mergeAlias(\n    // @ts-ignore because @rollup/plugin-alias' type doesn't allow function\n    // replacement, but its implementation does work with function values.\n    clientAlias, config.resolve?.alias || []));\n    const resolveOptions = {\n        ...config.resolve,\n        alias: resolvedAlias\n    };\n    // load .env files\n    const envDir = config.envDir\n        ? normalizePath$3(path$n.resolve(resolvedRoot, config.envDir))\n        : resolvedRoot;\n    const userEnv = inlineConfig.envFile !== false &&\n        loadEnv(mode, envDir, resolveEnvPrefix(config));\n    // Note it is possible for user to have a custom mode, e.g. `staging` where\n    // production-like behavior is expected. This is indicated by NODE_ENV=production\n    // loaded from `.staging.env` and set by us as VITE_USER_NODE_ENV\n    const isProduction = (process.env.NODE_ENV || process.env.VITE_USER_NODE_ENV || mode) ===\n        'production';\n    if (isProduction) {\n        // in case default mode was not production and is overwritten\n        process.env.NODE_ENV = 'production';\n    }\n    // resolve public base url\n    const isBuild = command === 'build';\n    const relativeBaseShortcut = config.base === '' || config.base === './';\n    // During dev, we ignore relative base and fallback to '/'\n    // For the SSR build, relative base isn't possible by means\n    // of import.meta.url.\n    const resolvedBase = relativeBaseShortcut\n        ? !isBuild || config.build?.ssr\n            ? '/'\n            : './'\n        : resolveBaseUrl(config.base, isBuild, logger) ?? '/';\n    const resolvedBuildOptions = resolveBuildOptions(config.build);\n    // resolve cache directory\n    const pkgPath = lookupFile(resolvedRoot, [`package.json`], { pathOnly: true });\n    const cacheDir = config.cacheDir\n        ? path$n.resolve(resolvedRoot, config.cacheDir)\n        : pkgPath\n            ? path$n.join(path$n.dirname(pkgPath), `node_modules/.vite`)\n            : path$n.join(resolvedRoot, `.vite`);\n    const assetsFilter = config.assetsInclude\n        ? createFilter(config.assetsInclude)\n        : () => false;\n    // create an internal resolver to be used in special scenarios, e.g.\n    // optimizer & handling css @imports\n    const createResolver = (options) => {\n        let aliasContainer;\n        let resolverContainer;\n        return async (id, importer, aliasOnly, ssr) => {\n            let container;\n            if (aliasOnly) {\n                container =\n                    aliasContainer ||\n                        (aliasContainer = await createPluginContainer({\n                            ...resolved,\n                            plugins: [alias$1({ entries: resolved.resolve.alias })]\n                        }));\n            }\n            else {\n                container =\n                    resolverContainer ||\n                        (resolverContainer = await createPluginContainer({\n                            ...resolved,\n                            plugins: [\n                                alias$1({ entries: resolved.resolve.alias }),\n                                resolvePlugin({\n                                    ...resolved.resolve,\n                                    root: resolvedRoot,\n                                    isProduction,\n                                    isBuild: command === 'build',\n                                    ssrConfig: resolved.ssr,\n                                    asSrc: true,\n                                    preferRelative: false,\n                                    tryIndex: true,\n                                    ...options\n                                })\n                            ]\n                        }));\n            }\n            return (await container.resolveId(id, importer, { ssr, scan: options?.scan }))?.id;\n        };\n    };\n    const { publicDir } = config;\n    const resolvedPublicDir = publicDir !== false && publicDir !== ''\n        ? path$n.resolve(resolvedRoot, typeof publicDir === 'string' ? publicDir : 'public')\n        : '';\n    const server = resolveServerOptions(resolvedRoot, config.server, logger);\n    const ssr = resolveSSROptions(config.ssr, config.legacy?.buildSsrCjsExternalHeuristics, config.resolve?.preserveSymlinks);\n    const middlewareMode = config?.server?.middlewareMode;\n    const optimizeDeps = config.optimizeDeps || {};\n    const BASE_URL = resolvedBase;\n    // resolve worker\n    let workerConfig = mergeConfig({}, config);\n    const [workerPrePlugins, workerNormalPlugins, workerPostPlugins] = sortUserPlugins(rawWorkerUserPlugins);\n    // run config hooks\n    const workerUserPlugins = [\n        ...workerPrePlugins,\n        ...workerNormalPlugins,\n        ...workerPostPlugins\n    ];\n    for (const p of workerUserPlugins) {\n        if (p.config) {\n            const res = await p.config(workerConfig, configEnv);\n            if (res) {\n                workerConfig = mergeConfig(workerConfig, res);\n            }\n        }\n    }\n    const resolvedWorkerOptions = {\n        format: workerConfig.worker?.format || 'iife',\n        plugins: [],\n        rollupOptions: workerConfig.worker?.rollupOptions || {}\n    };\n    const resolvedConfig = {\n        configFile: configFile ? normalizePath$3(configFile) : undefined,\n        configFileDependencies: configFileDependencies.map((name) => normalizePath$3(path$n.resolve(name))),\n        inlineConfig,\n        root: resolvedRoot,\n        base: resolvedBase,\n        resolve: resolveOptions,\n        publicDir: resolvedPublicDir,\n        cacheDir,\n        command,\n        mode,\n        ssr,\n        isWorker: false,\n        mainConfig: null,\n        isProduction,\n        plugins: userPlugins,\n        server,\n        build: resolvedBuildOptions,\n        preview: resolvePreviewOptions(config.preview, server),\n        env: {\n            ...userEnv,\n            BASE_URL,\n            MODE: mode,\n            DEV: !isProduction,\n            PROD: isProduction\n        },\n        assetsInclude(file) {\n            return DEFAULT_ASSETS_RE.test(file) || assetsFilter(file);\n        },\n        logger,\n        packageCache: new Map(),\n        createResolver,\n        optimizeDeps: {\n            disabled: 'build',\n            ...optimizeDeps,\n            esbuildOptions: {\n                preserveSymlinks: config.resolve?.preserveSymlinks,\n                ...optimizeDeps.esbuildOptions\n            }\n        },\n        worker: resolvedWorkerOptions,\n        appType: config.appType ?? (middlewareMode === 'ssr' ? 'custom' : 'spa'),\n        experimental: {\n            importGlobRestoreExtension: false,\n            hmrPartialAccept: false,\n            ...config.experimental\n        }\n    };\n    const resolved = {\n        ...config,\n        ...resolvedConfig\n    };\n    resolved.plugins = await resolvePlugins(resolved, prePlugins, normalPlugins, postPlugins);\n    const workerResolved = {\n        ...workerConfig,\n        ...resolvedConfig,\n        isWorker: true,\n        mainConfig: resolved\n    };\n    resolvedConfig.worker.plugins = await resolvePlugins(workerResolved, workerPrePlugins, workerNormalPlugins, workerPostPlugins);\n    // call configResolved hooks\n    await Promise.all(userPlugins\n        .map((p) => p.configResolved?.(resolved))\n        .concat(resolvedConfig.worker.plugins.map((p) => p.configResolved?.(workerResolved))));\n    // validate config\n    if (middlewareMode === 'ssr') {\n        logger.warn(picocolors.exports.yellow(`Setting server.middlewareMode to 'ssr' is deprecated, set server.middlewareMode to \\`true\\`${config.appType === 'custom' ? '' : ` and appType to 'custom'`} instead`));\n    }\n    if (middlewareMode === 'html') {\n        logger.warn(picocolors.exports.yellow(`Setting server.middlewareMode to 'html' is deprecated, set server.middlewareMode to \\`true\\` instead`));\n    }\n    if (config.server?.force &&\n        !isBuild &&\n        config.optimizeDeps?.force === undefined) {\n        resolved.optimizeDeps.force = true;\n        logger.warn(picocolors.exports.yellow(`server.force is deprecated, use optimizeDeps.force instead`));\n    }\n    if (process.env.DEBUG) {\n        debug(`using resolved config: %O`, {\n            ...resolved,\n            plugins: resolved.plugins.map((p) => p.name),\n            worker: {\n                ...resolved.worker,\n                plugins: resolved.worker.plugins.map((p) => p.name)\n            }\n        });\n    }\n    if (config.build?.terserOptions && config.build.minify !== 'terser') {\n        logger.warn(picocolors.exports.yellow(`build.terserOptions is specified but build.minify is not set to use Terser. ` +\n            `Note Vite now defaults to use esbuild for minification. If you still ` +\n            `prefer Terser, set build.minify to \"terser\".`));\n    }\n    // Check if all assetFileNames have the same reference.\n    // If not, display a warn for user.\n    const outputOption = config.build?.rollupOptions?.output ?? [];\n    // Use isArray to narrow its type to array\n    if (Array.isArray(outputOption)) {\n        const assetFileNamesList = outputOption.map((output) => output.assetFileNames);\n        if (assetFileNamesList.length > 1) {\n            const firstAssetFileNames = assetFileNamesList[0];\n            const hasDifferentReference = assetFileNamesList.some((assetFileNames) => assetFileNames !== firstAssetFileNames);\n            if (hasDifferentReference) {\n                resolved.logger.warn(picocolors.exports.yellow(`\nassetFileNames isn't equal for every build.rollupOptions.output. A single pattern across all outputs is supported by Vite.\n`));\n            }\n        }\n    }\n    return resolved;\n}\n/**\n * Resolve base url. Note that some users use Vite to build for non-web targets like\n * electron or expects to deploy\n */\nfunction resolveBaseUrl(base = '/', isBuild, logger) {\n    if (base.startsWith('.')) {\n        logger.warn(picocolors.exports.yellow(picocolors.exports.bold(`(!) invalid \"base\" option: ${base}. The value can only be an absolute ` +\n            `URL, ./, or an empty string.`)));\n        base = '/';\n    }\n    // external URL\n    if (isExternalUrl(base)) {\n        if (!isBuild) {\n            // get base from full url during dev\n            const parsed = parse$k(base);\n            base = parsed.pathname || '/';\n        }\n    }\n    else {\n        // ensure leading slash\n        if (!base.startsWith('/')) {\n            logger.warn(picocolors.exports.yellow(picocolors.exports.bold(`(!) \"base\" option should start with a slash.`)));\n            base = '/' + base;\n        }\n    }\n    // ensure ending slash\n    if (!base.endsWith('/')) {\n        logger.warn(picocolors.exports.yellow(picocolors.exports.bold(`(!) \"base\" option should end with a slash.`)));\n        base += '/';\n    }\n    return base;\n}\nfunction sortUserPlugins(plugins) {\n    const prePlugins = [];\n    const postPlugins = [];\n    const normalPlugins = [];\n    if (plugins) {\n        plugins.flat().forEach((p) => {\n            if (p.enforce === 'pre')\n                prePlugins.push(p);\n            else if (p.enforce === 'post')\n                postPlugins.push(p);\n            else\n                normalPlugins.push(p);\n        });\n    }\n    return [prePlugins, normalPlugins, postPlugins];\n}\nasync function loadConfigFromFile(configEnv, configFile, configRoot = process.cwd(), logLevel) {\n    const start = performance.now();\n    const getTime = () => `${(performance.now() - start).toFixed(2)}ms`;\n    let resolvedPath;\n    if (configFile) {\n        // explicit config path is always resolved from cwd\n        resolvedPath = path$n.resolve(configFile);\n    }\n    else {\n        // implicit config file loaded from inline root (if present)\n        // otherwise from cwd\n        for (const filename of DEFAULT_CONFIG_FILES) {\n            const filePath = path$n.resolve(configRoot, filename);\n            if (!fs$l.existsSync(filePath))\n                continue;\n            resolvedPath = filePath;\n            break;\n        }\n    }\n    if (!resolvedPath) {\n        debug('no config file found.');\n        return null;\n    }\n    let isESM = false;\n    if (/\\.m[jt]s$/.test(resolvedPath)) {\n        isESM = true;\n    }\n    else if (/\\.c[jt]s$/.test(resolvedPath)) {\n        isESM = false;\n    }\n    else {\n        // check package.json for type: \"module\" and set `isESM` to true\n        try {\n            const pkg = lookupFile(configRoot, ['package.json']);\n            isESM = !!pkg && JSON.parse(pkg).type === 'module';\n        }\n        catch (e) { }\n    }\n    try {\n        const bundled = await bundleConfigFile(resolvedPath, isESM);\n        const userConfig = await loadConfigFromBundledFile(resolvedPath, bundled.code, isESM);\n        debug(`bundled config file loaded in ${getTime()}`);\n        const config = await (typeof userConfig === 'function'\n            ? userConfig(configEnv)\n            : userConfig);\n        if (!isObject$2(config)) {\n            throw new Error(`config must export or return an object.`);\n        }\n        return {\n            path: normalizePath$3(resolvedPath),\n            config,\n            dependencies: bundled.dependencies\n        };\n    }\n    catch (e) {\n        createLogger(logLevel).error(picocolors.exports.red(`failed to load config from ${resolvedPath}`), { error: e });\n        throw e;\n    }\n}\nasync function bundleConfigFile(fileName, isESM) {\n    const dirnameVarName = '__vite_injected_original_dirname';\n    const filenameVarName = '__vite_injected_original_filename';\n    const importMetaUrlVarName = '__vite_injected_original_import_meta_url';\n    const result = await build$3({\n        absWorkingDir: process.cwd(),\n        entryPoints: [fileName],\n        outfile: 'out.js',\n        write: false,\n        target: ['node14.18', 'node16'],\n        platform: 'node',\n        bundle: true,\n        format: isESM ? 'esm' : 'cjs',\n        sourcemap: 'inline',\n        metafile: true,\n        define: {\n            __dirname: dirnameVarName,\n            __filename: filenameVarName,\n            'import.meta.url': importMetaUrlVarName\n        },\n        plugins: [\n            {\n                name: 'externalize-deps',\n                setup(build) {\n                    build.onResolve({ filter: /.*/ }, ({ path: id, importer }) => {\n                        // externalize bare imports\n                        if (id[0] !== '.' && !path$n.isAbsolute(id)) {\n                            return {\n                                external: true\n                            };\n                        }\n                        // bundle the rest and make sure that the we can also access\n                        // it's third-party dependencies. externalize if not.\n                        // monorepo/\n                        // \u251C\u2500 package.json\n                        // \u251C\u2500 utils.js -----------> bundle (share same node_modules)\n                        // \u251C\u2500 vite-project/\n                        // \u2502  \u251C\u2500 vite.config.js --> entry\n                        // \u2502  \u251C\u2500 package.json\n                        // \u251C\u2500 foo-project/\n                        // \u2502  \u251C\u2500 utils.js --------> external (has own node_modules)\n                        // \u2502  \u251C\u2500 package.json\n                        const idFsPath = path$n.resolve(path$n.dirname(importer), id);\n                        const idPkgPath = lookupFile(idFsPath, [`package.json`], {\n                            pathOnly: true\n                        });\n                        if (idPkgPath) {\n                            const idPkgDir = path$n.dirname(idPkgPath);\n                            // if this file needs to go up one or more directory to reach the vite config,\n                            // that means it has it's own node_modules (e.g. foo-project)\n                            if (path$n.relative(idPkgDir, fileName).startsWith('..')) {\n                                return {\n                                    // normalize actual import after bundled as a single vite config\n                                    path: isESM ? pathToFileURL(idFsPath).href : idFsPath,\n                                    external: true\n                                };\n                            }\n                        }\n                    });\n                }\n            },\n            {\n                name: 'inject-file-scope-variables',\n                setup(build) {\n                    build.onLoad({ filter: /\\.[cm]?[jt]s$/ }, async (args) => {\n                        const contents = await fs$l.promises.readFile(args.path, 'utf8');\n                        const injectValues = `const ${dirnameVarName} = ${JSON.stringify(path$n.dirname(args.path))};` +\n                            `const ${filenameVarName} = ${JSON.stringify(args.path)};` +\n                            `const ${importMetaUrlVarName} = ${JSON.stringify(pathToFileURL(args.path).href)};`;\n                        return {\n                            loader: args.path.endsWith('ts') ? 'ts' : 'js',\n                            contents: injectValues + contents\n                        };\n                    });\n                }\n            }\n        ]\n    });\n    const { text } = result.outputFiles[0];\n    return {\n        code: text,\n        dependencies: result.metafile ? Object.keys(result.metafile.inputs) : []\n    };\n}\nconst _require = createRequire$1(import.meta.url);\nasync function loadConfigFromBundledFile(fileName, bundledCode, isESM) {\n    // for esm, before we can register loaders without requiring users to run node\n    // with --experimental-loader themselves, we have to do a hack here:\n    // write it to disk, load it with native Node ESM, then delete the file.\n    if (isESM) {\n        const fileBase = `${fileName}.timestamp-${Date.now()}`;\n        const fileNameTmp = `${fileBase}.mjs`;\n        const fileUrl = `${pathToFileURL(fileBase)}.mjs`;\n        fs$l.writeFileSync(fileNameTmp, bundledCode);\n        try {\n            return (await dynamicImport(fileUrl)).default;\n        }\n        finally {\n            try {\n                fs$l.unlinkSync(fileNameTmp);\n            }\n            catch {\n                // already removed if this function is called twice simultaneously\n            }\n        }\n    }\n    // for cjs, we can register a custom loader via `_require.extensions`\n    else {\n        const extension = path$n.extname(fileName);\n        const realFileName = fs$l.realpathSync(fileName);\n        const loaderExt = extension in _require.extensions ? extension : '.js';\n        const defaultLoader = _require.extensions[loaderExt];\n        _require.extensions[loaderExt] = (module, filename) => {\n            if (filename === realFileName) {\n                module._compile(bundledCode, filename);\n            }\n            else {\n                defaultLoader(module, filename);\n            }\n        };\n        // clear cache in case of server restart\n        delete _require.cache[_require.resolve(fileName)];\n        const raw = _require(fileName);\n        _require.extensions[loaderExt] = defaultLoader;\n        return raw.__esModule ? raw.default : raw;\n    }\n}\nfunction getDepOptimizationConfig(config, ssr) {\n    return ssr ? config.ssr.optimizeDeps : config.optimizeDeps;\n}\nfunction isDepsOptimizerEnabled(config, ssr) {\n    const { command } = config;\n    const { disabled } = getDepOptimizationConfig(config, ssr);\n    return !(disabled === true ||\n        (command === 'build' && disabled === 'build') ||\n        (command === 'serve' && disabled === 'dev'));\n}\n\nexport { getAugmentedNamespace as A, getDefaultExportFromCjs as B, index$1 as C, build$1 as D, index as E, preview$1 as F, resolvePackageData as a, build as b, createServer as c, defineConfig as d, resolveConfig as e, formatPostcssSourceMap as f, resolveBaseUrl as g, getDepOptimizationConfig as h, isDepsOptimizerEnabled as i, mergeAlias as j, createFilter as k, loadConfigFromFile as l, mergeConfig as m, normalizePath$3 as n, optimizeDeps as o, preview as p, send as q, resolvePackageEntry as r, sortUserPlugins as s, transformWithEsbuild as t, createLogger as u, searchForWorkspaceRoot as v, loadEnv as w, resolveEnvPrefix as x, picocolors as y, commonjsGlobal as z };\n"],
  "mappings": "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AAK,GAAG,KAAK,IAAI,IAAI,GAAG,KAAK,GAAG,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,GAAG,IAAI,IAAI,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,IAAI,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,IAAI,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,GAAG,KAAK,IAAI,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,KAAK,IAAI,IAAI,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,KAAK,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,GAAG,GAAG,IAAI,IAAI,GAAG,GAAG,KAAK,IAAI,KAAK,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,KAAK,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,KAAK,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,IAAI,GAAG,IAAI,KAAK,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,KAAK,GAAG,OAAO,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,MAAM,GAAG,GAAG,IAAI,GAAG,GAAG,IAAI,GAAG,IAAI,GAAG,OAAO,GAAG,MAAM,IAAI,GAAG,IAAI,KAAK,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,KAAK,GAAG,MAAM,IAAI,KAAK,IAAI,GAAG,IAAI,GAAG,GAAG,IAAI,GAAG,IAAI,GAAG,GAAG,IAAI,MAAM,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,KAAK,GAAG,IAAI,GAAG,KAAK,GAAG,IAAI,IAAI,MAAM,GAAG,KAAK,GAAG,GAAG,GAAG,MAAM,GAAG,QAAQ,GAAG;AAG98B,IAAI,6BAA6B,CAAC,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,IAAI,KAAK,IAAI,IAAI,KAAK,IAAI,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,IAAI,KAAK,IAAI,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,IAAI,KAAK,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,GAAG,IAAI,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,IAAI,GAAG,IAAI,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,IAAI,IAAI,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,GAAG,KAAK,IAAI,IAAI,GAAG,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,KAAK,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,KAAK,IAAI,KAAK,IAAI,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,IAAI,IAAI,GAAG,GAAG,GAAG,IAAI,GAAG,IAAI,IAAI,GAAG,GAAG,IAAI,GAAG,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,KAAK,GAAG,GAAG,IAAI,IAAI,GAAG,IAAI,IAAI,KAAK,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,IAAI,IAAI,GAAG,KAAK,IAAI,KAAK,GAAG,IAAI,KAAK,KAAK,KAAK,IAAI,KAAK,MAAM,IAAI,IAAI,MAAM,MAAM,KAAK,MAAM,KAAK,GAAG,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,GAAG,IAAI,IAAI,GAAG,IAAI,KAAK,IAAI,KAAK,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,GAAG,GAAG,IAAI,MAAM,GAAG,MAAM,IAAI,GAAG,MAAM,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,KAAK,IAAI,GAAG,IAAI,GAAG,GAAG,KAAK,MAAM,KAAK,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,MAAM,IAAI,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,KAAK,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,GAAG,MAAM,IAAI,KAAK,IAAI,IAAI,GAAG,IAAI,GAAG,KAAK,IAAI,IAAI,IAAI,MAAM,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,KAAK,IAAI,IAAI,GAAG,GAAG,MAAM,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GA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O;AAAA,EACP,OAAO;AAAA,EACP,QAAQ;AAAA,EACR,SAAS;AAAA,EACT,OAAO;AAAA,EACP,OAAO;AAAA,EACP,OAAO;AAAA,EACP,OAAO;AAAA,EACP,OAAO;AAAA,EACP,OAAO;AAAA,EACP,OAAO;AAAA,EACP,OAAO;AAAA,EACP,OAAO;AAAA,EACP,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,SAAS;AAAA,EACT,QAAQ;AAAA,EACR,OAAO;AAAA,EACP,QAAQ;AAAA,EACR,OAAO;AAAA,EACP,OAAO;AAAA,EACP,QAAQ;AAAA,EACR,OAAO;AAAA,EACP,OAAO;AAAA,EACP,MAAM;AAAA,EACN,OAAO;AAAA,EACP,OAAO;AAAA,EACP,QAAQ;AAAA,EACR,OAAO;AAAA,EACP,OAAO;AAAA,EACP,QAAQ;AAAA,EACR,OAAO;AAAA,EACP,OAAO;AAAA,EACP,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,OAAO;AAAA,EACP,QAAQ;AAAA,EACR,OAAO;AAAA,EACP,OAAO;AAAA,EACP,OAAO;AAAA,EACP,OAAO;AAAA,EACP,OAAO;AAAA,EACP,QAAQ;AAAA,EACR,OAAO;AAAA,EACP,OAAO;AAAA,EACP,OAAO;AAAA,EACP,QAAQ;AAAA,EACR,MAAM;AAAA,EACN,OAAO;AAAA,EACP,OAAO;AAAA,EACP,OAAO;AAAA,EACP,QAAQ;AAAA,EACR,SAAS;AAAA,EACT,OAAO;AAAA,EACP,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,OAAO;AAAA,EACP,OAAO;AAAA,EACP,QAAQ;AAAA,EACR,OAAO;AAAA,EACP,QAAQ;AAAA,EACR,MAAM;AAAA,EACN,OAAO;AAAA,EACP,QAAQ;AAAA,EACR,SAAS;AAAA,EACT,QAAQ;AAAA,EACR,SAAS;AAAA,EACT,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,OAAO;AAAA,EACP,OAAO;AAAA,EACP,OAAO;AAAA,EACP,QAAQ;AAAA,EACR,QAAQ;AAAA,EACR,OAAO;AAAA,EACP,OAAO;AAAA,EACP,OAAO;AAAA,EACP,OAAO;AAAA,EACP,OAAO;AAAA,EACP,OAA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",
  "names": ["module", "key", "module", "key", "module", "key", "module", "key", "module", "key", "module", "key", "module", "key", "module", "__defProp", "__hasOwnProp", "key", "build", "formatMessages", "transform", "version", "visit", "clone", "offset", "length", "buffer", "options", "format", "platform", "watch", "resolveExtensions", "path3", "ext", "error", "plugins", "resolve", "resolve2", "promise", "filter", "transform2", "formatMessages2", "messages", "map", "at", "line", "match", "column", "index", "binary", "fs", "os", "path", "crypto", "path2", "fs2", "os2", "tty", "status", "module", "key", "module", "key", "module", "key", "module", "key", "module", "key", "module", "key", "module", "key", "module", "key", "module", "key", "module", "key", "module", "key", "module", "key", "module", "key", "module", "key", "module", "key", "module", "key", "module", "key", "module", "key", "path", "import_node_path", "import_node_url", "import_node_url", "import_node_path", "import_node_module", "__filename", "__cjs_fileURLToPath", "__dirname", "__cjs_dirname", "require", "__cjs_createRequire", "__require", "n", "require$$0$3", "open", "close", "replace", "string", "index", "nextIndex", "pattern", "entry", "key", "options", "require$$0$4", "chars", "win32", "path", "match", "prepend", "append", "token", "length", "isGlob", "isExtglob", "braces", "peek", "advance", "DOT_LITERAL", "PLUS_LITERAL", "SLASH_LITERAL", "ONE_CHAR", "DOTS_SLASH", "NO_DOT", "NO_DOT_SLASH", "NO_DOTS_SLASH", "QMARK", "QMARK_NO_DOT", "STAR", "START_ANCHOR", "opts", "star", "stack", "value", "push", "first", "rest", "posix", "escaped", "range", "out", "NO_DOTS", "source", "isMatch", "state", "isIgnored", "matcher", "format", "patterns", "module", "node", "extractAssignedNames", "attachScopes", "resolve$4", "posix$1", "require$$0__default", "pos", "current", "stat", "err", "base", "realpathSync", "pad", "c", "set", "minimatch", "Minimatch", "filter", "makeRe", "braceExpand", "debug", "self", "partial", "inherits", "util", "matches", "literal", "m", "slash", "assert", "assert$1", "isAbsolute", "common", "setopts", "ownProp", "childrenIgnored", "read", "lstat", "error", "cb", "array", "require$$0$5", "inflight", "once", "extend", "add", "sync", "found", "er", "line", "toString", "min", "i", "column", "appendLeft", "appendRight", "clone", "prependLeft", "prependRight", "remove", "trimEnd", "trimStart", "parse", "basename$1", "dirname$1", "relative$1", "join$1", "statSync$1", "extension", "extensions", "commonjs", "replacement", "requireNode", "mode", "plugins", "url", "map", "isString", "version", "seg", "insert", "depth", "ctx", "ms", "env", "formatter", "split", "load", "warned", "tty", "require$$0$6", "init", "log", "useColors", "win32$1", "isAbsolute$1", "createFilter", "makeLegalIdentifier", "indent", "dataToEsm", "data", "optimizeDeps", "ext", "createRequire$1", "resolve$5", "fs$l", "os$3", "path$n", "URL$3", "root", "offset", "promisify$4", "src", "server", "config", "createHash$2", "find", "alias", "readline", "level", "isMap", "promises$1", "DEFAULT_EXTENSIONS", "ref", "createRequire$2", "key2", "transform$2", "require$$1", "require$$1$1", "resolve", "terserPath", "stringify", "wrap", "isPadded", "zeros", "max", "contains", "walk", "queue", "basename", "require$$0$7", "slice", "stream", "settings", "tasks", "fs", "statSync", "get", "context", "resume", "provider", "os", "Settings", "FastGlob", "isDynamicPattern", "getOptions", "transform", "isEmpty", "yaml", "handle", "res", "_a", "schema", "end", "qs", "comment", "str", "overwrite", "seq", "buffer", "pairs", "omap", "sign", "merge", "comma", "composeNode", "composeEmptyNode", "sep", "CN", "ok", "tag", "cst", "ch", "lastChar", "start", "parser", "require$$0$8", "require$$0$9", "BitSet", "Chunk", "SourceMap", "Mappings", "MagicString", "matchAll", "promises$2", "TokenType", "Position", "SourceLocation", "async", "Parser", "DestructuringErrors", "node$1", "TokContext", "Scope", "Node", "RegExpValidationState", "unicode", "Token", "parseExpressionAt", "tokenizer", "extname", "parse$k", "E", "A", "Q", "B", "g", "I", "o", "D", "J", "C", "browser", "ParseOptions", "format$2", "pathToFileURL$1", "isRequire", "id", "pkgId", "processResult", "resolved", "build", "escape", "isDebug", "_require", "resolve$6", "join$2", "scan", "posix$2", "staticImports", "filePath", "isAbsolute$2", "build$3", "seen", "_b", "deps", "timeout", "timestamp", "platform", "promise", "needsInterop", "imports", "exports", "facade", "ssr", "require$$5", "require$$0$a", "Buffer", "fill", "parent", "req", "setHeaders", "lookup", "scriptRel", "assetsURL", "chunk", "file", "markerStartPos", "p", "filename", "isHTMLProxy", "chunkCSS", "relative", "promises", "importer", "less", "rootFile", "resolvers", "relative$2", "dirname$2", "basename$2", "warn", "watch", "generate", "isExternal", "URL", "fd", "net", "require$$3$1", "fn", "listener", "statuses", "codes", "status", "require$$1$2", "vary", "testString", "returnIndex", "main", "rawEmitter", "dirname", "newStats", "at", "realpath", "stats", "maj", "isDirectory", "pp", "globParent", "normalizePath", "threshold", "now", "s", "require$$2", "guessEditor", "getArgumentsForPosition", "launchEditorMiddleware", "createServer", "https", "mod", "bufferUtil", "require$$0$b", "isValidUTF8", "require$$1$3", "require$$4", "receiver", "websocket", "protocol", "createServer$2", "has", "EventEmitter", "events", "required", "http", "proxyReq", "proxyError", "XHeaders", "head", "httpProxy", "ProxyServer", "etag", "extname$1", "binary", "isexe", "cp", "listen", "zlib$1", "preview", "outputChunk", "workerCache", "workerType", "serializeArray", "serializeObject", "configFile"]
}
